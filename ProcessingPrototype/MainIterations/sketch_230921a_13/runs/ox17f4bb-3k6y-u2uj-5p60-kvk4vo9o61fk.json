{
  "id": "ox17f4bb-3k6y-u2uj-5p60-kvk4vo9o61fk",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.20000000298023224,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "ka4rf80v-klbt-zach-odrj-nuk1do9pb4at",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "cos(noise(sin(externalVal),(max(audio(x,(cos(((externalVal-(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(min(x,pow((externalVal*(x*pow(y,externalVal))),min(externalVal,mod(x,y))))+(sin(y)+(audio(externalVal,audio(x,(y/sin(x))))-externalVal)))",
            "g": "pow(externalVal,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*mod(x,sin((x-(x+(externalVal-(x/y)))))))",
            "b": "(x*(x-(mod(y,x)/x)))",
            "g": "audio(externalVal,(y/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,x)",
            "b": "mod(min(externalVal,(y/x)),(sin(cos(externalVal))+tan(y)))",
            "g": "(noise(y,externalVal)+externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "tan(audio(y,(x+x)))",
            "g": "tan(max(externalVal,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-tan(x))",
            "b": "(externalVal+y)",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((y/externalVal),y)",
            "b": "max(y,mod((pow(y,externalVal)*sin(tan(y))),y))",
            "g": "(mod(x,y)/sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(min(mod((y+x),max(audio(externalVal,x),sin(externalVal))),(y*x)))",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,audio(externalVal,(externalVal/sin(cos(((y+sin(tan(sin((externalVal-x)))))*sin(externalVal)))))))",
            "b": "cos(externalVal)",
            "g": "noise(noise(externalVal,max(((x-(x+(externalVal-externalVal)))+x),sin(tan(externalVal)))),min((x+externalVal),noise((pow((sin(externalVal)*(y+x)),externalVal)-sin(y)),x)))"
          }
        }
      ],
      "timestamp": "22h:42m:48s"
    },
    {
      "generation": 1,
      "ascendantID": "ka4rf80v-klbt-zach-odrj-nuk1do9pb4at",
      "id": "guw1fgkz-fgwo-tq67-09wf-e68zuma7ytfp",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "cos(noise(sin(externalVal),(max(audio(x,(cos(((externalVal-(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((y/externalVal),y)",
            "b": "max(y,mod((pow(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "cos(noise(sin(externalVal),(max(audio(x,(sin(tan(y))+noise(mod(y,(y+x)),externalVal))),x)*x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(min(mod((y+x),max(audio(externalVal,x),sin(externalVal))),(y*x)))",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(min(x,pow((externalVal*(x*pow(y,externalVal))),min(externalVal,mod(x,y))))+(cos(y)+(pow(externalVal,max(audio(externalVal,x),sin(externalVal)))-externalVal)))",
            "g": "pow(externalVal,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin((y*externalVal))",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(pow(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)-y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(min(x,pow((externalVal*(x*pow(y,externalVal))),min(externalVal,mod(x,y))))+(sin(y)+(audio(externalVal,audio(x,(y/sin(x))))-externalVal)))",
            "g": "pow(externalVal,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,x)",
            "b": "mod(min(externalVal,(y/x)),(sin(cos(externalVal))+max(y,externalVal)))",
            "g": "(noise(y,externalVal)+externalVal)"
          }
        }
      ],
      "timestamp": "22h:42m:55s"
    },
    {
      "generation": 2,
      "ascendantID": "guw1fgkz-fgwo-tq67-09wf-e68zuma7ytfp",
      "id": "7008zrmu-eaq2-296b-utsd-wfvt3h4xivzl",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "cos(noise(sin(externalVal),(max(audio(x,(cos(((externalVal-(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((y/externalVal),y)",
            "b": "max(y,mod((pow(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,x)",
            "b": "pow(min(externalVal,(y/x)),(sin(cos(externalVal))-max(y,externalVal)))",
            "g": "(noise(y,externalVal)+externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(min(x,mod((externalVal*(x-pow(y,externalVal))),min(externalVal,pow(x,y))))+(cos(y)+(pow(externalVal,max(audio(externalVal,x),sin(externalVal)))-externalVal)))",
            "g": "pow(externalVal,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(sin(min(mod((y+x),max(audio(externalVal,x),sin(externalVal))),(y*x))))",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin((y*externalVal))",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(mod(min(externalVal,(y/x)),(sin(cos(externalVal))+max(y,externalVal))))",
            "g": "(externalVal*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))*tan((sin(min(min(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))),(max(y,y)*mod(externalVal,(externalVal-externalVal))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(min(x,pow((externalVal*(x*pow(y,externalVal))),min(externalVal,mod(x,y))))+(cos(y)+(pow(externalVal,max(audio(externalVal,x),sin(externalVal)))-externalVal)))",
            "g": "pow(externalVal,externalVal)"
          }
        }
      ],
      "timestamp": "22h:42m:57s"
    },
    {
      "generation": 3,
      "ascendantID": "7008zrmu-eaq2-296b-utsd-wfvt3h4xivzl",
      "id": "80xgrf4f-ykhq-6smu-hgyy-w7zksaxiu7mh",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "cos(noise(sin(externalVal),(max(audio(x,(cos(((externalVal-(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min((min(y,sin(y))*tan((sin(min(min(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan(audio(y,x))),noise(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)*externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(min(x,pow((externalVal*(x*(y-externalVal))),min(externalVal,mod(x,y))))+(tan(y)+(pow(externalVal,max(audio(externalVal,x),sin(externalVal)))-externalVal)))",
            "g": "pow(externalVal,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((y/externalVal),y)",
            "b": "max(y,pow((pow(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,x)",
            "b": "pow(min(externalVal,(y/x)),tan(y))",
            "g": "(noise(externalVal,externalVal)+externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin((y*externalVal))",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min((max(externalVal,(y/y))-tan((sin(min(max(externalVal,x),y))+((y/externalVal)/x)))),pow(x,noise(externalVal,(((x*y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        }
      ],
      "timestamp": "22h:43m:1s"
    },
    {
      "generation": 4,
      "ascendantID": "80xgrf4f-ykhq-6smu-hgyy-w7zksaxiu7mh",
      "id": "70hr5sgi-cvlm-4xp8-bika-mstmv4v6r0ul",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "cos(noise(sin(externalVal),(max(audio(x,(cos(((externalVal-(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((pow(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((y/externalVal),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/(x/y))",
            "b": "cos(noise((externalVal/x),(max(audio(x,(cos(((y*(externalVal+tan(externalVal)))+externalVal))+min(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(x,(mod(x,y)*externalVal)),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)-(cos(y)/mod((y+externalVal),cos(pow((externalVal+externalVal),cos(externalVal)))))),y))",
            "g": "(mod(x,y)*sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min((min(y,sin(y))*tan((sin(min(min(externalVal,x),y))-(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((max(y,(y/y))+cos(audio(y,x))),noise(x,mod(externalVal,(externalVal*externalVal)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min((min(y,(y/y))+tan((sin(tan(max(externalVal,x)))+(mod(x,(mod(x,y)-externalVal))/x)))),mod(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin((y*externalVal))",
            "g": "(externalVal/y)"
          }
        }
      ],
      "timestamp": "22h:43m:5s"
    },
    {
      "generation": 5,
      "ascendantID": "70hr5sgi-cvlm-4xp8-bika-mstmv4v6r0ul",
      "id": "poyk0ep5-3nkl-1wgn-i6u5-oukz019lmlgw",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "cos(noise(sin(externalVal),(max(audio(x,(cos(((externalVal-(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "cos(noise((externalVal/x),(max(audio(x,(cos(((externalVal-(externalVal+tan(externalVal)))-externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(x,tan((sin(max(max(externalVal,x),y))+(mod(x,(pow(x,y)-externalVal))/x)))),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)-(cos(y)/(y-externalVal))),y))",
            "g": "(mod(x,y)*cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(max(y,y)*mod(externalVal,(externalVal-externalVal))))",
            "b": "cos(noise((externalVal/x),(y-externalVal)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,((sin(x)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((tan(y)+cos(audio(y,x))),noise(x,mod(externalVal,(externalVal*externalVal)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin(y),y)",
            "b": "max(x,pow((pow(externalVal,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "((y*externalVal)/x)",
            "g": "(externalVal*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        }
      ],
      "timestamp": "22h:43m:9s"
    },
    {
      "generation": 6,
      "ascendantID": "poyk0ep5-3nkl-1wgn-i6u5-oukz019lmlgw",
      "id": "c99j0cbf-r6ze-atdd-gdpo-6atcyeprs762",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(mod(x,tan((sin(tan(max(externalVal,x)))+(mod(x,(pow(x,y)-externalVal))/x)))),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)-(cos(y)/(y-externalVal))),y))",
            "g": "(mod(x,y)*cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "sin(noise(sin(externalVal),(min(audio(x,(cos(((externalVal-(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "noise(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,mod((audio(y,externalVal)*((y*externalVal)/x)),y))",
            "g": "sin((externalVal*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise((min(y,(y/y))-tan(((min(audio(noise(externalVal,(((x-y)+y)-y)),y),y)/noise(x,noise(sin(x),y)))+(noise(x,(mod(x,y)-externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((tan(y)+cos(audio(y,x))),noise(x,mod(externalVal,(externalVal*externalVal)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "((x-externalVal)/x)",
            "g": "(externalVal*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min(((x/y)+cos(audio(y,x))),mod(x,pow(externalVal,(externalVal*externalVal)))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        }
      ],
      "timestamp": "22h:43m:14s"
    },
    {
      "generation": 7,
      "ascendantID": "c99j0cbf-r6ze-atdd-gdpo-6atcyeprs762",
      "id": "l93eb9fo-6u7m-ljx1-5pfm-dve2r5ztp8h4",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise((min(y,(y/y))-tan(((min(audio(noise(externalVal,(((x-y)+y)-y)),y),y)/noise(x,noise(sin(x),y)))+(noise(x,(mod(x,y)-externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "((x-externalVal)/x)",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "sin(noise(sin(externalVal),(min(audio(x,(cos(((externalVal-(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,((mod(externalVal,x)-externalVal)+y)),y)",
            "b": "min(y,pow((audio(y,externalVal)-sin(cos(y))),y))",
            "g": "(mod(x,y)*tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise((min(y,(y/y))-tan(((min(audio(noise(externalVal,(((x-y)+y)-y)),y),y)/noise(x,noise(sin(x),y)))+(mod(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))-cos((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),pow(x,noise(externalVal,(pow(externalVal,x)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((tan(y)+cos(audio(y,x))),noise(x,mod(externalVal,(externalVal*externalVal)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)*y)+y)),externalVal)",
            "b": "max(y,mod(((y-externalVal)*((y*externalVal)/x)),y))",
            "g": "(tan(x)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "sin(noise(sin(externalVal),(noise(audio(x,(cos(((y+(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        }
      ],
      "timestamp": "22h:43m:20s"
    },
    {
      "generation": 8,
      "ascendantID": "l93eb9fo-6u7m-ljx1-5pfm-dve2r5ztp8h4",
      "id": "xo7szlpn-4voj-cu13-pbc2-mfxlmt5npv4m",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise((min(y,(y/y))-tan(((min(audio(noise(externalVal,(((x-y)+y)-y)),y),y)/noise(x,noise(sin(x),y)))+(noise(x,(mod(x,y)-externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((max(y,(y*y))+cos(audio(y,x))),noise(x,mod(externalVal,(externalVal*externalVal)))))",
            "b": "(y-externalVal)",
            "g": "max(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((max(y,(y/y))-tan((sin(min(max(externalVal,x),y))+(noise(x,(mod(x,y)+externalVal))/x)))),noise(x,noise(externalVal,(mod(externalVal,x)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((min(y,(y/y))+cos((sin(min(max(externalVal,x),y))+cos(mod(x,(mod(x,y)+externalVal)))))),pow(x,noise(externalVal,(pow(externalVal,x)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,((mod(externalVal,x)*externalVal)+y)),y)",
            "b": "min(y,pow((audio(y,externalVal)-sin(cos(y))),x))",
            "g": "(pow(x,y)*tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,(pow(externalVal,x)+y)))",
            "b": "(noise(sin(externalVal),(min(audio(y,(tan(((externalVal-(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x))/y)",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "sin(noise(sin(externalVal),(noise(audio(x,(cos(((y+(externalVal+tan(externalVal)))-externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise((min(y,(y/y))-tan(((min(pow(noise(externalVal,(((x-y)+y)-y)),y),y)/noise(x,noise(sin(x),y)))+(min(x,mod(externalVal,(externalVal*externalVal)))/x)))),pow(x,mod(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "sin((x-externalVal))",
            "g": "(externalVal/y)"
          }
        }
      ],
      "timestamp": "22h:43m:26s"
    },
    {
      "generation": 9,
      "ascendantID": "xo7szlpn-4voj-cu13-pbc2-mfxlmt5npv4m",
      "id": "ndvb7f9y-pqqw-bajh-i32e-senz81hmeo6r",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise((min(y,(y/y))-tan(((min(audio(noise(externalVal,(((x-y)+y)-y)),y),y)/noise(x,noise(sin(x),y)))+(noise(x,(mod(x,y)-externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(y,y),y)",
            "b": "min(x,pow((y-externalVal),y))",
            "g": "(mod(x,y)/tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "sin(noise(sin(externalVal),(noise(audio(x,(cos(((y+(externalVal+tan(externalVal)))-externalVal))+noise(mod(y,(y+x)),externalVal))),x)-x)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "sin((y-externalVal))",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,(((x*y)+y)+y)))",
            "b": "sin(noise(sin(externalVal),(noise(audio(x,(cos(((y+(externalVal+tan(externalVal)))-externalVal))+noise(mod(y,(y-x)),externalVal))),x)-x)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "(noise(sin(externalVal),(min(pow(x,(tan(((externalVal*(externalVal+max(externalVal,((x/externalVal)/tan(x)))))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)*x))/y)",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise((min(y,(y/y))-tan(((min(audio(noise(externalVal,(((x-y)+y)-y)),y),y)/mod(x,noise(sin(x),y)))+sin(noise(x,(mod(x,y)-externalVal)))))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,(pow(externalVal,x)+y)))",
            "b": "(noise(sin(externalVal),(min(audio(y,(tan(((externalVal-(externalVal-tan(externalVal)))-externalVal))+noise(noise(y,(y+x)),externalVal))),x)-x))/y)",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((max(y,(y/y))-tan((sin(min(min(externalVal,x),y))-(noise(x,(mod(x,y)+externalVal))/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        }
      ],
      "timestamp": "22h:43m:42s"
    },
    {
      "generation": 10,
      "ascendantID": "ndvb7f9y-pqqw-bajh-i32e-senz81hmeo6r",
      "id": "bwm6i342-ob6k-jhrc-mhhb-bfdy192v1c64",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise((min(y,(y/y))-tan(((min(audio(noise(externalVal,(((x-y)+y)-y)),y),y)/noise(x,noise(sin(x),y)))+(noise(x,(mod(x,y)-externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)+y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,(((x*y)+y)+y)))",
            "b": "sin(noise(cos(externalVal),(noise(pow(x,(cos(((y+(externalVal+tan(externalVal)))-externalVal))+noise(mod(y,(y-x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "sin(noise(cos(externalVal),(noise(audio(x,(sin(((y+(externalVal+tan(externalVal)))-externalVal))+min(mod(externalVal,(y+x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "sin(noise(sin(externalVal),(noise(audio(x,(cos(((y+(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)+x)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)/cos(tan(externalVal))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*noise(externalVal,(pow(externalVal,x)+y)))",
            "b": "(min(sin(externalVal),(min(audio(y,(tan(((externalVal-(externalVal-tan(externalVal)))-externalVal))+noise(noise(y,(y+x)),externalVal))),x)+x))/y)",
            "g": "max(sin(y),audio(y,mod(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/sin(y))",
            "b": "(noise(sin(externalVal),(min(pow(x,(tan(((externalVal*(externalVal+min(externalVal,((x/externalVal)/tan(x)))))+externalVal))+noise(mod(y,(y+x)),externalVal))),x)*x))/y)",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,((externalVal/noise(externalVal,(pow(externalVal,x)+y)))+y)),y)",
            "b": "max(y,audio((((y-externalVal)/cos(x))/(tan(externalVal)/(y*externalVal))),y))",
            "g": "(mod(x,y)/audio((mod(x,(x/audio((externalVal+noise(noise((y+x),tan((y-x))),(pow(y,pow((y+min(x,max(y,(y/pow(externalVal,max(pow(externalVal,audio(x,cos(x))),(x*mod((y/(externalVal+tan(x))),externalVal)))))))),(y+externalVal)))+y))),tan(externalVal))))/max(externalVal,y)),externalVal))"
          }
        }
      ],
      "timestamp": "22h:43m:47s"
    },
    {
      "generation": 11,
      "ascendantID": "bwm6i342-ob6k-jhrc-mhhb-bfdy192v1c64",
      "id": "7irwokcg-1mnf-77rn-ef3r-2njelr70m3bi",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((((x*y)*y)-y),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,((externalVal/noise(externalVal,(pow(externalVal,x)+y)))+y)),y)",
            "b": "noise(x,audio((((externalVal+externalVal)-cos(x))/(tan(externalVal)/(y*externalVal))),y))",
            "g": "(mod(x,y)/audio((mod(x,(x/audio((y+noise(noise((y+x),tan((y-x))),(pow(y,pow((y+mod(x,max(y,(y/pow(externalVal,max(pow(externalVal,pow(x,cos(x))),(x/mod((y/(externalVal+tan(x))),externalVal)))))))),(y+externalVal)))-y))),tan(externalVal))))/max(externalVal,y)),externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,(x*y)))",
            "b": "sin(noise(cos(externalVal),(noise(pow(x,(cos(((y+(audio(y,externalVal)*sin(cos(y))))+externalVal))+noise(mod(y,(y-x)),externalVal))),x)-x)))",
            "g": "cos(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,((x*y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*(y/externalVal)),y))",
            "g": "(mod(x,y)/sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise((min(y,sin(y))-tan(((max(audio(min(externalVal,(((x-y)+y)-y)),y),y)/noise(x,noise(sin(x),y)))+(noise(x,(mod(x,y)-externalVal))/x)))),pow(x,noise(externalVal,(((x/y)+y)-y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*(cos(y)/(y*externalVal))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,(((x*y)+y)+y)))",
            "b": "sin(noise(cos(externalVal),(min(pow(x,(cos(((y+(externalVal+tan(externalVal)))-externalVal))+noise(mod(y,(y-x)),externalVal))),x)+y)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/min(externalVal,(((x*y)+y)+y)))",
            "b": "sin(noise(cos(externalVal),(noise(mod(x,(cos(((y-(externalVal+tan(externalVal)))-externalVal))+noise(pow(externalVal,(y-x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        }
      ],
      "timestamp": "22h:43m:58s"
    },
    {
      "generation": 12,
      "ascendantID": "7irwokcg-1mnf-77rn-ef3r-2njelr70m3bi",
      "id": "7h0kegb8-644f-dvda-z8qu-e7i4mk1z4k3y",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,(((x*y)+y)+y)))",
            "b": "sin(mod(cos(externalVal),(min(pow(x,(cos(((y+(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y-x)),externalVal))),x)+y)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((((x*y)*y)-y),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*(cos(y)/(y*externalVal))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min((min(y,sin(y))-max(((max(audio(min(externalVal,(((x-y)+y)-y)),y),y)/noise(x,noise(sin(x),y)))+(noise(x,(mod(x,y)-externalVal))/x)),x)),pow(x,noise(externalVal,(((x/y)+y)-y)))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/min(externalVal,(((x*y)+y)+y)))",
            "b": "sin(noise(cos(externalVal),(noise(mod(x,(cos(((y-(y+(y+tan(externalVal))))-externalVal))+noise(pow(externalVal,(externalVal-x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/min(externalVal,(((((x-externalVal)+y)+y)+y)+y)))",
            "b": "cos(noise(cos(externalVal),(noise(mod(x,(cos(((y-(externalVal+tan(externalVal)))-externalVal))+noise(pow(externalVal,(y-x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(y,(y/y)),y)",
            "b": "max(y,mod((audio(y,externalVal)/(y/externalVal)),x))",
            "g": "(cos(x)/sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((sin(x)-y),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)*(y*externalVal)),y))",
            "g": "(mod(x,pow((mod(x,y)/tan(x)),externalVal))/cos(x))"
          }
        }
      ],
      "timestamp": "22h:43m:59s"
    },
    {
      "generation": 13,
      "ascendantID": "7h0kegb8-644f-dvda-z8qu-e7i4mk1z4k3y",
      "id": "mr4xl4qn-s2an-d7tv-tcha-oeshsfrmz1aj",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((cos(max(noise(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)+y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,noise((x/(audio(mod(y,(pow(externalVal,x)+externalVal)),y)+pow(x,externalVal))),y)))",
            "b": "sin(mod(cos(externalVal),(min(pow(x,(cos(((y+(externalVal+tan(externalVal)))+externalVal))+(externalVal-externalVal))),x)+y)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(y,(y/y)),y)",
            "b": "max(y,mod((cos(noise(cos(externalVal),(noise(mod(x,(cos(((y-(externalVal+tan(externalVal)))-externalVal))+noise(mod(y,(y-x)),externalVal))),x)-x)))/(y/externalVal)),x))",
            "g": "(cos(x)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/externalVal))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,externalVal)/mod(externalVal,audio(min(externalVal,(((x-y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/max(externalVal,(((x*y)+y)+y)))",
            "b": "sin(noise(cos(externalVal),(mod(mod(x,(cos(((y-(y+(y+tan(externalVal))))-externalVal))+noise(pow(externalVal,(externalVal-x)),externalVal))),x)-x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/min(externalVal,(((x-externalVal)+y)+y)))",
            "b": "sin(noise(cos(externalVal),(min(mod(x,(cos(((y-(y+(y+tan(externalVal))))+externalVal))+noise(pow(externalVal,(externalVal-x)),externalVal))),x)*x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((((x*y)*y)-y),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)*sin(cos(y))),y))",
            "g": "(audio((pow(cos(pow(x,y)),x)/(y-((externalVal*tan(cos(y)))+(audio(max(y,externalVal),y)*y)))),y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,(((x/y)+y)-y)))",
            "b": "sin(mod(cos(externalVal),(min(pow(x,(cos(((y+(externalVal+tan(externalVal)))+externalVal))+noise(mod(y,(y-x)),externalVal))),x)+y)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        }
      ],
      "timestamp": "22h:44m:0s"
    },
    {
      "generation": 14,
      "ascendantID": "mr4xl4qn-s2an-d7tv-tcha-oeshsfrmz1aj",
      "id": "89rjrq4z-kxc1-s61a-w1wl-fo15c4ygzn76",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,noise((x/((x*y)+pow(x,externalVal))),y)))",
            "b": "sin(mod(cos(externalVal),(min(pow(x,(cos(((y+(externalVal-tan(externalVal)))+externalVal))+(externalVal-externalVal))),x)+y)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/max(externalVal,mod(externalVal,(((x/y)+y)-y))))",
            "b": "sin(noise(cos(externalVal),(mod(noise(x,(cos(((y-(y+(y+tan(externalVal))))-externalVal))+noise(pow(externalVal,(externalVal*x)),externalVal))),x)+x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((((x*y)*y)-y),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)*(cos(y)/((y-(y+(y+tan(externalVal))))-externalVal))),y))",
            "g": "(audio(sin(pow(cos(pow(x,y)),x)),y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,noise((x/(audio(mod(y,(pow(externalVal,x)+externalVal)),y)+mod(x,externalVal))),y)))",
            "b": "sin(mod(cos(externalVal),(min(pow(x,(cos(((y+(externalVal+tan(externalVal)))+externalVal))+(externalVal-externalVal))),x)+y)))",
            "g": "max(sin(y),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((min(y,(y/y))+tan((tan(max(min(externalVal,x),y))-(max(y,y)/x)))),mod(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/pow(externalVal,audio(min(externalVal,(((x*y)*y)+y)),externalVal))))",
            "b": "(externalVal+externalVal)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "sin(noise(cos(externalVal),(min(mod(x,(cos(((y-(y+(y+tan(externalVal))))+externalVal))+noise(pow(externalVal,(externalVal-x)),externalVal))),x)*x)))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min((max(y,(y/externalVal))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(pow(externalVal,x)-y)))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(noise(externalVal,x),y))-(min(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)+y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        }
      ],
      "timestamp": "22h:44m:0s"
    },
    {
      "generation": 15,
      "ascendantID": "89rjrq4z-kxc1-s61a-w1wl-fo15c4ygzn76",
      "id": "2z59a75l-gkp6-3xse-nf4c-p4f2oy5mqmiq",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(noise(externalVal,x),y))-(min(y,y)/x)))),pow(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)*mod(externalVal,audio(min(externalVal,(((x/y)-y)+y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(y,y),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(cos(x)/tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan(((min(noise(externalVal,x),y)/min(x,mod(sin(x),y)))*(min(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(max(externalVal,(((x*y)/y)+y)),externalVal))))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((tan(externalVal)-tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(((x-externalVal)+y),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((noise(externalVal,(y/y))+tan((tan(max(min(externalVal,x),y))-(max(y,y)/x)))),mod(x,noise(externalVal,(pow(externalVal,x)-y)))),(min(y,y)*pow(externalVal,audio(min(externalVal,(((x*y)*y)+y)),externalVal))))",
            "b": "(externalVal+externalVal)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,mod((x/((x*y)+mod(x,y))),y)))",
            "b": "sin(mod(cos(externalVal),(min(pow(x,(cos(((y+(externalVal-max(externalVal,sin(x))))+externalVal))+(externalVal-externalVal))),x)+y)))",
            "g": "max(cos(x),audio(y,pow(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(((((x-externalVal)+y)*y)-y),y)",
            "b": "max(y,pow((pow(externalVal,externalVal)*(cos(y)/((y-(sin(x)*mod((audio(y,externalVal)*cos(sin(y))),y)))-externalVal))),y))",
            "g": "(audio(sin(pow(cos(pow(x,y)),x)),y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        }
      ],
      "timestamp": "22h:44m:0s"
    },
    {
      "generation": 16,
      "ascendantID": "2z59a75l-gkp6-3xse-nf4c-p4f2oy5mqmiq",
      "id": "jdiwo0qc-ve3y-2kvg-xujd-sz2b8ockdsfh",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,mod((x/((x/externalVal)+mod(x,y))),y)))",
            "b": "(mod(cos(externalVal),(min(audio(x,(sin(((y+(externalVal-max(externalVal,(x/noise(cos(tan(x)),sin((externalVal+externalVal)))))))+externalVal))+(externalVal-externalVal))),x)+y))/x)",
            "g": "max(tan(x),audio(y,pow(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,audio((pow(y,externalVal)*sin(cos(y))),x))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(y,y),y)",
            "b": "max(y,pow((audio(y,externalVal)-sin(cos(y))),y))",
            "g": "(tan(x)/tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))-tan((sin(noise(externalVal,(pow(externalVal,x)-y)))-(min(y,y)/y)))),noise(x,noise(externalVal,(mod(externalVal,x)*y)))),(min(y,y)/mod(externalVal,audio(max(y,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,min(y,y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*(audio(y,externalVal)/sin(cos(y)))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(mod(externalVal,x)-y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*(y-externalVal)),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+audio(((((x-externalVal)+y)*y)-y),y)),pow(x,noise(externalVal,(noise(externalVal,x)-y)))),(min(y,y)*mod(externalVal,audio(min(externalVal,(((x/y)-y)+y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min((tan(externalVal)-tan((sin(min(min(externalVal,x),y))*(min(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(((x-externalVal)+y),y))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        }
      ],
      "timestamp": "22h:44m:0s"
    },
    {
      "generation": 17,
      "ascendantID": "jdiwo0qc-ve3y-2kvg-xujd-sz2b8ockdsfh",
      "id": "zif1g59x-xd17-dipz-retn-vsf9d76hlu6q",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,min(y,y)),y)",
            "b": "max(y,pow((externalVal+externalVal),y))",
            "g": "(mod(x,x)/(mod(y,x)/cos(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(externalVal,min(y,y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*(audio(y,externalVal)/sin(cos(y)))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(y,y),y)",
            "b": "max(y,audio((audio(y,externalVal)-sin(tan(externalVal))),y))",
            "g": "(tan(x)/tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min((max(y,audio(mod(externalVal,min(y,y)),y))+audio(((((x-externalVal)+y)*y)-y),y)),pow(x,noise(externalVal,(noise(externalVal,x)-y)))),(min(y,y)*mod(externalVal,audio(min(externalVal,(((x*y)-y)+y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/noise(externalVal,mod((x/((x/externalVal)+mod(x,y))),y)))",
            "b": "(mod(cos(externalVal),(max(audio(x,(sin(((y+(externalVal-max(externalVal,(x/noise(cos(tan(x)),sin((externalVal+externalVal)))))))+externalVal))+(externalVal-externalVal))),x)-y))/x)",
            "g": "max(tan(x),audio(y,pow(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min((max(externalVal,noise(noise(externalVal,x),externalVal))-tan((sin(min(min(externalVal,x),y))*(min(y,y)/x)))),noise(x,noise(externalVal,(audio(externalVal,x)-y)))),(max(y,y)/mod(externalVal,audio(((x-externalVal)+y),y))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))-audio(((((x-externalVal)+y)*y)-y),y)),pow(x,noise(externalVal,(noise(externalVal,x)-y)))),(min(y,y)*(mod(externalVal,x)-y)))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        }
      ],
      "timestamp": "22h:44m:1s"
    },
    {
      "generation": 18,
      "ascendantID": "zif1g59x-xd17-dipz-retn-vsf9d76hlu6q",
      "id": "p42dpcos-h83w-mwbu-oos8-uxl7x6wtn269",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,sin(y))-tan((sin(noise(min(externalVal,x),y))-(min(x,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((sin(cos(y))*sin(cos(y))),y))",
            "g": "(mod(x,y)/(mod(x,y)/tan(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise((min(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),noise(externalVal,min(y,y)))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(externalVal,min(y,y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*(audio(y,externalVal)/sin(cos(y)))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min((max(y,audio(mod(externalVal,min(y,y)),y))+audio(((((x-y)+y)*y)-y),y)),pow(x,noise(externalVal,(noise(externalVal,x)-y)))),(min(y,y)*mod(externalVal,audio(min(externalVal,(((x/y)+y)+y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(y,y),y)",
            "b": "max(y,audio((audio(y,externalVal)-sin(max(externalVal,(y-externalVal)))),y))",
            "g": "(tan(x)/sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,min(y,y)),externalVal)",
            "b": "max(y,pow((audio(y,externalVal)*(mod(y,externalVal)/sin(cos(y)))),y))",
            "g": "(noise(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min((min(y,audio(mod(externalVal,min(y,y)),y))+audio(((((x-externalVal)+y)*y)-y),y)),pow(x,noise(externalVal,(noise(externalVal,x)*y)))),(min(y,y)*mod(externalVal,audio(min(externalVal,(((x*y)-y)+y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "sin(x)"
          }
        }
      ],
      "timestamp": "22h:44m:1s"
    },
    {
      "generation": 19,
      "ascendantID": "p42dpcos-h83w-mwbu-oos8-uxl7x6wtn269",
      "id": "wbqbx2iu-paph-oq38-ris8-6n6iud3ju2c0",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise((max(y,sin(y))-tan((sin(noise(min(externalVal,x),y))-(min(x,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)*y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,audio(y,(audio(externalVal,x)-externalVal))),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(noise(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,min(y,y)),externalVal)",
            "b": "min(y,pow((pow(y,externalVal)*(mod(y,externalVal)/(cos(y)/(y*externalVal)))),y))",
            "g": "(noise(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(y,y),y)",
            "b": "max(y,audio((audio(y,externalVal)-sin(min(y,(y-externalVal)))),y))",
            "g": "(tan(x)/sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,sin(y))-tan((sin(noise(min(externalVal,x),y))-(max(x,y)/x)))),min(y,y)),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,(audio(y,externalVal)*(audio(y,externalVal)/sin(cos(y)))))",
            "g": "(mod(x,y)/sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(externalVal,min(y,y)),y)",
            "b": "max(y,pow((audio(y,externalVal)/(audio(y,externalVal)/sin(max(y,pow((audio(y,externalVal)-sin(cos(y))),y))))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,sin(y))+max((sin(noise(min(externalVal,x),y))-(min(x,y)/x)),x)),noise(x,noise(externalVal,(noise(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(noise(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        }
      ],
      "timestamp": "22h:44m:1s"
    },
    {
      "generation": 20,
      "ascendantID": "wbqbx2iu-paph-oq38-ris8-6n6iud3ju2c0",
      "id": "rwh8x34d-mibe-gm67-wxei-yh23rke60qbr",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,min(y,y)),y)",
            "b": "max(y,pow((audio(y,externalVal)-sin(min(y,(y-externalVal)))),y))",
            "g": "(tan(x)/(noise(x,y)/sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,sin(y))-cos((sin(noise(max(externalVal,x),y))-min(y,y)))),min(y,y)),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise((max(y,sin(y))-tan((sin(noise(min(externalVal,x),y))-sin(max(y,y))))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/noise(min(externalVal,x),y)))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,sin(y))-tan((sin(noise(min(externalVal,x),y))-(max(x,y)/x)))),min(y,y)),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(externalVal,x),y)",
            "b": "max(y,pow((audio(y,externalVal)*(audio(y,externalVal)/sin(max(y,pow(((y+externalVal)-cos(cos(y))),y))))),y))",
            "g": "(tan(x)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(externalVal,min(externalVal,min(y,y))),y)",
            "b": "max(y,pow((audio(y,externalVal)/(pow((audio(y,externalVal)/(audio(y,externalVal)*sin(noise(x,pow((audio(y,externalVal)-sin(cos(y))),y))))),y)/sin(max(y,pow((audio(y,externalVal)*sin(cos(y))),y))))),y))",
            "g": "(mod(x,y)/max(x,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(y,y),y)",
            "b": "max(y,pow((audio(y,externalVal)-sin(min(y,(y-externalVal)))),x))",
            "g": "(tan(x)/sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,sin(y))+max((sin(noise(min(externalVal,x),y))-(min(x,y)/x)),x)),((x*externalVal)+y)),(min(y,y)/mod(externalVal,audio(noise(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "tan(x)"
          }
        }
      ],
      "timestamp": "22h:44m:1s"
    },
    {
      "generation": 21,
      "ascendantID": "rwh8x34d-mibe-gm67-wxei-yh23rke60qbr",
      "id": "jfi8yu02-a9o1-dnlm-gpw5-0ylhyx5qz3rb",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(y,y),y)",
            "b": "max(y,pow((audio(y,externalVal)-sin(min(y,(y-externalVal)))),x))",
            "g": "(tan(x)/sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(y,y),y)",
            "b": "max(y,pow((audio(y,externalVal)-sin((y-externalVal))),x))",
            "g": "(cos(x)/sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise((max(y,sin(y))-tan((sin(noise(min(externalVal,x),y))-sin(min(y,y))))),noise(x,audio(max(y,y),y))),(min(y,y)-noise(min(externalVal,x),y)))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,sin(y))-cos((sin(noise(min(externalVal,x),y))-min(y,y)))),max(y,y)),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,sin(y))-max((sin(noise(min(externalVal,x),y))*(max(x,y)/x)),x)),min(y,y)),(min(y,y)/mod(externalVal,audio(noise(externalVal,(((x*y)-y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(externalVal,min(externalVal,mod(y,y))),y)",
            "b": "max(y,pow((audio(y,externalVal)/(pow((audio(y,externalVal)/(audio(y,externalVal)*sin(cos(y)))),y)/sin(max(y,mod((mod(y,externalVal)*sin(cos(y))),y))))),y))",
            "g": "(mod(x,x)/max(x,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,min(y,y)),y)",
            "b": "max(y,pow((audio(y,externalVal)-sin(min(y,(y-externalVal)))),y))",
            "g": "(tan(x)/(noise(x,y)/sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max(max((tan(y)*cos((sin(noise(max(externalVal,x),y))-min(y,y)))),min(y,y)),(max(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal)))),y)",
            "b": "max(y,pow((mod(externalVal,externalVal)*sin(min(y,(y-externalVal)))),x))",
            "g": "(tan(x)/cos(x))"
          }
        }
      ],
      "timestamp": "22h:44m:2s"
    },
    {
      "generation": 22,
      "ascendantID": "jfi8yu02-a9o1-dnlm-gpw5-0ylhyx5qz3rb",
      "id": "6vicvhq5-meqd-hsk1-tvy8-5ahpw3kpln61",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((min(y,sin(y))-cos((sin(noise(min(externalVal,x),y))-min(y,y)))),max(y,y)),sin(min(y,y)))",
            "b": "(y+externalVal)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((audio(max(y,y),y)+cos(((noise(min(externalVal,x),y)/max(x,min(cos(x),y)))-min(y,y)))),max(y,y)),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)/y)-y)),externalVal))))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,cos(y))-cos((sin(noise(min(externalVal,x),externalVal))-min(y,y)))),max(y,y)),(min(y,y)/mod(externalVal,audio(noise(externalVal,(((x*y)*y)-y)),y))))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,((mod(y,y)+y)+y)),y)",
            "b": "max(y,pow(((audio(y,externalVal)/(pow((audio(y,externalVal)/(audio(y,externalVal)*sin(cos(y)))),y)/sin(max(y,noise((mod(y,externalVal)*(sin(externalVal)/(y/externalVal))),y)))))*sin(cos(y))),y))",
            "g": "(mod(x,y)/max(x,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise((tan(y)-cos(((noise(noise(externalVal,x),y)/max(x,min(sin(x),y)))-min(y,y)))),max(y,y)),(max(y,y)*mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,sin(y))-cos((cos(noise(min(externalVal,x),y))-min(y,y)))),max(y,y)),(min(y,y)/mod(externalVal,audio(max(externalVal,(((x*externalVal)*y)-y)),externalVal))))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,audio((audio(y,externalVal)*sin(cos(y))),x))",
            "g": "(mod(x,y)/cos(x))"
          }
        }
      ],
      "timestamp": "22h:44m:2s"
    },
    {
      "generation": 23,
      "ascendantID": "6vicvhq5-meqd-hsk1-tvy8-5ahpw3kpln61",
      "id": "hr0hzcrq-uugs-w3b1-el7k-0cvgesufti9o",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((max(y,(y/y))+tan((sin(min(min(externalVal,x),y))-(max(y,y)/x)))),noise(x,noise(externalVal,(mod(externalVal,x)-y)))),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x*y)*y)-y)),externalVal))))",
            "b": "(y-externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,(((x*y)+y)+y)),y)",
            "b": "max(y,pow((audio(y,externalVal)-sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(externalVal,(((x/(audio(audio(y,(pow(externalVal,x)-externalVal)),y)*audio(x,externalVal)))-y)+y)),y)",
            "b": "max(y,pow(((audio(y,externalVal)/(pow((audio(y,externalVal)/(audio(y,externalVal)*sin(cos(y)))),y)/sin(max(y,noise((mod(y,externalVal)/(sin(externalVal)/(y/externalVal))),y)))))*sin(cos(y))),y))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise(((((x*y)+y)+y)+cos(((noise(min(externalVal,x),y)/max(x,min(cos(x),y)))-min(y,y)))),max(y,y)),(min(y,y)/mod(externalVal,audio(min(externalVal,(((x/externalVal)/y)-y)),externalVal))))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min((cos(x)-cos((sin(noise(min(externalVal,x),externalVal))-min(y,y)))),max(y,y)),(min(x,y)/mod(externalVal,audio(noise(externalVal,(((x*y)*y)+y)),y))))",
            "b": "(y+externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(noise(externalVal,((mod(y,y)+y)+y)),y),y)",
            "b": "max(y,pow(sin(y),y))",
            "g": "(max(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(externalVal,((audio(audio(y,(mod(externalVal,x)-externalVal)),y)*pow(x,externalVal))+y)),y)",
            "b": "max(y,(y+externalVal))",
            "g": "(mod(x,y)/cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise((min(y,sin(y))-tan((sin(noise(min(externalVal,x),y))-min(y,y)))),max(y,y)),sin(noise(externalVal,((mod(y,y)+y)+y))))",
            "b": "(y+externalVal)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,min(externalVal,(((x*y)+y)+y))),y)",
            "b": "max(y,pow(((audio(y,externalVal)/sin(pow((audio(y,externalVal)/(audio(y,externalVal)*(cos(y)/(y*externalVal)))),y)))*sin(cos(y))),x))",
            "g": "(cos(x)/max(x,y))"
          }
        }
      ],
      "timestamp": "22h:44m:2s"
    }
  ],
  "timestamp": "2023-11-2-22-42-48"
}
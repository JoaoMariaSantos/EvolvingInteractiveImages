{
  "id": "o13f9bjb-k4ro-5hux-o6zb-ghr9ahvu872q",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.20000000298023224,
    "populationSize": 10
  },
  "populations": [{
    "generation": 0,
    "id": "i4y0brx7-5gjo-7hxt-qrqr-ydtdgw6w2k6l",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "(y-noise(cos(y),(externalVal-cos((x-pow(pow(externalVal,(externalVal/x)),externalVal))))))",
          "b": "(externalVal-y)",
          "g": "noise(y,x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "max(tan(pow(sin(y),y)),(x/mod(x,externalVal)))",
          "b": "(((y/externalVal)-tan(((externalVal+tan(min(pow((externalVal/min(y,sin((min(externalVal,tan(max(x,(tan((pow(y,y)-sin((cos((x+x))+max(cos(x),(externalVal+externalVal))))))*noise(y,min(pow(x,(externalVal/noise(sin(pow(pow((x*y),mod(tan(cos(sin(max(tan(y),sin(y))))),externalVal)),noise(cos(x),(pow(min(x,externalVal),x)-y)))),x))),externalVal))))))/sin((min(sin(x),(y/externalVal))*externalVal)))))),x),x)))+tan(x))))+y)",
          "g": "min(tan(x),tan(x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(y)",
          "b": "sin(max(y,y))",
          "g": "min(pow((y/externalVal),x),y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(max(externalVal,y),cos(x))",
          "b": "noise(y,pow(externalVal,pow(min(x,y),mod(mod(externalVal,max(y,sin(pow((externalVal+externalVal),sin(externalVal))))),y))))",
          "g": "(min(max((min(x,(tan(sin(externalVal))/y))-tan(x)),externalVal),y)/max(externalVal,((x*externalVal)*tan(max(externalVal,x)))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(min(mod(externalVal,x),max(externalVal,y))+externalVal)",
          "b": "sin(x)",
          "g": "(externalVal/x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos((externalVal*cos(externalVal)))",
          "b": "noise((x-x),cos(tan(y)))",
          "g": "pow(noise(x,noise(pow((y*max(externalVal,x)),y),y)),externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(tan(externalVal)*externalVal)",
          "b": "cos(sin(externalVal))",
          "g": "(max(y,noise(tan(x),tan(((x*max(x,mod(externalVal,x)))/(max(noise(y,externalVal),(y+(x+(externalVal+pow(x,max(tan((min(tan(y),sin((y*(y-noise((y-x),y)))))/y)),cos(externalVal)))))))*(externalVal*cos((sin((min(y,x)/externalVal))+sin((y+(noise(max((min((externalVal-x),x)*(y+x)),externalVal),pow(x,mod(externalVal,(x-(y/y)))))*pow((noise(noise(y,y),externalVal)*x),cos(y)))))))))))))+x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin(cos(y))",
          "b": "(externalVal+sin(x))",
          "g": "mod((externalVal+y),y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "min(x,mod(externalVal,y))",
          "b": "cos(max((externalVal+x),externalVal))",
          "g": "max(sin(pow(y,x)),(tan((x-(max(mod(externalVal,x),x)-noise(externalVal,x))))+mod(max(tan(externalVal),noise(cos(externalVal),tan(cos(cos(x))))),x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(pow(max(externalVal,(externalVal+cos((y-(noise((y*y),x)+y))))),y),x)",
          "b": "sin(y)",
          "g": "pow(x,y)"
        }
      }
    ],
    "timestamp": "22h:28m:59s"
  }],
  "timestamp": "2023-11-2-22-28-59"
}
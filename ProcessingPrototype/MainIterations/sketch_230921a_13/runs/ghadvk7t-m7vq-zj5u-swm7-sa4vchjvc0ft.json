{
  "id": "ghadvk7t-m7vq-zj5u-swm7-sa4vchjvc0ft",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.20000000298023224,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "b7dxh8n8-tu11-q203-e7xq-k5osa9pda4nw",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "mod(y,y)",
            "g": "((max(y,(y+externalVal))+min(x,pow(x,noise(externalVal,(x/externalVal)))))+(noise(externalVal,(tan((max(y,y)-max(sin(x),min(externalVal,pow(pow(min(cos(y),x),x),y)))))-(externalVal/min(mod(y,min(x,externalVal)),y))))-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(externalVal)",
            "b": "(y*(min(cos(((sin((pow(x,tan(sin(y)))-externalVal))+(min(y,externalVal)+externalVal))*(mod(x,mod(externalVal,(externalVal*max(pow(y,(externalVal-y)),externalVal))))-y))),pow(y,(x-y)))-sin(externalVal)))",
            "g": "noise(x,min(externalVal,tan(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,pow(pow(tan(y),x),x))",
            "b": "(x/x)",
            "g": "(x*tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((noise(x,x)+(y-tan((externalVal/y)))),min((sin(mod((y+y),y))+sin(cos(y))),(externalVal*pow(noise(noise(pow(externalVal,min((externalVal/((tan(noise(y,(pow(externalVal,x)-mod(cos(sin(tan((pow(noise(noise(noise(noise(mod(mod(max(min(externalVal,(y*y)),x),max(externalVal,x)),y),x),x),tan(x)),(x*sin(x))),x)+max(x,(y/(max(y,max(pow(externalVal,y),externalVal))/min(pow(x,mod(y,max(x,x))),x)))))))),min(max(x,pow(cos(tan((((x*(x+externalVal))-y)/x))),externalVal)),x)))))/y)-min((cos(y)-cos(externalVal)),sin(sin(externalVal))))),noise(noise(externalVal,y),x))),x),cos(x)),min(y,noise(noise(noise(max((y*externalVal),min(((externalVal+min(y,x))-(externalVal*mod(x,(externalVal/noise(externalVal,max(sin(pow(y,externalVal)),externalVal)))))),pow(y,x))),x),externalVal),(x*noise(min(cos(pow(mod((((y/(externalVal*(externalVal*externalVal)))-tan(cos(x)))+(y+mod(noise(externalVal,(mod(y,y)/mod(max(pow(pow(x,externalVal),externalVal),((max(x,y)*sin((externalVal*(externalVal*((externalVal+max((min(noise(externalVal,y),mod(x,x))+x),noise(externalVal,y)))/(tan(y)+(sin((tan(y)-max(y,externalVal)))+max((y*tan(y)),x))))))))*((externalVal-externalVal)/externalVal))),externalVal))),cos(y)))),externalVal),externalVal)),(externalVal+tan((x*cos(x))))),x))))))))",
            "b": "cos(y)",
            "g": "mod(max(min(sin(sin(y)),min(externalVal,y)),noise(noise(x,pow((externalVal*pow(cos(noise((y/x),noise(x,((externalVal*pow(((externalVal*x)/x),min(externalVal,(max(x,((min((x/cos(pow(x,y))),min(max(y,x),(sin((cos(externalVal)+x))/y)))-mod(y,max(externalVal,cos(x))))-pow(tan(y),x)))*y))))*externalVal)))),x)),x)),(max(y,x)*(mod(sin(x),y)/externalVal)))),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x/min(x,x)))",
            "b": "max(externalVal,mod((tan(x)+externalVal),externalVal))",
            "g": "(y*pow(externalVal,pow(x,(x+(sin(y)/x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal-(externalVal-max(pow((mod(y,pow(noise((y+max(externalVal,(externalVal+(tan((pow((max((x+y),(tan(y)/(y-externalVal)))+y),x)-x))/externalVal)))),tan((externalVal+max(min(externalVal,externalVal),max(x,sin(y)))))),x))/max(((x*(externalVal+(sin(y)-(x+pow(externalVal,pow(y,y))))))*y),(y-cos(y)))),pow(max(sin(y),(min(y,(y*externalVal))-y)),tan(min(externalVal,y)))),y)))*tan(x))",
            "b": "pow((y-max((y*mod(externalVal,sin(externalVal))),externalVal)),x)",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((((externalVal+externalVal)+externalVal)+noise((cos(y)-x),externalVal)))",
            "b": "pow((y/mod(externalVal,y)),externalVal)",
            "g": "(externalVal+(mod((externalVal/x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((((sin(x)+externalVal)/x)*y),pow(externalVal,externalVal)))",
            "b": "min(externalVal,max(tan(externalVal),externalVal))",
            "g": "max(min(x,min(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),externalVal)))),x)),((pow(noise(externalVal,((min(y,y)+min(x,(min(cos(externalVal),pow(x,tan(noise(cos(noise(((externalVal-y)+externalVal),x)),x))))+tan(y))))-x)),y)/y)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "(y/externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((y*max(y,(x/externalVal))),externalVal)",
            "b": "noise((tan(noise((externalVal+y),y))*externalVal),(y*noise(pow(y,tan(x)),min(min(noise(y,sin(externalVal)),externalVal),tan(y)))))",
            "g": "(externalVal*x)"
          }
        }
      ],
      "timestamp": "22h:18m:38s"
    },
    {
      "generation": 1,
      "ascendantID": "b7dxh8n8-tu11-q203-e7xq-k5osa9pda4nw",
      "id": "l6n22flp-rgvz-iugm-inxy-js9acoy60wj1",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((((externalVal+externalVal)+externalVal)+noise((cos(y)-x),externalVal)))",
            "b": "pow((y/mod(externalVal,y)),externalVal)",
            "g": "(externalVal+(mod((externalVal/x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "mod(y,y)",
            "g": "((max(y,(y+externalVal))+min(x,pow(x,noise(externalVal,(x/externalVal)))))+(noise(externalVal,(tan((max(y,y)-max(sin(x),min(externalVal,pow(pow(min(cos(y),x),x),y)))))-(externalVal/min(mod(y,min(x,externalVal)),y))))-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((((externalVal+externalVal)+externalVal)+noise((cos(y)-x),externalVal)))",
            "b": "pow(mod((y-externalVal),y),externalVal)",
            "g": "(externalVal+(externalVal*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((y*max(y,(x*externalVal))),externalVal)",
            "b": "noise((cos(noise((externalVal+y),y))*externalVal),(y-noise(pow(y,tan(x)),min(min(noise(y,sin(externalVal)),externalVal),cos(y)))))",
            "g": "(externalVal*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((((externalVal+externalVal)+y)+noise((cos(y)-x),externalVal))/max(externalVal,(cos(pow(x,(tan(externalVal)-externalVal)))-y)))",
            "b": "pow((y/mod(externalVal,y)),externalVal)",
            "g": "(externalVal+(mod((externalVal*x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((tan(externalVal)*y),pow(externalVal,externalVal)))",
            "b": "min(externalVal,sin(externalVal))",
            "g": "max(max(y,min(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),externalVal)))),x)),((pow(noise(externalVal,((min(y,y)+min(x,(min(cos(externalVal),pow(x,tan(noise(cos(noise(((externalVal*y)+externalVal),x)),x))))+tan(y))))-x)),y)/y)*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((noise(x,x)+(y-tan((externalVal/y)))),max((sin(mod((y-y),y))+sin(cos(y))),(externalVal*mod(noise(noise(pow(externalVal,min((externalVal/((tan(noise(y,(pow(externalVal,x)-mod(cos(sin(tan((pow(noise(noise(noise(noise(mod(mod(max(noise(externalVal,(y*y)),x),max(externalVal,x)),y),x),x),tan(x)),(x*sin(x))),x)+max(x,(y/(max(y,max(pow(externalVal,y),externalVal))/min(pow(x,pow(y,max(x,x))),x)))))))),min(max(x,pow(cos(tan((((x*(x+externalVal))-y)/x))),externalVal)),x)))))/y)-noise((cos(y)-cos(externalVal)),sin(sin(externalVal))))),mod(noise(externalVal,y),x))),x),cos(x)),min(y,noise(noise(noise(max((y*externalVal),min(((externalVal+min(y,x))-(externalVal*mod(x,(externalVal/noise(externalVal,max(sin(pow(y,externalVal)),externalVal)))))),pow(y,x))),x),externalVal),(x*noise(min(cos(pow(mod((((y*(externalVal*(externalVal*externalVal)))-tan(sin(x)))+(y+mod(noise(externalVal,sin(mod(y,y))),cos(y)))),externalVal),externalVal)),(externalVal+tan((x*cos(x))))),x))))))))",
            "b": "cos(y)",
            "g": "mod(max(min(cos(sin(y)),min(externalVal,y)),mod(noise(x,pow((externalVal*pow(cos(noise((y/x),noise(x,((externalVal*pow(((externalVal*x)/x),min(externalVal,(min(x,((min((x/cos(pow(x,y))),min(tan(y),(sin((cos(externalVal)+x))/y)))-mod(y,max(externalVal,tan(x))))-pow(tan(y),x)))*y))))*externalVal)))),x)),x)),(tan(y)*(mod(sin(x),y)/externalVal)))),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((((externalVal+externalVal)+externalVal)+noise((cos(y)-x),externalVal)))",
            "b": "pow((y/pow(externalVal,x)),externalVal)",
            "g": "(externalVal+(pow((externalVal/x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((sin((sin(x)+externalVal))*y),pow(externalVal,y)))",
            "b": "min(externalVal,max(tan(externalVal),externalVal))",
            "g": "max(min(x,min(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),y)))),x)),((pow(noise(externalVal,((min(y,y)+min(x,(min(cos(externalVal),pow(x,max(noise(cos(noise(((externalVal-y)+externalVal),x)),x),noise((x-externalVal),noise((((cos(mod((y/x),mod(min(y,(cos(y)-mod(externalVal,x))),cos(x))))*sin((x/((pow(externalVal,externalVal)-sin(noise((x+(cos(externalVal)+y)),(max(externalVal,(x-y))-max(sin((((externalVal/x)+y)*(externalVal*min((externalVal*x),y)))),max(mod(y,cos(x)),y))))))/x))))+externalVal)*externalVal),max((max(x,x)+tan(externalVal)),noise(externalVal,(sin(externalVal)*x))))))))+cos(y))))-x)),y)*y)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(externalVal,pow(pow(tan(y),x),x))",
            "b": "(x/x)",
            "g": "(x*cos(x))"
          }
        }
      ],
      "timestamp": "22h:18m:41s"
    },
    {
      "generation": 2,
      "ascendantID": "l6n22flp-rgvz-iugm-inxy-js9acoy60wj1",
      "id": "l55qnplb-lolt-0zi5-ov4k-ljworel8p9sb",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((tan(externalVal)*y),pow(externalVal,externalVal)))",
            "b": "min(externalVal,sin(externalVal))",
            "g": "max(max(y,min(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),externalVal)))),x)),((pow(noise(externalVal,((min(y,y)+min(x,(min(cos(externalVal),pow(x,tan(noise(cos(noise(((externalVal*y)+externalVal),x)),x))))+tan(y))))-x)),y)/y)*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((((externalVal+externalVal)+externalVal)+noise((cos(y)-x),externalVal)))",
            "b": "pow((y/mod(externalVal,y)),externalVal)",
            "g": "(externalVal+(mod((externalVal/x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((((externalVal+externalVal)+y)+noise((sin(y)-x),externalVal))/max(externalVal,(cos(pow(x,(tan(externalVal)-externalVal)))*y)))",
            "b": "pow((y/noise(externalVal,x)),externalVal)",
            "g": "(externalVal+(mod((externalVal*x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(externalVal,pow(pow(tan(externalVal),x),x))",
            "b": "(x/x)",
            "g": "(x*cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+pow((mod(max(pow((mod(x,sin(x))*tan(externalVal)),(x+x)),y),y)*y),pow(externalVal,y)))",
            "b": "min(externalVal,max(mod((y-externalVal),y),externalVal))",
            "g": "max(min(x,min(min(x,min(x,max(y,min(mod((externalVal*sin((x/y))),(externalVal/(mod(pow(y,mod(externalVal,((sin(x)+cos(externalVal))-(x+x)))),tan(y))*cos(y)))),y)))),x)),((pow(noise(externalVal,((noise(y,externalVal)+min(x,(externalVal*x)))-x)),y)*y)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((tan(externalVal)*y),pow(externalVal,externalVal)))",
            "b": "min(externalVal,sin(externalVal))",
            "g": "max(max(x,min(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),externalVal)))),x)),(sin(mod(noise(externalVal,((min(y,y)+min(x,(min(cos(externalVal),pow(x,tan(noise(cos(noise(((externalVal*y)+externalVal),x)),x))))+tan(y))))-x)),x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((tan(externalVal)*y),pow(externalVal,externalVal)))",
            "b": "min(externalVal,sin(externalVal))",
            "g": "max(max(y,min(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),externalVal)))),x)),((pow(noise(externalVal,((min(y,y)+min(x,(min(cos(y),pow(x,tan(noise(cos(noise(((externalVal*y)+externalVal),x)),x))))+tan(y))))-x)),y)/y)*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((((externalVal+externalVal)+externalVal)+noise((cos(y)-x),externalVal)))",
            "b": "pow(sin(y),externalVal)",
            "g": "(externalVal+(mod((externalVal/x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+min(x,min(x,y)))",
            "b": "min(externalVal,sin(externalVal))",
            "g": "max(max(y,min(max(x,min(x,max(y,min(mod((externalVal*cos(sin(x))),sin(externalVal)),externalVal)))),x)),((pow(noise(externalVal,((min(y,y)+min(x,(max(sin(externalVal),pow(x,tan(noise(cos(noise(((externalVal*y)+externalVal),x)),x))))+max(y,max(externalVal,y)))))-x)),y)/y)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((min(x,y)/y),pow(externalVal,externalVal)))",
            "b": "min(externalVal,(externalVal/cos(max(y,noise(min(min(externalVal,pow(externalVal,externalVal)),(pow(externalVal,x)+mod(y,externalVal))),y)))))",
            "g": "max(max(y,min(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),externalVal)))),x)),((pow(noise(externalVal,((min(y,y)+min(x,(min(cos(externalVal),pow(x,tan(noise(cos(noise(((externalVal*y)+externalVal),x)),x))))+tan(y))))-x)),y)/y)*externalVal))"
          }
        }
      ],
      "timestamp": "22h:18m:42s"
    },
    {
      "generation": 3,
      "ascendantID": "l55qnplb-lolt-0zi5-ov4k-ljworel8p9sb",
      "id": "ygkzbdoi-t37a-diac-lcb6-e88vsvaqwmfm",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((((externalVal+externalVal)+externalVal)+noise((cos(y)-x),externalVal)))",
            "b": "pow(sin(y),externalVal)",
            "g": "(externalVal+(mod((externalVal/x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((tan(externalVal)*y),pow(externalVal,externalVal)))",
            "b": "min(externalVal,sin(externalVal))",
            "g": "max(max(y,min(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),externalVal)))),x)),((pow(noise(externalVal,((min(y,y)+min(x,(min(cos(externalVal),pow(x,tan(noise(cos(noise(((externalVal*y)+externalVal),x)),x))))+tan(y))))-x)),y)/y)*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((((externalVal+externalVal)+externalVal)+noise((cos(y)-x),externalVal)))",
            "b": "pow(sin(y),externalVal)",
            "g": "(y+(mod((externalVal/x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+min(x,min(x,y)))",
            "b": "min(externalVal,sin(y))",
            "g": "max(min(x,min(max(x,min(x,max(y,min(mod((externalVal*cos(sin(x))),sin(externalVal)),externalVal)))),x)),((pow(noise(externalVal,((min(y,y)+min(x,(mod((externalVal/x),tan(x))*externalVal)))-x)),y)/y)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((tan(externalVal)*y),mod(externalVal,y)))",
            "b": "min(externalVal,sin(externalVal))",
            "g": "max(max(x,max(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),externalVal)))),x)),(sin(mod(noise(externalVal,((min(y,y)+max(x,(min(cos(externalVal),pow(x,tan(noise(cos(min(((externalVal*y)+externalVal),x)),x))))+cos(y))))-x)),x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((((externalVal+externalVal)+externalVal)+noise((cos(y)-x),externalVal)))",
            "b": "pow(sin(y),externalVal)",
            "g": "(externalVal+(mod((externalVal+(mod((externalVal/x),cos(x))*externalVal)),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((((externalVal+externalVal)+y)+noise((sin(y)-x),externalVal))/max(externalVal,(tan(pow(x,(tan(externalVal)+externalVal)))*y)))",
            "b": "pow(sin(x),externalVal)",
            "g": "(externalVal+(mod((externalVal*x),cos(x))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((tan(externalVal)-y),pow(externalVal,externalVal)))",
            "b": "min(externalVal,sin(externalVal))",
            "g": "max(tan(x),((pow(noise(externalVal,((min(y,y)+min(x,(min(cos(y),pow(x,tan(noise(cos(pow(((externalVal*y)+externalVal),x)),x))))+tan(y))))-x)),y)/y)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-pow((min(x,y)*y),pow(externalVal,externalVal)))",
            "b": "min(externalVal,(externalVal/sin(max(y,noise(min(min(externalVal,pow(externalVal,externalVal)),(pow(externalVal,x)+mod(y,externalVal))),y)))))",
            "g": "max(max(y,min(min(x,min(x,max(y,min(mod((externalVal*cos((x/y))),sin(externalVal)),externalVal)))),x)),(externalVal*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(externalVal,pow(min(x,y),x))",
            "b": "(x/x)",
            "g": "(x*sin(x))"
          }
        }
      ],
      "timestamp": "22h:18m:42s"
    }
  ],
  "timestamp": "2023-11-2-22-18-38"
}
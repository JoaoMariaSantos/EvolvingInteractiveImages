{
  "id": "8fqqvds4-weg6-yhqj-gktg-4f5f5kgus97r",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [
    {
      "generation": 0,
      "id": "hex7twbp-iqem-gjcl-mo5q-wpzmoc24f7sm",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(externalVal),mod((audio(x,x)+mod((audio(tan(pow(x,x)),(cos(y)*noise(tan(externalVal),y)))-externalVal),pow(pow(y,cos(tan(y))),(audio(mod(min((y*(cos(audio((externalVal+max(y,noise(externalVal,externalVal))),y))/(y-externalVal))),tan(audio(x,(x+mod(tan(externalVal),externalVal))))),x),(y/y))*cos(cos(externalVal)))))),x))/audio(externalVal,x))",
            "b": "max(sin((externalVal*y)),externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(max(x,audio(externalVal,audio(tan(((mod(((externalVal*cos(externalVal))+((mod(y,(y+externalVal))-externalVal)+y)),x)+x)-y)),(x*y)))))",
            "b": "cos(y)",
            "g": "mod(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max(externalVal,x),sin(((x/(x-y))*y)))",
            "b": "(pow(externalVal,pow(min(audio(x,externalVal),(externalVal/x)),min(tan(audio((x*noise(x,y)),mod(cos((y+x)),min(cos(min(externalVal,(x-x))),y)))),externalVal)))+pow((min(externalVal,x)*(noise(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,sin(noise(x,audio(sin(x),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,mod(noise(y,min(pow(sin(x),cos(externalVal)),audio((externalVal/tan(externalVal)),min(sin(min(y,x)),x)))),y))",
            "b": "(x-(x*x))",
            "g": "(externalVal-externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise((y+(sin((tan(externalVal)-externalVal))-(cos(pow(noise(externalVal,min(audio(x,x),externalVal)),min(((x*sin(cos(mod(x,(mod(sin(externalVal),noise(min(externalVal,externalVal),externalVal))*min(externalVal,(externalVal*mod(cos(max(y,y)),max(y,mod(pow(((y+(cos(externalVal)*(min(externalVal,(externalVal-y))+min(((externalVal*y)+y),externalVal))))-(mod((x/x),mod(externalVal,y))-sin(x))),audio(externalVal,mod(x,tan(y)))),(x-pow(externalVal,cos(tan(externalVal))))))))))))))*noise(y,(pow(mod(externalVal,y),(x*sin(externalVal)))/cos(x)))),externalVal)))+y))),externalVal)-max(mod(min(audio(min(x,(noise((x-noise((x/min((cos(externalVal)*pow(y,y)),y)),y)),y)+noise(y,externalVal))),audio(min(externalVal,x),(pow(externalVal,x)-x))),(pow(min(max(x,pow(externalVal,min(externalVal,externalVal))),((pow(y,externalVal)*y)+externalVal)),externalVal)-(y+max(mod(externalVal,y),mod(externalVal,externalVal))))),externalVal),mod(y,noise((audio(externalVal,x)-x),(externalVal*y)))))",
            "b": "((externalVal-y)*mod((mod(audio((y-y),max((((x-audio((cos(max(tan(externalVal),(max((sin(x)/externalVal),x)*(y/externalVal))))-cos(y)),x))*max((tan(y)-y),x))*cos(min(y,max(cos(((y/x)*max(x,x))),min(y,(min((x*y),y)*((x/externalVal)/x))))))),y)),y)/y),externalVal))",
            "g": "max(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((x+externalVal))",
            "b": "min((y/audio(cos(sin(y)),x)),y)",
            "g": "noise(x,min(x,(externalVal-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(x,(x/y)),(x-y))",
            "b": "cos(cos((y*x)))",
            "g": "(audio((y+externalVal),y)*max((y/x),sin(min((x*y),x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,x)",
            "b": "(y+y)",
            "g": "max(max(x,cos(mod(cos(((x+sin(externalVal))-min(min(y,x),x))),cos(sin(x))))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(audio(x,noise(externalVal,externalVal)))",
            "b": "noise(y,y)",
            "g": "noise(y,audio(x,cos(audio(mod(tan((x-y)),tan(externalVal)),(max(sin(((x-cos(y))-externalVal)),(x+x))*cos((externalVal-(pow(max((tan((noise(noise(externalVal,tan((externalVal-externalVal))),max((x+(min(externalVal,(externalVal+externalVal))+max(tan(audio(sin(y),(min(((y+y)-max(audio(y,tan(pow(min(sin((y*y)),audio((externalVal/externalVal),(x*x))),mod(x,x)))),max(y,((sin((tan(externalVal)+x))/(y/((x*x)+audio(externalVal,y))))*externalVal)))),x)/max(tan((audio(x,noise(noise(externalVal,externalVal),externalVal))*externalVal)),x)))),externalVal))),tan(x)))/pow(y,mod(audio(sin((x/externalVal)),externalVal),y))))*(externalVal+(y/(mod(x,y)/x)))),min(audio(externalVal,externalVal),mod(sin(y),(x*externalVal)))),audio(pow(pow((y+sin(externalVal)),y),externalVal),pow((x*(x/(pow(externalVal,y)/x))),(x/cos(externalVal)))))-externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+cos(y))",
            "b": "((x-audio(tan(cos(externalVal)),y))+externalVal)",
            "g": "((noise(pow(audio(externalVal,(x-(externalVal+sin(y)))),tan(mod(noise(cos(externalVal),y),x))),(externalVal-(x*externalVal)))-y)-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "(sin(noise(x,y))-cos(sin(y)))",
            "g": "audio(min((mod(noise(y,y),(x*cos(min(y,externalVal))))/externalVal),y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "pow(x,externalVal)",
            "g": "audio(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(pow(y,y)/x)",
            "b": "(y/x)",
            "g": "max(externalVal,min(externalVal,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(pow(y,((x-y)-externalVal)))",
            "b": "(externalVal/y)",
            "g": "noise(externalVal,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(tan(noise(y,externalVal)),externalVal)",
            "b": "cos((mod(y,x)+pow(externalVal,mod(x,audio(min(x,max(y,(mod(mod(x,x),(x*(pow(y,sin(noise((externalVal*x),(externalVal-externalVal))))/externalVal)))+noise(x,x)))),max(x,y))))))",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(externalVal,y)",
            "b": "cos(externalVal)",
            "g": "min(y,(max(y,externalVal)-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*tan((y+mod(mod(pow(max(externalVal,noise(x,cos(y))),pow(externalVal,x)),sin(x)),x))))-externalVal)",
            "b": "sin((externalVal*externalVal))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,(max(sin(x),mod(y,y))/x))",
            "b": "audio(x,audio(x,externalVal))",
            "g": "mod(x,(noise(externalVal,y)/sin(min(y,cos(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,x)",
            "b": "(y+x)",
            "g": "(externalVal+externalVal)"
          }
        }
      ],
      "timestamp": "22h:47m:52s"
    },
    {
      "generation": 1,
      "ascendantID": "hex7twbp-iqem-gjcl-mo5q-wpzmoc24f7sm",
      "id": "rhnw9lks-ou70-12p3-l9e2-vqoq1ytt0o0h",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise((y+(sin((tan(externalVal)-externalVal))-(cos(pow(noise(externalVal,min(audio(x,x),externalVal)),min(((x*sin(cos(mod(x,(mod(sin(externalVal),noise(min(externalVal,externalVal),externalVal))*min(externalVal,(externalVal*mod(cos(max(y,y)),max(y,mod(pow(((y+(cos(externalVal)*(min(externalVal,(externalVal-y))+min(((externalVal*y)+y),externalVal))))-(mod((x/x),mod(externalVal,y))-sin(x))),audio(externalVal,mod(x,tan(y)))),(x-pow(externalVal,cos(tan(externalVal))))))))))))))*noise(y,(pow(mod(externalVal,y),(x*sin(externalVal)))/cos(x)))),externalVal)))+y))),externalVal)-max(mod(min(audio(min(x,(noise((x-noise((x/min((cos(externalVal)*pow(y,y)),y)),y)),y)+noise(y,externalVal))),audio(min(externalVal,x),(pow(externalVal,x)-x))),(pow(min(max(x,pow(externalVal,min(externalVal,externalVal))),((pow(y,externalVal)*y)+externalVal)),externalVal)-(y+max(mod(externalVal,y),mod(externalVal,externalVal))))),externalVal),mod(y,noise((audio(externalVal,x)-x),(externalVal*y)))))",
            "b": "((externalVal-y)*mod((mod(audio((y-y),max((((x-audio((cos(max(tan(externalVal),(max((sin(x)/externalVal),x)*(y/externalVal))))-cos(y)),x))*max((tan(y)-y),x))*cos(min(y,max(cos(((y/x)*max(x,x))),min(y,(min((x*y),y)*((x/externalVal)/x))))))),y)),y)/y),externalVal))",
            "g": "max(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x+tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(noise(y,(x/(x+y))))),noise(x,min(audio(y,pow(tan(externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)*min(cos(externalVal),x))))))+x),x)-x)))*x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,mod(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),pow((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((noise(externalVal,externalVal)-externalVal)),sin(((x/(x+y))*y)))",
            "b": "(pow(externalVal,pow(min(audio(x,externalVal),(externalVal/x)),min(max(audio((x*noise(x,y)),noise(tan((y+x)),min(cos(min(externalVal,(x+x))),y))),x),externalVal)))+pow((min(externalVal,x)/(mod(max(y,externalVal),externalVal)*x)),externalVal))",
            "g": "noise(y,sin((y-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((min(cos((noise(y,(x/(x+y)))/min(y,tan((x*(audio(externalVal,max(x,pow(sin(y),y)))-audio(audio(max(x,audio(sin(x),min(audio(mod(x,x),pow(mod(y,mod((pow(y,cos(sin((x/externalVal))))-sin(sin(mod(externalVal,pow(y,x))))),y)),max(x,(x+y)))),noise(externalVal,(x-((sin(externalVal)*y)*cos(min(sin((x-x)),x)))))))),y),externalVal))))))),noise(x,min(audio(y,pow(tan(externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(cos(noise(cos(externalVal),cos(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,audio(audio(externalVal,y),externalVal))))-noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)+(y+x))))),x)),x))))))-x),x)-x)))*x))))",
            "g": "audio(tan(cos(externalVal)),min(max((noise(externalVal,tan(x))/y),y),(externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "pow(x,externalVal)",
            "g": "audio(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+sin(y))",
            "b": "((x+audio(cos(cos(externalVal)),y))+externalVal)",
            "g": "((noise(pow(audio(externalVal,(x+(externalVal+sin(y)))),max(mod(noise(tan(y),y),x),(sin(sin(x))/noise((audio(y,y)+(mod(externalVal,externalVal)-y)),x)))),(externalVal-(x*externalVal)))-y)*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(externalVal,x),min(audio(externalVal,pow(externalVal,noise(x,x))),cos((audio(x,y)/(y-x)))))",
            "b": "(pow(externalVal,pow(min(audio(x,externalVal),(y*x)),max(tan(audio((x*noise(x,y)),mod(sin((y-x)),max(sin(min(externalVal,(x-x))),y)))),externalVal)))+pow((min(externalVal,x)-(noise(max(y,externalVal),externalVal)*x)),externalVal))",
            "g": "mod(y,sin(noise(x,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+tan(y))",
            "b": "((x-audio(tan(cos(externalVal)),y))+y)",
            "g": "((mod(mod(audio(externalVal,(x+(externalVal+(y/x)))),tan(noise(noise(tan(externalVal),externalVal),x))),(externalVal-(x*externalVal)))-y)-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((y+(tan((tan(externalVal)-externalVal))-(cos(audio(noise(externalVal,noise(audio(x,x),externalVal)),min(((x*sin(cos(mod(x,(mod((externalVal/max(x,noise(y,x))),noise(min(externalVal,externalVal),externalVal))*max(externalVal,(externalVal*noise(cos(max(y,y)),max(y,mod(mod(((y+(cos(externalVal)/(min(externalVal,(externalVal-y))+min(((externalVal-y)+y),externalVal))))+(mod((x/x),mod(externalVal,y))*cos(x))),audio(externalVal,mod(x,tan(y)))),(x+pow(externalVal,cos(tan(externalVal))))))))))))))*noise(y,sin(pow(mod(externalVal,y),(x*sin(externalVal)))))),externalVal)))+y))),externalVal)-min(mod(min(audio(min(x,(noise((x+noise((x/max((cos(externalVal)*pow(y,y)),y)),y)),y)+noise(x,externalVal))),audio(min(externalVal,x),(pow(externalVal,x)/x))),(pow(min(max(x,pow(externalVal,max(externalVal,externalVal))),((pow(y,externalVal)*y)-externalVal)),externalVal)-(y+max(mod(externalVal,y),mod(externalVal,externalVal))))),externalVal),mod(y,noise((audio(externalVal,x)-x),(externalVal*y)))))",
            "b": "((externalVal-y)-pow((mod(pow((y*y),max((((x-audio((cos(tan(tan(externalVal)))-cos(y)),x))*max((tan(y)*y),x))-cos(noise(y,max(cos(((y/x)*max(x,x))),min(y,(min((x*y),y)*((x*externalVal)/x))))))),y)),y)/y),externalVal))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(audio(x,noise(externalVal,externalVal)))",
            "b": "noise(y,y)",
            "g": "noise(y,pow(x,cos(audio(mod(tan((x*externalVal)),cos(externalVal)),(max(sin(((x-tan(externalVal))-externalVal)),(x+x))-cos((externalVal+(pow(max((tan((noise(noise(externalVal,tan((externalVal-externalVal))),min((x+(max(externalVal,(externalVal+externalVal))+min(tan(audio((y/y),(min(((y+y)-max(audio(y,tan(audio(min(sin((y*y)),pow((externalVal/externalVal),(x*x))),noise(x,x)))),min(y,(sin(sin((tan(externalVal)+x)))*externalVal)))),x)/max(cos((audio(x,min(noise(externalVal,externalVal),externalVal))*externalVal)),x)))),externalVal))),tan(x)))/audio(y,mod(audio(sin((x/externalVal)),externalVal),y))))/(externalVal+(y/(mod(x,y)/y)))),min(audio(externalVal,externalVal),noise(sin(y),(x*externalVal)))),audio(mod(pow((y+sin(externalVal)),y),externalVal),pow((x*sin(x)),(x*cos(externalVal)))))-externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(max(x,audio(externalVal,audio(tan((cos(y)-y)),(x*y)))))",
            "b": "cos(y)",
            "g": "mod(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(audio(x,noise(externalVal,externalVal)))",
            "b": "noise(y,y)",
            "g": "min(y,audio(x,sin(audio(mod(tan((x-y)),tan(externalVal)),(noise(sin(((x-tan(externalVal))-externalVal)),(x-x))*cos((externalVal-(pow(max((tan((noise(mod(externalVal,tan((externalVal-externalVal))),max((x-(max(externalVal,(externalVal+externalVal))+tan(tan(pow(sin(y),(noise(((x+y)-min(audio(y,cos(pow(min(sin((y*y)),audio((externalVal*externalVal),(x+x))),mod(x,x)))),tan(y))),x)/min(tan((audio(x,noise(noise(externalVal,externalVal),externalVal))*externalVal)),x))))))),tan(x)))*pow(y,mod(audio(sin((x*y)),externalVal),externalVal))))*(externalVal+(y/sin(mod(x,y))))),min(audio(externalVal,externalVal),mod(sin(y),(x*externalVal)))),audio(pow(mod((y+sin(y)),y),externalVal),audio((x/(x/(mod(externalVal,y)/y))),(x*cos(externalVal)))))-externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(externalVal),mod((audio(x,x)+mod((audio(tan(mod(x,x)),(cos(y)*noise(tan(externalVal),y)))+externalVal),pow(pow(y,cos(cos(y))),(audio(mod(max((y*(sin(pow((externalVal+max(y,noise(externalVal,externalVal))),y))/(y-externalVal))),tan(audio(x,(x+mod(tan(externalVal),externalVal))))),x),(y/y))*tan(x))))),x))*pow(externalVal,x))",
            "b": "max(sin((externalVal*y)),externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(externalVal),pow((mod(x,x)+noise((audio(tan(pow(x,x)),(tan(y)-noise(tan(externalVal),y)))+externalVal),pow(mod(y,cos(tan(y))),(audio(mod(min((externalVal*(cos(pow((externalVal+max(y,min(externalVal,externalVal))),externalVal))*(y-externalVal))),tan(audio(y,(x+noise(cos(externalVal),externalVal))))),x),(y/y))*tan(cos(externalVal)))))),x))*audio(externalVal,x))",
            "b": "max((x+(x*x)),externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "tan(pow(min(min(y,mod((x-tan(externalVal)),y)),y),min(tan(mod(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((max(y,max(externalVal,x))/y)+(min(x,x)/min(tan(externalVal),x))))))-x),x)-x)))*x))))",
            "g": "audio(max(cos(externalVal),y),min(max(sin(noise(externalVal,tan(x))),y),sin(pow(min((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x*x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(externalVal,x),(((y*(x-y))*y)/y))",
            "b": "(pow(externalVal,mod(min(pow(y,externalVal),(externalVal/x)),min(tan(audio((x*noise(x,y)),mod(cos((y+x)),min(cos(min(externalVal,(x-x))),y)))),externalVal)))+pow((min(externalVal,x)*(noise(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,sin(noise(x,mod(sin(x),y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "tan(mod(min(min(y,pow((x+tan(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,tan((min((max(tan(cos(min(y,(y/(x+y))))),noise(x,min(pow(y,pow(max(externalVal,externalVal),min(externalVal,max(externalVal,min(sin(x),externalVal))))),((cos(y)/y)+(min(x,x)/min(max(externalVal,min(sin(((noise(x,max(audio(tan(y),y),mod(cos(externalVal),noise(sin(pow(sin(externalVal),max(max(y,audio((externalVal-y),y)),(y/externalVal)))),externalVal))))-x)/pow(((tan(y)/(externalVal+noise(x,audio(audio(externalVal,y),externalVal))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))-x))))",
            "g": "audio(sin(cos(externalVal)),min(max((noise(externalVal,tan(x))/y),y),cos(pow(max((externalVal+y),min(y,(max(y,externalVal)-y))),audio(sin(y),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((x-externalVal))",
            "b": "max((y/pow(cos(sin(y)),x)),y)",
            "g": "noise(x,min(x,(externalVal-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((x*y)),(externalVal/y)),cos(((x/(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(audio(x,externalVal),(externalVal/x)),min((x+y),externalVal)))+audio((min(externalVal,x)-(noise(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,sin((externalVal-externalVal)))"
          }
        }
      ],
      "timestamp": "22h:48m:6s"
    },
    {
      "generation": 2,
      "ascendantID": "rhnw9lks-ou70-12p3-l9e2-vqoq1ytt0o0h",
      "id": "xsb2hr93-5qoj-9eib-ojej-qzios95r5y04",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((x*y)),(externalVal/y)),cos(((x/(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(audio(x,externalVal),(externalVal/x)),min((x+y),externalVal)))+audio((min(externalVal,x)-(noise(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,sin((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "cos(mod(noise(min(y,pow((x+tan(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(pow(externalVal,tan((min((max(tan(cos(min(y,(y/(x+y))))),noise(x,min(mod(y,audio(max(externalVal,externalVal),min(externalVal,tan(externalVal)))),((cos(y)/y)+(min(x,x)/min(max(externalVal,min(sin(((noise(x,max(audio(cos(y),y),mod(cos(externalVal),noise(sin(mod((externalVal/tan(mod((x/externalVal),min(y,externalVal)))),max(min(y,audio((externalVal-y),y)),(y*externalVal)))),externalVal))))-x)/mod(((tan(y)/(externalVal-mod(x,audio(audio(externalVal,y),externalVal))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)+(y+x))))),x)),x))))))-x),x)*x)))-x))))",
            "g": "audio(sin(cos(externalVal)),min(max((min(externalVal,tan(x))/y),y),cos(cos(cos(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(externalVal,x),(((y*(x-y))*y)/y))",
            "b": "(pow(externalVal,mod(noise(pow(y,externalVal),(externalVal/x)),min(tan(audio((x*noise(x,y)),mod(cos((y+x)),min(sin(min(externalVal,(x-x))),y)))),externalVal)))+pow((max(externalVal,x)*(noise(min(y,externalVal),externalVal)-x)),externalVal))",
            "g": "noise(y,sin(noise(x,mod(sin(x),y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(mod((y+(cos((tan(externalVal)-externalVal))-(cos(audio(noise(externalVal,noise(audio(x,x),externalVal)),min(((x*sin(cos(mod(x,(noise(sin(externalVal),noise(min(externalVal,externalVal),externalVal))*min(externalVal,(externalVal*mod(cos(max(y,y)),max(y,mod(pow(((y+(tan(externalVal)*(tan(externalVal)+min(((externalVal*y)+y),externalVal))))-(mod((x-x),min(externalVal,y))-(x/mod(mod(x,x),audio((sin(x)*y),y))))),audio(externalVal,audio(x,tan(y)))),(x-pow(externalVal,cos(tan(externalVal))))))))))))))*mod(y,(mod(mod(externalVal,y),(x*sin(externalVal)))*cos(x)))),externalVal)))+y))),externalVal)-max(mod(min(audio(min(x,(noise((x-noise((x/min((cos(externalVal)*audio(y,x)),y)),y)),y)+max(y,externalVal))),audio(min(externalVal,x),(audio(externalVal,x)-x))),(mod(min(max(x,audio(externalVal,min(externalVal,externalVal))),((pow(y,externalVal)*y)+externalVal)),y)+(y+min(mod(externalVal,x),mod(externalVal,externalVal))))),externalVal),mod(y,mod((audio(externalVal,x)-x),(externalVal*y)))))",
            "b": "((externalVal-y)*mod((mod(audio((externalVal*y),max((((x-audio((cos(min(tan(externalVal),(max((sin(x)/externalVal),x)*(y/externalVal))))+cos(y)),x))*tan((tan(y)+y)))*cos(tan(y))),y)),y)/y),y))",
            "g": "max(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+(y/(x-y)))",
            "b": "((x+audio(cos(cos(externalVal)),y))+externalVal)",
            "g": "((noise(pow(audio(externalVal,(x+(externalVal+sin(y)))),max(mod(noise(tan(y),y),x),(sin(sin(x))/noise((audio(y,y)+(mod(externalVal,externalVal)-y)),x)))),(externalVal-(x*externalVal)))-y)*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(noise(max(y,mod((x+max(externalVal,y)),y)),y),max(tan(audio(x,externalVal)),(audio(externalVal,sin((max((max(cos((noise(y,(x/(x+x)))/min(y,tan((x*(audio(externalVal,min(x,pow((y/externalVal),y)))-audio(audio(tan(x),y),externalVal))))))),noise(x,min(audio(y,pow(tan(externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+sin(min(x,x))))))-x),x)-x)))-x))))",
            "g": "audio(tan(cos(externalVal)),noise(max((noise(externalVal,tan(x))*y),y),(externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(externalVal,x),(((y*(x-y))*y)/y))",
            "b": "(pow(externalVal,mod(min(pow(y,externalVal),(externalVal/x)),min(tan(audio((x*noise(x,y)),pow(tan((y-x)),min((noise(externalVal,(x-x))/(y-audio(min(externalVal,tan(x)),mod(x,(tan(max(externalVal,pow(externalVal,(sin(externalVal)/externalVal))))*y))))),y)))),externalVal)))+mod((min(externalVal,x)-(noise(max(externalVal,externalVal),externalVal)-x)),y))",
            "g": "mod(y,sin(noise(x,mod(cos(x),y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((y+(tan((max(externalVal,(y+externalVal))-y))-(cos(audio(noise(externalVal,noise(audio(x,x),externalVal)),min(((x*cos(cos(mod(x,(mod((externalVal/max(x,noise(y,x))),noise(min(externalVal,externalVal),externalVal))*max(externalVal,(externalVal*min(cos(max(y,y)),max(y,noise(pow(((y+(cos(externalVal)/(max(externalVal,(externalVal+x))+min(((externalVal-y)-y),externalVal))))-(mod((x/x),noise(externalVal,y))*cos(x))),audio(externalVal,mod(x,max(externalVal,externalVal)))),(x+pow(externalVal,cos(tan(externalVal))))))))))))))*noise(y,sin(pow(mod(externalVal,y),(x*sin(externalVal)))))),externalVal)))-y))),externalVal)-min(mod(min(audio(max(x,(noise((x+noise((x/max((cos(externalVal)*pow(y,y)),y)),y)),y)+noise(x,externalVal))),audio(max(externalVal,x),(pow(externalVal,x)*x))),(pow(min(max(x,pow(externalVal,max(externalVal,externalVal))),((pow(y,externalVal)*y)-externalVal)),externalVal)*(y-max(mod(externalVal,y),mod(externalVal,externalVal))))),externalVal),noise(y,noise((audio(externalVal,x)-x),(externalVal-externalVal)))))",
            "b": "((externalVal+y)+mod((pow(mod((y*y),min((((x*audio((cos(tan(cos(externalVal)))-cos(y)),x))*max((tan(y)*y),x))-(noise(y,tan(tan(((y/x)*min(x,x)))))/(((sin(x)+y)-audio(pow(externalVal,audio(externalVal,y)),externalVal))-externalVal))),y)),y)/y),externalVal))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min(externalVal,x),(((y*(x-y))*y)/y))",
            "b": "(audio(externalVal,mod(max(pow(y,externalVal),sin(externalVal)),min(cos(audio((x*noise(x,y)),pow(tan((y+x)),min(cos(min(externalVal,(x-x))),y)))),externalVal)))+pow((min(externalVal,x)*(noise(max(y,externalVal),externalVal)*x)),externalVal))",
            "g": "mod(y,sin(noise(x,mod(sin(x),y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(externalVal),noise((audio(x,x)+pow((audio(tan(audio(x,x)),(sin(y)*noise(tan(externalVal),y)))+externalVal),pow(mod(y,cos(cos(y))),(audio(mod(max((y*((pow((externalVal+max(y,noise(externalVal,externalVal))),y)/mod(cos(externalVal),(y-y)))/(y-externalVal))),tan(audio(x,(x-noise(y,y))))),x),(y/y))*tan(x))))),x))*pow(externalVal,x))",
            "b": "max(sin(sin(y)),externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "mod(x,externalVal)",
            "g": "audio(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "pow(x,externalVal)",
            "g": "audio(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((x+externalVal))",
            "b": "max(sin(y),y)",
            "g": "noise(x,noise(x,(externalVal-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(sin((x-y)),sin(externalVal)),cos(((x*(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(pow(x,externalVal),(externalVal/x)),min((x+y),externalVal)))+pow((min(externalVal,x)-(min(max(y,externalVal),externalVal)-x)),y))",
            "g": "mod(y,sin((externalVal-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-max(externalVal,y)),y)),y),noise(tan(mod(x,externalVal)),(audio(externalVal,cos((min((min(tan(sin(min(y,sin(y)))),noise(x,noise(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)-sin(min(x,x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(tan(externalVal)),noise(min((noise(externalVal,max(x,audio(y,x)))/externalVal),y),cos(pow(min((externalVal+y),mod((externalVal/externalVal),externalVal)),audio(audio(externalVal,(x+(externalVal+(y/x)))),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(audio(x,noise(externalVal,externalVal)))",
            "b": "min(y,y)",
            "g": "noise(y,mod(x,sin(audio(min(tan((x*externalVal)),cos(externalVal)),(min(sin(((x-cos(y))-externalVal)),(x+x))-tan((externalVal+(audio(min((tan(sin(mod(noise(externalVal,tan((externalVal-externalVal))),min((x+(max(externalVal,(externalVal+externalVal))-min(cos(audio((y/y),(max(((y+y)-max(pow(y,tan(audio(min(sin((y*y)),pow((externalVal/externalVal),(x*x))),noise(x,x)))),max(y,(sin(cos((max(externalVal,externalVal)+x)))*externalVal)))),x)/tan(tan((audio(x,min(noise(externalVal,externalVal),externalVal))/externalVal)))))),externalVal))),tan(x)))))/(externalVal+(y/sin(mod(x,y))))),max(audio(externalVal,externalVal),min(sin(y),(x-externalVal)))),audio(mod(pow((y+sin(externalVal)),y),externalVal),pow((x*(x/sin(mod(externalVal,y)))),(x/cos(externalVal)))))+externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((y+(tan((tan(externalVal)-externalVal))-(cos(audio(noise(externalVal,noise(audio(x,x),externalVal)),max(((x*(cos(min(x,(mod(sin(externalVal),noise(min(externalVal,externalVal),externalVal))*min(externalVal,(externalVal*noise(tan((x*y)),min(y,mod(mod(((y+(cos(externalVal)/(min(externalVal,(externalVal-y))-min(((externalVal-y)+y),externalVal))))+(mod((x/x),noise(externalVal,y))*cos(x))),audio(externalVal,mod(x,max(externalVal,y)))),(x+pow(externalVal,tan(tan(externalVal))))))))))))/(x-x)))*min(y,sin(pow(mod(externalVal,y),(x*cos(y)))))),externalVal)))+y))),externalVal)+max(mod(min(audio(min(x,(noise((x+noise((x/max((cos(externalVal)-pow(y,y)),y)),y)),y)+mod(y,externalVal))),audio(max(externalVal,x),(pow(externalVal,x)/x))),(pow(min(max(x,pow(externalVal,max(externalVal,externalVal))),((audio(y,externalVal)-y)*externalVal)),externalVal)-(externalVal+max(mod(externalVal,y),mod(externalVal,externalVal))))),externalVal),mod(y,noise((audio(externalVal,x)-x),(externalVal*y)))))",
            "b": "((externalVal-y)-audio((mod(mod((externalVal/y),max((((x-audio((cos(max(max(externalVal,mod(cos(x),externalVal)),(min((sin(x)/externalVal),x)/(y/externalVal))))-cos(y)),x))*max((tan(y)*y),x))-cos(noise(y,max(cos(((y/x)*max(x,x))),noise(y,(noise((x*y),y)*((x*externalVal)*x))))))),y)),y)/y),y))",
            "g": "max(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow((x-y),cos(((x/(x-y))*externalVal)))",
            "b": "(audio(externalVal,pow(max(audio(x,externalVal),(externalVal/x)),min(max(pow(y,externalVal),(externalVal/x)),externalVal)))+audio((min(externalVal,x)-(pow(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,sin((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod(tan((x*y)),(externalVal/y)),cos(((x/(x-y))-y)))",
            "b": "(audio(externalVal,mod(max(audio(x,externalVal),(externalVal/x)),noise((x+x),externalVal)))+audio((min(externalVal,x)-(noise(max(externalVal,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,((externalVal-externalVal)/externalVal))"
          }
        }
      ],
      "timestamp": "22h:48m:25s"
    },
    {
      "generation": 3,
      "ascendantID": "xsb2hr93-5qoj-9eib-ojej-qzios95r5y04",
      "id": "pr4yik83-psq4-81p9-hobo-ohzn77s3aah3",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((x*y)),(externalVal/y)),cos(((x/(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(audio(x,externalVal),(externalVal/x)),min((x+y),externalVal)))+audio((min(externalVal,x)-(noise(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,sin((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+sin(y))",
            "b": "((x+audio((x+tan(externalVal)),y))+externalVal)",
            "g": "((noise(pow(audio(externalVal,(x+(externalVal-sin(y)))),max(mod(sin(sin(y)),x),(sin(sin(x))/noise((audio(y,y)+(mod(externalVal,externalVal)-y)),x)))),(externalVal-(x*externalVal)))*y)*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((x-y),sin((sin(y)-externalVal)))",
            "b": "(audio(externalVal,pow(max(min(externalVal,tan(x)),(externalVal/x)),min(max(mod(x,externalVal),(y*y)),externalVal)))+audio((min(externalVal,x)-(audio(min(externalVal,externalVal),externalVal)-x)),externalVal))",
            "g": "noise(y,sin(min(y,sin(mod(x,audio(cos(x),y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((x-y)),noise(y,y)),cos(((x/(x-y))-y)))",
            "b": "(audio(externalVal,noise(max(audio(x,externalVal),(externalVal*x)),noise((x+x),externalVal)))+audio((min(externalVal,x)-(noise((externalVal/y),y)-x)),externalVal))",
            "g": "mod(y,(min((externalVal+y),noise((externalVal*externalVal),externalVal))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x-x))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),max(externalVal,cos(externalVal)))),(sin(tan(y))+(noise(y,y)/min(tan(externalVal),x))))))-x),y)-x)))*x))))",
            "g": "audio(cos(cos(externalVal)),min(max((noise(externalVal,max(x,audio(y,x)))/externalVal),y),sin(pow(max((externalVal+y),noise(sin(externalVal),externalVal)),mod((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-max(externalVal,y)),y)),y),min(max(mod(x,externalVal),x),sin(audio(externalVal,cos((noise((min(cos(sin(min(y,cos(y)))),noise(x,mod(audio(y,pow(tan(y),max(externalVal,sin(externalVal)))),(sin(max(y,max(externalVal,x)))-(min(x,x)/max(max(externalVal,max(cos(((mod(x,min(audio(tan(y),y),min(pow(max(max(externalVal,audio(min((y/max(x,externalVal)),externalVal),x)),y),y),noise(sin(mod(sin(externalVal),tan(max(y,pow((externalVal*y),y))))),externalVal))))-x)-pow(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),(sin(externalVal)-(y-x))))),x)),x))))))-x),x)*x)))))))",
            "g": "audio(tan(max(y,y)),min(max((noise(externalVal,max(x,audio(y,x)))/externalVal),x),tan(mod(min((externalVal+y),pow((externalVal/externalVal),externalVal)),audio(audio(externalVal,(x+(externalVal+(y/x)))),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "sin(mod(noise(min(y,pow((x+tan(externalVal)),y)),y),noise(tan(pow(x,externalVal)),(pow(externalVal,tan((max((tan(tan(cos(min(y,(y/(x+y))))))-x),x)*x)))*x))))",
            "g": "audio(sin(sin(y)),min(max((min(externalVal,max(x,audio(y,x)))*externalVal),y),cos(cos(cos(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(min(min(y,pow((x-min(externalVal,y)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((min(cos((min(y,(x/(x+y)))/max(y,max((x*(audio(externalVal,max(x,pow(sin(y),y)))*audio(audio(max(x,audio(sin(x),min(audio(audio(x,x),audio(mod(y,pow((pow(y,cos(sin(sin(x))))*sin(sin(mod(externalVal,audio(y,y))))),y)),max(x,(x+y)))),mod(y,(x*(((externalVal/y)*y)*cos(noise(sin((x-x)),x)))))))),y),externalVal))),mod(externalVal,(sin(cos(y))+audio(x,(pow(y,(externalVal/tan(x)))/externalVal)))))))),noise(x,min(audio(y,audio(max(externalVal,externalVal),mod(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)*min(max(externalVal,noise(tan(((noise(x,max(audio(tan(y),y),min(sin(externalVal),min(sin(mod(sin(externalVal),max(max(y,pow((externalVal-y),y)),(y*externalVal)))),externalVal))))+x)/audio((sin(tan(y))*min(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))*x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(cos(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal-x),mod((externalVal/externalVal),externalVal)),audio((x*x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(externalVal,x),(x-y))",
            "b": "(pow(externalVal,mod(noise(mod(y,externalVal),sin(y)),min(tan(audio((x*noise(x,y)),mod(min(externalVal,x),min(sin(min(externalVal,(x+x))),y)))),externalVal)))+mod((tan(externalVal)*(noise(max(externalVal,externalVal),externalVal)-x)),externalVal))",
            "g": "noise(y,sin((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+(y/(x-y)))",
            "b": "((x+pow(cos(cos(externalVal)),y))+externalVal)",
            "g": "((noise(pow(audio(externalVal,(x+(externalVal+cos(y)))),min(mod(noise(tan(y),y),x),(sin(sin(x))*noise((audio(y,externalVal)+(mod(externalVal,externalVal)-y)),x)))),(externalVal-(x*externalVal)))*y)*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((x*y)),(externalVal/y)),sin(((x/(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(audio(x,externalVal),(y/x)),min((x+y),externalVal)))+audio((min(externalVal,x)-(pow(max(y,externalVal),externalVal)*x)),externalVal))",
            "g": "mod(y,cos((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(cos((x*y)),sin(externalVal)),cos((sin(x)-y)))",
            "b": "(audio(externalVal,noise(tan(mod(x,externalVal)),noise((x+x),externalVal)))+audio((max(externalVal,x)-(noise(max(externalVal,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,((externalVal-y)/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(pow(noise(min(y,pow((x-min(externalVal,y)),y)),y),min(cos(max(noise(cos(y),min((min(externalVal,externalVal)/mod(x,x)),externalVal)),audio(x,mod(x,min(x,cos(x)))))),(audio(externalVal,cos((min((max(cos(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),(sin(tan(y))+(min(x,x)/max(tan(externalVal),x))))))+x),x)*x)))*y))),y)",
            "g": "audio(cos(cos(externalVal)),min(max(sin(noise(externalVal,max(x,pow(y,x)))),y),cos(pow(tan((externalVal+y)),((externalVal+externalVal)-x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "tan(audio(noise(min(y,pow((x+tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((noise((min(tan(cos(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),noise(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/max(max(externalVal,min(cos(((min(x,max(audio(cos(y),y),min(cos(externalVal),min(sin(mod(cos(externalVal),tan(max(y,audio((externalVal+y),y))))),externalVal))))+x)/audio(((cos(y)/(externalVal+mod(x,pow(audio(externalVal,y),y))))*noise(externalVal,pow(externalVal,externalVal))),((externalVal/externalVal)*(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max((noise(externalVal,max(x,audio(y,x)))/externalVal),y),sin(pow(max((externalVal+y),noise(sin(y),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow(x,min(externalVal,externalVal)),externalVal)",
            "b": "min(y,y)",
            "g": "min(y,pow(x,cos(audio(noise(tan((x*externalVal)),sin(externalVal)),(min(sin(((y+tan(y))-externalVal)),(x+x))-tan((externalVal+(pow(min((cos((mod(pow(externalVal,cos((externalVal-externalVal))),min((x+(tan(externalVal)-tan(cos(audio(sin(y),(max(((y+y)-max(mod(y,cos(audio(min(sin((y*y)),pow((externalVal/externalVal),(x*x))),noise(x,x)))),min(y,((sin((max(externalVal,externalVal)+x))/(y/((x/x)+audio(externalVal,y))))*externalVal)))),x)/tan(tan((audio(x,min(min(externalVal,externalVal),externalVal))/externalVal))))))))),tan(x)))/audio(y,noise(audio(sin((x*externalVal)),externalVal),externalVal))))/(externalVal-(x*sin(mod(x,y))))),min(audio(externalVal,externalVal),min(sin(x),(x-externalVal)))),audio(mod(pow((y+sin(externalVal)),y),externalVal),mod((x/(x/sin(mod(externalVal,y)))),(x*sin(externalVal)))))+externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(noise(y,pow((x-max(externalVal,y)),y)),y),min(cos(pow(x,externalVal)),sin(audio(externalVal,cos((min((max(tan(sin(min(y,(x*(x+y))))),mod(x,min(audio(y,mod(min(externalVal,externalVal),min(externalVal,cos(externalVal)))),((cos(x)/y)+(min(x,x)/noise(max(externalVal,min(cos(((min(x,max(audio(tan(y),y),max(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))*x),x)-x)))))))",
            "g": "audio(max(sin(externalVal),y),min(max(cos(noise(externalVal,noise(x,mod(cos(x),y)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "noise(x,y)",
            "g": "audio(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow(tan((x*y)),cos(externalVal)),cos(((x/(x-y))/externalVal)))",
            "b": "(audio(externalVal,pow(tan(audio(x,externalVal)),min((x+y),externalVal)))+audio((min(externalVal,x)-(mod(sin(x),y)-x)),externalVal))",
            "g": "mod(y,sin((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(audio(x,noise(externalVal,externalVal)))",
            "b": "max(x,y)",
            "g": "noise(y,mod(x,cos(audio(min(cos((x*externalVal)),cos(externalVal)),(min(sin(((x*tan(y))-externalVal)),(x+x))-tan((externalVal+(audio(min((tan(sin(mod(min(externalVal,tan((externalVal*externalVal))),min((x+(max(externalVal,(externalVal+externalVal))*min(sin(audio((y/y),(max(((y+y)-max(pow(y,tan(audio(min(sin((y/externalVal)),pow((externalVal/externalVal),(x*x))),noise(x,x)))),max(y,(sin(cos((max(externalVal,externalVal)+x)))*externalVal)))),x)/tan(tan((audio(x,min(noise(externalVal,externalVal),externalVal))/externalVal)))))),externalVal))),cos(x)))))/(externalVal+(y/sin(mod(x,y))))),min(pow(externalVal,externalVal),min(sin(y),(x*externalVal)))),audio(mod(audio((y+cos(externalVal)),y),externalVal),mod((x*(x/cos(mod(externalVal,y)))),(x/cos(externalVal)))))+externalVal))))))))"
          }
        }
      ],
      "timestamp": "22h:48m:35s"
    },
    {
      "generation": 4,
      "ascendantID": "pr4yik83-psq4-81p9-hobo-ohzn77s3aah3",
      "id": "64376jcs-etkl-1v58-x3cv-k3vld6prizot",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((x*y)),(externalVal/y)),cos(((x/(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(audio(x,externalVal),(externalVal/x)),min((x+y),externalVal)))+audio((min(externalVal,x)-(noise(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,sin((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((y*y)),(externalVal/y)),tan(noise(y,y)))",
            "b": "((externalVal/externalVal)+pow((min(externalVal,x)-(min(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,(mod(cos(x),y)/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+(x-y))",
            "b": "((x+audio((x+tan(externalVal)),y))+externalVal)",
            "g": "((pow(pow(audio(externalVal,(x+(externalVal+sin(y)))),cos(mod(sin(sin(y)),x))),sin((externalVal-externalVal)))-y)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "tan(audio(min(noise(y,mod((x+tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((max((min(max(cos(max(x,(x/(x+y)))),((cos(x)/x)+max((externalVal-min(x,externalVal)),noise(y,tan(min((y+x),tan(max(y,mod(cos(pow((externalVal+x),mod(externalVal,noise(x,sin(y))))),y))))))))),noise(x,min(pow(externalVal,pow(tan(externalVal),noise(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/cos(max(externalVal,min(cos(((min(x,min(audio(cos(y),y),min(tan(externalVal),min(sin(mod(cos(externalVal),tan(max(y,audio((externalVal+y),y))))),externalVal))))+x)/audio(((cos(externalVal)/(externalVal+mod(x,pow(audio(externalVal,y),y))))*min(externalVal,pow(externalVal,externalVal))),((externalVal/externalVal)*(y+x))))),x))))))))-x),x)-x)))/x))))",
            "g": "audio(tan(((externalVal-externalVal)/externalVal)),min(max(sin(noise(externalVal,max(x,pow(y,x)))),y),sin(pow(min((externalVal+y),mod(sin(y),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+sin(y))",
            "b": "((x+audio((x+tan(externalVal)),y))+externalVal)",
            "g": "((noise(mod(audio(externalVal,(x+(externalVal-sin(y)))),max(pow(((externalVal/x)/y),x),(sin((x/mod(((max(x,x)*tan(externalVal))-sin(noise(x,mod(sin(x),y)))),x)))/min((audio(y,y)+(mod(externalVal,externalVal)-y)),x)))),(externalVal-(x-externalVal)))*y)*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(mod(noise(y,pow((x+max(externalVal,y)),y)),y),noise(cos(audio(x,externalVal)),cos(audio(externalVal,cos((min((max(max(sin(min(y,(y*(x+x)))),(((x/externalVal)/y)-min((externalVal*max(y,externalVal)),noise(externalVal,max(min((y+x),tan(max(x,pow(sin(pow((externalVal-x),noise(externalVal,min(x,cos(y))))),y)))),sin(cos(externalVal))))))),mod(x,min(audio(y,audio(min(externalVal,externalVal),min(externalVal,cos(externalVal)))),((cos(x)/y)+sin(noise(y,x))))))-x),x)-x)))))))",
            "g": "pow(max(sin(externalVal),y),min(max(cos(noise(externalVal,mod(x,mod(cos(x),y)))),y),cos(pow(max((externalVal+x),noise((externalVal/externalVal),externalVal)),pow((x/x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(max((x-y),externalVal),noise(y,y)),cos((sin(x)*y)))",
            "b": "(audio(externalVal,mod(max(audio(x,externalVal),(externalVal*x)),noise((x+x),externalVal)))+audio((max(externalVal,x)+(noise((externalVal/y),y)-x)),externalVal))",
            "g": "min(y,(min((externalVal+y),noise((externalVal-externalVal),externalVal))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,tan((min((max(tan(sin(min(y,(y/(x-x))))),noise(x,min(audio(y,audio(max(externalVal,externalVal),max(externalVal,cos(externalVal)))),(sin(tan(y))+(noise(y,y)/min(tan(externalVal),x))))))-x),y)*x)))*x))))",
            "g": "audio(sin(cos(externalVal)),min(max((noise(externalVal,max(x,audio(y,x)))/externalVal),y),sin(pow(max((externalVal+y),noise(sin(externalVal),externalVal)),mod((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(max((x*y),externalVal),(externalVal*y)),sin(((x/(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(audio(y,externalVal),(y/x)),min((x+y),externalVal)))+audio((max(externalVal,x)*(mod(tan(y),y)*x)),externalVal))",
            "g": "mod(y,cos((externalVal*y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+(y/(x-y)))",
            "b": "((x+audio(sin(cos(externalVal)),y))+externalVal)",
            "g": "((noise(audio(pow(externalVal,(x+(externalVal+sin(y)))),min(mod(noise(max(y,externalVal),y),x),(cos(sin(x))-noise((audio(y,externalVal)+(mod(externalVal,externalVal)-y)),x)))),(externalVal*(x*externalVal)))*y)*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+max(y,y))",
            "b": "((x+audio((x+sin(x)),y))-externalVal)",
            "g": "((mod(mod(audio(externalVal,(x+(externalVal-sin(y)))),max(noise(sin(cos(y)),x),(min(x,audio(y,x))/noise((audio(y,y)+(mod(externalVal,externalVal)-y)),x)))),(externalVal-(x*externalVal)))/y)*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(sin((x*y)),(externalVal/y)),cos(((x/(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(audio(y,externalVal),(externalVal/x)),min((x+y),externalVal)))+pow((min(externalVal,x)-(min(max(y,externalVal),y)-x)),y))",
            "g": "mod(y,sin((externalVal+externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(x,noise(externalVal,externalVal)))",
            "b": "max(x,y)",
            "g": "noise(y,mod(x,cos(audio(min(cos((x*externalVal)),cos(externalVal)),(min((((x*tan(y))-externalVal)/x),(x+x))-tan((externalVal+(audio(min((tan(sin(mod(min(externalVal,max((externalVal*externalVal),cos(x))),min((x-(max(externalVal,(externalVal+externalVal))-min(sin(audio((y/y),(max(((y+y)+min(audio(y,tan(audio(min(sin((y/externalVal)),pow(sin(externalVal),(x*x))),noise(x,x)))),max(y,(sin(cos((max(externalVal,externalVal)-x)))*externalVal)))),x)/tan(tan((audio(x,min(noise(externalVal,externalVal),externalVal))*externalVal)))))),externalVal))),tan(x)))))/(externalVal+(y/sin(mod(x,externalVal))))),noise(mod(externalVal,externalVal),min(sin(y),(x*externalVal)))),audio(mod(audio((y+cos(externalVal)),y),externalVal),mod((x/(x*sin(mod(externalVal,y)))),(x/sin(externalVal)))))+externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(pow(min(min(y,pow((x+min(externalVal,y)),y)),y),min(cos(max(noise(cos(y),min(sin(min(externalVal,externalVal)),externalVal)),audio(x,mod(x,min(x,tan(x)))))),(audio(externalVal,cos((min((max(cos((min(y,sin(x))/min(y,tan((x*(audio(externalVal,min(x,pow(cos(y),y)))/audio(audio(max(x,audio(cos(x),noise(audio(mod(x,x),audio(mod(y,pow((audio(y,sin((sin(x)/y)))-(cos(noise(externalVal,audio(y,y)))/mod(externalVal,externalVal))),y)),max(x,(x+y)))),min(y,(x*((sin(externalVal)-y)*cos(min(cos((x-x)),x)))))))),y),externalVal))))))),mod(x,min(audio(y,pow(min(y,externalVal),noise(externalVal,sin(externalVal)))),(sin(tan(y))+(min(x,x)/max(max(externalVal,min(sin(((noise(x,max(audio(tan(x),y),max(cos(externalVal),noise(cos(mod((externalVal/tan(pow((x/externalVal),tan(y)))),tan(max(y,audio((externalVal+y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+mod(x,mod(audio(externalVal,y),y))))*noise(externalVal,min(externalVal,externalVal))),((externalVal/externalVal)*(y+x))))),x)),x))))))+x),y)*x)))*y))),y)",
            "g": "audio(cos(cos(externalVal)),min(max(cos(mod(externalVal,max(x,pow(y,x)))),y),cos(pow(cos((externalVal+y)),((externalVal+externalVal)-x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow(x,max(externalVal,externalVal)),externalVal)",
            "b": "min(y,y)",
            "g": "min(y,mod(x,cos(audio(noise(tan((x/externalVal)),(externalVal/x)),(min(sin(((y+tan(y))-externalVal)),(x+x))-tan((externalVal+(pow(min((cos((mod(pow(externalVal,cos((externalVal-externalVal))),min((x+(tan(externalVal)*tan(cos(audio(sin(y),(max(((y+y)*tan(mod(x,cos(audio(min(sin((y/externalVal)),pow((externalVal*externalVal),(x*x))),noise(x,x)))))),x)/cos(tan((audio(x,min(max(externalVal,externalVal),externalVal))/externalVal))))))))),tan(x)))/audio(y,noise(audio(sin((x*externalVal)),externalVal),externalVal))))/(externalVal-(x-(pow(x,externalVal)/x)))),min(audio(externalVal,externalVal),min(sin(y),(x-externalVal)))),audio(mod(mod((y-(y/(x-(y/max(externalVal,externalVal))))),y),externalVal),mod((x/(x/sin(pow(externalVal,y)))),(x*sin(externalVal)))))-externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "tan(mod(noise(min(y,pow((x+max(externalVal,y)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((min(max(sin(min(y,(x/(x+y)))),((cos(x)/y)-max((externalVal*max(y,externalVal)),noise(y,cos(min((y+x),cos(tan(x)))))))),mod(x,min(audio(y,audio(max(externalVal,externalVal),max(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(min(externalVal,max(tan(((noise(x,tan(audio(tan(y),y)))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))-noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(y)),min(tan((noise(externalVal,cos(x))/externalVal)),sin(pow(max((externalVal+y),noise((y*externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "tan(pow(noise(max(y,pow((x+tan(externalVal)),y)),y),noise(tan(pow(x,externalVal)),(audio(externalVal,cos((noise((min(tan(cos(min(y,(x/(x+y))))),mod(x,min(audio(y,pow(max(externalVal,externalVal),noise(externalVal,tan(externalVal)))),((tan(y)/y)+(min(x,x)/max(max(externalVal,min(cos(((min(x,tan(audio(cos(y),y)))+x)*pow(((cos(y)/(externalVal+mod(x,mod(audio(externalVal,y),y))))-noise(externalVal,pow(externalVal,externalVal))),(sin(externalVal)*(y+x))))),x)),x))))))-x),x)+x)))/y))))",
            "g": "audio(tan(cos(externalVal)),min(max((noise(externalVal,max(x,audio(y,x)))/externalVal),y),sin(pow(max((externalVal+y),noise(sin(y),externalVal)),audio(sin(x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow(tan((x+y)),(externalVal*y)),min(y,y))",
            "b": "(audio(externalVal,pow(max(pow(y,externalVal),sin(y)),min((x+y),externalVal)))+audio((noise(externalVal,x)-(y/(x+y))),externalVal))",
            "g": "pow(x,((externalVal-externalVal)/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow(x,min(externalVal,externalVal)),externalVal)",
            "b": "noise(y,y)",
            "g": "min(y,pow(x,cos(audio(noise(max((x*externalVal),((x*mod(externalVal,externalVal))-noise(y,(x*x)))),sin(externalVal)),(min(sin(((y+cos(y))+externalVal)),(x+x))-tan((y+(mod(min((cos((mod(pow(externalVal,cos((externalVal-externalVal))),min((x+(tan(externalVal)-tan(cos(audio(sin(y),sin(max(((y-y)-max(mod(y,tan(pow(min(cos((y*y)),pow((externalVal*externalVal),(x*x))),noise(x,x)))),min(y,((sin((max(externalVal,externalVal)+x))/(y/((x/x)+audio(externalVal,y))))*externalVal)))),x))))))),cos(x)))/audio(y,mod(audio(sin((y*y)),externalVal),y))))/(externalVal-(x*cos(pow(x,externalVal))))),min(audio(externalVal,externalVal),min((y*externalVal),(x-externalVal)))),audio(mod(pow((y+sin(externalVal)),y),externalVal),mod((x/(x/(mod(externalVal,y)/x))),(x*sin(externalVal)))))+externalVal))))))))"
          }
        }
      ],
      "timestamp": "22h:48m:38s"
    },
    {
      "generation": 5,
      "ascendantID": "64376jcs-etkl-1v58-x3cv-k3vld6prizot",
      "id": "m2subfs7-jeyo-zq2t-0hss-uxkt64unn1kn",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((x*y)),(externalVal/y)),cos(((x/(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(audio(x,externalVal),(externalVal/x)),min((x+y),externalVal)))+audio((min(externalVal,x)-(noise(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,sin((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(mod(min(noise(y,pow((x+min(externalVal,y)),y)),y),min(tan(max(noise(tan(y),min(sin(max(externalVal,externalVal)),externalVal)),audio(x,mod(x,min(x,tan(x)))))),(audio(externalVal,sin((min((max(cos((min(y,sin(x))/noise(y,tan((x*(audio(externalVal,min(x,pow(cos(y),y)))/audio(audio(min(x,audio(cos(x),noise(audio(mod(x,x),audio(mod(y,pow((audio(y,cos((sin(x)/y)))-(cos(noise(externalVal,audio(y,y)))/mod(externalVal,externalVal))),y)),tan(x))),min(y,(x*(((externalVal/y)-y)*cos(min(cos((x-x)),x)))))))),y),externalVal))))))),mod(x,min(audio(y,pow(min(y,externalVal),noise(externalVal,(externalVal/noise(tan(x),externalVal))))),(sin(tan(y))+(min(x,x)/max(max(externalVal,min(sin(((noise(x,max(audio(tan(x),y),max(cos(externalVal),noise(tan(mod(cos(externalVal),min(max(y,audio((externalVal+y),y)),(y/externalVal)))),externalVal))))+x)/audio(((tan(y)/(externalVal-mod(x,noise(audio(externalVal,y),y))))*max(externalVal,min(externalVal,y))),((externalVal/externalVal)*(y-x))))),x)),x))))))+x),x)*x)))*y))),y)",
            "g": "audio(cos(cos(externalVal)),audio(tan(cos(externalVal)),max(max((noise(externalVal,tan(x))/externalVal),y),sin(pow(max((externalVal+x),min((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(max((y*y),externalVal),(externalVal-y)),cos((min(y,x)*y)))",
            "b": "(audio(externalVal,pow(tan(audio(y,externalVal)),audio(x,(audio(x,sin(externalVal))+y))))+pow((max(externalVal,x)*(mod(cos(y),y)-y)),y))",
            "g": "mod(y,pow(max((externalVal+y),noise(sin(y),externalVal)),pow(sin(x),((externalVal+externalVal)*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,x)",
            "b": "tan(mod(noise(min(y,pow((x+tan(externalVal)),y)),y),min(cos(pow(x,externalVal)),(audio(externalVal,tan((noise((noise(cos((min(y,(x/(x+y)))*min(y,tan((x*(audio(externalVal,max(x,pow((y/externalVal),y)))-audio(audio(min(y,audio(sin(x),min(audio(audio(x,x),audio(mod(y,noise((pow(x,cos((sin(x)/y)))-sin(sin(pow(externalVal,audio(externalVal,x))))),y)),tan(x))),min(externalVal,(x-((sin(externalVal)*y)*tan(max(sin((x*x)),x)))))))),y),externalVal))))))),mod(x,min(audio(y,audio(min(y,y),max(externalVal,tan(externalVal)))),((cos(x)/y)+(max(x,x)/min(min(externalVal,max(tan(((noise(x,tan(pow(tan(y),y)))+x)/audio(((tan(y)/(externalVal+mod(x,mod(pow(externalVal,y),y))))-noise(externalVal,mod(externalVal,externalVal))),((externalVal*externalVal)-(y+x))))),x)),x))))))*x),y)*x)))/x))))",
            "g": "audio(tan(cos(y)),min(tan((noise(externalVal,cos(x))*y)),(pow(max((externalVal+y),noise((y*externalVal),externalVal)),pow((x*x),((externalVal+externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(x,min(externalVal,externalVal)))",
            "b": "noise(y,y)",
            "g": "min(y,mod(x,cos(audio(noise(max((x/y),((x-mod(externalVal,externalVal))-noise(y,(x/x)))),sin(externalVal)),(min(cos(((x+cos(y))+externalVal)),(x+x))-tan((externalVal+(mod(min((sin((pow(pow(externalVal,cos((externalVal-externalVal))),min((x+(tan(externalVal)-tan(cos(audio((y/externalVal),(cos(((y-y)-max(mod(y,max(audio(min(sin(sin(y)),pow((externalVal*externalVal),(x*x))),noise(x,x)),x)),noise(y,((sin((max(externalVal,externalVal)+x))/(y*((x/x)-audio(externalVal,y))))*externalVal)))))/tan(tan((pow(x,min(min(externalVal,externalVal),externalVal))/externalVal))))))))),cos(x)))/audio(y,mod(audio(sin((y*y)),externalVal),y))))/(externalVal-(x*tan(mod(x,y))))),min(pow(externalVal,externalVal),min((x*externalVal),(x+externalVal)))),audio(pow(audio((y+sin(externalVal)),y),externalVal),noise((x/(x/(mod(externalVal,y)/x))),(x-sin(externalVal)))))+externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "max(pow(noise(tan(y),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((noise((min(max(cos(min(y,(y*(x+y)))),((sin(x)*y)+max((externalVal*max(x,externalVal)),min(externalVal,cos(max((y+y),max(max(x,mod(cos(pow((externalVal-x),noise(externalVal,mod(x,sin(y))))),y)),(sin(externalVal)/externalVal)))))))),mod(x,max(min(y,externalVal),externalVal)))-x),x)+x)))/y))),externalVal)",
            "g": "audio(tan(cos(externalVal)),min(noise(externalVal,pow(x,pow(cos(x),y))),sin(pow(min((externalVal+y),min(sin(y),externalVal)),audio(sin(x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(noise(min(y,audio((x-tan(externalVal)),externalVal)),y),min(tan((cos(sin(y))-audio(x,(pow(y,cos(externalVal))-y)))),(audio(externalVal,tan((min((max(tan(sin(min(y,(y/(x*x))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),tan(externalVal))),(sin(max(x,max(externalVal,x)))+(noise(y,y)/min(tan(externalVal),x))))))-x),y)-x)))*x))))",
            "g": "audio(sin(cos(externalVal)),max(max((noise(externalVal,max(x,audio(y,x)))/externalVal),y),sin(pow(tan((externalVal+y)),mod((x-x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(min(min(y,pow((x+min(externalVal,y)),y)),y),min(tan(max(mod(tan(y),min(sin(min(externalVal,externalVal)),externalVal)),audio(x,mod(x,min(x,tan(x)))))),(audio(externalVal,cos((min((min(sin((min(y,sin(x))*(x+tan(externalVal)))),mod(x,min(audio(y,pow(max(externalVal,externalVal),noise(externalVal,sin(externalVal)))),(sin(tan(y))+(min(x,x)/max(max(externalVal,min(sin(((noise(x,max(audio(cos(y),y),max(cos(externalVal),noise(tan(mod((externalVal/tan(audio((x/externalVal),tan(y)))),tan(max(y,audio((externalVal+y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+pow(x,mod(audio(externalVal,y),y))))*noise(externalVal,min(externalVal,y))),((externalVal/externalVal)-(y+x))))),x)),x))))))+x),y)*x)))/y))))",
            "g": "audio(cos(sin(y)),noise(max(cos(mod(externalVal,min(x,pow(y,x)))),y),cos(min((audio(y,externalVal)+(pow(externalVal,externalVal)-y)),x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "cos(audio(min(noise(y,pow((x+max(externalVal,y)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,tan((max((min(max(tan(max(x,(x/(x-y)))),((cos(x)/x)+max((externalVal+min(y,externalVal)),noise(y,tan(max((y+x),tan(tan(x)))))))),noise(x,min(pow(externalVal,pow(tan(externalVal),noise(externalVal,cos(externalVal)))),((cos(((min(x,max(audio(tan(y),y),noise(sin(externalVal),mod(sin(mod(sin(externalVal),max(max(y,audio((externalVal-y),y)),(y*externalVal)))),y))))-x)/audio(((cos(y)-(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),(sin(externalVal)-(y-x)))))/y)+(noise(y,x)/sin(tan(externalVal)))))))-x),x)-x)))/x))))",
            "g": "audio(tan(((externalVal/externalVal)*externalVal)),min(max((noise(externalVal,max(x,pow(y,x)))/externalVal),y),sin(pow(min((externalVal+y),mod(sin(y),externalVal)),audio(pow((x/x),audio(y,externalVal)),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "tan(pow(mod(noise(y,pow((x-max(externalVal,y)),y)),y),min(max(pow(x,externalVal),x),(pow(externalVal,max(audio(x,externalVal),(externalVal/x)))/x))))",
            "g": "audio(tan(cos(externalVal)),noise(max(sin(noise(externalVal,cos(x))),y),cos(pow(max((externalVal+y),noise(noise(y,sin((externalVal-externalVal))),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+sin(y))",
            "b": "((x+audio((x+max(externalVal,y)),y))+y)",
            "g": "((noise(mod(audio(externalVal,(x+(externalVal-sin(y)))),tan(pow(((externalVal/x)/y),x))),(externalVal-(x-externalVal)))*y)*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(max((x-y),externalVal),noise(y,y)),cos(noise(y,y)))",
            "b": "(audio(externalVal,noise(max(audio(x,externalVal),(externalVal*x)),noise(audio(tan(y),y),externalVal)))+audio((max(externalVal,x)+(noise((externalVal/y),y)*x)),externalVal))",
            "g": "min(y,(min((externalVal+y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x)))))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((y*y)),(externalVal/y)),tan(noise(y,y)))",
            "b": "((externalVal/externalVal)+pow(((externalVal+x)-(min(min(externalVal,externalVal),y)+x)),externalVal))",
            "g": "mod(y,sin(mod(tan(cos(y)),y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "tan(audio(min(noise(y,mod((x+tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((max((min(tan(cos(min(x,(x/(x+x))))),min(x,max(pow(externalVal,pow(tan(externalVal),mod(externalVal,cos(externalVal)))),((max(y,min(externalVal,x))/y)+((x/(x+y))/tan(max(externalVal,min(cos(((min(x,max(audio(cos(y),y),min(tan(externalVal),max(sin(mod(cos(externalVal),tan(min(y,audio((externalVal+y),x))))),externalVal))))+x)/audio(((cos(externalVal)/(externalVal+mod(x,pow(audio(externalVal,y),y))))*min(externalVal,mod(externalVal,externalVal))),((externalVal*y)*(y+x))))),x))))))))*x),x)-x)))/x))))",
            "g": "audio(tan(sin((externalVal-externalVal))),min(max(sin(mod(externalVal,pow(x,((externalVal-externalVal)/externalVal)))),y),sin(mod(noise((externalVal-x),mod(sin(y),externalVal)),pow((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(audio(x,min(externalVal,externalVal)),externalVal)",
            "b": "noise(y,y)",
            "g": "min(y,pow(x,tan(audio(noise(max((x*externalVal),((x*mod(externalVal,externalVal))-noise(y,(x-x)))),sin(externalVal)),(min(sin(((y+cos(y))+externalVal)),(x+x))+tan((y-(mod(min((cos((mod(pow(externalVal,cos((externalVal-externalVal))),min((x+(tan(externalVal)-tan(cos(pow((y/externalVal),(max(((y-y)-max(mod(y,tan(pow(min(sin((y*externalVal)),pow((externalVal*externalVal),(x*x))),noise(x,x)))),min(y,((cos((max(externalVal,externalVal)+x))/(y/((x/x)-audio(externalVal,y))))*externalVal)))),x)/(externalVal-externalVal))))))),cos(x)))/audio(y,mod(pow(sin((y*y)),externalVal),y))))/(externalVal-(x*cos(pow(x,externalVal))))),max(audio(externalVal,externalVal),min((y*externalVal),(x*externalVal)))),audio(mod(mod((y+sin(externalVal)),y),externalVal),mod(sin(x),(x*sin(externalVal)))))+externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(audio(x,noise(externalVal,externalVal)))",
            "b": "min(y,y)",
            "g": "noise(y,noise(x,tan(audio(min(sin((x*externalVal)),cos(externalVal)),(min((((x/tan(y))-externalVal)/x),(x+x))-max((externalVal+(pow(min((tan(cos(mod(min(externalVal,max((externalVal/externalVal),cos(x))),max((x+(max(externalVal,(externalVal+externalVal))-min(sin(audio(sin(y),(min(((y+y)+min(audio(y,cos(audio(noise(cos((y*externalVal)),mod(cos(externalVal),(x*x))),noise(x,x)))),max(y,(sin(cos((max(externalVal,externalVal)-x)))*externalVal)))),x)*tan(tan((audio(x,mod(noise(externalVal,externalVal),externalVal))*externalVal)))))),externalVal))),tan(x)))))/(externalVal+(y/sin(mod(x,externalVal))))),noise(mod(externalVal,externalVal),min(sin(y),(x-externalVal)))),audio(mod(pow((y+cos(externalVal)),externalVal),externalVal),mod((x/(x*sin(mod(externalVal,y)))),cos(x))))+externalVal)),tan(audio((mod((x*sin(y)),y)+(y+mod(min(mod(pow(externalVal,x),((y*x)*externalVal)),x),cos(x)))),x))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(audio(x,max(externalVal,externalVal)),externalVal)",
            "b": "max(y,y)",
            "g": "mod(y,mod(x,cos(audio(noise(tan(sin(x)),(externalVal*x)),(min(sin(((y+tan(y))-externalVal)),(x+x))-tan((externalVal+(pow(max((cos(sin(pow(pow(externalVal,cos((externalVal*externalVal))),min((x+(tan(externalVal)*tan(sin(audio((y/y),(max(((y+y)*tan(mod(x,cos(audio(min(sin((y/externalVal)),pow((externalVal*externalVal),(x*x))),noise(x,x)))))),x)/cos(tan((audio(x,min(max(externalVal,externalVal),externalVal))/externalVal))))))))),cos(x)))))*(y+(x+(pow(x,externalVal)/x)))),min(audio(externalVal,externalVal),min(sin(y),(x-externalVal)))),audio(pow(mod((y+(y*(x-(y/max(externalVal,externalVal))))),y),externalVal),mod((x/(x/tan(audio(externalVal,y)))),(x*cos(externalVal)))))*externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((tan(tan((min(y,(x/(x+y)))*min(y,tan((x*(audio(externalVal,max(x,pow(cos(y),y)))-audio(audio(max(x,audio(sin(x),noise(pow(pow(x,y),pow(mod(y,audio((audio(y,cos(sin((x/externalVal))))-sin(sin(mod(externalVal,audio(y,y))))),y)),max(x,(x+y)))),noise(externalVal,(x-((sin(externalVal)*y)/cos(min(sin((x-x)),x)))))))),y),externalVal))))))))-x),x)*x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max((mod(externalVal,externalVal)/externalVal),y),cos(mod(max((externalVal+x),noise(sin(y),externalVal)),pow((x*x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(noise(noise(max(y,pow((x+min(externalVal,y)),y)),y),noise(tan(pow(x,externalVal)),(audio(externalVal,cos((min((min(max(sin(min(y,(x/(x-y)))),((cos(x)/y)*max((externalVal*max(x,externalVal)),noise(y,sin(min((y+x),tan(tan(x)))))))),mod(x,noise(audio(y,audio(max(externalVal,externalVal),tan(externalVal))),((cos(x)/y)+(min(x,x)*min(max(externalVal,max(tan(sin((mod(x,tan(audio(cos(y),y)))+x))),x)),x))))))-x),x)-x)))/y))),externalVal)",
            "g": "audio(tan(cos(y)),noise(max((noise(externalVal,cos(x))*externalVal),y),sin((externalVal*y))))"
          }
        }
      ],
      "timestamp": "22h:48m:48s"
    },
    {
      "generation": 6,
      "ascendantID": "m2subfs7-jeyo-zq2t-0hss-uxkt64unn1kn",
      "id": "uykqfoj7-ilro-5z64-mpwp-63tjmttn48e8",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "tan(audio(min(noise(y,mod((x+tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((max((min(tan(cos(min(x,(x/(x+x))))),min(x,max(pow(externalVal,pow(tan(externalVal),mod(externalVal,cos(externalVal)))),((max(y,min(externalVal,x))/y)+((x/(x+y))/tan(max(externalVal,min(cos(((min(x,max(audio(cos(y),y),min(tan(externalVal),max(sin(mod(cos(externalVal),tan(min(y,audio((externalVal+y),x))))),externalVal))))+x)/audio(((cos(externalVal)/(externalVal+mod(x,pow(audio(externalVal,y),y))))*min(externalVal,mod(externalVal,externalVal))),((externalVal*y)*(y+x))))),x))))))))*x),x)-x)))/x))))",
            "g": "audio(tan(sin((externalVal-externalVal))),min(max(sin(mod(externalVal,pow(x,((externalVal-externalVal)/externalVal)))),y),sin(mod(noise((externalVal-x),mod(sin(y),externalVal)),pow((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(audio(x,tan((x*y))))",
            "b": "noise(y,y)",
            "g": "min(y,mod(x,cos(audio(noise(tan((x*y)),sin(externalVal)),(min(sin((externalVal-externalVal)),(x+x))-tan((externalVal+(mod(noise((sin(sin(pow(mod(externalVal,cos((externalVal-externalVal))),min((x+(tan(externalVal)-max(sin(audio((y/externalVal),(cos(((y-y)-max(mod(y,tan(pow(min(sin(cos(y)),pow((externalVal*externalVal),(x*x))),noise(x,x)))),mod(y,((cos((tan(externalVal)+x))/(externalVal*((x/x)-audio(externalVal,y))))*externalVal)))))/tan(tan((pow(x,min(max(externalVal,externalVal),externalVal))/externalVal)))))),externalVal))),cos(x)))))/(externalVal-(x-cos(mod(x,externalVal))))),min(pow(externalVal,externalVal),noise((x-externalVal),(y+externalVal)))),audio(pow(audio((y+sin(y)),y),externalVal),noise((x/(x/(mod(externalVal,y)/x))),(x-sin(externalVal)))))+externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "max(pow(noise(tan(y),y),min(tan(pow(x,externalVal)),(audio(externalVal,sin((noise((min(max(cos(min(y,(y*(x+y)))),((cos(x)*y)+min((externalVal*max(x,externalVal)),min(externalVal,tan(max((y+y),max(max(x,mod(tan(mod((externalVal-x),noise(externalVal,mod(x,sin(y))))),y)),((externalVal/noise(((x-x)-mod(tan(x),x)),(audio(y,sin(audio(tan(cos(y)),((x-cos(noise(y,externalVal)))/externalVal))))*x)))/externalVal)))))))),mod(x,min(min(y,externalVal),externalVal)))+x),x)+x)))/y))),externalVal)",
            "g": "audio(tan(cos(externalVal)),min(noise(externalVal,pow(x,pow(tan(x),y))),sin(pow(min((externalVal-y),noise(sin(y),externalVal)),pow(sin(x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+sin(y))",
            "b": "((x+mod(cos(x),y))+y)",
            "g": "((noise(mod(audio(externalVal,(x+(externalVal-sin(y)))),cos(pow((cos(y)/y),x))),(externalVal-(x-externalVal)))*y)-externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(x,min(externalVal,externalVal)))",
            "b": "noise(y,y)",
            "g": "min(y,mod(x,sin(audio(noise(tan((x/y)),sin(externalVal)),(min(cos(((x+tan(externalVal))+externalVal)),(x+x))-tan((externalVal+(mod(min((cos((pow(pow(externalVal,cos((externalVal-externalVal))),min((x+(tan(externalVal)-cos(sin(audio((y/externalVal),(cos(((y*y)-max(pow(y,min(pow(min(sin((y/externalVal)),audio((externalVal*externalVal),(x*x))),noise(x,x)),x)),mod(y,((sin((max(externalVal,externalVal)+x))/(y-((x/x)-pow(externalVal,y))))*externalVal)))))/max(tan(sin(pow(x,max(min(externalVal,externalVal),externalVal)))),x))))))),cos(x)))/audio(y,noise(audio(sin((y*y)),externalVal),externalVal))))/(externalVal+(x*tan(pow(x,y))))),min(audio(externalVal,externalVal),min((y/y),(x+externalVal)))),audio(mod(audio((y+sin(externalVal)),y),externalVal),noise((x/(x/(mod(externalVal,y)/x))),(x-sin(externalVal)))))+externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(noise(y,y),(externalVal/y)),tan(noise(y,y)))",
            "b": "((externalVal/externalVal)+pow(((externalVal+x)-(noise(min(externalVal,externalVal),externalVal)+x)),externalVal))",
            "g": "mod(y,sin(mod(tan(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((tan(tan((noise(y,(x/(x+y)))/min(y,tan((x*(audio(externalVal,max(x,pow(cos(y),y)))*audio(pow(max(x,audio(cos(x),noise(audio(mod(x,x),pow(mod(y,pow((audio(y,cos(sin(sin(x))))-sin(sin(mod(externalVal,audio(y,x))))),y)),max(x,(y+y)))),mod(externalVal,(x-(((externalVal/y)*y)*cos(min(sin((x-x)),x)))))))),x),externalVal))))))))-x),x)+x)))/x))))",
            "g": "audio(tan(cos(externalVal)),noise(tan(sin(mod(externalVal,max(x,audio(y,x))))),cos(audio(max((externalVal+y),min((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(mod(min(y,pow((x-tan(externalVal)),y)),y),noise(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,audio(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),(sin(tan(x))+(min(x,x)/max(max(externalVal,min(sin(sin((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise((mod(sin(externalVal),tan(tan(y)))/externalVal),externalVal))))+x))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),tan(pow(max((externalVal+y),min((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,x)",
            "b": "cos(pow(noise(min(y,pow((x+min(externalVal,y)),y)),y),min(tan(max(pow(cos(y),min(pow(externalVal,externalVal),(y-y))),audio(x,mod(x,min(x,tan(x)))))),(audio(externalVal,cos((min((min(sin((min(y,sin(x))*(x+tan(externalVal)))),noise(x,min(audio(y,pow(max(externalVal,externalVal),mod(externalVal,sin(externalVal)))),((tan(y)/y)+(min(x,x)/max(max(externalVal,min(sin(((noise(x,max(audio(sin(x),y),max(cos(externalVal),noise(tan(mod((externalVal/tan(audio((x/externalVal),tan(y)))),tan(max(y,audio((externalVal+y),y))))),externalVal))))+x)/pow(((cos(externalVal)/(externalVal+pow(x,mod(audio(externalVal,y),y))))*min(externalVal,max(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))+x),y)*x)))/y))))",
            "g": "audio(cos(sin(y)),noise(max(tan(mod(externalVal,tan(x))),y),cos(((externalVal+externalVal)*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(tan((x-y)),noise(y,y)),cos(noise(y,y)))",
            "b": "(audio(externalVal,noise(tan(audio(x,externalVal)),noise(audio(tan(y),y),externalVal)))+audio((max(externalVal,x)+(noise((externalVal/y),y)*x)),externalVal))",
            "g": "min(y,sin(max((externalVal+y),cos(pow(min((externalVal+y),noise((externalVal/externalVal),externalVal)),audio(sin(x),((externalVal-externalVal)-x)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((x*y)),sin(externalVal)),cos(((x/(x-y))*y)))",
            "b": "(audio(externalVal,pow(min(audio(x,externalVal),(y/x)),min((x+x),externalVal)))+audio((min(externalVal,x)-(mod(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "noise(y,sin((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow(x,min(externalVal,externalVal)),externalVal)",
            "b": "noise(y,y)",
            "g": "min(y,pow(x,cos(audio(noise(max((x/y),((x-mod(externalVal,externalVal))-noise(y,(x/x)))),sin(externalVal)),(min(cos(((x+cos(y))+externalVal)),(x+x))-cos((externalVal+(mod(min((sin(sin(mod(pow(externalVal,cos((externalVal-externalVal))),min((x+(tan(externalVal)-cos(cos(audio((y*y),(max(((y-y)*max(mod(y,min(audio(min(sin(sin(y)),pow((externalVal*externalVal),(x-x))),noise(x,x)),x)),min(y,((sin((tan(externalVal)+x))/(y*(sin(x)-audio(externalVal,y))))*externalVal)))),x)/tan(tan((pow(x,min(min(externalVal,externalVal),externalVal))/externalVal))))))))),cos(x)))))/(externalVal*(x*tan(pow(x,y))))),max(pow(externalVal,externalVal),min((x*externalVal),(x+externalVal)))),audio(pow(audio((y+sin(externalVal)),y),externalVal),noise((x/(x/(mod(externalVal,y)/x))),(x-sin(externalVal)))))+externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "sin(audio(noise(noise(y,pow((x+tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,tan((max((min(max(tan(max(x,(x/(x-y)))),((cos(x)/x)+max((externalVal+min(y,externalVal)),min(y,tan(tan((y+x))))))),noise(x,min(pow(y,pow(tan(externalVal),noise(externalVal,cos(externalVal)))),((cos(((min(x,max(mod(tan(y),y),mod(sin(externalVal),mod(sin(mod(sin(externalVal),min(max(y,audio((externalVal+y),y)),(y*externalVal)))),y))))*x)*audio(((cos(y)-(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),(sin(externalVal)-(y-x)))))/y)+(min(x,x)/sin(tan(externalVal)))))))-x),x)-x)))-x))))",
            "g": "audio(cos(((externalVal/externalVal)*externalVal)),tan(max((noise(externalVal,max(x,pow(y,x)))/externalVal),y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(mod(min(y,audio((x-tan(externalVal)),externalVal)),y),min(tan((cos(sin(y))*audio(x,(pow(y,cos(externalVal))*y)))),(audio(externalVal,max((noise((tan(tan(sin(noise(y,(y/(x*x))))))+x),y)-x),min(y,(x*(pow(x,noise(x,x))/x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),max(max((noise(externalVal,tan(x))/externalVal),y),sin(pow(tan((externalVal+y)),mod((x*x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(sin(noise(y,y)),(externalVal/y)),sin(((y*(x-y))*y)))",
            "b": "(audio(externalVal,pow(min(audio(x,externalVal),(externalVal/x)),sin(y)))+pow((min(externalVal,x)+(noise(min(externalVal,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,cos(noise(externalVal,min(x,mod(y,x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(tan((x*y)),(externalVal/y)),cos(((x*(x-y))*y)))",
            "b": "(audio(externalVal,pow(max(audio(x,externalVal),sin(y)),min((x+y),externalVal)))-audio((min(externalVal,x)-(noise(max(y,externalVal),externalVal)-x)),externalVal))",
            "g": "mod(y,sin((externalVal-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(max(mod(x,externalVal),x),(mod(externalVal,tan((min((tan(tan((min(y,(x*(x+y)))*max(y,tan((x*(audio(externalVal,min(x,pow(sin(y),y)))*audio(audio(max(x,audio(cos(x),min(audio(pow(x,x),audio(mod(y,pow((mod(y,sin(sin(cos(x))))-sin(sin(mod(externalVal,audio(y,y))))),y)),max(x,(x+y)))),min(externalVal,(x-((cos(externalVal)*y)*cos(min(sin((x-x)),x)))))))),y),externalVal))))))))-x),x)-x)))/x))))",
            "g": "audio((mod(max((externalVal+y),noise((y*externalVal),externalVal)),pow((x*x),((externalVal+externalVal)-x)))/x),noise(tan(sin(mod(externalVal,max(x,audio(y,x))))),cos(pow(max((externalVal+x),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "tan(audio(max(noise(y,mod((x+tan(externalVal)),y)),y),min(tan(mod(x,externalVal)),(audio(externalVal,cos((max((min(tan(cos(min(x,(x*(x+x))))),min(x,max(pow(externalVal,pow(sin(externalVal),noise(externalVal,cos(externalVal)))),((max(y,min(externalVal,x))/y)+((x/(x+y))/tan(max(externalVal,noise(cos(((noise(x,max(audio(cos(x),y),min(tan(externalVal),max(sin(mod(cos(externalVal),tan(min(y,audio((externalVal+y),x))))),externalVal))))+x)/audio(((cos(externalVal)/(externalVal+pow(x,pow(audio(externalVal,y),y))))*min(externalVal,mod(externalVal,externalVal))),((externalVal*y)*(y+x))))),x))))))))*x),x)-x)))/x))))",
            "g": "pow(tan(sin((externalVal*y))),max(max(sin(mod(externalVal,audio(y,((externalVal*y)/y)))),y),cos(mod(noise((externalVal-x),mod(sin(externalVal),externalVal)),pow((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(tan((y*y)),(externalVal/y)),tan(noise(y,y)))",
            "b": "((externalVal/externalVal)+pow(((externalVal+x)-(max(min(y,externalVal),externalVal)+x)),externalVal))",
            "g": "mod(y,sin(noise(tan(tan(y)),externalVal)))"
          }
        }
      ],
      "timestamp": "22h:49m:15s"
    },
    {
      "generation": 7,
      "ascendantID": "uykqfoj7-ilro-5z64-mpwp-63tjmttn48e8",
      "id": "we3cpo86-olql-lmhm-9ebw-srge0g7wi2dy",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((tan(tan((noise(y,(x/(x+y)))/min(y,tan((x*(audio(externalVal,max(x,pow(cos(y),y)))*audio(pow(max(x,audio(cos(x),noise(audio(mod(x,x),pow(mod(y,pow((audio(y,cos(sin(sin(x))))-sin(sin(mod(externalVal,audio(y,x))))),y)),max(x,(y+y)))),mod(externalVal,(x-(((externalVal/y)*y)*cos(min(sin((x-x)),x)))))))),x),externalVal))))))))-x),x)+x)))/x))))",
            "g": "audio(tan(cos(externalVal)),noise(tan(sin(mod(externalVal,max(x,audio(y,x))))),cos(audio(max((externalVal+y),min((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(tan((x-y)),noise(y,y)),cos(noise(y,y)))",
            "b": "(audio(externalVal,mod(cos(audio(x,externalVal)),mod(audio(cos(y),y),externalVal)))+audio((max(externalVal,x)+(noise((externalVal*y),y)*x)),externalVal))",
            "g": "min(y,(max((externalVal+y),tan(pow(min((y+y),noise(sin(externalVal),externalVal)),audio(sin(x),((externalVal-externalVal)-x)))))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(noise(mod(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((tan(tan((mod(y,(x/(x+y)))/min(y,max((x*(pow(externalVal,max(x,pow(sin(y),y)))*audio(pow(max(x,audio(cos(x),noise(audio(mod(x,x),pow(pow(externalVal,pow((audio(y,tan(sin(sin(x))))*(cos(mod(externalVal,audio(y,x)))/mod(y,externalVal))),y)),max(x,(y+y)))),mod(externalVal,(x-((sin(externalVal)*y)*cos(min(sin((x-x)),x)))))))),y),externalVal))),pow(externalVal,(sin(tan(y))-pow(x,(mod(x,(externalVal*tan(x)))+externalVal)))))))))+x),x)+x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(tan((mod(externalVal,tan(x))/y)),cos(audio(max((externalVal+y),max((externalVal/externalVal),externalVal)),audio((externalVal+externalVal),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(min(min(y,mod((x+tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((max(tan((noise(y,(x/(x+y)))*min(y,tan((x*(audio(externalVal,max(x,pow(cos(y),y)))*audio(pow(tan(x),x),externalVal))))))),mod(max(mod(cos(y),min((noise(externalVal,externalVal)/min(x,x)),externalVal)),audio(x,mod(x,tan(y)))),y))-x),x)+x)))*x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(mod(externalVal,max(x,pow(y,y)))),y),sin(audio(max((externalVal+y),tan(tan(externalVal))),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "tan(audio(max(noise(y,mod((y-tan(externalVal)),y)),y),max(tan(mod(x,externalVal)),(audio(externalVal,cos((max((min(tan(cos(min(x,(x*(x-y))))),min(x,max(pow(externalVal,pow(cos(y),noise(externalVal,cos(externalVal)))),((max(y,min(externalVal,x))/y)+((x/(x+y))/tan(min(externalVal,noise(cos(sin((noise(x,max(audio(cos(x),y),min(tan(externalVal),max((mod(cos(externalVal),cos(noise(y,pow((externalVal+y),x))))/externalVal),externalVal))))+x))),x))))))))*x),x)*x)))-y))))",
            "g": "pow(cos(sin((externalVal*externalVal))),min(max(sin(mod(externalVal,audio(y,((externalVal*y)/y)))),y),cos(mod(noise((externalVal-x),mod(sin(externalVal),externalVal)),mod((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(tan((x-y)),noise(y,x)),cos(noise(y,y)))",
            "b": "(audio(externalVal,noise(max(pow(x,externalVal),(externalVal*x)),noise(audio(tan(y),y),externalVal)))+audio((max(externalVal,x)+(mod(cos(pow(min(pow((y/x),max(sin(noise(externalVal,externalVal)),externalVal)),audio(x,pow(y,tan(y)))),y)),audio(x,(x*y)))*x)),externalVal))",
            "g": "max(x,sin(min((externalVal+y),tan(audio(min((externalVal+y),(externalVal+externalVal)),audio(cos(x),((externalVal*externalVal)-x)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(noise(y,x),sin(externalVal)),tan(noise(y,y)))",
            "b": "((externalVal/externalVal)+pow((externalVal-y),externalVal))",
            "g": "mod(y,sin(mod(max(max(sin(mod(externalVal,audio(y,((externalVal*y)/y)))),y),tan(mod(mod((externalVal-x),mod(sin(y),externalVal)),noise((x/x),((externalVal+externalVal)-x))))),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(min(min(y,pow((x+(mod(externalVal,externalVal)*noise(x,x))),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((noise((max(tan(sin(min(y,(x*(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),noise(externalVal,cos(externalVal)))),((max(x,max(externalVal,x))/y)+(noise(x,x)/min(tan(externalVal),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(noise((externalVal/externalVal),externalVal),cos(pow(max((externalVal+y),mod((externalVal/externalVal),externalVal)),pow((x/x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(noise(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,tan((min((tan(tan((min(y,(x/(x+y)))/min(x,tan((x*(audio(externalVal,tan(x))*audio(pow(min(x,audio(cos(x),noise(audio(mod(x,x),pow(mod(externalVal,pow((audio(y,cos((sin(x)*y)))-sin(sin(mod(externalVal,audio(y,x))))),y)),max(x,(x-y)))),mod(externalVal,(x-((sin(externalVal)-y)*tan(min(sin((x-x)),x)))))))),x),externalVal))))))))-x),x)+x)))-x))))",
            "g": "audio(tan(tan(externalVal)),noise(tan((mod(externalVal,max(x,audio(y,x)))/y)),sin(audio(min((externalVal+y),min((externalVal*externalVal),externalVal)),audio((x/x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-cos(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(max(x,sin(x)))),noise(x,max(audio(y,pow(max(y,externalVal),noise(externalVal,cos(externalVal)))),((tan(y)/y)+sin(min(x,x))))))-x),x)-x)))*y))))",
            "g": "audio(tan(cos(externalVal)),min(max(cos(mod(externalVal,max(x,pow(y,x)))),y),sin(pow(min((externalVal+x),min((externalVal*externalVal),externalVal)),audio((x*x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+sin(externalVal))",
            "b": "((x+mod(cos(x),y))+y)",
            "g": "((noise(noise(audio(externalVal,(x+(externalVal*cos(externalVal)))),sin(noise((cos(y)/y),x))),(externalVal-(x-externalVal)))*y)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(mod(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((tan(tan((noise(y,(x/(x+y)))-max(y,tan((x*sin(audio(externalVal,max(x,pow(sin(y),y))))))))))-x),x)+x)))/y))),y)",
            "g": "audio(tan(sin(y)),noise(tan(cos(mod(externalVal,tan(x)))),sin((externalVal-externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "tan(mod(noise(noise(y,mod((x-tan(externalVal)),y)),y),max(tan(audio(x,externalVal)),(audio(externalVal,cos((min((tan(cos(sin(noise(y,sin(x)))))-x),x)+x)))/x))))",
            "g": "audio(tan(cos(externalVal)),noise(tan(sin(mod(externalVal,max(x,audio(y,x))))),cos(audio(min((externalVal+y),min((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(max(mod(x,externalVal),x),(mod(externalVal,cos((min((tan(tan((max(y,(x*(x+y)))*max(y,tan((x*(audio(externalVal,min(x,pow(sin(y),y)))*audio(audio(max(x,audio(cos(x),min(pow(pow(x,x),audio(mod(y,pow((mod(y,(sin(cos(x))/y))-sin(sin(noise(externalVal,audio(y,y))))),y)),max(x,(y+y)))),noise(externalVal,(x-((sin(externalVal)-y)*cos(noise(sin((x-x)),x)))))))),y),externalVal))))))))-x),x)-x)))/x))))",
            "g": "audio((pow(tan((externalVal+y)),pow((x/x),((externalVal+externalVal)-x)))/x),(noise(externalVal,tan(x))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(pow(min(y,pow((x-cos(externalVal)),y)),y),noise(max(pow(x,externalVal),x),(audio(externalVal,sin((min((min(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,audio(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),(sin(max(y,cos(externalVal)))+(min(x,x)/max(max(externalVal,min(sin(cos((noise(x,max(audio(tan(y),y),min(cos(externalVal),min((mod(sin(externalVal),tan(tan(y)))/externalVal),externalVal))))-x))),x)),x))))))-x),x)+x)))*x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(min((externalVal+y),min((y/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,mod((x-tan(externalVal)),y)),y),noise(cos(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x-x))))),mod(x,max(pow(y,mod(min(externalVal,externalVal),min(externalVal,tan(externalVal)))),((tan(y)/y)+(min(x,x)*min(max(externalVal,min(tan(sin((min(x,max(audio(tan(y),y),noise(tan(externalVal),min(sin(mod(sin(externalVal),tan(tan(y)))),externalVal))))+x))),x)),x))))))*x),x)-x)))/y))))",
            "g": "audio(cos(audio(y,x)),min(tan(sin(mod(externalVal,max(x,pow(y,x))))),sin(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal-externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "tan(mod(noise(noise(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(x,(x/(x+y))))),mod(x,noise(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),(sin(tan(y))+(max(x,x)/min(tan(externalVal),x))))))-x),x)-x)))/x))))",
            "g": "audio(max(cos(externalVal),y),min(max(sin(noise(externalVal,tan(x))),y),cos(pow(max((externalVal+y),mod((externalVal/externalVal),externalVal)),audio((x*x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x-tan(externalVal)),externalVal)),y),min(tan((cos(sin(y))*audio(x,(pow(y,cos(externalVal))*y)))),(audio(externalVal,max((mod((tan(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))-audio(audio(max(x,audio(sin(x),noise(pow(noise(x,x),pow(pow(y,pow((audio(x,((sin(x)/y)/y))+(sin(noise(externalVal,pow(y,x)))*mod(externalVal,externalVal))),y)),max(x,(x+y)))),noise(externalVal,(x-((sin(externalVal)*y)*max(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*max(y,min((min(externalVal,x)-externalVal),externalVal))))/y)))))))))+x),y)-x),min(y,(x/(pow(x,noise(x,x))/x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(max((noise(externalVal,max(x,audio(y,x)))/externalVal),x),cos(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(tan((y*y)),(externalVal/y)),tan(noise(y,y)))",
            "b": "((externalVal/externalVal)+pow(((externalVal+x)-(max(min(y,externalVal),externalVal)+x)),externalVal))",
            "g": "mod(y,sin(noise(tan(tan(y)),externalVal)))"
          }
        }
      ],
      "timestamp": "22h:49m:38s"
    },
    {
      "generation": 8,
      "ascendantID": "we3cpo86-olql-lmhm-9ebw-srge0g7wi2dy",
      "id": "chszkr82-4g1d-0flo-810d-8vnruhai8yhw",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((tan(tan((noise(y,(x/(x+y)))/min(y,tan((x*(audio(externalVal,max(x,pow(cos(y),y)))*audio(pow(max(x,audio(cos(x),noise(audio(mod(x,x),pow(mod(y,pow((audio(y,cos(sin(sin(x))))-sin(sin(mod(externalVal,audio(y,x))))),y)),max(x,(y+y)))),mod(externalVal,(x-(((externalVal/y)*y)*cos(min(sin((x-x)),x)))))))),x),externalVal))))))))-x),x)+x)))/x))))",
            "g": "audio(tan(cos(externalVal)),noise(tan(sin(mod(externalVal,max(x,audio(y,x))))),cos(audio(max((externalVal+y),min((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(mod(max(y,audio((x-tan(externalVal)),externalVal)),y),min(tan((tan((y/mod(sin(audio(noise(pow((y/x),min((min(externalVal,externalVal)/noise(x,x)),externalVal)),pow(x,pow(x,max(y,(x/(x*noise(((y/externalVal)-noise(y,x)),max(x,y)))))))),y)),pow(x,cos(x)))))*audio(y,(pow(y,cos(externalVal))*y)))),(audio(externalVal,max((noise((tan(sin((audio(x,externalVal)*min(y,max((x+(pow(externalVal,tan(x))-audio(audio(tan(x),y),externalVal))),mod(externalVal,(cos(cos(y))+audio(x,(pow(x,(externalVal*max(y,min((min(externalVal,x)-externalVal),externalVal))))/y)))))))))+x),y)-x),min(y,(x/(pow(x,noise(x,x))/x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),noise(tan(sin(externalVal)),cos(pow(cos((externalVal+y)),mod((x/x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(min(min(y,mod((x+cos(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,cos((min((max(tan((noise(y,sin(x))-min(x,tan((x*(audio(externalVal,min(x,pow(sin(y),y)))*pow(pow(tan(x),x),externalVal))))))),mod(max(noise(cos(y),min((noise(externalVal,externalVal)/max(x,x)),externalVal)),audio(x,mod(x,tan(y)))),y))-x),x)+x)))*y))))",
            "g": "audio(tan(cos(externalVal)),noise(max(sin(mod(externalVal,max(x,audio(y,y)))),y),sin(audio(max((externalVal+y),tan(tan(externalVal))),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(mod(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,tan((min((tan(cos((mod(y,sin(x))/noise(x,max((x/(pow(externalVal,max(x,pow(sin(y),y)))*audio(audio(max(x,audio(tan(x),mod(audio(pow(x,x),pow(pow(y,pow((audio(y,tan((sin(x)/y)))/(cos(noise(externalVal,audio(y,x)))/mod(y,externalVal))),y)),max(x,(y+y)))),mod(externalVal,(x+(((externalVal/externalVal)*y)*cos(min(sin((x+x)),x)))))))),y),externalVal))),pow(externalVal,(sin(max(y,pow((mod(max(noise(cos(y),max(sin(mod(externalVal,externalVal)),externalVal)),audio(x,mod(x,max(y,sin(x))))),y)/mod(externalVal,x)),audio(x,cos(x)))))-pow(x,(mod(x,(externalVal/tan(x)))+externalVal)))))))))+x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),noise(tan((noise(externalVal,cos(x))/y)),cos(audio(max((externalVal+y),max((externalVal/externalVal),externalVal)),audio((externalVal+externalVal),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((noise((tan(tan((noise(y,(x/(x+y)))*min(y,tan((x*(audio(externalVal,max(x,mod(sin(y),y)))*audio(pow(tan(x),x),externalVal))))))))-x),x)+x)))/x))))",
            "g": "audio(tan(sin(mod(min(max(sin(noise(externalVal,audio(y,((externalVal*y)/y)))),y),tan(pow(mod((externalVal-y),mod(sin(y),externalVal)),noise((x/x),((externalVal+externalVal)*x))))),externalVal))),noise(max(sin(mod(externalVal,tan(x))),y),cos(mod(max((externalVal+x),mod((externalVal/externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(noise(noise(max(y,mod((x-cos(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,cos((min((cos(tan((mod(y,(x/(x-y)))/min(y,max((x*(pow(externalVal,max(x,pow(sin(y),y)))*audio(pow(max(x,audio(cos(x),noise(audio(mod(x,x),pow(pow(externalVal,pow((audio(y,tan(sin(sin(x))))*(cos(mod(externalVal,audio(y,x)))*noise(externalVal,externalVal))),y)),max(y,(y+y)))),pow(externalVal,(x-((sin(externalVal)*y)*cos(min(sin((x-x)),x)))))))),y),externalVal))),pow(externalVal,(sin(tan(y))-pow(x,(mod(x,(externalVal*tan(x)))+externalVal)))))))))+x),x)+x)))-y))))",
            "g": "audio(tan(cos(externalVal)),min(tan((mod(externalVal,tan(x))/y)),sin(audio(max((externalVal+x),min((externalVal/externalVal),externalVal)),audio((externalVal+externalVal),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(pow(noise(min(y,pow((x+tan(externalVal)),y)),y),min(max(mod(x,externalVal),x),(mod(externalVal,cos((min((tan(tan((max(y,(x*(x+y)))*max(y,cos((x*(audio(externalVal,min(x,pow(sin(y),y)))/audio(audio(max(x,audio(sin(x),max(pow(pow(x,x),audio(mod(y,pow((mod(y,(sin(cos(x))/y))+cos(cos(noise(externalVal,audio(y,y))))),y)),max(x,(y+y)))),noise(externalVal,(x+((sin(externalVal)-y)*cos(noise(sin((x-x)),x)))))))),y),externalVal))))))))-x),x)-x)))*y))))",
            "g": "audio(sin(pow(tan((externalVal+y)),pow((x/x),((externalVal+externalVal)-x)))),(noise(externalVal,tan(x))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "tan(mod(noise(min(y,mod((x-tan(externalVal)),y)),y),tan(tan(audio(x,externalVal)))))",
            "g": "audio(tan(cos(externalVal)),mod(tan(sin(mod(externalVal,max(x,audio(y,x))))),cos(audio(min((externalVal-y),min((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "max(pow(noise(min(y,mod((x+tan(externalVal)),y)),y),noise(cos(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,sin(x)))),mod(x,max(pow(externalVal,mod(min(externalVal,externalVal),min(externalVal,tan(externalVal)))),((tan(y)/y)-(max(x,x)-min(max(externalVal,noise(tan(cos((min(x,max(audio(tan(y),y),noise(tan(externalVal),min(sin(pow(sin(externalVal),tan(tan(y)))),externalVal))))+x))),x)),x))))))-x),x)+x)))/y))),y)",
            "g": "pow(cos(audio(y,x)),min(tan(sin(mod(externalVal,tan(x)))),sin(audio(max((externalVal+y),min((externalVal/externalVal),externalVal)),audio((x/x),((externalVal*externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "tan(mod(noise(noise(y,mod((x-max(externalVal,y)),y)),y),max(cos(audio(x,externalVal)),(audio(externalVal,cos((min((tan(cos(sin(mod(y,sin(x)))))+x),x)+x)))*x))))",
            "g": "audio(tan(max((noise(externalVal,tan(x))/externalVal),x)),noise(tan(sin(pow(externalVal,max(x,audio(y,x))))),cos(audio(noise((externalVal-x),noise((externalVal/externalVal),externalVal)),audio((x*x),((externalVal+externalVal)+x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(min(min(y,pow((x+(noise(externalVal,externalVal)*noise(x,x))),y)),y),min(tan(pow(x,externalVal)),(pow(externalVal,tan((min((max(cos(sin(min(y,(x*(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),mod(externalVal,cos(externalVal)))),(sin(max(x,max(externalVal,x)))+(noise(x,x)/min(tan(externalVal),x))))))-x),x)-x)))/x))))",
            "g": "audio(max(cos(externalVal),y),min(noise((y*externalVal),externalVal),cos(mod(max((externalVal+y),mod((externalVal/externalVal),externalVal)),pow((x/x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "cos(pow(noise(max(y,pow((x-cos(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(max(x,sin(x)))),noise(x,max(audio(y,pow(max(y,externalVal),mod(externalVal,cos(externalVal)))),((tan(y)/y)+sin(min(x,x))))))-x),x)-x)))-x))))",
            "g": "audio(tan(cos(externalVal)),min(min(cos(mod(externalVal,max(x,pow(y,x)))),y),sin(pow(min((externalVal+x),min((externalVal*externalVal),externalVal)),audio((x*x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(min(min(y,audio((x+(noise(externalVal,externalVal)*noise(x,x))),y)),y),min(tan(mod(x,externalVal)),(audio(externalVal,cos((noise((max(tan((noise(y,(x*(x+y)))/min(y,tan((x*(pow(externalVal,max(x,mod(sin(y),y)))-audio(audio(max(x,audio(cos(x),tan(audio(mod(x,x),pow(noise(y,mod((audio(y,cos(sin(sin(x))))+sin(sin(mod(externalVal,pow(y,y))))),y)),max(x,(x+y))))))),y),externalVal))))))),noise(x,min(pow(y,pow(max(externalVal,externalVal),noise(externalVal,cos(externalVal)))),((min(x,max(externalVal,x))/y)+sin(noise(x,x))))))-x),x)-x)))*y))))",
            "g": "audio(max(cos(externalVal),y),min(noise((externalVal/externalVal),externalVal),cos(audio(tan(sin(y)),noise(tan(cos(mod(externalVal,max(x,mod(y,x))))),((externalVal-externalVal)/y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(noise(noise(min(y,pow((x-tan(externalVal)),y)),y),min(cos(audio(x,externalVal)),(audio(externalVal,tan((min((tan(tan(sin(min(y,(x/(x+y))))))-x),x)+x)))-x))))",
            "g": "audio(tan(tan(externalVal)),noise(tan((mod(externalVal,max(x,audio(y,x)))/y)),sin(audio(min((externalVal+y),min((y*externalVal),externalVal)),audio((x/x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow(noise(y,x),sin(externalVal)),tan(noise(y,y)))",
            "b": "((externalVal/externalVal)+pow((externalVal*y),externalVal))",
            "g": "mod(y,sin(mod(max(min(sin(mod(externalVal,audio(y,((externalVal*y)/externalVal)))),y),cos(mod(mod((externalVal-x),mod(cos(externalVal),externalVal)),noise((x/x),((externalVal+externalVal)-x))))),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+sin(externalVal))",
            "b": "((x+mod(cos(x),y))+y)",
            "g": "((pow(noise(audio(externalVal,(x+(externalVal/tan(externalVal)))),sin(noise((cos(y)*y),x))),(externalVal-(x+externalVal)))/y)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(mod(min(min(y,pow((x+tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,tan((noise((tan(tan((noise(y,(x/(x-y)))/min(x,max((x*(audio(externalVal,tan(x))*audio(pow(min(x,audio(sin(x),noise(audio(mod(x,x),mod(mod(externalVal,mod((audio(y,cos((sin(x)*y)))-cos(sin(mod(externalVal,audio(y,x))))),y)),max(x,(x-y)))),noise(externalVal,(x*((sin(externalVal)-y)-tan(min(sin((x-x)),x)))))))),x),externalVal))),mod(externalVal,(sin(cos(y))-mod(y,(mod(x,(externalVal/tan(x)))-externalVal)))))))))-x),x)+x)))*x))),y)",
            "g": "audio(tan(tan(externalVal)),noise(tan(sin(mod(externalVal,max(x,audio(y,x))))),(audio(min((externalVal+y),mod((externalVal*externalVal),externalVal)),audio((y/x),((externalVal+externalVal)*x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(audio(max(noise(y,pow((y*tan(externalVal)),y)),y),max(tan(mod(x,externalVal)),(audio(externalVal,cos((min((min(max(cos(noise(y,(x*(x-y)))),((sin(x)*x)+min((externalVal-min(x,externalVal)),tan(y)))),min(x,max(audio(externalVal,pow(cos(y),noise(externalVal,tan(externalVal)))),((min(y,min(externalVal,x))*y)-((x/(x+y))/max(max(externalVal,noise(sin(((noise(x,tan(audio(cos(x),y)))+x)/audio(((cos(externalVal)/(externalVal-pow(x,mod(audio(externalVal,y),externalVal))))*min(externalVal,mod(externalVal,externalVal))),((externalVal*y)-(y+x))))),x)),x))))))*x),x)*x)))-y))))",
            "g": "pow(sin(sin((externalVal*externalVal))),min(max(sin(mod(externalVal,audio(x,((externalVal*y)/y)))),y),cos(mod(min((externalVal-x),mod(sin(externalVal),externalVal)),mod((x*x),((externalVal+externalVal)-x))))))"
          }
        }
      ],
      "timestamp": "22h:49m:48s"
    },
    {
      "generation": 9,
      "ascendantID": "chszkr82-4g1d-0flo-810d-8vnruhai8yhw",
      "id": "35n35i6t-g8i0-d6hc-oyh8-g3flbmkalf62",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "max(pow(noise(min(y,mod((x+tan(externalVal)),y)),y),noise(tan(pow(x,externalVal)),(audio(externalVal,cos((sin(noise(cos(externalVal),max(tan(y),(y/externalVal))))+x)))/y))),y)",
            "g": "audio(cos(audio(y,x)),min(cos(sin(audio((x/x),((externalVal+externalVal)-x)))),sin(audio(max((externalVal+y),min((externalVal/externalVal),externalVal)),pow((x/x),((externalVal*externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,cos((min((tan(cos((noise(y,sin(x))*min(y,tan((x*(audio(externalVal,min(x,pow(tan(y),y)))*audio(pow(tan(y),x),externalVal))))))))-x),y)+x)))/x))))",
            "g": "audio(tan(mod(max(min(sin(mod(externalVal,pow(y,cos((externalVal*y))))),y),tan(mod(noise((externalVal-x),mod(cos(externalVal),externalVal)),min((x/x),((externalVal-externalVal)-x))))),externalVal)),noise(tan(sin(mod(externalVal,max(x,audio(y,x))))),cos(audio(max((externalVal+y),min((externalVal*externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "tan(mod(noise(min(y,mod((x-tan(externalVal)),y)),y),tan(tan(audio(x,externalVal)))))",
            "g": "audio(tan(cos(externalVal)),mod(tan(sin(mod(externalVal,max(x,audio(y,x))))),sin(audio(min((externalVal-y),min((externalVal/externalVal),externalVal)),audio((x*x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "sin(pow(min(tan(y),y),min(tan(audio(x,externalVal)),(audio(externalVal,tan((min((tan(tan(sin(max(x,sin(x)))))-x),x)-x)))*y))))",
            "g": "audio(tan(cos(externalVal)),min(min(cos(mod(externalVal,max(x,mod(externalVal,y)))),y),cos(pow(min((externalVal+x),max(sin(externalVal),externalVal)),audio((x-x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(mod(min(min(y,pow((x-(noise(externalVal,externalVal)*noise(x,x))),y)),x),min(max(mod(x,externalVal),x),sin(pow(externalVal,tan((min(sin(externalVal),x)-x)))))),y)",
            "g": "audio(max(noise((x-x),((externalVal+externalVal)-x)),y),max(noise((y*externalVal),externalVal),cos(mod(max((externalVal+y),mod((externalVal/externalVal),externalVal)),pow((x/x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(max(noise(y,pow((y*tan(externalVal)),y)),y),max(max(mod(x,externalVal),x),(audio(externalVal,sin((noise((min(max(cos(noise(y,(x/(x*y)))),((sin(x)*x)+min((externalVal-min(x,y)),tan(y)))),min(x,max(audio(y,pow(sin(y),noise(externalVal,tan(externalVal)))),((min(y,min(externalVal,x))*y)*(sin(x)/tan(max(externalVal,noise(sin(((noise(x,tan(audio(cos(x),y)))+x)/audio(((cos(externalVal)/(externalVal+pow(x,mod(audio(externalVal,y),externalVal))))*min(externalVal,mod(externalVal,externalVal))),((externalVal*y)-(y+x))))),x))))))))/x),x)*x)))-x))))",
            "g": "mod(sin(sin((externalVal*externalVal))),min(max((mod(externalVal,pow(x,((externalVal*externalVal)/y)))/y),y),cos(mod(mod((externalVal-x),mod(sin(externalVal),externalVal)),mod((x*x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(max(noise(y,audio((y*tan(externalVal)),y)),y),max(cos(mod(x,externalVal)),(audio(externalVal,cos((max((max(max(max(mod(y,(x*(x-y))),min(y,tan((x*(noise(externalVal,cos(x))/audio(audio(max(y,audio(cos(x),min(pow(mod(x,x),mod(min(y,audio((pow(y,(tan(sin(x))*y))*sin(sin(pow(externalVal,audio(y,y))))),y)),cos(x))),mod(y,(x+((sin(externalVal)/y)+cos(max(((x+x)/y),x)))))))),y),externalVal)))))),((cos(x)-x)+min((externalVal-min(x,externalVal)),tan(y)))),min(x,noise(audio(externalVal,pow(cos(y),mod(externalVal,tan(externalVal)))),((min(y,min(externalVal,x))*y)-((x*(x+y))/max(tan(externalVal),x))))))*x),x)-x)))*y))))",
            "g": "pow(sin(sin((externalVal*externalVal))),min(max(sin(mod(externalVal,audio(x,((externalVal-y)/y)))),y),cos(mod(min((externalVal-x),mod(sin(externalVal),externalVal)),mod(max(tan((mod(externalVal,tan(x))/y)),(audio(max((externalVal+y),min((externalVal/externalVal),y)),audio((externalVal+externalVal),((externalVal+externalVal)-x)))/x)),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(min(min(y,audio((x+(noise(externalVal,externalVal)*noise(x,x))),y)),y),min(tan(mod(x,externalVal)),(audio(externalVal,cos((noise((min(tan(sin(noise(y,(x*(x+y))))),mod(x,min(pow(y,audio(tan(externalVal),noise(externalVal,cos(externalVal)))),((min(x,tan(externalVal))/y)+sin(noise(x,x))))))-x),x)*x)))*y))))",
            "g": "audio(max(sin(y),y),noise(noise((externalVal*externalVal),externalVal),cos(audio(sin(sin(y)),mod(tan(sin(mod(externalVal,max(x,pow(y,x))))),sin((externalVal+externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(min(max(y,pow((x+cos(externalVal)),externalVal)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((noise((max(tan((noise(y,sin(x))-min(x,tan((x/(pow(externalVal,min(x,pow(sin(y),y)))/pow(pow(tan(x),x),externalVal))))))),mod(max(noise(cos(y),min((noise(externalVal,externalVal)/max(x,x)),externalVal)),audio(x,noise(x,tan(y)))),y))-x),y)+x)))*y))))",
            "g": "audio(tan(tan(externalVal)),noise(max(sin(mod(externalVal,max(x,audio(y,y)))),y),sin(audio(max((externalVal+y),cos(min(externalVal,y))),audio((y/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(mod(noise(min(y,mod((x-tan(externalVal)),y)),y),tan(tan(audio(x,externalVal)))),y)",
            "g": "audio(tan(cos(externalVal)),mod(tan(sin(mod(externalVal,max(x,audio(y,x))))),sin(pow(min((externalVal-y),min((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "sin(mod(noise(min(y,pow((x+tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((min(tan((noise(y,sin(x))/max(y,tan((x*(audio(externalVal,max(x,pow(sin(y),y)))-audio(audio(max(x,audio(cos(x),min(pow(mod(x,x),pow(mod(y,pow((pow(y,sin((cos(x)/y)))-sin(sin(mod(externalVal,audio(y,y))))),y)),max(x,(x+y)))),noise(externalVal,(x-((cos(externalVal)*y)*cos(min(cos((x+x)),x)))))))),y),externalVal))))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),max(externalVal,cos(externalVal)))),((max(y,max(externalVal,x))/y)+(min(x,x)/min(max(externalVal,noise(sin(((min(x,max(audio(tan(y),y),noise(cos(externalVal),mod(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*mod(externalVal,mod(externalVal,externalVal))),(sin(externalVal)-(y+x))))),x)),x))))))-x),x)-x)))*x))))",
            "g": "audio(tan(cos(externalVal)),min(min(sin(noise(externalVal,max(x,mod(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(mod(min(y,pow((x-tan(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,max((noise((max(cos((mod(y,sin(x))/noise(x,max((x/(pow(externalVal,max(x,pow(sin(y),y)))*audio(audio(max(x,audio(tan(x),mod(audio(pow(x,x),pow(mod(y,audio((pow(y,cos((sin(x)/y)))/(cos(noise(y,audio(y,y)))/mod(y,externalVal))),y)),max(x,(y-y)))),mod(externalVal,(x+((sin(externalVal)*y)*cos(noise(sin((x+x)),x)))))))),y),externalVal))),pow(externalVal,(sin(tan(y))-pow(x,(noise(y,(externalVal/cos(x)))+externalVal)))))))),min(x,min(audio(y,audio(tan(y),max(externalVal,cos(externalVal)))),((cos(y)/y)-(min(x,x)*min(max(externalVal,noise(sin(sin((noise(x,max(audio(cos(y),y),min(cos(externalVal),noise(sin(pow(sin(externalVal),tan(max(y,pow((externalVal-y),y))))),externalVal))))+x))),x)),x))))))+x),x)-x),noise(externalVal,sin(x))))*y))))",
            "g": "audio(tan(tan(y)),noise(tan((noise(externalVal,cos(x))/y)),sin(audio(max((externalVal+y),max((y*externalVal),externalVal)),audio((externalVal+externalVal),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(noise(min(min(y,mod((x+cos(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,cos((noise((max(tan((noise(y,sin(x))-min(x,tan((x*(audio(externalVal,min(x,pow(sin(y),y)))*pow(audio(tan(x),y),externalVal))))))),noise(max(noise(tan(y),max((noise(externalVal,externalVal)/max(x,x)),externalVal)),audio(x,mod(x,max(y,(x/(x+pow(((y-externalVal)+mod(externalVal,x)),tan(x)))))))),y))-x),x)+x)))/y))))",
            "g": "audio(tan(sin(externalVal)),min(max(sin(mod(externalVal,max(x,audio(y,y)))),y),cos(mod(max((externalVal+y),tan(max(externalVal,x))),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(min(min(y,pow((x*cos(externalVal)),y)),y),min(tan(audio(x,externalVal)),sin(audio(externalVal,tan((min((tan(cos((mod(y,sin(x))*min(x,tan((x/(pow(externalVal,max(x,mod(sin(y),y)))*audio(pow(max(x,audio(tan(x),pow(pow(audio(x,x),pow(pow(y,mod((audio(y,cos((sin(x)/y)))/(cos(noise(y,audio(y,x)))/mod(y,externalVal))),y)),max(x,(y+y)))),mod(externalVal,(x+(((externalVal/externalVal)*y)*cos(min(sin((x+x)),x)))))))),y),externalVal))))))))+x),x)-x)))))))",
            "g": "audio(tan(cos(externalVal)),noise(tan((mod(externalVal,tan(x))/y)),cos(pow(max((externalVal+y),max(sin(y),externalVal)),audio((externalVal+externalVal),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "min(pow(min(min(y,mod((x+tan(externalVal)),y)),y),noise(cos(pow(x,externalVal)),(audio(externalVal,cos((min((max(cos(cos(min(y,sin(x)))),mod(x,max(mod(y,mod(min(externalVal,externalVal),min(externalVal,tan(externalVal)))),((tan(y)/y)-(max(x,x)-min(max(externalVal,noise(tan(tan((min(x,min(audio(cos(y),y),noise(tan(externalVal),min(sin(pow(sin(externalVal),tan(tan(y)))),externalVal))))+x))),x)),x))))))-x),x)+x)))/y))),y)",
            "g": "pow(cos(audio(y,x)),min(tan(sin(mod(externalVal,tan(x)))),sin(pow(max((externalVal+y),min((noise(externalVal,max(y,audio(y,x)))/externalVal),externalVal)),audio((x/x),((externalVal*externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "max(pow(min(min(y,mod((x+max(externalVal,y)),y)),y),noise(cos(pow(x,externalVal)),(audio(externalVal,cos((max((max(cos((min(y,sin(x))/max(y,tan((x/(audio(externalVal,max(x,pow(cos(y),y)))-audio(audio(max(x,audio(cos(x),min(audio(pow(x,x),pow(min(y,audio((audio(x,(cos(sin(x))/x))+cos((mod(y,audio(y,y))*(sin(x)+pow(x,x))))),y)),cos(x))),noise(externalVal,(x+((cos(externalVal)/y)*tan(min(cos((x+x)),x)))))))),y),externalVal))))))),noise(x,min(pow(externalVal,pow(noise(externalVal,externalVal),max(externalVal,tan(externalVal)))),((tan(y)/y)-(max(x,x)-min(max(externalVal,noise(tan(cos((noise(x,max(audio(max(y,externalVal),y),noise(tan(externalVal),min((pow(sin(externalVal),cos(tan(y)))/externalVal),externalVal))))+x))),x)),x))))))-x),y)+x)))/y))),y)",
            "g": "pow(cos(audio(y,x)),min(tan((mod(externalVal,tan(x))/externalVal)),sin(audio(max((externalVal+y),max(sin(externalVal),externalVal)),audio(sin(y),((externalVal*externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(max(min(y,mod((x+(noise(externalVal,externalVal)*noise(x,x))),externalVal)),y),min(max(mod(x,externalVal),x),(audio(externalVal,cos((noise((max(tan((noise(y,(x*(x+y)))/min(y,cos((x/(pow(externalVal,max(x,mod(sin(y),y)))+audio(audio(max(x,audio(cos(x),tan(audio(mod(x,x),pow(mod(y,mod((audio(y,cos(sin(sin(x))))+sin(sin(mod(externalVal,pow(y,y))))),y)),tan(y)))))),y),externalVal))))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),noise(externalVal,max(externalVal,y)))),((min(x,max(externalVal,x))/y)+sin(noise(x,x))))))-x),x)-x)))*y))))",
            "g": "audio(tan(sin(externalVal)),min(noise((externalVal/externalVal),externalVal),cos(audio(tan(sin(y)),min(tan(cos(mod(externalVal,max(x,pow((x/x),audio(y,x)))))),((externalVal-externalVal)/y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(noise(mod(max(y,pow((x+tan(externalVal)),externalVal)),y),min(max((tan(cos(y))-audio(x,(audio(x,(externalVal/tan(x)))*y))),x),(audio(externalVal,tan((mod((max(cos((mod(y,(y/(x*y)))*min(y,max((x+(pow(externalVal,tan(x))+audio(audio(max(x,audio((x/x),min(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,audio(y,x)))*mod(externalVal,externalVal))),y)),cos(x))),noise(externalVal,(x*(((externalVal/y)*y)/min(max(cos((x*x)),x),(min(y,mod(externalVal,y))*x)))))))),y),externalVal))),audio(externalVal,(sin(cos(y))-audio(y,(pow(x,(externalVal-min(y,min((min(externalVal,x)-externalVal),externalVal))))/y)))))))),min(x,noise(mod(y,pow(max(externalVal,externalVal),tan(externalVal))),(tan(tan(y))*(mod(y,y)/max(tan(externalVal),x))))))-x),y)-x)))*x))))",
            "g": "audio(sin(tan(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(audio(cos((externalVal+y)),mod((x*x),audio(y,y))))))"
          }
        }
      ],
      "timestamp": "22h:50m:13s"
    },
    {
      "generation": 10,
      "ascendantID": "35n35i6t-g8i0-d6hc-oyh8-g3flbmkalf62",
      "id": "pxopcjwi-b5sl-efns-16mj-y4cxjf2me9tr",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "tan(mod(noise(min(y,noise((x-tan(externalVal)),y)),y),tan(max(audio(x,externalVal),x))))",
            "g": "audio(max(cos(externalVal),y),mod(tan(sin(mod(externalVal,max(x,audio(y,x))))),sin(mod(noise((externalVal-y),tan(mod(max((externalVal-y),mod((externalVal/externalVal),externalVal)),pow((x/x),((externalVal+externalVal)*x))))),pow((x*x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(noise(min(y,pow((x+tan(externalVal)),y)),y),min(tan((cos(sin(y))/audio(x,(audio(x,sin(externalVal))*externalVal)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(audio(noise(x,x),pow(pow(y,pow((audio(x,(sin(tan(x))/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(max(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-pow(y,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))-y)))))))),min(x,noise(audio(x,mod(max(externalVal,externalVal),tan(externalVal))),(cos(cos(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)*x),min(y,(x*(pow(x,pow(x,y))*x)))))*x))))",
            "g": "audio(sin(tan(externalVal)),max(min((externalVal+y),min((y/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),mod(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(pow(max(min(y,mod((x+max(externalVal,y)),y)),y),noise(max(audio(x,externalVal),x),(pow(externalVal,cos((max((max(cos((min(y,(x/(x*x)))/max(y,min((x/(audio(externalVal,max(x,pow(cos(y),y)))-audio(audio(min(x,audio(cos(x),min(audio(pow(x,x),pow(min(y,audio((audio(x,(cos(sin(x))/x))+cos((mod(y,audio(y,y))*(cos(x)+pow(x,x))))),y)),cos(y))),noise(externalVal,(x+((cos(externalVal)/y)/tan(min(cos((x+x)),x)))))))),y),externalVal))),mod(externalVal,(((x-pow(cos(audio(min(mod(cos(y),cos(max(mod(x,externalVal),x))),audio(x,noise(x,min(y,sin(x))))),y)),audio(x,(x/x))))/x)-pow(x,(pow(y,(externalVal/tan(x)))*externalVal)))))))),noise(x,max(pow(externalVal,pow(noise(externalVal,externalVal),max(externalVal,tan(externalVal)))),((tan(y)/y)-(max(x,x)-min(max(externalVal,noise(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),tan((mod(cos(externalVal),cos(tan(y)))/externalVal)))))+x))),x)),x))))))-x),y)+x)))/x))),y)",
            "g": "pow(cos(audio(y,x)),min(tan((mod(externalVal,max(x,(externalVal+y)))*externalVal)),sin(audio(max(mod((y*externalVal),externalVal),max(sin(externalVal),externalVal)),audio(sin(y),((externalVal*externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(mod(min(y,pow((x-tan(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,max((mod((max(cos((mod(y,sin(x))/noise(x,max((x*(pow(externalVal,max(x,pow(cos(y),y)))*audio(audio(max(y,audio(tan(x),sin(pow(max(audio(tan(y),min(tan(min(externalVal,externalVal)),externalVal)),audio(x,mod(y,tan(y)))),y)))),y),externalVal))),pow(externalVal,(sin(tan(y))-pow(x,(noise(y,(externalVal*cos(x)))+externalVal)))))))),min(x,min(audio(y,pow(tan(y),max(externalVal,cos(externalVal)))),(sin(sin(y))+(min(x,x)-min(tan(externalVal),x))))))+x),x)-x),noise(externalVal,sin(x))))*y))))",
            "g": "audio(audio((x*x),((externalVal*externalVal)-x)),noise(cos((noise(externalVal,cos(x))/y)),sin(audio(max((externalVal-y),max((y*externalVal),externalVal)),audio((externalVal+externalVal),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(pow(noise(min(y,mod((x*tan(externalVal)),y)),y),tan(tan(audio(x,externalVal)))),y)",
            "g": "audio(sin(cos(externalVal)),mod(tan(cos(noise(externalVal,max(x,audio(y,x))))),sin(pow(min((externalVal-x),min((externalVal*externalVal),externalVal)),audio((x/x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "min(mod(max(min(y,mod((x*(noise(externalVal,externalVal)*noise(x,x))),y)),x),min(max(mod(x,externalVal),x),sin(pow(externalVal,cos((noise(tan(externalVal),x)-x)))))),y)",
            "g": "pow(max(noise((x*x),((externalVal+externalVal)*x)),y),min(noise((y-externalVal),externalVal),cos(mod(min((externalVal+y),tan((mod(externalVal,max(x,(externalVal+y)))/y))),pow((x/x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(min(min(y,pow((x*cos(externalVal)),y)),y),min(tan(audio(x,externalVal)),sin(pow(externalVal,tan((min((tan(sin((mod(y,sin(y))*min(x,cos((x/(pow(externalVal,noise(x,mod(cos(y),y)))*audio(mod(min(x,audio(tan(x),pow(pow(audio(x,x),pow(pow(y,mod((audio(y,cos((sin(x)/y)))/(sin(noise(y,audio(y,y)))/mod(y,externalVal))),y)),tan(x))),mod(externalVal,(x+(((externalVal*y)-y)*cos(min(cos((x+x)),x)))))))),y),externalVal))))))))+x),x)-x)))))))",
            "g": "audio(tan(sin(externalVal)),noise(tan((mod(externalVal,max(x,mod(y,x)))*externalVal)),cos(pow(min((externalVal+y),max(sin(y),externalVal)),audio((externalVal+externalVal),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "tan(pow(max(noise(y,audio((y*max(externalVal,x)),y)),y),max(cos(mod(x,externalVal)),(audio(externalVal,tan((max((max(max(max(mod(y,(x*(x-y))),noise(y,tan((x*(noise(externalVal,cos(x))/audio(audio(max(y,audio(cos(x),min(pow(mod(y,x),mod(min(y,audio((pow(y,(tan(sin(x))*y))/sin(sin(pow(externalVal,audio(y,y))))),y)),cos(x))),mod(y,(x+((cos(externalVal)/y)+cos(min(((x-x)/y),x)))))))),y),externalVal)))))),((cos(x)*x)+min((externalVal/min(x,externalVal)),tan(y)))),min(x,noise(audio(externalVal,pow(tan(y),mod(externalVal,tan(externalVal)))),((min(y,min(externalVal,x))*y)-((x-(x+y))/tan(cos(externalVal)))))))*x),x)-x)))/y))))",
            "g": "pow(sin(cos((externalVal*externalVal))),min(max(cos(mod(externalVal,audio(x,sin((externalVal-y))))),y),cos(pow(min((externalVal+x),pow(sin(externalVal),externalVal)),mod(max(cos((mod(externalVal,max(x,pow(y,x)))/y)),(pow(max((externalVal+y),min((externalVal/externalVal),y)),audio((externalVal+externalVal),((externalVal+externalVal)-x)))/x)),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "max(mod(noise(min(y,mod((x+tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,sin((sin(noise(cos(externalVal),max(max(y,audio((externalVal-y),y)),(y/externalVal))))+x)))*x))),y)",
            "g": "audio(cos(sin(audio(max((externalVal+x),min((externalVal*externalVal),externalVal)),audio((x/x),((externalVal-externalVal)-x))))),max(tan((audio((x/x),((externalVal-externalVal)-x))/externalVal)),sin(pow(max((externalVal+y),noise((y/externalVal),externalVal)),mod((x/x),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(min(min(y,pow((x-cos(externalVal)),y)),y),min(cos(audio(x,externalVal)),(audio(externalVal,max((min((tan(cos((mod(y,sin(x))*min(x,tan((x/(pow(externalVal,max(x,mod(sin(y),y)))*audio(pow(max(x,audio(tan(x),pow(pow(audio(x,x),pow(pow(y,mod((audio(y,cos((sin(x)/y)))/(sin(noise(y,audio(y,x)))/mod(y,externalVal))),y)),min(x,(y+y)))),mod(externalVal,(x+(((externalVal*externalVal)*y)*cos(max(cos((x-x)),x)))))))),y),externalVal))))))))+x),x)-x),noise(externalVal,sin(x))))/y))))",
            "g": "audio((x*x),noise(tan((mod(externalVal,tan(x))/y)),sin(pow(max((externalVal+y),max(sin(y),externalVal)),pow((externalVal+externalVal),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "sin(noise(mod(tan(y),y),noise(max((tan(cos(y))-audio(x,(audio(x,(externalVal/tan(x)))*y))),x),(audio(externalVal,cos((mod((max(tan((pow(y,(y/(x*y)))/min(y,tan((x+(pow(externalVal,tan(x))+pow(audio(max(x,pow((x/x),min(pow(noise(x,x),audio(pow(y,pow((audio(x,(sin(cos(x))*x))+(tan(noise(externalVal,audio(y,x)))/pow(y,externalVal))),y)),cos(x))),noise(externalVal,(x*((sin(externalVal)*y)/min(max(cos((x*x)),x),(noise(y,mod(externalVal,y))/x)))))))),y),externalVal))))))),noise(x,noise(pow(y,pow(min(externalVal,externalVal),tan(externalVal))),(tan(tan(y))*(mod(y,y)/max(tan(externalVal),x))))))-x),y)-x)))-x))))",
            "g": "audio(sin(cos(externalVal)),min(max((externalVal+y),noise((externalVal/externalVal),externalVal)),tan(audio(cos((externalVal+y)),mod((x*x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "min(pow(min(min(y,mod((x+max(externalVal,y)),y)),y),min(tan(pow(x,externalVal)),(pow(externalVal,cos((noise((max(cos(cos(min(y,sin(x)))),mod(x,min(mod(y,mod(min(externalVal,externalVal),min(externalVal,tan(externalVal)))),((max(x,tan(externalVal))/y)-(max(x,x)-min(max(externalVal,noise(max(tan((min(x,min(audio(cos(y),y),noise(tan(externalVal),min(sin(pow(sin(externalVal),tan(tan(y)))),externalVal))))-x)),x),x)),x))))))*x),y)+x)))/y))),y)",
            "g": "pow(cos(pow(y,y)),min(tan(cos(pow(externalVal,tan(x)))),sin(pow(min((externalVal+y),min((min((externalVal+y),max((externalVal/externalVal),externalVal))/externalVal),externalVal)),audio((x/x),((externalVal*externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(mod(max(max(y,pow((x+cos(externalVal)),externalVal)),y),min(tan(audio(x,externalVal)),(pow(externalVal,cos((noise((min(tan((min(y,(x/(x+y)))-min(x,tan((x/(pow(externalVal,min(x,mod(sin(y),y)))/audio(pow(tan(x),x),externalVal))))))),mod(max(noise(tan(y),min((noise(externalVal,externalVal)*max(x,x)),externalVal)),audio(x,noise(x,cos(y)))),y))-x),y)+x)))-y))))",
            "g": "audio(tan(tan(externalVal)),min(max(sin(mod(externalVal,max(x,audio(y,y)))),y),sin(audio(pow(y,x),audio(sin(y),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "sin(noise(mod(max(y,pow((x+tan(externalVal)),externalVal)),y),min(max((tan(cos(y))-audio(y,(audio(x,(externalVal/cos(x)))*y))),x),(audio(externalVal,cos((mod((max(cos((mod(y,(y/(x/x)))-max(y,tan((x+(pow(externalVal,tan(x))+audio(audio(max(x,audio((x/x),min(pow(mod(x,x),audio(pow(y,pow((audio(x,sin((cos(x)/y)))+((mod(externalVal,audio(y,x))/(sin(x)+noise(y,x)))/mod(externalVal,externalVal))),y)),cos(x))),noise(externalVal,(x*(((externalVal/y)*y)/min(max(cos((x*x)),y),(min(y,mod(externalVal,y))-x)))))))),y),externalVal))))))),min(x,noise(mod(y,pow(max(externalVal,externalVal),tan(externalVal))),(tan(tan(y))*(mod(y,y)/min(max(externalVal,mod(cos(((noise(x,max(audio(max(y,y),y),min(cos(externalVal),min(cos(min((externalVal/mod(sin(audio(sin(externalVal),tan(max(y,audio((externalVal+y),y))))),externalVal)),tan(tan(y)))),y))))-x)*mod((sin(max(externalVal,x))/max(y,mod(externalVal,externalVal))),((externalVal/externalVal)-(y-x))))),x)),x))))))-x),y)*x)))*x))))",
            "g": "audio(sin(tan(externalVal)),min(max((externalVal+y),min(sin(externalVal),externalVal)),tan(audio(cos((externalVal+y)),noise((x*x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "min(pow(min(max(externalVal,pow((x+tan(externalVal)),y)),y),noise(cos(audio(x,externalVal)),(audio(externalVal,cos((min((max(cos(cos(noise(x,sin(x)))),mod(x,max(mod(y,pow(min(externalVal,externalVal),min(externalVal,tan(externalVal)))),((tan(y)/y)+(max(x,x)-noise(tan(externalVal),x))))))-x),x)+x)))/y))),y)",
            "g": "pow(tan(audio(y,x)),noise(tan(sin(mod(externalVal,tan(x)))),sin(audio(max((externalVal+x),max(sin(externalVal),externalVal)),audio(sin(y),((externalVal*externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,x)",
            "b": "max(audio(min(min(y,mod((x+max(externalVal,y)),y)),y),noise(cos(pow(x,externalVal)),(pow(externalVal,max((tan((max(cos((min(y,sin(x))/max(y,tan((x*(audio(externalVal,max(x,pow(cos(y),y)))-audio(audio(max(x,audio(cos(x),min(audio(pow(x,x),pow(min(y,audio((audio(x,(cos((x/externalVal))/x))+cos((mod(y,audio(y,y))*(cos(x)-pow(x,x))))),y)),cos(x))),mod(y,(x+((cos(externalVal)*y)*tan(min(cos((x+x)),x)))))))),y),externalVal))))))),min(x,min(audio(y,pow(noise(externalVal,externalVal),max(externalVal,tan(externalVal)))),(sin(tan(y))-(min(x,y)-min(max(externalVal,noise(tan(cos((min(x,max(audio(tan(y),y),min(cos(externalVal),min((pow(sin(externalVal),cos(tan(y)))/externalVal),externalVal))))+x))),x)),x))))))-x))+x),mod(externalVal,sin(x))))/y))),y)",
            "g": "pow(cos(audio(y,x)),noise(cos((mod(externalVal,tan(x))/externalVal)),sin(audio(tan((externalVal+y)),pow((y/x),((externalVal*externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(max(y,audio((x-tan(externalVal)),y)),y),noise(tan(pow(x,externalVal)),(audio(externalVal,cos((min((tan(cos((noise(y,cos(x))/max(y,tan((x*(audio(externalVal,max(x,pow(tan(y),y)))-audio(mod(tan(x),y),externalVal))))))))-x),y)+x)))/x))))",
            "g": "audio(cos(noise(max(min(cos(mod(externalVal,pow(y,sin((externalVal*y))))),y),cos(pow(noise((externalVal-x),mod(tan(externalVal),externalVal)),min((x/x),((externalVal-externalVal)-x))))),externalVal)),max(noise(externalVal,x),tan(pow(max((externalVal+y),min((externalVal*externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x*tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((tan(cos((noise(y,sin(x))*min(y,tan((x-(audio(externalVal,min(x,audio(max(externalVal,externalVal),externalVal)))*audio(pow(cos(x),x),externalVal))))))))+x),x)+x)))*x))))",
            "g": "audio(sin(mod(min(min((pow(cos((externalVal+y)),mod((x*x),pow(y,x)))/y),y),tan(mod(mod((externalVal*x),noise(sin(externalVal),externalVal)),min((x/x),((externalVal-externalVal)-x))))),externalVal)),noise(max(sin(mod(externalVal,min(x,pow(y,x)))),y),sin(audio(max((externalVal+y),min((externalVal-externalVal),externalVal)),audio((y*x),((externalVal+externalVal)-x))))))"
          }
        }
      ],
      "timestamp": "22h:50m:18s"
    },
    {
      "generation": 11,
      "ascendantID": "pxopcjwi-b5sl-efns-16mj-y4cxjf2me9tr",
      "id": "w5vu57zw-6rgs-cx7a-x8vf-joduy3enl2s9",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((noise(x,max(audio(tan(y),y),min(cos(externalVal),noise(sin(mod(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))+x)/audio(((tan(y)/(externalVal+noise(x,pow(pow(externalVal,y),y))))*noise(externalVal,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "(noise(mod(max(y,pow((x+tan(externalVal)),externalVal)),y),mod(min((max(cos(y),x)-audio(y,(audio(x,(externalVal/cos(x)))*y))),x),(audio(externalVal,cos((mod((max(cos((mod(y,(y/(x/x)))-max(y,max((x+(pow(externalVal,cos(x))+audio(pow(max(x,audio((x/x),min(pow(mod(x,x),audio(audio(y,pow((audio(x,(sin(sin(x))/y))+((mod(externalVal,pow(y,x))/(sin(x)+noise(y,x)))/mod(externalVal,externalVal))),y)),sin(x))),noise(externalVal,(x*(((externalVal/y)*y)*max(tan(cos((x*x))),(min(y,mod(externalVal,y))+x)))))))),y),externalVal))),pow(externalVal,audio(externalVal,max((mod((max(tan((mod(y,(x-(x-x)))*max(y,max((x+(audio(externalVal,max(x,min(y,y)))+pow(audio(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,(sin(sin(x))/y))+(sin(mod(externalVal,mod(y,x)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)-min(min(cos((x*x)),y),(max(x,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))-y)))))))),max(x,noise(pow(y,pow(max(externalVal,externalVal),cos(externalVal))),(tan(tan(y))+sin(mod(y,y))))))-x),y)-x),min(y,(x-(pow(x,mod(x,y))*x)))))))))),min(x,noise(mod(y,pow(max(externalVal,externalVal),tan(externalVal))),(tan(tan(y))*(pow(y,y)*min(max(externalVal,mod(cos(((noise(x,min(audio(tan(y),y),min(cos(externalVal),min(sin(min((externalVal/mod(sin(audio(sin(externalVal),tan(max(y,audio((externalVal+y),y))))),externalVal)),tan(tan(y)))),y))))-x)*mod((sin(max(externalVal,x))*max(y,mod(externalVal,externalVal))),((externalVal/externalVal)-(y-x))))),x)),x))))))-x),y)*x)))*x)))/externalVal)",
            "g": "audio(sin(tan(externalVal)),min(min((externalVal+y),min(sin(cos(externalVal)),externalVal)),tan(pow(cos((externalVal+y)),noise(sin(x),pow(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "max(mod(noise(min(y,pow((x-tan(externalVal)),y)),y),noise(cos(pow(x,externalVal)),(audio(externalVal,max((mod((noise(tan((mod(y,sin(x))/mod(x,max((x/(pow(externalVal,max(x,pow(cos(y),y)))*audio(audio(tan(y),y),externalVal))),pow(externalVal,((cos(y)/x)+pow(x,(noise(y,(externalVal*sin(x)))+externalVal)))))))),min(x,min(audio(y,pow(tan(y),max(externalVal,cos(externalVal)))),(sin(sin(y))+(min(x,x)-noise(tan(externalVal),x))))))+x),x)+x),noise(externalVal,sin(x))))*y))),y)",
            "g": "audio(audio((x*x),((externalVal*externalVal)+x)),noise(tan((noise(externalVal,cos(x))-y)),sin(audio(max((externalVal+y),noise((y*externalVal),externalVal)),audio((externalVal-externalVal),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(max(y,pow((x+max(externalVal,y)),y)),y),noise(tan(audio(x,externalVal)),(pow(externalVal,cos((max((max(cos((min(y,(x/(x*x)))/max(y,min(sin(x),mod(externalVal,(((y*pow(cos(audio(max(mod(sin(externalVal),sin(max(mod(x,externalVal),x))),audio(x,noise(x,max(y,sin(x))))),y)),audio(x,(x/x))))*x)-mod(x,(pow(y,(externalVal/tan(x)))*externalVal)))))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,max(externalVal,noise(sin(x),externalVal))))),((tan(y)/y)+(tan(x)-min(max(externalVal,noise(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(tan(y)))/externalVal),externalVal))))+x))),x)),x))))))-x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(tan((mod(externalVal,max(x,(externalVal+y)))*externalVal)),(audio(max(mod((y*externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),mod((x-x),pow(y,x)))),y),tan(noise(mod((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(mod(pow(max(y,mod((x+tan(externalVal)),y)),y),min(tan((max(sin(y),x)-audio(x,(audio(x,sin(externalVal))-y)))),(audio(externalVal,max((mod((tan(cos((mod(y,(y/(x-x)))*max(y,min((x+(audio(externalVal,tan(x))-mod(pow(max(x,pow((x/y),noise(pow(noise(x,x),pow(pow(externalVal,pow((audio(x,(sin(cos(x))/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),pow(externalVal,(x/((sin(externalVal)*y)*min(max(cos((mod(y,sin(mod(cos(cos(y)),((x+cos(max(x,externalVal)))-externalVal))))+x)),x),(min(x,audio(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(noise(x,(externalVal*tan(y)))*y)))))))))-x),y)+x),min(y,(x-(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal-y),min((externalVal/externalVal),externalVal)),cos(pow(cos((externalVal+y)),mod((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),noise(tan((tan(tan(y))*audio(x,(pow(y,cos(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(x*(x-x)))*min(y,max((x*(audio(externalVal,tan(x))-pow(audio(max(x,audio((x/x),min(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)*x))+(sin(mod(externalVal,pow(y,y)))-mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)-y)*min(max(cos((x*y)),x),(min(y,pow(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal-min(y,min((min(externalVal,x)+externalVal),externalVal))))*y)))))))),noise(x,min(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))+x),y)+x),min(y,(x*(pow(x,mod(x,x))-x)))))/x))))",
            "g": "audio(cos(tan(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(audio(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(externalVal,y)",
            "b": "max(pow(max(noise(y,mod((x+max(externalVal,y)),y)),y),noise(max(audio(x,externalVal),x),(pow(externalVal,cos((max((max(cos(sin(min(y,(x*(x*x))))),noise(x,max(pow(externalVal,pow(noise(externalVal,externalVal),max(externalVal,tan(externalVal)))),((tan(y)/y)-(min(x,y)-min(min(externalVal,min(cos(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(tan(externalVal),cos(cos(y)))*externalVal),externalVal))))+x))),x)),x))))))-x),y)+x)))/x))),y)",
            "g": "pow(cos(audio(y,x)),min(cos((noise(externalVal,max(x,(externalVal-y)))/externalVal)),sin(audio(max(mod((y*externalVal),externalVal),max(sin(y),externalVal)),audio(sin(y),((externalVal*externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "max(audio(min(min(y,mod((x+max(externalVal,y)),y)),y),min(cos(pow(x,externalVal)),(pow(externalVal,max((tan((max(tan((min(y,sin(x))/max(y,tan((x*(pow(externalVal,max(x,pow(cos(y),y)))-audio(audio(min(x,pow(cos(x),max(audio(pow(x,x),pow(min(y,audio((audio(x,(cos((x/externalVal))/x))+cos((noise(externalVal,audio(y,y))*(cos(x)-audio(x,x))))),y)),cos(y))),mod(y,(x+((cos(externalVal)*y)-tan(noise(cos((x+x)),x)))))))),y),externalVal))))))),(y/(x-y)))-x))+x),noise(externalVal,(x/(audio(x,pow(x,y))+x)))))/y))),y)",
            "g": "pow(cos(audio(y,x)),noise(cos((mod(externalVal,cos(x))/externalVal)),(audio(tan(mod((x*x),pow(y,x))),pow((y/x),((externalVal*externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(noise(mod(min(y,pow((x-tan(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,max((mod((max(cos((mod(y,sin(x))/noise(x,max((x*(pow(externalVal,max(x,pow(tan(y),y)))*audio(audio(max(y,audio(max(x,x),sin(mod(max(audio(tan(y),min(tan(min(externalVal,externalVal)),externalVal)),audio(y,mod(y,max(y,(x/(x+pow(((x*externalVal)*min(externalVal,x)),cos(x)))))))),y)))),y),externalVal))),pow(externalVal,(sin(tan(y))-pow(x,(noise(y,(externalVal*cos(x)))+externalVal)))))))),min(x,min(audio(y,pow(tan(y),max(externalVal,cos(externalVal)))),(sin(sin(y))+(min(x,x)*min(max(externalVal,mod((sin((mod(x,max(pow(cos(x),y),min(sin(externalVal),noise(sin(audio((externalVal/tan(mod(sin(x),mod(y,externalVal)))),max(tan(y),(y*externalVal)))),externalVal))))+x))/y),x)),x))))))+x),x)-x),noise(externalVal,(x/(audio(x,min(x,x))+x)))))*y))))",
            "g": "audio(audio((x*x),((externalVal*externalVal)-x)),noise(cos((noise(externalVal,cos(x))/y)),sin(audio(max((externalVal-y),min((y*externalVal),externalVal)),audio((externalVal+externalVal),((externalVal*externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "sin(noise(mod(tan(y),y),min(tan((cos(sin(y))-audio(x,(audio(x,sin(externalVal))-y)))),(audio(externalVal,tan((noise((max(tan((mod(x,(y/(x*y)))/min(y,tan((x+(pow(externalVal,tan(x))+pow(audio(tan(x),y),externalVal))))))),noise(x,noise(mod(y,pow(max(y,y),tan(externalVal))),(max(tan(y),y)/sin(pow(y,x))))))*x),y)-x)))-x))))",
            "g": "audio(sin(cos(externalVal)),max(max((externalVal+y),mod((externalVal/externalVal),externalVal)),tan(audio(cos((externalVal+y)),noise((x/x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "min(pow(min(tan(externalVal),y),mod(cos(audio(x,externalVal)),(audio(externalVal,cos((max((min(tan(cos(noise(x,(x/(x+x))))),mod(x,max(mod(y,pow(min(externalVal,externalVal),min(externalVal,tan(externalVal)))),(cos(tan(y))-(max(x,x)-noise(tan(externalVal),x))))))+x),x)+x)))*y))),y)",
            "g": "pow(tan(audio(y,x)),noise(tan(cos(mod(externalVal,max(x,mod(y,y))))),sin(audio(min(((externalVal-externalVal)-x),max(sin(externalVal),externalVal)),audio(sin(y),((externalVal*externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,tan((noise((pow(x,mod(x,x))-x),x)-x)))/x))),y)",
            "g": "audio(tan(sin(externalVal)),min(max(sin(noise(externalVal,min(x,audio(y,x)))),y),cos(pow(max((externalVal+y),noise(sin(externalVal),externalVal)),pow((externalVal+x),((externalVal+externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "tan(mod(noise(min(y,mod((x+tan(externalVal)),y)),y),max(max(audio(x,externalVal),x),(audio(externalVal,max((min((max(((noise(y,sin(y))/mod(y,tan(tan(y))))/((sin(x)*y)*tan((externalVal/max(x,externalVal))))),pow(x,max(audio(y,audio(tan(externalVal),min(externalVal,sin(externalVal)))),((cos(x)*y)+(noise(y,x)*mod(max(externalVal,noise(cos(((pow(x,max(pow(tan(y),y),min((externalVal/(x/audio(externalVal,cos(noise(externalVal,externalVal))))),min(cos(mod(sin(externalVal),tan(max(y,mod((externalVal+y),y))))),y))))+x)/audio((sin(tan(externalVal))/mod(externalVal,mod(externalVal,externalVal))),max(mod(x,externalVal),x)))),x)),x))))))-x),x)+x),min(y,sin(x))))/x))))",
            "g": "audio(max(cos(externalVal),y),mod(tan(sin(mod(externalVal,cos(x)))),sin(pow(noise((externalVal-y),tan(mod(min((externalVal-y),mod((externalVal*externalVal),externalVal)),pow(sin(x),((externalVal+externalVal)*x))))),pow((x/x),(pow((x/x),((externalVal+externalVal)-x))/x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "cos(pow(min(min(y,mod((x*tan(externalVal)),y)),y),tan(max(audio(x,externalVal),x))))",
            "g": "audio(sin(cos(externalVal)),mod(tan(sin(noise(externalVal,tan(x)))),(pow(max((externalVal+x),min((y/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)*x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(min(max(y,pow((x-cos(externalVal)),y)),y),min(cos(audio(x,externalVal)),(audio(externalVal,max((min((tan(cos((mod(y,cos(x))*min(x,tan((x/(pow(externalVal,min(x,mod(cos(y),y)))*audio(pow(max(x,audio(tan(x),mod(pow(audio(x,x),pow(pow(y,mod(sin(audio(y,cos((sin(x)*y)))),y)),min(x,(y+y)))),mod(externalVal,(x+(((externalVal*externalVal)-y)/cos(max(cos((x+x)),x)))))))),y),externalVal))))))))+x),x)+x),noise(externalVal,sin(x))))/y))))",
            "g": "audio((x*x),noise(tan((mod(externalVal,tan(x))/y)),sin(audio(max((externalVal+y),min(sin(y),externalVal)),pow((y+externalVal),((externalVal*externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,x)",
            "b": "tan(audio(min(min(y,mod((x+max(externalVal,y)),y)),y),min(cos(pow(x,externalVal)),(mod(externalVal,max((tan((max(cos((noise(x,sin(x))/min(y,tan((x*(audio(externalVal,max(x,pow(cos(y),y)))-audio(audio(max(x,audio(cos(x),min(audio(pow(x,x),pow(min(y,audio((pow(x,(cos((x/externalVal))/x))+tan((mod(y,audio(y,y))*(cos(x)-pow(x,x))))),y)),cos(x))),mod(y,(x+((sin(externalVal)*y)*tan(min(cos((x+x)),x)))))))),y),externalVal))))))),max(x,min(audio(y,pow(min(externalVal,externalVal),min(externalVal,max(externalVal,noise(sin(x),externalVal))))),(sin(tan(y))-(min(x,y)-min(tan(externalVal),x))))))+x))-x),mod(externalVal,sin(x))))/y))))",
            "g": "audio(cos(audio(y,x)),noise(sin((noise(externalVal,tan(x))/externalVal)),sin(pow(tan((externalVal+y)),mod(sin(x),pow((x*x),mod(y,y)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "sin(noise(mod(tan(y),y),mod(max((cos((y/mod(sin(pow(noise(audio(sin(y),min((noise(externalVal,externalVal)*mod(x,x)),y)),mod(x,audio(x,min(y,sin(x))))),y)),pow(x,sin(x)))))-audio(x,(audio(x,(externalVal/tan(x)))-externalVal))),x),(audio(externalVal,cos((mod((max(tan((pow(y,(y/(x*y)))/noise(y,tan((x+(pow(externalVal,tan(x))+pow(audio(max(x,pow((x*x),max(pow(noise(x,x),audio(pow(y,mod((audio(x,(sin(cos(x))*x))+(tan(noise(externalVal,audio(y,x)))/pow(y,externalVal))),y)),cos(x))),noise(externalVal,(x*sin((sin(externalVal)*y))))))),y),externalVal))))))),noise(x,mod(pow(x,pow(min(externalVal,externalVal),tan(externalVal))),(tan(tan(y))/sin(mod(y,y))))))-x),y)-x)))+x))))",
            "g": "audio(cos(cos(externalVal)),max(max((externalVal+y),noise((externalVal/externalVal),externalVal)),tan(audio(cos((externalVal+y)),mod((x-x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(min(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(cos(y))*audio(x,(audio(x,sin(externalVal))-y)))),(audio(y,max((mod((max(cos((mod(y,(y/(x-x)))/min(y,max((x-(audio(externalVal,sin(x))+pow(pow(max(x,audio((x/x),noise(mod(mod(x,x),audio(pow(y,pow((audio(x,(sin(cos(x))*y))*(sin(mod(externalVal,pow(y,y)))-mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((cos(externalVal)*y)*tan(tan(cos((x*x)))))))))),y),externalVal))),pow(externalVal,(cos(tan(y))-audio(y,(mod(x,(externalVal*min(y,noise((min(externalVal,x)-externalVal),externalVal))))*y)))))))),noise(x,mod(pow(x,mod(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))*(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),max(y,(x*(pow(x,noise(x,x))*x)))))*x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal*externalVal),externalVal)),max(pow(cos((externalVal+y)),mod((x*x),pow(y,x))),x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "min(pow(min(min(y,mod((x+max(externalVal,y)),y)),y),min(tan(pow(x,externalVal)),(pow(externalVal,max((noise((max(cos(cos(min(y,sin(x)))),pow(x,min(pow(externalVal,mod(max(externalVal,externalVal),min(externalVal,tan(externalVal)))),((min(x,tan(externalVal))-x)-(max(x,x)+min(max(externalVal,min(max(tan((min(x,min(audio(sin(x),y),noise(tan(externalVal),min(sin(pow(cos(externalVal),max(tan(y),(y/externalVal)))),externalVal))))+x)),x),x)),x))))))*x),y)+x),noise(externalVal,(x/(audio(x,pow(x,x))/x)))))/y))),y)",
            "g": "pow(cos(pow(y,y)),noise(tan(cos(pow(externalVal,max(x,pow(y,y))))),sin(pow(min((externalVal+y),min((min((externalVal+y),max((externalVal/externalVal),externalVal))/externalVal),externalVal)),audio((x/x),((externalVal*externalVal)*x))))))"
          }
        }
      ],
      "timestamp": "22h:50m:26s"
    },
    {
      "generation": 12,
      "ascendantID": "w5vu57zw-6rgs-cx7a-x8vf-joduy3enl2s9",
      "id": "iboh9l2o-bv0f-wrgx-wuak-q47asir0seo9",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(max(y,pow((x+max(externalVal,y)),y)),y),noise(tan(audio(x,externalVal)),(pow(externalVal,cos((max((max(cos((min(y,(x/(x*x)))/max(y,min(sin(x),mod(externalVal,(((y*pow(cos(audio(max(mod(sin(externalVal),sin(max(mod(x,externalVal),x))),audio(x,noise(x,max(y,sin(x))))),y)),audio(x,(x/x))))*x)-mod(x,(pow(y,(externalVal/tan(x)))*externalVal)))))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,max(externalVal,noise(sin(x),externalVal))))),((tan(y)/y)+(tan(x)-min(max(externalVal,noise(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(tan(y)))/externalVal),externalVal))))+x))),x)),x))))))-x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(tan((mod(externalVal,max(x,(externalVal+y)))*externalVal)),(audio(max(mod((y*externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),mod((x-x),pow(y,x)))),y),tan(noise(mod((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x-tan(externalVal)),y)),y),min(cos((tan(cos(y))*audio(x,(audio(x,sin(externalVal))/y)))),(audio(externalVal,max((mod((max(sin((mod(y,(y/(x-x)))-min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,y),pow(pow(y,pow((audio(x,((cos(x)/y)/y))+(cos(mod(externalVal,pow(y,y)))*noise(externalVal,y))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)-y)*max(max(cos((x*x)),x),(max(x,mod(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(tan(cos(y))-audio(x,(pow(x,(externalVal*min(y,noise((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(mod(x,pow(max(externalVal,externalVal),cos(externalVal))),(tan(tan(y))-(pow(y,x)/min(tan(externalVal),x))))))-x),y)-x),max(y,(x*(pow(x,mod(x,y))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min(sin(externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x-x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "cos(noise(mod(min(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(cos(y))/audio(y,(audio(x,sin(externalVal))-y)))),(audio(y,max((mod((max(cos((mod(y,(x/(x-x)))*min(y,tan((x+(audio(externalVal,sin(x))+audio(pow(min(x,audio((x/x),noise(pow(mod(x,x),audio(pow(y,audio((audio(x,(sin(cos(x))*x))*((mod(externalVal,mod(y,y))/(sin(x)+noise(y,x)))-mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((cos(externalVal)*y)*tan(tan(cos((x*x)))))))))),y),externalVal))))))),noise(x,mod(pow(x,mod(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))/(mod(x,x)/min(tan(externalVal),x))))))-x),y)-x),max(y,(x*(mod(x,noise(x,x))*x)))))-x))))",
            "g": "audio(cos(cos(externalVal)),tan(min((externalVal+y),min((externalVal*externalVal),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,x)",
            "b": "tan(audio(min(noise(y,mod((x+max(externalVal,y)),y)),y),min(cos(pow(x,externalVal)),(mod(externalVal,tan((tan((tan(cos((min(y,sin(x))*min(y,tan((x*(audio(externalVal,max(x,pow(sin(y),y)))-audio(audio(max(x,audio(cos(x),min(audio(pow(x,x),pow(max(y,pow((mod(x,(cos((x/externalVal))/x))+tan((pow(y,audio(y,y))*(cos(x)*mod(x,x))))),y)),cos(x))),mod(y,(x+(((externalVal/y)*y)*tan(min(sin((x+x)),x)))))))),y),externalVal))))))))+x))+x)))/y))))",
            "g": "audio(cos(audio(y,x)),noise(sin((noise(externalVal,tan(x))/externalVal)),sin(pow(tan((externalVal+y)),mod(sin(x),pow((x*x),pow(y,x)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(mod(max(y,audio((x+tan(externalVal)),y)),y),min(tan((tan((y/mod(cos(audio(noise(audio(cos(externalVal),mod((min(externalVal,externalVal)/mod(x,x)),externalVal)),pow(x,pow(x,cos(y)))),y)),pow(x,cos(x)))))/audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,tan((pow((max(cos((pow(y,(y/(x*x)))*max(y,max((x+(audio(externalVal,tan(x))+mod(pow(max(x,pow((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,sin((tan(x)/y)))-(sin(noise(externalVal,pow(y,y)))*noise(externalVal,y))),y)),tan(y))),min(externalVal,(x/((sin(externalVal)/y)*min(min(cos((x*x)),x),(min(x,pow(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,((cos(y)/x)-audio(x,(mod(x,(externalVal*min(x,min((min(externalVal,x)+externalVal),externalVal))))/y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),max(externalVal,cos(externalVal)))),(sin(tan(y))*(mod(y,y)/max(tan(externalVal),x))))))-x),y)+x)))/x))))",
            "g": "audio(sin(cos(y)),min(min((externalVal-y),noise((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(tan(y),y),min(tan((tan(sin(y))*audio(x,(audio(y,sin(externalVal))*y)))),(audio(externalVal,max((mod((tan(cos((mod(y,(x/(x-x)))/max(x,max((x-(audio(externalVal,tan(x))+pow(pow(min(x,audio((x/y),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((tan(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*pow(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)-y)*min(max(cos((x*x)),x),(min(y,pow(externalVal,y))*x)))))))),y),externalVal))),mod(externalVal,(sin(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((mod(y,x)-externalVal),externalVal))))/y)))))))))-x),y)-x),min(y,(x-(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin((externalVal*externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(audio(cos((externalVal+y)),mod((x*x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(max(max(y,pow((x-max(externalVal,y)),y)),y),noise(tan(audio(x,externalVal)),(pow(externalVal,cos((max((max(tan(sin(min(y,(x/(x*x))))),mod(x,tan(mod(externalVal,audio(noise(externalVal,externalVal),max(externalVal,max(externalVal,min(sin(x),externalVal))))))))*x),y)+x)))*x))),y)",
            "g": "audio(tan(audio(y,x)),noise(tan((mod(externalVal,pow(tan((externalVal+y)),mod((x/x),pow(sin(x),mod(y,y)))))*externalVal)),(audio(min(mod((externalVal*externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(x),(noise(max(max(sin(pow(cos((externalVal+x)),mod((x*x),pow(y,x)))),y),tan(noise(mod((y/y),mod(sin(externalVal),externalVal)),min((x/x),((externalVal-externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "cos(pow(min(noise(y,noise((x-tan(externalVal)),y)),y),tan(max(audio(x,externalVal),x))))",
            "g": "audio(tan(cos(externalVal)),mod(tan(sin(noise(externalVal,tan(x)))),sin(pow(max((externalVal-x),min((y/externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "tan(mod(mod(max(y,mod((x+max(externalVal,x)),y)),y),min(max((max(sin(y),x)*audio(x,(audio(x,sin(externalVal))*y))),x),(audio(externalVal,max((mod((max(max((mod(y,(x*(x+x)))/noise(x,tan((x+(audio(externalVal,tan(x))+pow(pow(max(x,pow(sin(x),noise(pow(noise(x,x),mod(pow(y,audio((audio(x,sin((tan(x)*x)))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),cos(y))),noise(externalVal,(x*((sin(externalVal)-y)*min(tan(tan((x*x))),(min(y,audio(externalVal,y))/x)))))))),y),externalVal)))))),((tan(x)/y)*tan((externalVal/tan(x))))),min(x,mod(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(sin(y))+(pow(y,y)/min(tan(externalVal),x))))))-x),y)+x),max(externalVal,(x/(pow(x,noise(x,x))*x)))))*x))))",
            "g": "audio(sin(cos(externalVal)),max(min((externalVal+y),min(sin(externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "tan(pow(max(noise(y,pow((x+max(externalVal,y)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,cos((max((max(cos((noise(y,(x/(x*x)))/max(y,min(sin(x),mod(externalVal,(((y*pow(sin(pow(max(mod(sin(externalVal),sin(max(mod(x,externalVal),x))),audio(x,noise(x,tan(y)))),y)),audio(x,(x/x))))*x)-pow(x,(audio(x,(externalVal/cos(x)))*externalVal)))))))),pow(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,mod(sin(x),externalVal))))),((max(x,tan(externalVal))/y)+(tan(x)-min(max(externalVal,min(tan(cos((noise(x,min(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),sin(tan(y)))/externalVal),externalVal))))-x))),x)),x))))))-x),y)+x)))*x))))",
            "g": "audio(tan(audio(y,x)),min(tan((mod(externalVal,max(x,(externalVal+y)))/y)),(audio(min(mod((y*externalVal),externalVal),min((externalVal*externalVal),externalVal)),audio((y/x),(noise(min(max(sin(pow(cos((externalVal+x)),mod((x-x),audio(y,y)))),x),tan(noise(mod((externalVal-y),mod(sin(y),externalVal)),tan((x/x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),mod(tan((max(sin(y),x)*audio(x,(audio(x,cos(externalVal))*y)))),(audio(externalVal,max((noise((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(mod(externalVal,tan(x))-pow(audio(tan(x),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,mod(max(externalVal,externalVal),tan(externalVal))),(tan(cos(x))+(mod(y,y)/noise(tan(externalVal),x))))))*x),y)*x),min(y,(x*(pow(x,mod(x,x))/x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+x),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),noise((x*x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(audio(mod(min(y,pow((x-tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(audio(externalVal,cos((min((max(tan(sin(min(y,(x/(x+y))))),noise(x,min(audio(y,pow(max(externalVal,externalVal),min(externalVal,cos(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,noise(cos(((noise(x,max(audio(cos(y),y),noise(cos(externalVal),noise(sin(noise(sin(externalVal),tan(max(y,audio((externalVal-y),y))))),externalVal))))-x)/audio((sin(tan(y))-noise(y,mod(externalVal,externalVal))),((externalVal/externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))),y)",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,pow(y,y)))),y),cos(pow(max((externalVal-x),noise((externalVal/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)+x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "tan(pow(mod(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),(audio(externalVal,tan((min((max(cos(sin(min(y,(x/(x+y))))),noise(x,max(audio(y,pow(max(externalVal,externalVal),max(externalVal,tan(externalVal)))),((tan(y)/y)+(min(x,x)/min(max(externalVal,min(cos(((mod(x,max(pow(tan(y),y),min(cos(externalVal),noise(sin(noise(sin(externalVal),max(max(y,audio((externalVal+y),y)),(y/externalVal)))),externalVal))))+x)/audio((cos(tan(externalVal))*noise(externalVal,mod(externalVal,externalVal))),(sin(externalVal)-(y+x))))),x)),x))))))-x),x)-x)))/x))))",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,cos(x))),y),cos(pow(max((externalVal+x),noise((y*externalVal),externalVal)),audio((x*x),((externalVal+externalVal)+x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(externalVal)",
            "b": "max(audio(min(min(y,pow((x+max(externalVal,y)),y)),y),min(cos(pow(x,externalVal)),(mod(externalVal,max((tan((max(max((min(y,sin(x))/max(y,cos((x/(mod(externalVal,max(x,pow(cos(y),y)))-audio(audio(noise(x,pow(tan(x),max(audio(pow(x,x),pow(min(y,audio((audio(y,sin(cos(sin(x))))+cos((noise(externalVal,audio(y,y))-(cos(x)-audio(x,x))))),y)),cos(y))),mod(y,(x+((tan(externalVal)*y)-tan(noise(cos((x+x)),x)))))))),y),externalVal)))))),((sin(x)+x)*tan((externalVal+tan(x))))),(y/(x-y)))-x))+x),min(externalVal,(x/(audio(x,pow(x,y))+x)))))*y))),y)",
            "g": "pow(cos(audio(externalVal,x)),noise(cos((mod(externalVal,cos(x))/externalVal)),(mod(tan(mod((x*x),pow(y,x))),pow((y/x),((externalVal*externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "max(audio(min(max(y,mod((x+tan(externalVal)),y)),y),noise(cos(pow(x,externalVal)),(audio(externalVal,max((max((max(tan(sin(min(y,sin(x)))),(y/(x*x)))-x),y)+x),mod(externalVal,(x/(audio(x,pow(x,y))+x)))))/y))),y)",
            "g": "pow(cos(audio(y,x)),mod(cos((pow(externalVal,tan(x))/externalVal)),(pow(max(mod((x*x),pow(y,y)),max(sin(externalVal),externalVal)),pow((y/x),((externalVal*externalVal)/x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(noise(mod(min(y,mod((x-tan(externalVal)),y)),y),noise(tan(audio(x,externalVal)),(audio(externalVal,tan((mod((max(cos((mod(y,sin(x))/min(x,tan((x*(pow(externalVal,min(x,pow(tan(y),y)))*audio(pow(max(y,audio(max(x,x),(mod(max(mod(cos(y),min(tan(min(externalVal,externalVal)),externalVal)),audio(y,mod(x,max(y,sin(x))))),y)/mod(externalVal,x)))),y),externalVal))))))),max(x,max(audio(y,pow(tan(y),max(externalVal,cos(externalVal)))),(sin(sin(y))+(min(x,x)*min(max(externalVal,pow((cos((mod(x,max(pow(cos(y),y),max(sin(externalVal),noise(sin(audio((externalVal/tan(mod(sin(x),noise(y,externalVal)))),max(tan(y),(y*externalVal)))),externalVal))))+x))/y),y)),x))))))+x),x)-x)))*y))))",
            "g": "audio(audio((x-x),((externalVal*externalVal)-x)),noise(cos((noise(externalVal,cos(x))/y)),sin(audio(min((externalVal*y),min((y*externalVal),externalVal)),audio((externalVal+externalVal),((externalVal*externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(max(y,pow((x-max(externalVal,y)),y)),y),min(tan(audio(x,externalVal)),(pow(externalVal,cos((max((max(cos((min(y,(x/(x*x)))/max(y,min((x/(pow(externalVal,tan(x))*audio(audio(max(x,audio(cos(x),min(pow(pow(x,x),pow(min(y,audio((audio(x,cos(((x/externalVal)/y)))-cos((mod(externalVal,pow(y,y))*(cos(x)+mod(x,x))))),y)),cos(y))),max(externalVal,(x+sin((cos(externalVal)/y))))))),y),externalVal))),noise(externalVal,(((y-pow(cos(audio(max(mod(sin(externalVal),sin(tan(mod(x,externalVal)))),pow(x,noise(x,tan(y)))),y)),audio(x,(x*x))))*x)-mod(x,(pow(y,(externalVal*tan(x)))*externalVal)))))))),mod(x,max(pow(externalVal,pow(noise(externalVal,externalVal),min(externalVal,tan(externalVal)))),((tan(y)/y)+(cos(x)*min(min(externalVal,min(tan(cos((noise(x,max(audio(min(y,externalVal),y),mod(tan(externalVal),max((mod(cos(externalVal),sin(tan(y)))/externalVal),externalVal))))+x))),x)),x))))))-x),x)+x)))*y))),y)",
            "g": "pow(tan(audio(y,x)),min(tan((mod(externalVal,min(x,(externalVal+y)))/y)),(audio(max(mod((externalVal-externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio((y/x),(mod(max(max(tan(noise(tan((externalVal+x)),pow((x*x),pow(y,x)))),y),tan(noise(max(sin(noise(externalVal,max(x,pow(y,x)))),y),max((x*x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(min(y,pow((x-max(externalVal,y)),y)),y),noise(tan(pow(x,externalVal)),(pow(externalVal,cos((max((max(tan(sin(max(y,(x/(x+x))))),mod(x,tan(pow(externalVal,mod(pow(noise(x,x),audio(pow(y,audio((audio(x,((cos(x)/y)*y))+((mod(externalVal,audio(y,x))/(sin(x)+noise(y,x)))/mod(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))*x))))))))))-x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),max(tan((pow(externalVal,max(x,(externalVal+y)))*externalVal)),(audio((externalVal+x),audio(sin(x),(min(max(max(cos(pow(cos((externalVal+x)),audio((x-x),audio(y,x)))),y),tan(noise(mod((externalVal-y),mod((y/externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "cos(mod(pow(noise(y,mod((x+tan(externalVal)),y)),y),min(tan((max(sin(y),x)-audio(x,(audio(x,sin(externalVal))-y)))),(audio(externalVal,max((noise((tan(cos((mod(y,(y/(x*x)))/max(y,max((x-(audio(externalVal,tan(x))-noise(audio(max(x,pow((x*y),mod(pow(noise(x,x),pow(audio(externalVal,pow((audio(x,(cos(sin(x))/y))+(sin(mod(externalVal,mod(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x/((sin(externalVal)*y)-max(max(cos((mod(y,(mod(tan(cos(y)),((x+cos(max(x,externalVal)))-externalVal))/min(tan(externalVal),(x+y))))-x)),x),(min(x,audio(externalVal,externalVal))*x)))))))),y),externalVal))),mod(externalVal,(cos(cos(y))-audio(x,(min(x,(externalVal-max(y,noise((min(y,x)+externalVal),externalVal))))*y)))))))))*x),y)+x),min(y,(x-(pow(x,noise(x,y))*x)))))/x))))",
            "g": "audio((cos(externalVal)/y),min(noise((externalVal-y),min((externalVal/externalVal),externalVal)),cos(audio(cos(min(min((externalVal+x),min(sin(cos(externalVal)),externalVal)),tan(mod(cos((externalVal+y)),noise(sin(x),audio(y,y)))))),mod((x/x),pow(y,x))))))"
          }
        }
      ],
      "timestamp": "22h:50m:34s"
    },
    {
      "generation": 13,
      "ascendantID": "iboh9l2o-bv0f-wrgx-wuak-q47asir0seo9",
      "id": "gyachg0c-nvpr-2fw2-ub4j-v64o8rkt57ef",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(max(y,pow((x+max(externalVal,y)),y)),y),noise(tan(audio(x,externalVal)),(pow(externalVal,cos((max((max(cos((min(y,(x/(x*x)))/max(y,min(sin(x),mod(externalVal,(((y*pow(cos(audio(max(mod(sin(externalVal),sin(max(mod(x,externalVal),x))),audio(x,noise(x,max(y,sin(x))))),y)),audio(x,(x/x))))*x)-mod(x,(pow(y,(externalVal/tan(x)))*externalVal)))))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,max(externalVal,noise(sin(x),externalVal))))),((tan(y)/y)+(tan(x)-min(max(externalVal,noise(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(tan(y)))/externalVal),externalVal))))+x))),x)),x))))))-x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(tan((mod(externalVal,max(x,(externalVal+y)))*externalVal)),(audio(max(mod((y*externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),mod((x-x),pow(y,x)))),y),tan(noise(mod((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(externalVal)",
            "b": "max(audio(min(min(y,audio((x+max(externalVal,y)),y)),y),min(tan(audio(x,externalVal)),(mod(externalVal,max((tan((max(max((min(y,sin(x))/max(y,cos(sin(x)))),((cos(x)+x)*tan((externalVal+tan(x))))),(y/(x-y)))-x))+x),min(y,(x*(audio(x,pow(x,y))+x)))))*y))),y)",
            "g": "pow(cos(audio(externalVal,x)),noise(cos((mod(externalVal,tan(x))/externalVal)),(mod(tan(mod((x*x),pow(y,x))),pow((y/y),((externalVal*externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),noise(cos((tan(sin(y))*audio(x,(audio(y,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((pow(y,(y/(x-x)))*min(y,max((x-(audio(externalVal,tan(x))+audio(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((tan(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,sin(x))))),y),externalVal))),pow(externalVal,(cos(cos(y))*audio(x,(mod(x,(externalVal*min(y,noise((min(externalVal,x)-externalVal),externalVal))))/y)))))))),min(x,mod(pow(y,pow(max(externalVal,externalVal),max(externalVal,tan(externalVal)))),(cos(tan(y))-(mod(y,y)/min(cos(externalVal),x))))))+x),y)-x),noise(y,(x*(pow(x,mod(x,x))/x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),noise((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),pow((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(x+max(min(y,externalVal),y))))),(audio(externalVal,max((mod((max(cos(sin(mod(y,(y/(x+x))))),max(x,noise(audio(y,pow(min(externalVal,externalVal),max(externalVal,cos(externalVal)))),(cos(tan(y))-(pow(y,y)/min(tan(externalVal),x))))))-x),y)*x),max(y,(x*(pow(x,pow(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(noise((externalVal+x),min((externalVal/externalVal),externalVal)),cos(audio(cos((externalVal+y)),mod(noise((externalVal/externalVal),externalVal),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(noise(tan(y),y),min(cos((tan((y/mod(sin(audio(noise(audio(sin(y),min((min(externalVal,externalVal)/mod(x,x)),externalVal)),pow(x,pow(x,tan(y)))),y)),pow(x,sin(x)))))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((min(cos((mod(y,(x/(x*x)))-min(y,max((x*(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),pow(pow(y,pow((audio(x,(sin(cos(x))*x))-(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),cos(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,pow(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(noise(x,(externalVal/tan(y)))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(sin(cos(y))-(pow(y,x)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x/(pow(x,noise(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),max(noise((externalVal+y),min(sin(y),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(noise(mod(min(y,mod((x+tan(externalVal)),y)),y),noise(max(audio(x,externalVal),x),(audio(externalVal,tan((mod((min(cos((noise(y,sin(x))/min(x,cos((x-(pow(externalVal,min(x,pow(cos(externalVal),externalVal)))*audio(pow(max(y,audio(max(x,x),sin(noise(max(noise(cos(y),min(cos(max(externalVal,externalVal)),externalVal)),audio(x,pow(x,max(y,sin(x))))),y)))),y),externalVal))))))),tan(x))+x),x)-x)))-y))))",
            "g": "audio(audio((x-x),((externalVal*externalVal)-x)),noise(sin((noise(externalVal,cos(x))/y)),sin(mod(min((y-y),noise((y*externalVal),y)),audio((externalVal+externalVal),((externalVal*externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "tan(pow(min(noise(y,noise((x-tan(externalVal)),y)),y),cos(max(audio(x,externalVal),x))))",
            "g": "audio(cos(cos(externalVal)),mod(tan(sin(noise(externalVal,tan(x)))),(pow(max((externalVal-x),mod((y*externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "tan(pow(noise(min(y,pow((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),((cos(x)/x)/x))))",
            "g": "audio(tan(sin(y)),min(max(sin(mod(externalVal,cos(x))),y),cos(pow(max((externalVal+x),noise((y*externalVal),externalVal)),audio((x/x),((externalVal-externalVal)+x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(min(y,mod((x-max(externalVal,y)),y)),y),noise(cos(audio(x,externalVal)),(pow(externalVal,tan((max((tan(tan(sin(max(y,(x*(x+y))))))-x),y)+x)))*x))),y)",
            "g": "mod(tan(audio(y,x)),max(max((audio(externalVal,tan(x))*externalVal),y),(audio((externalVal+x),audio(sin(x),(min(tan(max(cos(audio(cos((externalVal+x)),audio((x-x),audio(y,x)))),y)),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "tan(mod(mod(max(y,mod((x+max(externalVal,x)),y)),y),noise(tan((max(sin(y),x)*audio(x,(audio(x,cos(externalVal))*y)))),(audio(externalVal,max((mod((max(max((mod(y,(x*(x+x)))/min(y,tan((x+(pow(externalVal,cos(x))+pow(mod(max(x,pow(sin(x),noise(audio(mod(x,x),mod(pow(y,audio((audio(x,sin((tan(x)*x)))+((noise(externalVal,pow(y,y))/(sin(x)+pow(y,x)))*noise(externalVal,externalVal))),y)),cos(y))),noise(externalVal,(x*(((externalVal/externalVal)-y)*min(tan(tan((x*x))),(min(y,audio(externalVal,y))/x)))))))),y),externalVal)))))),((tan(x)/y)*tan((externalVal/cos(x))))),min(x,mod(mod(x,pow(max(externalVal,externalVal),max(externalVal,cos(externalVal)))),(sin(sin(y))+cos(audio(y,y))))))-x),y)+x),max(externalVal,(x/(pow(x,mod(x,x))*x)))))*x))))",
            "g": "audio(sin(cos(externalVal)),max(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos(noise((externalVal/externalVal),externalVal)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "cos(mod(noise(min(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(cos(y))/audio(y,(audio(x,sin(externalVal))-y)))),(audio(y,min((mod((max(cos((pow(x,(x/(x*y)))/max(y,tan((x+(audio(externalVal,sin(x))+pow(pow(noise(x,audio(cos(x),noise(pow(mod(x,x),audio(audio(externalVal,audio((audio(x,(sin(cos(x))*x))*(sin(mod(externalVal,pow(y,y)))-mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((cos(externalVal)*y)*tan(tan(tan((x+x)))))))))),y),externalVal))))))),noise(x,noise(pow(x,mod(max(externalVal,externalVal),tan(externalVal))),(sin(tan(y))/(mod(x,x)/min(cos(externalVal),x))))))-x),y)-x),max(y,(x*(mod(x,mod(x,x))*x)))))-x))))",
            "g": "audio(cos(tan(externalVal)),tan(min((externalVal+y),min((externalVal/externalVal),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(externalVal,y)",
            "b": "min(mod(max(min(y,mod((x-max(externalVal,y)),y)),y),min(tan(audio(x,externalVal)),(pow(externalVal,tan((min((max(cos(sin(min(y,(x/(x*x))))),pow(x,tan(noise(externalVal,audio(noise(externalVal,externalVal),max(externalVal,max(externalVal,max(cos(x),externalVal))))))))*x),x)+x)))/x))),y)",
            "g": "audio(tan(audio(y,x)),noise(tan((noise(externalVal,pow(tan((externalVal+y)),mod((x/x),pow(sin(x),mod(externalVal,y)))))-externalVal)),(audio(min(mod((externalVal*externalVal),externalVal),min(sin(externalVal),externalVal)),audio(sin(x),(noise(max(max(sin(pow(cos((externalVal+x)),mod((x*x),audio(y,x)))),y),cos(noise(mod((y/y),mod(cos(externalVal),externalVal)),min((x/x),((externalVal-externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(externalVal)",
            "b": "max(audio(min(max(y,noise((x+tan(externalVal)),externalVal)),y),noise(cos(mod(x,externalVal)),(audio(externalVal,max((max((max(tan(sin(min(y,cos(x)))),(y/(x*x)))-x),x)+x),mod(externalVal,(x/(audio(x,pow(x,y))+x)))))*x))),y)",
            "g": "pow(sin(audio(y,x)),mod(cos(sin(pow(externalVal,tan(x)))),(pow(max(mod((x*x),pow(y,y)),max((externalVal/externalVal),externalVal)),pow((y/x),(externalVal*y)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "max(pow(mod(min(y,pow((x-max(externalVal,y)),y)),y),min(cos(pow(x,y)),(audio(externalVal,cos((min(((y/externalVal)-noise(y,x)),x)-x)))/x))),y)",
            "g": "audio(tan(cos(externalVal)),min(max(sin(noise(externalVal,max(x,pow(y,y)))),y),cos(pow(max((externalVal*x),min(min((externalVal+y),noise(sin(externalVal),externalVal)),tan(pow(cos((externalVal+y)),noise((x/x),audio(y,x)))))),audio((x*x),((externalVal+externalVal)+x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(max(y,pow((x*max(externalVal,y)),y)),y),noise(tan(audio(x,externalVal)),(pow(externalVal,cos((min((max(tan(sin(noise(x,(x/(x*x))))),mod(x,tan(mod(externalVal,audio(noise(externalVal,externalVal),min(externalVal,max(externalVal,min(sin(x),externalVal))))))))*x),x)+x)))*x))),y)",
            "g": "audio(cos(pow(y,x)),mod(tan((mod(externalVal,pow(tan((externalVal+y)),mod((x/x),pow(sin(x),mod(y,y)))))-externalVal)),(audio(min(pow((externalVal*externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(x),(noise(max(min((pow(cos((externalVal+x)),mod((x*x),audio(y,y)))/externalVal),y),tan(noise(mod((y-x),mod(sin(externalVal),externalVal)),min((x/x),((externalVal-externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "cos(pow(pow(max(y,pow((x+tan(externalVal)),externalVal)),externalVal),mod(tan((max(sin(y),x)*audio(x,(audio(x,cos(externalVal))*y)))),(audio(externalVal,max((noise((min(cos((mod(y,(y*(x-x)))*min(y,max((x+(mod(externalVal,max(x,noise(y,x)))*audio(audio(cos(x),y),externalVal))),pow(externalVal,(tan(cos(y))-pow(x,(mod(x,(externalVal/min(y,min((min(y,x)-externalVal),externalVal))))*y)))))))),min(x,min(pow(y,mod(max(externalVal,externalVal),tan(externalVal))),(tan(cos(x))+(mod(y,y)/noise(tan(externalVal),x))))))*x),y)*x),min(y,(x*(pow(x,pow(x,y))/x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+x),min((externalVal/externalVal),externalVal)),(noise(sin(externalVal),min(externalVal,y))+max(min(externalVal,y),(externalVal/y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(max(max(y,pow((x-max(externalVal,y)),y)),y),min(tan(pow(x,externalVal)),(pow(externalVal,cos((max((tan(sin((noise(x,sin(x))*tan(y))))-x),x)+x)))*y))),y)",
            "g": "pow(cos(audio(y,x)),min(tan((mod(externalVal,noise(x,(externalVal+y)))/y)),(audio(max(mod((externalVal-externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio((y/x),(mod(max(max(tan(mod(cos((externalVal+x)),audio((x*x),pow(y,x)))),y),cos(mod(max(sin(noise(externalVal,max(x,pow(y,x)))),y),tan((x*x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(min(mod(tan(y),y),noise(tan(audio(x,externalVal)),(audio(externalVal,tan((mod((min(tan((mod(y,cos(x))/noise(x,max((x*(pow(externalVal,min(x,pow(cos(y),y)))*audio(pow(x,cos(y)),externalVal))),mod(externalVal,(sin(max(y,pow((mod(max(noise(tan(y),min(sin(pow(externalVal,externalVal)),externalVal)),pow(x,mod(y,min(y,cos(x))))),externalVal)/min(externalVal,x)),audio(x,sin(x)))))-pow(x,(min(y,(externalVal*cos(x)))+externalVal)))))))),max(x,max(audio(y,audio(tan(y),max(externalVal,cos(externalVal)))),(sin(sin(y))-(min(x,y)*min(max(externalVal,pow((tan((noise(x,tan(pow(cos(y),y)))+x))/y),y)),x))))))-x),x)-x)))*y))))",
            "g": "audio(audio(mod((x*x),pow(y,x)),((externalVal*externalVal)-x)),mod(cos((noise(externalVal,cos(x))/y)),sin(audio(min((externalVal-y),max((y*externalVal),y)),audio((externalVal+externalVal),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "sin(pow(mod(cos(y),y),mod(tan((max(sin(y),x)*audio(x,(audio(x,cos(externalVal))/y)))),(audio(externalVal,max((noise((max(cos((mod(y,(y/(x*x)))*min(y,tan((x-(pow(externalVal,max(x,min(y,x)))-audio(audio(tan(x),y),externalVal))))))),max(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(tan(cos(x))+(pow(y,x)/noise(tan(externalVal),x))))))/x),y)-x),min(y,(x*(audio(x,mod(x,x))/x)))))/x))))",
            "g": "audio(sin(max(externalVal,y)),min(min((externalVal+x),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+x)),noise((x*x),audio(y,y))))))"
          }
        }
      ],
      "timestamp": "22h:50m:40s"
    },
    {
      "generation": 14,
      "ascendantID": "gyachg0c-nvpr-2fw2-ub4j-v64o8rkt57ef",
      "id": "1rv4xg9c-gopi-6ls2-84d9-pf6yc0l33oj2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(max(y,pow((x+max(externalVal,y)),y)),y),noise(tan(audio(x,externalVal)),(pow(externalVal,cos((max((max(cos((min(y,(x/(x*x)))/max(y,min(sin(x),mod(externalVal,(((y*pow(cos(audio(max(mod(sin(externalVal),sin(max(mod(x,externalVal),x))),audio(x,noise(x,max(y,sin(x))))),y)),audio(x,(x/x))))*x)-mod(x,(pow(y,(externalVal/tan(x)))*externalVal)))))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,max(externalVal,noise(sin(x),externalVal))))),((tan(y)/y)+(tan(x)-min(max(externalVal,noise(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(tan(y)))/externalVal),externalVal))))+x))),x)),x))))))-x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(tan((mod(externalVal,max(x,(externalVal+y)))*externalVal)),(audio(max(mod((y*externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),mod((x-x),pow(y,x)))),y),tan(noise(mod((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(externalVal)",
            "b": "max(audio(noise(min(y,noise((x+tan(externalVal)),externalVal)),y),noise(tan(mod(x,externalVal)),(audio(externalVal,max((max((max(tan(sin(min(y,cos(x)))),(y/(x*x)))*x),x)+x),mod(externalVal,(x/(audio(x,pow(x,y))+x)))))*x))),y)",
            "g": "pow(cos(audio(y,x)),mod(cos(cos(pow(externalVal,tan(x)))),(pow(max(mod((x*x),pow(y,y)),max((externalVal/externalVal),externalVal)),pow((y/x),(externalVal*y)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(max(noise(y,pow((x-noise(externalVal,y)),y)),y),min(tan(pow(x,externalVal)),(pow(externalVal,cos((max((tan(sin((noise(x,sin(x))*tan(y))))+x),x)-x)))*y))),y)",
            "g": "pow(cos(audio(y,x)),min(cos((pow(externalVal,mod(x,(externalVal+y)))/y)),(audio(max(mod((externalVal-externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio((y/x),(mod(tan(max(cos(mod(cos((externalVal+x)),audio((x*x),pow(y,x)))),y)),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(max(max(y,pow((x-max(externalVal,y)),y)),y),min(tan(pow(x,externalVal)),(pow(externalVal,tan((max((tan(sin((mod(x,sin(x))*tan(y))))-x),x)+x)))*y))),y)",
            "g": "pow(sin(audio(y,x)),min(cos(cos(mod(externalVal,noise(x,(externalVal+y))))),(audio(max(mod((externalVal-externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio((y/x),(mod(tan(tan(tan(mod(cos((externalVal+x)),audio((x*x),pow(y,x)))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "tan(audio(noise(min(y,mod((x-tan(externalVal)),y)),y),min(tan(pow(x,externalVal)),((cos(x)/x)/x))))",
            "g": "audio(max(sin(y),y),min(max(cos(noise(externalVal,cos(x))),y),cos(audio(max((externalVal+x),noise((y*externalVal),externalVal)),pow((x/x),((externalVal-externalVal)+x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(externalVal)",
            "b": "max(audio(min(max(y,noise((x+tan(externalVal)),y)),y),noise(cos(pow(x,externalVal)),(audio(externalVal,max((max((max(cos(sin(min(y,tan(x)))),(y/(x*x)))-x),x)+x),mod(externalVal,(x/(pow(x,audio(x,x))+x)))))*x))),y)",
            "g": "pow(cos(audio(y,x)),pow(cos(sin(pow(externalVal,tan(x)))),(pow(max(mod((x*x),mod(y,y)),max((externalVal/externalVal),externalVal)),pow((x/x),(externalVal*y)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "max(pow(max(max(y,pow((x+max(externalVal,y)),y)),y),noise(tan(audio(x,externalVal)),(pow(externalVal,max((max((max(cos((min(y,(x/(x-y)))/max(y,min(sin(x),mod(externalVal,(((x*pow(sin(audio(max(min(sin(externalVal),sin(min(mod(x,externalVal),x))),audio(y,min(x,max(y,sin(x))))),y)),audio(x,(x/x))))*x)-mod(x,(pow(y,(externalVal/tan(x)))*externalVal)))))))),mod(x,tan(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,mod(cos(x),externalVal))))))))-x),x)+x),noise(y,mod(externalVal,y))))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(tan((mod(externalVal,max(x,(externalVal+x)))*externalVal)),(audio(max(mod((externalVal*externalVal),externalVal),min(sin(externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),mod((x-x),pow(y,x)))),y),tan(noise(mod((externalVal*x),mod(sin(externalVal),externalVal)),tan(sin(x))))),externalVal)+x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "sin(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(cos((tan(sin(y))+audio(y,(x+max(min(y,externalVal),y))))),(audio(externalVal,max((mod((tan(cos(sin(mod(y,(y/(x+x))))))-x),y)+x),min(y,(x*(pow(x,audio(x,x))*x)))))/x))))",
            "g": "audio((cos(externalVal)/y),max(noise((externalVal+x),noise((externalVal/externalVal),externalVal)),sin(audio(cos((externalVal+y)),mod(noise((externalVal/externalVal),externalVal),sin(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(tan(max(y,pow((x+max(externalVal,y)),y))),min(tan(pow(x,externalVal)),(audio(externalVal,cos((max((max(cos((max(x,(x/(x*x)))/max(y,min(sin(x),noise(externalVal,(y+y)))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,noise(sin(x),externalVal))))),(sin(tan(y))+(tan(x)-min(max(externalVal,mod(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(max(y,pow((externalVal*y),y))))*externalVal),externalVal))))+x))),x)),x))))))+x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,max(x,(externalVal*y)))*externalVal)),(audio(max(mod((externalVal/externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),pow((x*x),audio(y,x)))),y),tan(mod(pow((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "tan(mod(noise(min(y,pow((x+tan(externalVal)),y)),y),noise(max((tan(tan(externalVal))/audio(y,(audio(x,cos(externalVal))-y))),x),(audio(y,min((noise((max(cos((pow(y,(x/(x*y)))/max(y,cos((x+(audio(externalVal,sin(x))+pow(mod(noise(x,audio(cos(x),noise(pow(pow(x,x),audio(audio(externalVal,audio((audio(x,(sin(cos(x))*x))-((mod(externalVal,pow(y,y))/(sin(x)+noise(y,x)))*noise(externalVal,externalVal))),y)),tan(y))),min(externalVal,sin(x))))),y),externalVal))))))),noise(x,mod(pow(x,mod(max(externalVal,externalVal),tan(externalVal))),((tan(y)/x)*(mod(x,x)/min(cos(externalVal),x))))))-x),y)-x),max(y,(x/(pow(x,mod(x,x))*x)))))-x))))",
            "g": "audio(cos(tan(externalVal)),tan(max((externalVal+y),min((externalVal/externalVal),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(noise(noise(tan(y),y),min(cos((tan((y/noise(sin(audio(noise(audio(cos(externalVal),min((noise(externalVal,externalVal)*mod(x,x)),externalVal)),pow(x,mod(y,tan(y)))),y)),audio(x,sin(x)))))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,tan((noise((min(cos((mod(y,(x/(x*y)))-min(y,max((x/(pow(externalVal,tan(x))-pow(mod(max(x,audio(sin(x),noise(cos(externalVal),noise(externalVal,(x/((sin(externalVal)-y)*min(max(cos((x*x)),x),(min(y,pow(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal/tan(y)))*y)))))))),max(x,noise(mod(y,mod(tan(externalVal),tan(externalVal))),(sin(tan(y))-(mod(y,x)/max(cos(externalVal),x))))))-x),y)-x)))/x))))",
            "g": "audio(cos(cos(externalVal)),max(noise((externalVal+x),noise(sin(y),externalVal)),tan(pow((y/y),pow((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(noise(tan(y),y),min(tan((tan(sin(y))*audio(x,(pow(x,(externalVal/tan(x)))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(x/(x-x)))*max(y,max((x+(audio(externalVal,cos(x))+mod(pow(tan(x),y),externalVal))),pow(externalVal,(cos(sin(y))-audio(x,(mod(x,(externalVal*min(y,min((mod(y,x)-externalVal),externalVal))))/y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(pow(y,y)/max(tan(externalVal),x))))))-x),y)-x),min(y,(x*(mod(x,mod(x,x))-x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(sin((externalVal+y)),mod((x*x),pow(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(noise(mod(max(y,pow((x+tan(externalVal)),y)),y),mod(max(audio(x,externalVal),x),(audio(externalVal,max((mod((max(cos((min(y,sin(x))*noise(y,max((x-(pow(externalVal,min(x,mod(tan(externalVal),externalVal)))-audio(pow(max(y,audio(max(x,x),sin(noise(max(noise(cos(y),min(cos(min(externalVal,externalVal)),externalVal)),audio(x,pow(x,max(y,cos(x))))),y)))),y),externalVal))),pow(externalVal,(cos(max(y,audio((noise(max(mod(tan(y),min((audio(externalVal,externalVal)/noise(x,x)),externalVal)),audio(x,noise(y,noise(y,sin(x))))),externalVal)/min(externalVal,x)),audio(x,(x/y)))))*pow(x,(noise(y,(externalVal*cos(x)))+externalVal)))))))),cos(x))+x),x)-x),min(externalVal,(x/(pow(x,max(x,x))+x)))))*x))))",
            "g": "audio(audio((x-x),((externalVal*externalVal)-x)),noise(sin((noise(externalVal,cos(x))/y)),sin(noise(min((y-y),noise((y/externalVal),y)),pow((externalVal+externalVal),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(mod(min(noise(y,noise((x-tan(externalVal)),y)),y),sin(max(audio(x,externalVal),x))))",
            "g": "audio(cos((audio(min(pow(sin(x),pow(y,y)),max((externalVal/externalVal),externalVal)),pow((x/x),(externalVal-y)))/x)),mod(max(sin(noise(externalVal,tan(x))),y),(pow(max((externalVal-x),mod((y*externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "max(mod(max(noise(x,mod((x+max(externalVal,y)),y)),y),noise(cos(audio(x,externalVal)),(audio(externalVal,tan((max((tan(tan((max(y,(x*(x+y)))/max(y,cos(sin(x))))))*x),y)+x)))-y))),y)",
            "g": "mod(tan(audio(y,x)),max(max((audio(externalVal,tan(x))*externalVal),y),(audio((externalVal+x),audio(sin(x),(min(tan((externalVal+externalVal)),externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(min(y,pow((x*max(externalVal,y)),y)),y),mod(tan(audio(x,externalVal)),(pow(externalVal,cos((max((max(tan(cos(noise(x,(x/(x*x))))),mod(x,tan(mod(externalVal,audio(noise(externalVal,externalVal),min(externalVal,tan(externalVal)))))))*x),x)+x)))*x))),y)",
            "g": "audio(cos(pow(y,x)),mod(tan((pow(externalVal,pow(max((externalVal+x),max((externalVal/externalVal),externalVal)),pow((x/x),pow(sin(x),pow(y,y)))))-externalVal)),(audio(min(pow((externalVal/externalVal),externalVal),pow(y,x)),pow(sin(x),(noise(max(max((mod(cos((externalVal+x)),pow((y*x),pow(y,y)))/externalVal),y),max(noise(mod((y-x),pow(cos(y),externalVal)),max((x/x),((externalVal-externalVal)-x))),x)),externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(pow(max(y,audio((x-cos(externalVal)),externalVal)),y),noise(tan((tan(sin(y))*audio(x,(audio(x,cos(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((pow(y,(y/(x+x)))*min(y,max((x+(audio(externalVal,tan(x))+audio(audio(max(x,audio(sin(x),noise(audio(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)*x)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)-y)-max(max(cos((x*x)),x),(min(y,mod(externalVal,y))*x)))))))),y),externalVal))),pow(externalVal,(cos(tan(y))-audio(x,(mod(x,(externalVal/min(y,min((min(externalVal,x)+y),externalVal))))*y)))))))),min(x,noise(mod(x,pow(max(externalVal,externalVal),cos(externalVal))),(cos(tan(y))*(pow(y,y)/noise(tan(externalVal),x))))))+x),y)-x),min(y,(x/(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(cos(cos(externalVal)),min(min((externalVal+y),noise((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),pow((x*x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "(mod(noise(cos(y),y),mod(tan((min((y/mod((audio(pow(audio(sin(y),min((min(externalVal,externalVal)/mod(x,x)),externalVal)),mod(x,pow(y,max(y,(x/(x*min(((y/externalVal)-noise(externalVal,x)),cos(y)))))))),y)/mod(externalVal,x)),pow(x,sin(x)))),x)/audio(x,(audio(x,cos(externalVal))/y)))),(audio(externalVal,max((mod((max(sin((mod(y,(y/(x*x)))/min(y,tan((x-(mod(externalVal,tan(x))+audio(pow(max(x,audio((x/y),max(audio(mod(x,x),mod(audio(y,mod((audio(x,sin((cos(x)*x)))+(cos(min(externalVal,noise(externalVal,x)))/mod(externalVal,externalVal))),y)),max(y,(x-y)))),min(externalVal,(x/(((externalVal/y)*y)-max(min(sin((x-x)),y),(noise(x,mod(externalVal,y))/x)))))))),y),externalVal))))))),min(x,noise(mod(y,mod(max(externalVal,externalVal),tan(externalVal))),(tan(cos(x))+(pow(y,x)/noise(tan(externalVal),x))))))/x),y)-x),min(y,(x*(audio(x,mod(x,x))/x)))))/x)))/y)",
            "g": "audio(sin(max(externalVal,x)),min(min((externalVal+x),min(sin(externalVal),externalVal)),tan(audio(((externalVal+x)/min((max(sin(externalVal),mod(externalVal,y))+min(pow((y/x),(mod(min(tan(cos(audio(cos((externalVal+x)),mod((x-x),audio(y,y))))),tan(mod(pow((externalVal-y),noise(cos(externalVal),externalVal)),tan((x/x))))),externalVal)-x)),(externalVal-y))),externalVal)),mod((x*x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),noise(cos((tan(sin(y))*audio(x,(audio(y,sin(externalVal))*y)))),(audio(externalVal,min((mod((tan(cos((audio(y,(y/(x-x)))/min(y,max((x-(pow(externalVal,tan(x))+audio(pow(max(x,audio((x/x),max(pow(noise(x,x),audio(pow(y,pow((audio(x,(sin(tan(x))/y))+(sin(mod(externalVal,audio(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,sin(x))))),y),externalVal))),mod(externalVal,((tan(y)/x)*audio(x,(mod(x,(externalVal*min(y,noise((mod(externalVal,x)-externalVal),externalVal))))/y)))))))))+x),y)-x),noise(y,(x*(mod(x,mod(x,x))/x)))))/x)))/y)",
            "g": "audio(sin(tan(externalVal)),min(min((externalVal-x),noise((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),pow((x*x),pow(y,x))))))"
          }
        }
      ],
      "timestamp": "22h:51m:26s"
    },
    {
      "generation": 15,
      "ascendantID": "1rv4xg9c-gopi-6ls2-84d9-pf6yc0l33oj2",
      "id": "mc0q1ima-medb-9ovf-0aft-m37qyipb0sda",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(tan(max(y,pow((x+max(externalVal,y)),y))),min(tan(pow(x,externalVal)),(audio(externalVal,cos((max((max(cos((max(x,(x/(x*x)))/max(y,min(sin(x),noise(externalVal,(y+y)))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,noise(sin(x),externalVal))))),(sin(tan(y))+(tan(x)-min(max(externalVal,mod(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(max(y,pow((externalVal*y),y))))*externalVal),externalVal))))+x))),x)),x))))))+x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,max(x,(externalVal*y)))*externalVal)),(audio(max(mod((externalVal/externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),pow((x*x),audio(y,x)))),y),tan(mod(pow((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(pow(noise(max(y,audio((x+tan(externalVal)),externalVal)),y),max(cos((tan(sin(y))+audio(y,(x+max(min(y,externalVal),y))))),(audio(externalVal,max((mod((tan(cos(sin(mod(y,(y/(x+x))))))*x),y)+x),noise(y,(x*(pow(x,audio(x,x))*x)))))/x))))",
            "g": "audio((cos(externalVal)/y),max(mod((externalVal+x),mod(sin(y),externalVal)),sin(audio(sin((externalVal+x)),mod(noise((externalVal/externalVal),externalVal),sin(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(noise(mod(max(y,pow((x+tan(externalVal)),y)),y),mod(max(audio(x,externalVal),x),(audio(externalVal,max((mod((max(cos((min(y,(x/(x-y)))*noise(y,tan((x-(pow(externalVal,min(x,mod(tan(externalVal),externalVal)))-audio(mod(tan(y),y),externalVal))))))),cos(x))-x),x)-x),min(externalVal,sin(x))))*x))))",
            "g": "pow(audio((x-x),((externalVal*externalVal)*x)),min(sin((noise(externalVal,cos(x))/y)),sin(mod(min((y-y),noise((y/externalVal),y)),pow((externalVal+externalVal),((externalVal-externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(noise(y,pow((x-noise(externalVal,y)),y)),y),min(cos(mod(x,externalVal)),(pow(externalVal,cos((max((tan(sin((noise(y,sin(x))*cos(y))))+x),x)-x)))/y))),y)",
            "g": "pow(cos(audio(y,x)),min(cos(sin(pow(externalVal,mod(x,(externalVal+y))))),sin(audio(max(mod((y+externalVal),externalVal),noise(mod(y,y),externalVal)),audio((y/x),(pow(max(max(cos(mod(tan((externalVal+x)),audio((x/x),audio(y,y)))),y),cos(noise(max((noise(externalVal,tan(x))/externalVal),y),tan((x/x))))),y)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(pow(max(y,mod((x-cos(externalVal)),externalVal)),y),mod(tan((tan(sin(y))*audio(x,(audio(x,cos(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(x,(y*(x+x)))*min(y,max((x-(audio(externalVal,tan(x))+audio(audio(max(x,audio(sin(x),noise(audio(min(x,x),audio(mod(y,pow((audio(x,((cos(x)*x)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/(((externalVal/y)-y)-min(max(sin((x/x)),x),(max(y,mod(externalVal,y))*x)))))))),y),externalVal))),pow(externalVal,(cos(tan(y))-audio(x,(mod(x,(externalVal/min(x,min((min(externalVal,x)-y),externalVal))))*y)))))))),min(x,noise(mod(x,pow(min(externalVal,externalVal),cos(externalVal))),(cos(tan(y))*(mod(x,y)/mod(max(externalVal,noise(sin(((min(x,noise(audio(tan(y),y),min(sin(externalVal),max((mod((externalVal/mod((audio((externalVal/cos(pow((x/externalVal),noise(y,externalVal)))),tan(tan(y)))/y),externalVal)),max(tan(y),(y+externalVal)))*externalVal),externalVal))))+x)*audio(sin(sin(min(externalVal,x))),((externalVal/externalVal)+(y*x))))),x)),x))))))+x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(cos(cos(y)),max(min(y,y),(externalVal/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(noise(min(min(y,noise((x-tan(externalVal)),y)),y),cos(max(audio(x,externalVal),x))))",
            "g": "audio(cos((audio(min(pow(sin(x),pow(y,y)),tan((externalVal/externalVal))),pow((x/x),(externalVal-y)))/x)),pow(max(sin(noise(externalVal,tan(x))),y),(pow(min((y+x),mod((y-externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(pow(mod(max(y,audio((x+tan(externalVal)),y)),y),noise(cos((max(sin(y),x)*audio(y,(audio(y,sin(externalVal))*y)))),(audio(externalVal,min((mod((cos(cos((audio(y,(y/(x-x)))*min(y,min((x-(pow(externalVal,tan(x))+audio(pow(max(x,audio((x/x),min(pow(mod(x,x),audio(pow(y,pow((audio(x,(sin(tan(x))/y))+(sin(mod(externalVal,audio(y,y)))-noise(externalVal,externalVal))),y)),cos(y))),noise(externalVal,sin(x))))),y),externalVal))),mod(externalVal,((tan(y)/x)*audio(x,(mod(x,(externalVal-min(y,noise((noise(externalVal,x)-externalVal),externalVal))))/y)))))))))+x),y)-x),noise(externalVal,(x*(noise(x,mod(x,x))/x)))))/x)))/y)",
            "g": "audio(sin(tan(externalVal)),max(min((externalVal-x),noise((externalVal*externalVal),externalVal)),tan(pow(cos((externalVal+y)),pow((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(tan(y),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(x*(x-x)))*min(y,max((x+(pow(externalVal,tan(x))+pow(pow(min(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((pow(x,sin((cos(x)/y)))+(sin(mod(externalVal,mod(y,x)))*mod(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x/(((externalVal/y)*y)*noise(max(max((x*x),y),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(min(externalVal,externalVal),cos(externalVal))),(cos(cos(y))-sin(mod(y,y))))))-x),y)+x),min(y,(x/(pow(x,mod(x,y))*x)))))/x))))",
            "g": "audio(cos(cos(externalVal)),max(min((externalVal+y),mod((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),noise((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(mod(min(noise(y,noise((x-tan(externalVal)),y)),y),sin(max(audio(x,externalVal),x))))",
            "g": "audio(tan((audio(max(mod(sin(x),pow(y,y)),min((externalVal/externalVal),externalVal)),pow((x*x),(externalVal-y)))/x)),mod(max((mod(externalVal,tan(x))/externalVal),y),(pow(max((externalVal-x),mod((y*externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(noise(max(y,audio((x+tan(externalVal)),y)),y),noise(tan((max(cos(y),x)/audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,min((mod((max(cos((mod(y,(y/(x-x)))*max(y,max((x+(audio(externalVal,cos(x))+pow(pow(max(x,audio((x*x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))-(sin(mod(externalVal,mod(y,y)))*noise(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x*(((externalVal/y)*y)*max(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)+externalVal),externalVal))))/y)))))))),noise(x,min(mod(y,mod(max(y,externalVal),max(externalVal,cos(externalVal)))),(cos(tan(y))-(mod(y,y)/max(tan(externalVal),x))))))+x),y)-x),tan(y)))/x))))",
            "g": "audio(sin(cos(y)),min(min((externalVal+y),min((externalVal*externalVal),externalVal)),tan(mod(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(pow(pow(max(y,audio((x+tan(externalVal)),externalVal)),y),noise(cos((tan(sin(y))*audio(y,(audio(y,sin(externalVal))/y)))),(audio(externalVal,min((pow((tan(cos((pow(y,(y/(x*x)))/min(y,max((x-(pow(externalVal,tan(x))+audio(pow(max(x,audio((x/x),tan(pow(min(x,x),audio(pow(y,pow((audio(x,(sin(tan(x))/y))+(sin(mod(externalVal,audio(y,y)))-mod(externalVal,externalVal))),y)),tan(y)))))),y),externalVal))),mod(externalVal,((tan(y)/x)*audio(x,(mod(x,sin(externalVal))/y)))))))))+x),y)-x),noise(y,(x*(mod(x,mod(x,x))/x)))))/x)))*externalVal)",
            "g": "audio(sin(tan(y)),min(max((y+x),noise((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),pow((x*x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "max(mod(tan(max(y,mod((x+max(externalVal,y)),y))),min(tan(pow(x,externalVal)),(audio(externalVal,sin((max((max(cos((max(x,(x/(x*x)))/max(y,min(sin(x),mod(externalVal,(y+y)))))),noise(x,max(pow(externalVal,audio(min(externalVal,externalVal),max(externalVal,min(externalVal,noise((x/min(max(x,externalVal),pow(max(externalVal,externalVal),pow(y,y)))),externalVal))))),(sin(tan(y))+(tan(x)-noise(tan(externalVal),x))))))+x),y)+x)))/y))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,tan(x))*externalVal)),sin(audio(min(pow((externalVal/externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos(min(tan((externalVal+externalVal)),externalVal)),pow((x*x),audio(y,x)))),y),tan(mod(pow((y-x),mod(sin(externalVal),externalVal)),min((x/x),((externalVal*externalVal)-x))))),externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(noise(noise(max(y,pow((x+tan(externalVal)),y)),y),mod(min(audio(x,externalVal),x),(audio(externalVal,max((mod((max(cos((min(y,sin(x))*min(y,min((x-(pow(externalVal,min(x,mod(tan(externalVal),externalVal)))*audio(pow(max(x,audio(max(x,x),sin(noise(max(noise(tan(externalVal),min(cos(min(externalVal,externalVal)),externalVal)),audio(x,pow(x,max(y,cos(x))))),y)))),y),externalVal))),pow(externalVal,(cos(max(y,pow((noise(tan(pow(tan(y),noise((audio(externalVal,externalVal)/mod(x,x)),externalVal))),externalVal)/noise(externalVal,y)),audio(x,sin(x)))))*pow(x,(noise(y,(externalVal*cos(x)))+externalVal)))))))),cos(x))+x),x)-x),min(externalVal,(x/(audio(x,max(x,x))+x)))))*x))))",
            "g": "audio(audio((x-x),((externalVal-externalVal)-x)),noise(sin((noise(externalVal,cos(y))/y)),(noise(min((y-y),noise((y*externalVal),y)),pow((externalVal+externalVal),((externalVal-externalVal)*x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(pow(max(tan(y),y),noise(tan(audio(x,externalVal)),(pow(externalVal,max((max((max(sin((min(y,(x/(x-y)))/max(y,min(cos(x),mod(externalVal,(((x*pow(tan(audio(max(min(cos(y),sin(noise(noise(x,externalVal),x))),audio(x,min(x,min(y,cos(x))))),y)),audio(x,(x/x))))*x)-mod(x,(pow(y,(externalVal/max(x,noise((noise(y,x)+externalVal),externalVal))))*externalVal)))))))),mod(x,tan(pow(y,mod(noise(externalVal,externalVal),max(externalVal,min(externalVal,mod(sin(x),externalVal))))))))+x),x)+x),mod(y,pow(externalVal,y))))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(tan((mod(externalVal,min(x,(externalVal-x)))*externalVal)),(audio(max(mod((y-externalVal),externalVal),max(sin(externalVal),externalVal)),pow(sin(y),(noise(min(max(cos(pow(tan((externalVal+x)),mod((x*x),pow(y,x)))),y),tan(noise(mod((externalVal*x),mod(sin(externalVal),externalVal)),tan(sin(x))))),externalVal)+x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(mod(noise(sin(y),y),mod(tan((min((y/pow((audio(pow(audio(cos(y),max((min(externalVal,externalVal)/mod(x,x)),externalVal)),mod(x,pow(y,tan(y)))),y)/mod(externalVal,x)),pow(x,sin(x)))),x)/audio(x,sin(audio(x,cos(externalVal)))))),(audio(externalVal,max((mod((max(((mod(y,(y/(x*x)))/min(y,tan((x+(mod(externalVal,cos(x))+audio(pow(max(x,audio((x/y),max(audio(pow(x,x),audio(audio(y,mod((audio(x,sin((cos(x)/y)))*(cos(min(y,noise(externalVal,x)))-pow(externalVal,externalVal))),y)),min(y,(x-y)))),min(externalVal,(x/(((externalVal/y)*y)-max(min(sin((x-x)),y),sin(max(x,pow(externalVal,y)))))))))),y),externalVal))))))/((cos(x)/x)/tan((externalVal/max(y,y))))),min(x,min(mod(y,mod(max(externalVal,externalVal),tan(externalVal))),(tan(cos(x))+sin(pow(y,x))))))/x),y)-x),noise(externalVal,(y/(audio(x,mod(x,x))/x)))))/x)))/y)",
            "g": "audio(sin(max(externalVal,x)),min(min((externalVal-x),min(sin(externalVal),externalVal)),tan(audio(((externalVal+x)/min((tan(sin(externalVal))+min(pow((y*x),(pow(min(tan(sin(audio(cos((externalVal+x)),mod((x*x),audio(y,x))))),tan(mod(pow((externalVal+x),noise(sin(y),externalVal)),tan((x-x))))),externalVal)-x)),(externalVal-y))),externalVal)),mod((x*x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(pow(max(max(y,audio((x+tan(externalVal)),y)),y),min(tan(audio(x,externalVal)),(pow(externalVal,cos((min((tan(tan((min(y,(x-(x/x)))/max(y,noise(sin(x),mod(externalVal,(((y*audio(cos(audio(max(mod(tan(y),sin(max(mod(x,externalVal),x))),audio(x,min(x,max(y,(x/(x-noise(((y/externalVal)+tan(externalVal)),tan(x)))))))),y)),audio(x,(x/x))))*x)-mod(x,(pow(y,(externalVal/tan(x)))*externalVal)))))))))-x),x)-x)))/y))),y)",
            "g": "pow(max(audio(y,x),y),min(max((mod(externalVal,tan(x))*externalVal),y),(audio(max(min((y*externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(sin(mod(tan((externalVal+x)),mod((x-x),pow(y,y)))),y),tan(noise(mod((externalVal-y),pow(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "cos(pow(noise(max(y,audio((x+cos(externalVal)),externalVal)),y),noise(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))/y)))),(audio(externalVal,max((noise((max(cos((pow(y,(y/(x*y)))*min(y,max((x+(audio(externalVal,tan(x))+audio(mod(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)-min(min(cos((x-x)),y),sin(min(y,mod(externalVal,y)))))))))),y),externalVal))),mod(externalVal,(cos(cos(y))-pow(x,(mod(x,(externalVal/min(y,noise((max(externalVal,x)-externalVal),externalVal))))*y)))))))),noise(x,min(audio(x,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))*(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,pow(x,x))/x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min(sin(externalVal),externalVal)),tan(audio(cos((externalVal+y)),noise((x*x),pow(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "tan(mod(max(min(y,noise((x-tan(externalVal)),y)),y),cos(tan(audio(x,externalVal)))))",
            "g": "audio(cos((pow(min(pow(sin(x),audio(y,y)),max((externalVal/externalVal),externalVal)),audio((x/x),(externalVal+x)))/x)),mod(max(sin(noise(externalVal,tan(x))),y),(pow(min((externalVal*x),noise((y/externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "max(mod(min(tan(y),y),noise(tan(pow(x,externalVal)),(pow(externalVal,max((max((max(sin((min(y,(x*(x-y)))*tan(y))),mod(x,tan(audio(y,audio(mod(externalVal,externalVal),min(externalVal,min(externalVal,mod(tan(x),externalVal))))))))-x),x)+x),noise(y,pow(externalVal,y))))*y))),y)",
            "g": "pow(tan(audio(y,x)),max(cos((mod(externalVal,max(x,(externalVal+x)))*externalVal)),(pow(min(mod((externalVal*externalVal),externalVal),noise((externalVal/externalVal),externalVal)),pow(sin(x),(noise(max(max(cos(pow(cos((externalVal+y)),mod((x-x),pow(y,x)))),y),tan(min(mod((externalVal*x),mod(sin(externalVal),externalVal)),tan(sin(x))))),externalVal)+x)))/x)))"
          }
        }
      ],
      "timestamp": "22h:51m:43s"
    },
    {
      "generation": 16,
      "ascendantID": "mc0q1ima-medb-9ovf-0aft-m37qyipb0sda",
      "id": "566nn6b1-m8hy-10bs-8259-ikviufwpvkta",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)*min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(tan(max(y,pow((x+max(externalVal,y)),y))),min(tan(pow(x,externalVal)),(audio(externalVal,cos((max((max(cos((max(x,(x/(x*x)))/max(y,min(sin(x),noise(externalVal,(y+y)))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,noise(sin(x),externalVal))))),(sin(tan(y))+(tan(x)-min(max(externalVal,mod(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(max(y,pow((externalVal*y),y))))*externalVal),externalVal))))+x))),x)),x))))))+x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,max(x,(externalVal*y)))*externalVal)),(audio(max(mod((externalVal/externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),pow((x*x),audio(y,x)))),y),tan(mod(pow((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "max(noise(noise(min(y,noise((x-cos(externalVal)),y)),y),tan(max(audio(x,externalVal),x))),y)",
            "g": "audio(cos((audio(max(pow(sin(x),pow(y,y)),tan((externalVal*externalVal))),audio((x/x),(externalVal+y)))/x)),pow(max(sin(audio(min(tan(sin(audio(cos((externalVal+x)),mod((x*x),audio(y,x))))),max(mod(mod((externalVal+x),noise((y/externalVal),externalVal)),tan((x-x))),x)),externalVal)),y),(pow(min((externalVal+x),noise((y-externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),noise(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(tan((mod(x,(x/(x-x)))*min(y,max((x+(mod(externalVal,tan(x))+audio(audio(min(x,audio((x/x),min(pow(noise(x,x),pow(pow(y,pow((pow(x,sin((cos(x)/y)))+(sin(noise(externalVal,mod(y,x)))*mod(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x/(((externalVal*y)+y)-noise(tan(max((x*x),y)),(noise(y,audio(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(cos(sin(y))+audio(y,(mod(x,(externalVal-min(y,min((mod(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(min(externalVal,externalVal),cos(externalVal))),(tan(cos(y))-sin(mod(y,y))))))-x),y)+x),min(y,sin(x))))/x))))",
            "g": "pow(cos(cos(externalVal)),max(min((externalVal+y),pow((x*x),pow(y,y))),tan(pow(cos((externalVal+y)),noise((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "tan(mod(noise(max(y,audio((x+cos(externalVal)),y)),y),mod(tan((tan(sin(y))*audio(x,(audio(x,sin(externalVal))/y)))),(audio(externalVal,max((noise((max(tan((pow(y,sin(y))/noise(y,min((x+(audio(externalVal,tan(x))-audio(mod(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)*y))+(sin(mod(externalVal,noise(y,y)))*pow(externalVal,externalVal))),y)),tan(y))),noise(externalVal,sin(x))))),y),externalVal))),mod(externalVal,(cos(cos(y))+pow(x,(mod(x,(externalVal/min(y,min((max(externalVal,x)-externalVal),externalVal))))*y)))))))),noise(x,noise(audio(x,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))*(noise(y,x)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*sin(pow(x,pow(x,x)))))))*x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+x),min((externalVal/externalVal),externalVal)),tan(audio(tan((externalVal+y)),noise((x*x),pow(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "tan(audio(max(cos(y),y),noise(tan(pow(x,y)),(pow(externalVal,max((min((min(((min(y,(x/(x*x)))/min(y,min(sin(x),mod(externalVal,(((x*pow(tan(pow(max(min(sin(externalVal),sin(min(noise(x,externalVal),x))),audio(x,min(x,min(y,cos(x))))),y)),audio(x,(x/x))))*x)-mod(x,(pow(y,(externalVal*max(y,min((noise(y,x)+externalVal),externalVal))))-externalVal)))))))/((min(x,externalVal)+x)*tan((externalVal-max(x,externalVal))))),noise(x,tan(pow(y,audio(noise(externalVal,externalVal),min(externalVal,max(externalVal,mod(sin(x),externalVal))))))))+x),x)-x),noise(y,pow(externalVal,y))))*x))))",
            "g": "pow(tan(audio(y,x)),max(tan((noise(externalVal,min(x,(externalVal-x)))*externalVal)),(audio(max(mod((y-externalVal),externalVal),min((externalVal/externalVal),externalVal)),pow(sin(y),(noise(max(max(sin(pow(tan((externalVal+x)),mod((y*x),pow(y,x)))),y),tan(min(noise((externalVal*x),noise(sin(externalVal),externalVal)),tan((x/x))))),externalVal)+x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "sin(audio(mod(max(y,audio((x+cos(externalVal)),externalVal)),y),max(cos((tan(sin(y))+audio(y,(x+max(min(y,externalVal),y))))),(audio(externalVal,max((mod((tan(cos(sin(mod(y,(y/(x+x))))))*x),y)-x),noise(y,(x*(audio(x,audio(x,x))/x)))))/x))))",
            "g": "pow((cos(externalVal)/y),max(noise((externalVal+x),mod(sin(y),externalVal)),sin(pow(cos((externalVal+x)),mod(noise((y*externalVal),externalVal),sin(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "cos(pow(noise(max(y,audio((x+cos(externalVal)),externalVal)),y),noise(tan((tan(tan(y))*audio(x,(audio(x,sin(externalVal))/y)))),(audio(externalVal,max((noise((max(cos((mod(y,(y/(x*y)))*min(y,max((x+(audio(externalVal,cos(x))+audio(mod(max(x,audio((x/x),noise(pow(noise(x,x),audio(mod(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,pow(y,y)))/mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)+min(min(cos((x-x)),x),sin(max(y,pow(externalVal,y)))))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-mod(x,(mod(x,(externalVal/min(y,noise((max(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,min(audio(x,mod(max(externalVal,externalVal),tan(externalVal))),(tan(tan(y))*(mod(y,y)/min(tan(externalVal),x))))))+x),y)-x),min(externalVal,(x*(pow(x,mod(x,y))*x)))))-x))))",
            "g": "audio(sin(tan(externalVal)),min(min((externalVal+y),min(sin(externalVal),externalVal)),tan(audio(tan((externalVal+y)),mod((x*x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(mod(cos(y),y),min(tan((tan(sin(y))/audio(x,(pow(x,sin(externalVal))/y)))),(audio(externalVal,max((noise((max(cos((noise(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+audio(pow(tan(x),y),externalVal))),audio(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal*min(y,min((noise(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,min(pow(y,pow(max(externalVal,externalVal),cos(externalVal))),(sin(tan(y))-(pow(y,y)/min(tan(externalVal),x))))))-x),y)*x),noise(externalVal,(x*(audio(x,mod(x,y))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(sin(externalVal),sin(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(mod(noise(cos(y),y),noise(tan((min((y/pow((audio(pow(audio(cos(y),max((min(externalVal,externalVal)*mod(x,x)),externalVal)),noise(x,pow(y,tan(y)))),y)/mod(externalVal,x)),audio(x,(x*x)))),x)/audio(x,cos(audio(x,sin(externalVal)))))),(pow(externalVal,tan((mod((max(sin(sin(mod(y,(y/(x*x))))),min(x,min(mod(y,mod(max(externalVal,externalVal),tan(externalVal))),(cos(cos(x))+sin(pow(y,x))))))/x),y)*x)))/x)))/y)",
            "g": "audio(sin(max(externalVal,x)),min(min((externalVal*x),min(tan(externalVal),externalVal)),tan(audio(((externalVal+x)*max((tan(sin(externalVal))+min(pow((y-x),(mod(min(tan(sin(audio(tan((externalVal+x)),mod((x*x),audio(y,x))))),tan(mod(pow((externalVal+x),noise(sin(y),externalVal)),tan((x*x))))),externalVal)*x)),(externalVal+y))),externalVal)),mod((x-x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "max(mod(tan(max(y,mod((x+max(externalVal,y)),externalVal))),min(tan(pow(x,externalVal)),(audio(externalVal,sin((max((max(cos((max(x,(x/(x*y)))/max(y,min(sin(x),noise(externalVal,(y+y)))))),mod(x,max(pow(externalVal,audio(max(externalVal,externalVal),max(externalVal,min(externalVal,noise(sin(x),externalVal))))),(sin(tan(y))+(max(x,y)-min(cos(externalVal),x))))))+x),y)-x)))/y))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,cos(x))*externalVal)),sin(audio(min(mod((externalVal/externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(cos(x),(noise(min(max(sin(mod(cos(min(tan((externalVal+externalVal)),externalVal)),pow((x*x),audio(y,x)))),y),tan(mod(pow((y-x),mod(cos(y),externalVal)),max((x/x),((externalVal-externalVal)-x))))),externalVal)*x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "cos(audio(noise(max(y,audio((x+tan(externalVal)),externalVal)),y),noise(tan((max(sin(y),x)*audio(y,(audio(x,sin(externalVal))/externalVal)))),(audio(externalVal,max((mod((max(cos((mod(y,(x/(x-x)))*min(y,max((x+(pow(externalVal,sin(x))+pow(pow(max(x,audio(sin(x),noise(pow(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))-(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)*y)-noise(tan(cos((x*x))),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(cos(tan(externalVal))-audio(x,(noise(x,(externalVal*max(y,min((min(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(audio(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))-(mod(y,y)/min(tan(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))*x))))",
            "g": "audio(cos(sin(externalVal)),min(noise((externalVal+y),min((externalVal/externalVal),externalVal)),sin(pow(cos((externalVal+y)),mod((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(pow(max(y,audio((x+cos(externalVal)),y)),y),noise(tan((max(cos(y),x)*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,min((noise((max(cos((noise(y,(y/(x-x)))*max(y,min((x+(audio(externalVal,cos(x))+pow(pow(max(x,audio((x/x),noise(mod(mod(x,y),pow(pow(y,pow((audio(x,((cos(x)/y)/y))+(sin(mod(externalVal,mod(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x*(((externalVal*y)-y)*tan(max(sin((x*x)),x)))))))),y),externalVal))),pow(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal/max(y,min((min(y,x)+y),externalVal))))/y)))))))),noise(x,noise(mod(y,mod(tan(y),max(externalVal,sin(externalVal)))),(cos(tan(y))-sin(mod(y,y))))))+x),y)-x),min(y,(y*(pow(x,mod(x,x))-x)))))/x))))",
            "g": "audio(cos(cos(externalVal)),min(min((externalVal-x),sin(sin(externalVal))),tan(mod(cos((externalVal-y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(mod(noise(min(y,noise((x-tan(externalVal)),y)),y),cos(tan(audio(x,externalVal)))))",
            "g": "audio(sin(sin(pow(max(audio(cos(x),audio(y,y)),max((externalVal/externalVal),externalVal)),pow((x/x),(externalVal+x))))),mod(max(sin(noise(externalVal,tan(x))),y),(pow(min((externalVal/y),noise((y/externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(noise(max(y,audio((x*tan(externalVal)),externalVal)),y),noise(tan((max(sin(y),x)*audio(x,(audio(x,sin(externalVal))/y)))),(audio(externalVal,max((noise((max(cos((mod(y,(y/(x-x)))*max(y,max((x-(pow(externalVal,tan(x))-pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(pow(y,audio((audio(x,sin((tan(x)/y)))+(sin(mod(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),max(y,(x+y)))),noise(externalVal,(x/((sin(externalVal)-y)*min(min(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(externalVal))+audio(x,(noise(x,(externalVal*max(y,min((noise(y,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,audio(min(externalVal,externalVal),tan(externalVal))),(cos(cos(y))-(pow(y,y)/min(cos(externalVal),x))))))-x),y)-x),min(y,(x*(pow(x,mod(x,x))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(min((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),mod((x*x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(pow(mod(max(y,audio((x+tan(externalVal)),y)),y),min(cos((max(sin(y),x)*audio(y,(pow(y,tan(externalVal))*y)))),(audio(externalVal,max((mod((cos(cos((audio(y,(y/(x*x)))*min(y,min((x-(pow(externalVal,tan(x))+audio(pow(min(x,audio((x/y),max(pow(mod(x,x),audio(audio(y,audio((pow(x,(sin(tan(x))/y))+(cos(mod(externalVal,audio(y,y)))-noise(externalVal,externalVal))),y)),cos(y))),noise(externalVal,sin(x))))),y),externalVal))),mod(externalVal,((tan(y)/x)*audio(x,(pow(x,(externalVal-min(y,noise((noise(externalVal,x)-externalVal),externalVal))))*y)))))))))+x),y)-x),noise(externalVal,(x*(mod(x,mod(x,x))/x)))))*x)))/y)",
            "g": "audio(sin(tan(externalVal)),max(min((externalVal-x),noise((externalVal*externalVal),externalVal)),tan(audio(cos((externalVal-y)),pow((x/x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(mod(max(min(y,noise((x-tan(externalVal)),y)),y),cos(min(audio(x,externalVal),x))))",
            "g": "audio(cos((pow(max(pow(cos(x),audio(y,y)),max((externalVal/externalVal),externalVal)),audio((x/x),(externalVal+x)))/x)),mod(max(sin(noise(externalVal,tan(x))),y),(pow(min((externalVal*x),min((y/externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((tan(cos(y))/audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((tan(tan((mod(y,sin(x))-max(y,tan((x+(audio(externalVal,tan(x))+audio(pow(max(x,audio((x/x),noise(pow(mod(x,y),audio(pow(y,pow((audio(x,((cos(x)/y)*y))+(sin(mod(externalVal,audio(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/(((externalVal/y)*y)/min(max(cos((x*x)),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))))))))-x),y)-x),min(y,(x/(pow(x,mod(x,x))*x)))))*x))))",
            "g": "audio(sin(cos(externalVal)),noise(audio(tan((pow(noise(pow(sin(x),audio(y,y)),max((externalVal/externalVal),externalVal)),audio((x/x),(externalVal+x)))/x)),min(max(sin(noise(externalVal,tan(x))),y),(pow(max((externalVal*x),noise(sin(y),externalVal)),audio((x/x),((externalVal+externalVal)-x)))/x))),tan(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "cos(pow(noise(max(y,audio((x-tan(externalVal)),y)),y),max(cos((tan(sin(y))+audio(y,(x+max(min(y,externalVal),externalVal))))),(audio(externalVal,max((mod((cos(tan((mod(y,(y/(x+x)))/tan(y))))*x),y)+x),mod(y,(x*(pow(x,audio(x,x))/x)))))/x))))",
            "g": "audio((cos(externalVal)/y),max(pow((externalVal+x),mod(sin(y),externalVal)),sin(audio(sin((externalVal+x)),pow(mod(sin(y),externalVal),(externalVal/y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(externalVal,x)",
            "b": "max(mod(tan(max(y,pow((x+max(externalVal,y)),y))),max(tan(pow(x,externalVal)),(audio(externalVal,cos((max((tan(cos((max(x,(x/(x-x)))/max(y,min(sin(x),noise(externalVal,(y+y)))))))+x),y)+x)))/y))),y)",
            "g": "pow(tan(audio(y,x)),min(sin((pow(externalVal,tan(x))*externalVal)),(audio(max(mod((externalVal/externalVal),externalVal),noise((externalVal*externalVal),externalVal)),audio(sin(x),(noise(min(min(cos(mod(tan((externalVal+x)),pow((x+x),audio(y,x)))),y),tan(mod(pow((externalVal-y),pow(sin(y),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)*x)))/x)))"
          }
        }
      ],
      "timestamp": "22h:51m:54s"
    },
    {
      "generation": 17,
      "ascendantID": "566nn6b1-m8hy-10bs-8259-ikviufwpvkta",
      "id": "6y7czsb7-miif-vxhk-klty-z927im8bixcz",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(tan(max(y,pow((x+max(externalVal,y)),y))),min(tan(pow(x,externalVal)),(audio(externalVal,cos((max((max(cos((max(x,(x/(x*x)))/max(y,min(sin(x),noise(externalVal,(y+y)))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,noise(sin(x),externalVal))))),(sin(tan(y))+(tan(x)-min(max(externalVal,mod(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(max(y,pow((externalVal*y),y))))*externalVal),externalVal))))+x))),x)),x))))))+x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,max(x,(externalVal*y)))*externalVal)),(audio(max(mod((externalVal/externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),pow((x*x),audio(y,x)))),y),tan(mod(pow((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(mod(cos(y),y),min(tan((tan(sin(y))/audio(x,(pow(x,sin(externalVal))/y)))),(audio(externalVal,max((noise((max(cos((noise(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+audio(pow(tan(x),y),externalVal))),audio(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal*min(y,min((noise(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,min(pow(y,pow(max(externalVal,externalVal),cos(externalVal))),(sin(tan(y))-(pow(y,y)/min(tan(externalVal),x))))))-x),y)*x),noise(externalVal,(x*(audio(x,mod(x,y))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(sin(externalVal),sin(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(pow(min(min(y,noise((x-cos(externalVal)),y)),y),cos(min(audio(x,externalVal),x))))",
            "g": "audio(cos(sin(pow(tan(audio(sin(x),audio(y,y))),audio((x/x),(externalVal+x))))),noise(max(cos(noise(externalVal,tan(x))),y),(mod(min((externalVal/x),min((y/externalVal),externalVal)),audio(sin(x),((externalVal+externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "sin(audio(mod(max(y,audio((x+cos(externalVal)),externalVal)),y),max(cos((tan(sin(y))+audio(y,(x-max(min(y,externalVal),y))))),(audio(externalVal,tan((mod((tan(cos(sin(mod(y,(x/(x+x))))))*x),y)+x)))/x))))",
            "g": "pow((cos(externalVal)/y),tan(noise((externalVal+x),mod((y/externalVal),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),noise(tan((tan(sin(y))*audio(x,(audio(y,sin(externalVal))*y)))),(audio(externalVal,max((mod((max(sin((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,sin(x))+pow(pow(max(x,audio(sin(x),noise(audio(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)*y)/y))+(sin(noise(externalVal,pow(y,y)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)+y)*min(max((cos(x)/y),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(sin(tan(y))-pow(x,(noise(x,(externalVal-min(y,mod((min(externalVal,x)-externalVal),externalVal))))/y)))))))),max(x,noise(audio(y,pow(min(externalVal,externalVal),tan(externalVal))),(cos(tan(x))+sin(mod(y,y))))))-x),y)+x),min(y,(x*(pow(x,pow(x,x))-x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),max(max((externalVal+y),noise(sin(y),externalVal)),tan(pow(cos((externalVal-y)),mod((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(mod(noise(cos(y),y),noise(tan((min((y/pow((audio(pow(audio(cos(y),max((min(externalVal,externalVal)*mod(x,x)),externalVal)),noise(x,audio(y,cos(y)))),y)/mod(externalVal,x)),audio(x,(x*x)))),x)/audio(x,cos(audio(x,sin(externalVal)))))),(pow(externalVal,tan((noise((max(sin(sin(mod(y,(y/(x*x))))),min(x,min(mod(y,mod(max(externalVal,externalVal),cos(externalVal))),(tan(cos(x))+(pow(y,x)/min(cos(externalVal),x))))))/x),y)*x)))/x)))/y)",
            "g": "audio((max(externalVal,x)/y),min(min((externalVal*x),min(cos(externalVal),externalVal)),tan(audio(((externalVal+x)/max((max((externalVal*y),mod(externalVal,y))+noise(pow((y-x),(mod(min(tan(sin(audio(tan((externalVal+x)),mod((x*x),audio(y,x))))),tan(mod(pow((externalVal-x),noise(sin(y),externalVal)),tan((x/x))))),externalVal)*x)),(y+y))),externalVal)),mod((x-x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(noise(noise(sin(y),y),noise(tan((min((y/pow((audio(audio(audio(cos(y),max((min(externalVal,externalVal)/mod(x,x)),externalVal)),noise(x,pow(y,tan(y)))),y)/mod(externalVal,x)),audio(x,(x*x)))),x)/pow(x,tan(audio(x,cos(externalVal)))))),(pow(externalVal,tan((mod((max((sin(mod(x,(y/(x*x))))/sin((cos(x)/x))),min(x,noise(mod(y,mod(max(externalVal,externalVal),tan(externalVal))),(cos(cos(x))+(mod(y,x)/min(sin(externalVal),x))))))/x),y)/x)))/x)))/y)",
            "g": "pow(sin(max(externalVal,x)),min(max((externalVal/x),max(tan(y),y)),tan(audio(((externalVal+y)-max((tan(sin(externalVal))+min(pow((y-x),(mod(max(max(sin(audio(tan((externalVal+x)),mod((x*x),audio(y,x)))),x),tan(mod(mod((externalVal+x),noise(cos(y),externalVal)),cos((x*x))))),externalVal)*x)),(externalVal+y))),externalVal)),mod((x+x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(externalVal,x)",
            "b": "max(mod(tan(max(y,pow((x+max(externalVal,y)),y))),max(tan(pow(x,externalVal)),(audio(externalVal,sin((max((max(cos((min(x,(x/(x-x)))*max(y,noise(sin(x),noise(externalVal,(y+y)))))),mod(x,tan(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,max(externalVal,mod(sin(x),externalVal))))))))+x),x)+x)))/y))),y)",
            "g": "pow(max(audio(y,x),y),min(cos((pow(externalVal,tan(x))*externalVal)),(audio(max(min((externalVal/externalVal),externalVal),noise((externalVal*externalVal),externalVal)),audio(cos(x),((externalVal/externalVal)*x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "sin(audio(noise(max(y,audio((x-tan(externalVal)),externalVal)),y),noise(tan((tan(sin(y))/audio(y,(audio(x,sin(externalVal))/externalVal)))),(audio(externalVal,max((mod((max(cos((mod(x,(x/(x-x)))*noise(y,max((x+(pow(externalVal,sin(x))+pow(pow(max(x,audio((x/x),noise(pow(noise(x,x),audio(mod(y,pow((audio(x,((cos(x)/y)/y))-(sin(mod(externalVal,pow(y,y)))/mod(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x*((sin(externalVal)*y)-noise(tan(cos((x*x))),(min(y,pow(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(cos(tan(externalVal))-audio(x,(noise(x,(externalVal*max(y,min((mod(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,min(pow(y,pow(max(externalVal,externalVal),tan(externalVal))),(cos(cos(y))+(mod(y,y)*min(cos(externalVal),x))))))-x),y)+x),min(y,(x*(pow(x,mod(x,x))/x)))))*x))))",
            "g": "audio(cos(sin(externalVal)),max(noise((externalVal+y),min(sin(externalVal),externalVal)),cos(pow(cos((externalVal+y)),mod((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "cos(pow(pow(tan(y),y),noise(tan((tan(tan(y))*audio(y,(audio(x,(externalVal/sin(x)))*y)))),(audio(externalVal,min((mod((tan(tan((mod(x,(x/(x*x)))*max(x,min((x+(pow(externalVal,tan(x))+audio(audio(min(x,pow((x/x),min(pow(noise(x,x),audio(pow(y,mod((pow(x,sin((cos(x)/y)))+(sin(noise(externalVal,mod(y,x)))/noise(externalVal,externalVal))),y)),tan(y))),pow(externalVal,(x*(((externalVal*y)+y)*noise(tan(max((x+x),y)),(noise(y,audio(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(tan(sin(y))+audio(y,(mod(x,(externalVal*max(y,min((mod(externalVal,x)+externalVal),externalVal))))*y)))))))))+x),y)+x),min(y,sin(x))))*x))))",
            "g": "pow(sin(cos(externalVal)),max(min((externalVal+y),mod((x*x),audio(y,y))),tan(pow(sin((externalVal+y)),mod((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+cos(externalVal)),externalVal)),y),min(cos((tan(sin(y))*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((min(cos((mod(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+pow(pow(max(x,audio((x/y),min(pow(mod(x,x),audio(pow(y,pow((audio(x,((tan(x)/y)/y))+(tan(mod(externalVal,pow(y,x)))*mod(externalVal,externalVal))),y)),cos(x))),noise(externalVal,(x/((sin(externalVal)*y)/min(max(cos((x-x)),x),(min(x,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-pow(x,(pow(x,(externalVal/max(x,mod((noise(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,noise(pow(y,pow(tan(externalVal),tan(externalVal))),(cos(tan(y))-(mod(x,y)/min(tan(externalVal),x))))))+x),y)-x),min(externalVal,(x/(pow(x,mod(x,x))/x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),noise(min((externalVal+y),min((externalVal*externalVal),externalVal)),tan(pow(cos((externalVal-y)),mod((x-x),pow(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(max((max(cos(y),x)*audio(x,(audio(x,sin(externalVal))*y))),x),(audio(externalVal,max((mod((tan(cos((mod(x,sin(x))*min(y,max((x*(pow(externalVal,cos(x))+audio(audio(min(x,audio((x/x),min(pow(noise(x,x),pow(pow(y,pow((pow(x,sin((cos(x)/y)))+(sin(min(externalVal,mod(y,x)))*mod(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x/(((externalVal*y)+y)+noise(tan(max((x*x),y)),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(sin(sin(y))+audio(y,(mod(x,(externalVal+min(y,min((mod(externalVal,x)-externalVal),externalVal))))*y)))))))))+x),y)+x),min(y,sin(x))))*x))))",
            "g": "pow(cos(tan(externalVal)),max(max((externalVal+y),pow((x-x),pow(y,y))),tan(pow(cos((externalVal+y)),mod((x/x),mod(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x-tan(externalVal)),externalVal)),y),noise(cos((cos(cos(y))/audio(y,(pow(y,sin(externalVal))*y)))),(audio(externalVal,max((mod((cos(cos((pow(x,(y/(x-x)))*max(y,min(tan(sin(y)),((x-tan(min(y,externalVal)))*externalVal))))))-x),y)-x),min(y,(x*(mod(x,pow(x,y))/x)))))/x))))",
            "g": "audio(sin(pow(cos((externalVal+y)),mod((x*x),pow(y,y)))),min(mod((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(sin((externalVal+y)),pow((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(noise(max(y,pow((x*cos(externalVal)),externalVal)),y),noise(tan((max(cos(y),x)*audio(x,(audio(x,sin(externalVal))/y)))),(audio(externalVal,max((mod((max(cos((mod(y,(y/(x*x)))*max(y,max((x-(mod(externalVal,sin(x))-pow(pow(max(x,audio((x/y),min(pow(noise(x,x),pow(pow(y,audio((audio(x,cos((tan(x)/x)))+(sin(mod(externalVal,pow(y,y)))/mod(externalVal,externalVal))),y)),max(x,(x+y)))),noise(externalVal,(x/((sin(externalVal)+y)*min(min(max((x*x),y),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(sin(cos(externalVal))+audio(y,(noise(x,(externalVal*max(y,noise((noise(y,x)-externalVal),externalVal))))*y)))))))),min(x,min(pow(y,audio(max(y,externalVal),max(externalVal,cos(externalVal)))),(cos(tan(y))-(pow(y,y)/max(cos(externalVal),x))))))-x),x)+x),min(y,(x*(audio(x,mod(x,x))*x)))))*x))))",
            "g": "audio((cos(externalVal)/y),min(min((externalVal-x),mod((externalVal/externalVal),externalVal)),sin(audio(cos((externalVal+y)),mod((x-x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "cos(pow(noise(max(y,audio((x+cos(externalVal)),externalVal)),y),noise(cos((tan(cos(y))*audio(x,sin(audio(x,cos(externalVal)))))),(audio(externalVal,max((noise((min(tan((pow(x,(x*(x-y)))*min(y,max((x+(audio(externalVal,cos(x))+audio(noise(min(x,audio((x/x),noise(pow(noise(x,x),audio(mod(y,pow((audio(x,((cos(x)/y)/y))-sin(cos(mod(externalVal,pow(y,y))))),y)),tan(y))),min(y,(x/((sin(externalVal)*y)+max(min(cos((x*x)),x),sin(max(y,pow(y,x)))))))))),y),externalVal))),audio(externalVal,(cos(cos(y))+noise(x,(noise(x,(externalVal/min(y,noise((max(externalVal,x)-externalVal),externalVal))))/y)))))))),min(x,min(pow(x,mod(max(externalVal,externalVal),tan(externalVal))),(tan(tan(y))*(mod(y,y)/min(max(externalVal,mod(cos(((min(x,noise(audio(tan(x),y),min((externalVal/sin(x)),min((mod(cos(externalVal),tan(sin(y)))*externalVal),externalVal))))+x)*pow(sin(sin(max(externalVal,x))),((externalVal*externalVal)-(y*x))))),x)),x))))))+x),y)-x),min(externalVal,(x*(pow(x,pow(x,y))-x)))))*x))))",
            "g": "audio(sin(tan(externalVal)),min(min((externalVal+y),noise(sin(externalVal),externalVal)),cos(audio(tan((externalVal+y)),mod((x*x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(mod(tan(min(y,noise((x-tan(externalVal)),y))),sin(min(audio(x,externalVal),x))))",
            "g": "audio(sin((mod(max(pow(cos(x),audio(y,y)),max(sin(externalVal),externalVal)),audio((x/x),(x/x)))/x)),mod(max((noise(externalVal,tan(x))/y),y),(audio(noise((externalVal*x),min((y/externalVal),externalVal)),audio((x/x),((externalVal+externalVal)-x)))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(mod(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),mod(tan((max(sin(y),x)*audio(x,(audio(x,sin(externalVal))*y)))),(audio(externalVal,max((mod((tan(tan((mod(x,(x/(x-x)))*max(y,tan((x+(mod(externalVal,tan(x))+audio(audio(noise(x,audio((x/x),min(pow(noise(x,x),pow(pow(y,pow((pow(x,cos((cos(x)/y)))+(sin(noise(externalVal,pow(y,x)))*mod(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x-(((externalVal*y)+y)-noise(tan(max((x/y),y)),(noise(y,audio(externalVal,y))/x)))))))),y),externalVal))))))))-x),y)+x),min(externalVal,sin(x))))/x))))",
            "g": "mod(cos(tan(externalVal)),max(max((externalVal+y),audio((x*x),pow(y,y))),tan(audio(min(externalVal,y),noise((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+min(externalVal,y)),y)),y),noise(tan((tan(sin(y))*audio(y,(audio(x,tan(externalVal))/y)))),(audio(externalVal,max((mod((cos(cos((audio(y,(y/(x*x)))/max(y,min((x-(audio(externalVal,tan(x))+audio((y+y),externalVal))),mod(externalVal,((tan(y)/x)-audio(x,(mod(x,(externalVal-min(y,noise((noise(externalVal,x)+externalVal),externalVal))))*y)))))))))+x),y)*x),noise(externalVal,(x*sin(noise(x,mod(x,x)))))))*x))))",
            "g": "audio(sin(tan(externalVal)),max(noise((externalVal-x),noise((externalVal/externalVal),externalVal)),tan(audio(cos((externalVal-y)),pow((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(pow(mod(tan(y),y),min(tan((min(sin(y),x)*pow(y,(pow(y,tan(externalVal))*y)))),(pow(externalVal,tan((pow((tan(tan((audio(y,(y/(x+x)))-min(y,noise((x-(pow(externalVal,tan(x))+pow(pow(min(x,audio((x/y),max(pow(mod(x,x),pow(audio(y,audio((audio(x,(cos(tan(x))/y))+(tan(mod(externalVal,audio(y,y)))-mod(externalVal,y))),y)),max(y,(y+y)))),noise(externalVal,sin(x))))),y),externalVal))),mod(externalVal,((tan(y)*x)*audio(x,(pow(x,(externalVal-min(y,mod((noise(externalVal,x)-externalVal),externalVal))))/y)))))))))+x),y)-x)))*x)))*y)",
            "g": "pow(cos(max(externalVal,x)),max(min((externalVal-x),noise((externalVal*externalVal),externalVal)),max(pow(cos((externalVal-y)),pow((x/x),audio(y,x))),y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "sin(pow(mod(cos(y),y),min(tan((tan(sin(y))/audio(x,(pow(x,sin(externalVal))/y)))),(audio(externalVal,max((noise((max(cos((noise(y,sin(y))/min(y,min((x+(audio(externalVal,tan(x))+audio(pow(tan(x),y),externalVal))),audio(externalVal,(sin(cos(externalVal))-audio(x,(mod(y,(externalVal*min(y,noise((noise(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,min(pow(y,mod(max(externalVal,externalVal),cos(externalVal))),(sin(tan(y))+(pow(y,x)/min(tan(externalVal),x))))))+x),y)*x),noise(externalVal,(x-(pow(x,noise(x,y))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(sin(externalVal),sin(audio(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        }
      ],
      "timestamp": "22h:52m:12s"
    },
    {
      "generation": 18,
      "ascendantID": "6y7czsb7-miif-vxhk-klty-z927im8bixcz",
      "id": "qzfe5ch3-pt3g-1gzo-v5tg-2ufele0h9no2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(tan(max(y,pow((x+max(externalVal,y)),y))),min(tan(pow(x,externalVal)),(audio(externalVal,cos((max((max(cos((max(x,(x/(x*x)))/max(y,min(sin(x),noise(externalVal,(y+y)))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,noise(sin(x),externalVal))))),(sin(tan(y))+(tan(x)-min(max(externalVal,mod(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(max(y,pow((externalVal*y),y))))*externalVal),externalVal))))+x))),x)),x))))))+x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,max(x,(externalVal*y)))*externalVal)),(audio(max(mod((externalVal/externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),pow((x*x),audio(y,x)))),y),tan(mod(pow((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(mod(cos(y),y),min(tan((tan(sin(y))/audio(x,(pow(x,sin(externalVal))/y)))),(audio(externalVal,max((noise((max(cos((noise(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+audio(pow(tan(x),y),externalVal))),audio(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal*min(y,min((noise(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,min(pow(y,pow(max(externalVal,externalVal),cos(externalVal))),(sin(tan(y))-(pow(y,y)/min(tan(externalVal),x))))))-x),y)*x),noise(externalVal,(x*(audio(x,mod(x,y))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(sin(externalVal),sin(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(mod(noise(sin(y),y),noise(tan((max((y/noise((audio(audio(audio(sin(y),max((min(externalVal,externalVal)/mod(x,x)),externalVal)),noise(x,mod(y,tan(externalVal)))),y)/mod(externalVal,x)),audio(x,(x*x)))),x)/pow(x,tan(audio(x,sin(externalVal)))))),(pow(externalVal,tan((mod((min(sin(sin(mod(x,(y/(x*x))))),min(x,mod(mod(y,mod(max(externalVal,externalVal),tan(externalVal))),(cos(tan(y))+(mod(y,x)/noise((externalVal/mod(tan(((min(x,min(audio(tan(y),y),noise(sin(externalVal),noise(sin(audio(cos(externalVal),max(tan(y),(y*externalVal)))),y))))+x)*pow((sin(min(externalVal,x))/tan(externalVal)),((y-externalVal)*(y*x))))),x)),x))))))/x),y)/x)))/x)))/y)",
            "g": "pow(sin(max(externalVal,x)),min(min((externalVal*x),max(tan(y),y)),tan(audio(((externalVal+y)-max((cos(sin(externalVal))+min(mod((y-x),(mod(tan(max(sin(audio(tan((externalVal+x)),noise((x*x),audio(y,x)))),x)),externalVal)*x)),(externalVal+y))),externalVal)),mod((x+x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,y)",
            "b": "cos(mod(mod(tan(y),y),noise(tan((max(sin(y),x)/audio(x,(audio(x,cos(externalVal))*y)))),(audio(externalVal,max((mod((tan(cos((noise(y,(x/(x-x)))*max(y,max((x+(pow(externalVal,tan(x))+audio(audio(noise(x,audio((x/x),min(pow(noise(x,x),audio(audio(y,pow((mod(x,tan((cos(x)/y)))+(sin(noise(externalVal,mod(y,x)))*mod(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x/(((externalVal*y)+y)-noise(tan(max((x/y),y)),(noise(y,audio(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(sin(sin(externalVal))-audio(y,(audio(x,(externalVal-max(y,min((pow(externalVal,x)-externalVal),externalVal))))/y)))))))))-x),y)+x),min(externalVal,sin(x))))/x))))",
            "g": "mod(cos(max(externalVal,x)),max(tan((externalVal+x)),max(audio(max(externalVal,y),min((x/x),pow(y,x))),x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),max(tan((tan(sin(y))*audio(x,(audio(y,sin(externalVal))*y)))),(audio(externalVal,min((mod((max(sin((noise(y,(y/(x-x)))-max(y,max((x+(audio(externalVal,sin(x))+pow(pow(max(x,audio(sin(x),noise(audio(mod(x,x),audio(pow(y,pow((audio(x,((cos(x)/y)/y))-(sin(noise(externalVal,pow(y,y)))/mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)+y)*min(max((cos(x)/y),x),(min(x,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(sin(tan(y))-pow(x,(noise(x,(externalVal-min(y,mod((min(externalVal,x)-externalVal),externalVal))))/y)))))))),max(x,noise(audio(y,audio(min(externalVal,externalVal),tan(externalVal))),(tan(tan(x))+cos(mod(y,y))))))*x),y)+x),max(externalVal,(x*(pow(x,pow(x,x))-x)))))*x))))",
            "g": "audio(sin(cos(externalVal)),max(max((externalVal+y),noise(cos(y),externalVal)),tan(pow(cos((externalVal-y)),mod((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(mod(noise(cos(y),y),noise(cos((noise(sin(y),x)/audio(x,cos(audio(x,sin(externalVal)))))),sin(pow(externalVal,max((noise((max(sin(sin(mod(y,(x*(x*x))))),min(x,min(mod(y,mod(max(externalVal,externalVal),cos(externalVal))),(tan(cos(x))+(pow(y,x)/max(cos(externalVal),x))))))/x),y)-x),max(externalVal,(y/(audio(x,pow(x,x))/x))))))))/y)",
            "g": "audio((min(externalVal,x)/y),min(noise((externalVal*x),noise(cos(externalVal),externalVal)),tan(audio(((externalVal+x)/max((max((externalVal*y),mod(externalVal,y))+noise(pow((y-x),(mod(noise(tan(sin(audio(tan((externalVal+x)),mod((x*x),audio(y,x))))),tan(mod(audio((externalVal-x),min(tan(pow(sin((externalVal+y)),mod((x/x),pow(y,x)))),externalVal)),tan((x/x))))),externalVal)*x)),(y+y))),externalVal)),mod((x-x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "(pow(noise(max(y,pow((x/cos(externalVal)),externalVal)),y),min(cos((max(sin(y),x)/audio(y,(audio(x,sin(externalVal))/externalVal)))),(audio(externalVal,tan((mod((min(max(sin(mod(x,(x/(x-x)))),((cos(x)/y)*tan((externalVal*max(y,y))))),min(x,min(pow(y,pow(tan(externalVal),tan(externalVal))),(tan(cos(y))+(mod(y,y)/min(cos(externalVal),x))))))-x),y)+x)))*x)))/y)",
            "g": "audio(sin(cos(externalVal)),max(min(min(externalVal,y),(externalVal/y)),cos(pow(cos((externalVal+y)),mod((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "tan(mod(tan(max(y,pow((x+max(externalVal,y)),y))),min(tan(mod(x,externalVal)),(audio(externalVal,sin((max((max(cos(sin(tan(y))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,noise(sin(x),externalVal))))),(sin(tan(y))+(tan(x)+min(max(externalVal,mod(max(cos((min(x,max(audio(min(y,externalVal),y),noise(max(y,cos(x)),max((pow(cos(externalVal),cos(max(y,pow((externalVal/y),y))))*externalVal),externalVal))))+x)),y),x)),x))))))+x),y)+x)))*x))))",
            "g": "pow(cos(audio(y,x)),min(cos((pow(externalVal,max(x,(externalVal*y)))*externalVal)),sin(audio(max(noise((externalVal/externalVal),externalVal),max((externalVal/externalVal),externalVal)),audio((x/x),(noise(min(max(cos(mod(cos((externalVal+y)),pow((x*x),audio(y,x)))),y),tan(mod(audio((externalVal/y),pow(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x-tan(externalVal)),externalVal)),y),mod(tan(sin(cos(cos(y)))),(audio(externalVal,max((mod((cos(cos((pow(x,(y/(x*x)))*max(y,min(tan(cos(y)),((x+tan(max(y,externalVal)))*externalVal))))))+x),y)-x),min(y,(x*sin(mod(x,audio(x,x)))))))/x))))",
            "g": "audio(sin(pow(sin((externalVal+x)),mod((x*x),pow(y,y)))),min(mod((externalVal+y),min((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),pow((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "tan(pow(pow(tan(y),y),noise(max((cos(tan(y))*audio(y,(audio(y,(externalVal/sin(x)))*y))),x),(audio(externalVal,min((mod((sin(tan((mod(x,(y/(x-x)))*max(x,min((x+(pow(externalVal,max(x,min(y,y)))+audio(pow(min(x,audio((x/x),min(pow(noise(x,x),audio(pow(y,mod((pow(x,sin((cos(x)*x)))+(sin(noise(externalVal,noise(y,x)))/mod(externalVal,externalVal))),y)),tan(y))),audio(externalVal,(x*(((externalVal*y)+y)*noise(tan(max((x+y),y)),(noise(y,pow(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(tan(sin(y))+audio(x,(mod(x,(externalVal*min(x,max((mod(externalVal,x)+externalVal),externalVal))))*y)))))))))+x),y)+x),min(y,sin(x))))*x))))",
            "g": "pow(sin(tan(y)),max(min((externalVal+y),mod((x-x),audio(y,y))),cos(pow(sin((externalVal+y)),mod(tan(externalVal),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(audio(noise(max(y,pow((x+cos(externalVal)),externalVal)),y),mod(max((min(cos(y),x)*audio(x,(audio(x,cos(externalVal))/y))),x),(audio(externalVal,min((pow((tan(cos((noise(x,(x/(x*x)))*max(y,max((x-(mod(externalVal,sin(x))-audio(pow(max(x,audio((x/y),min(audio(noise(x,x),pow(pow(y,audio((audio(x,cos((max(x,externalVal)*x)))+(sin(mod(externalVal,pow(y,y)))/pow(externalVal,y))),y)),max(x,(x+y)))),noise(externalVal,(x/((sin(externalVal)+y)*min(min(max((x-y),y),x),(min(y,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,((tan(y)/x)+audio(y,(noise(x,(externalVal/tan(y)))-y)))))))))-x),x)+x),min(y,(x/(pow(x,mod(x,x))*x)))))*x))))",
            "g": "audio((cos(externalVal)/y),min(min((externalVal-x),mod((externalVal/externalVal),externalVal)),sin(audio(sin((externalVal+y)),mod((x-x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+min(externalVal,x)),y)),y),noise(tan((tan(sin(y))/audio(y,(audio(x,tan(externalVal))/y)))),(pow(externalVal,min((mod((cos(tan((audio(y,(y*(x/x)))/max(y,max((x-(audio(externalVal,sin(x))-audio((y+y),externalVal))),mod(externalVal,((cos(y)/x)-audio(x,(mod(x,(externalVal-min(y,noise((noise(externalVal,x)+externalVal),externalVal))))*y)))))))))+x),y)*x),noise(externalVal,(x*sin(noise(x,pow(x,x)))))))-x))))",
            "g": "audio(sin(sin(externalVal)),max(noise((externalVal-x),cos((externalVal-y))),max(audio(cos((externalVal-y)),pow((x/x),pow(y,x))),y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "(pow(noise(cos(y),y),min(tan((min(sin(y),x)*audio(y,(pow(y,tan(externalVal))/y)))),(pow(externalVal,tan((pow((tan(cos((audio(y,(x-(x+x)))-min(x,noise((x-(pow(externalVal,tan(x))+audio(pow(min(x,audio((x/y),max(audio(mod(x,x),pow(audio(y,audio((audio(x,(tan(tan(x))/y))+(tan(mod(externalVal,audio(y,y)))-mod(externalVal,externalVal))),y)),max(y,(y+y)))),noise(externalVal,sin(x))))),y),externalVal))),mod(externalVal,((max(y,min(cos(mod(min(noise(cos(externalVal),noise(tan(tan(externalVal)),externalVal)),audio(x,audio(x,max(y,(x/(x*noise((cos(y)+mod(y,y)),tan(x)))))))),externalVal)),audio(y,sin(x))))*x)*audio(x,sin(pow(x,(externalVal-min(y,mod((mod(y,x)+externalVal),externalVal)))))))))))))+x),y)+x)))*x)))*y)",
            "g": "pow(cos(max(externalVal,x)),max(min((externalVal-y),noise((externalVal*externalVal),externalVal)),max(mod(cos((externalVal-y)),pow((x/x),pow(y,y))),y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "(noise(mod(sin(y),externalVal),noise(tan(sin(min((y*pow((audio(audio(audio(cos(y),max((max(externalVal,externalVal)/mod(x,x)),externalVal)),min(x,pow(y,tan(y)))),y)/pow(externalVal,x)),audio(x,(x*x)))),x))),(pow(externalVal,tan(sin(mod((max(cos(sin(mod(x,(y/sin(x))))),min(x,noise(noise(x,mod(max(externalVal,externalVal),tan(externalVal))),(cos(cos(x))+(mod(y,x)/min(sin(externalVal),x))))))/x),y))))/x)))/y)",
            "g": "pow(sin(max(externalVal,x)),min(pow(y,x),tan(audio(((externalVal+y)-min((tan(sin(externalVal))+min(pow((x-x),(mod(noise(max(sin(audio(sin((externalVal+x)),mod((x*x),audio(y,x)))),x),tan(mod(mod((externalVal+y),noise(cos(y),externalVal)),cos((x*x))))),externalVal)*x)),(externalVal+y))),externalVal)),pow((x-x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(cos(y),y),min(max((tan(sin(y))/pow(y,(mod(x,cos(externalVal))/y))),x),(audio(externalVal,max((noise((tan(cos((mod(y,(x*(x*x)))*min(y,max((x+(audio(externalVal,cos(x))+audio(pow(tan(x),y),externalVal))),audio(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal*min(y,min((noise(externalVal,x)-y),externalVal))))/y)))))))))+x),y)*x),noise(externalVal,(x*(pow(x,mod(x,y))*x)))))/x))))",
            "g": "pow(sin(cos(externalVal)),min((externalVal/externalVal),(pow(tan((externalVal+y)),cos((externalVal+x)))/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "cos(pow(mod(min(x,pow((x+tan(externalVal)),externalVal)),y),min(min((max(cos(y),x)*audio(x,(audio(x,sin(externalVal))*y))),x),(pow(externalVal,max((mod((tan(cos((audio(x,sin(x))*min(y,max((x*(pow(externalVal,sin(x))+audio(audio(tan(x),y),y))),audio(externalVal,(sin((externalVal/min(cos(noise(cos(max((y/x),pow(sin(min(externalVal,externalVal)),externalVal))),y)),audio(x,cos(x)))))+audio(y,(pow(x,(externalVal+min(y,mod((noise(externalVal,x)+y),externalVal))))*y)))))))))+x),y)+x),min(y,sin(x))))*x))))",
            "g": "pow(cos(cos(externalVal)),max(min((externalVal+x),pow((x-x),pow(y,y))),tan(mod(cos((y-y)),mod((x/x),noise(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+min(externalVal,y)),y)),y),noise(tan((tan(sin(y))*pow(y,(audio(x,cos(externalVal))/y)))),(audio(externalVal,max((mod((cos(cos((audio(y,(y/(x*y)))/min(y,noise((x*(audio(externalVal,tan(x))+audio((y+y),externalVal))),mod(externalVal,((tan(y)/x)-audio(x,(mod(x,(externalVal-min(y,noise((noise(externalVal,x)+externalVal),externalVal))))*y)))))))))+x),y)/x),noise(externalVal,(x*cos(min(x,mod(x,x)))))))*x))))",
            "g": "audio(sin(tan(externalVal)),max(noise((externalVal-x),noise((externalVal*externalVal),externalVal)),tan(audio(tan((externalVal-y)),audio((x/x),mod(cos(externalVal),max(externalVal,x)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(max(y,audio((x+tan(externalVal)),externalVal)),y),noise(tan((cos((y/noise((audio(mod(audio(sin(y),min((tan(externalVal)-mod(x,x)),externalVal)),pow(x,pow(x,max(y,(x/(x*min(((y*externalVal)*min(externalVal,y)),tan(x)))))))),y)/pow(externalVal,x)),pow(x,cos(x)))))*audio(x,(audio(y,(externalVal/tan(x)))*y)))),(audio(externalVal,max((pow((max(sin((mod(y,(y/(x-x)))/min(y,max((x+(audio(externalVal,cos(x))+pow(pow(max(x,audio((x/x),noise(audio(noise(x,x),audio(pow(y,pow((audio(x,((cos(x)*y)/y))*((noise(externalVal,pow(y,y))/((x/x)+noise(y,x)))*mod(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)+y)*min(max((cos(x)/y),x),(min(x,mod(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(cos(tan(y))-audio(x,(noise(x,(externalVal-min(y,noise((min(externalVal,x)-externalVal),externalVal))))/y)))))))),max(x,mod(audio(y,audio(min(externalVal,externalVal),tan(externalVal))),(cos(tan(x))+sin(pow(y,x))))))-x),y)+x),min(y,(x*(pow(x,audio(x,y))-x)))))*x))))",
            "g": "audio(sin(tan(externalVal)),max(max((externalVal-y),noise(sin(y),externalVal)),tan(pow(cos((externalVal-y)),audio((x/x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(tan(tan(y)),min(tan(pow(x,externalVal)),(audio(externalVal,cos((tan((min(cos((max(x,sin(x))/max(y,max(sin(x),noise(externalVal,(y+y)))))),mod(x,tan(audio(y,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,noise(sin(x),externalVal))))))))+x))+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,max(x,(externalVal*y)))*externalVal)),(audio(max(mod((y/externalVal),externalVal),max((externalVal/externalVal),externalVal)),audio(sin(y),(noise(noise(max(tan(pow(cos((externalVal+x)),audio((x*x),audio(y,x)))),y),tan(mod(pow((externalVal-y),mod(sin(externalVal),externalVal)),tan((x/x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(mod(mod(cos(y),y),min(tan((tan(sin(y))/audio(x,(pow(x,sin(externalVal))/y)))),(pow(externalVal,max((noise((max(cos((noise(y,sin(x))*min(y,max((x-(audio(externalVal,cos(x))+audio(pow(tan(x),y),externalVal))),audio(externalVal,(sin(cos(externalVal))-audio(x,(pow(y,(externalVal*min(y,min((max(y,max(sin(x),noise(externalVal,(y+y))))-externalVal),externalVal))))-y)))))))),min(x,min(pow(y,pow(max(externalVal,externalVal),cos(externalVal))),(sin(tan(y))-(pow(y,y)/min(tan(externalVal),x))))))*x),y)*x),noise(externalVal,(x*(audio(x,mod(x,y))*x)))))/x))))",
            "g": "audio(tan(cos(externalVal)),max((externalVal/externalVal),sin(audio(sin((externalVal+y)),pow((x*x),pow(y,x))))))"
          }
        }
      ],
      "timestamp": "22h:52m:21s"
    },
    {
      "generation": 19,
      "ascendantID": "qzfe5ch3-pt3g-1gzo-v5tg-2ufele0h9no2",
      "id": "wstkjbol-b0rp-5dxb-ei65-5mow2041u087",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(tan(max(y,pow((x+max(externalVal,y)),y))),min(tan(pow(x,externalVal)),(audio(externalVal,cos((max((max(cos((max(x,(x/(x*x)))/max(y,min(sin(x),noise(externalVal,(y+y)))))),mod(x,max(pow(externalVal,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,noise(sin(x),externalVal))))),(sin(tan(y))+(tan(x)-min(max(externalVal,mod(tan(cos((noise(x,max(audio(min(y,externalVal),y),noise(tan(externalVal),max((mod(cos(externalVal),cos(max(y,pow((externalVal*y),y))))*externalVal),externalVal))))+x))),x)),x))))))+x),y)+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,max(x,(externalVal*y)))*externalVal)),(audio(max(mod((externalVal/externalVal),externalVal),min((externalVal/externalVal),externalVal)),audio(sin(y),(noise(min(max(cos(mod(cos((externalVal+x)),pow((x*x),audio(y,x)))),y),tan(mod(pow((externalVal-y),mod(sin(externalVal),externalVal)),max((x/x),((externalVal*externalVal)-x))))),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(mod(cos(y),y),min(tan((tan(sin(y))/audio(x,(pow(x,sin(externalVal))/y)))),(audio(externalVal,max((noise((max(cos((noise(y,(y/(x-x)))*min(y,max((x+(audio(externalVal,tan(x))+audio(pow(tan(x),y),externalVal))),audio(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal*min(y,min((noise(externalVal,x)-externalVal),externalVal))))*y)))))))),min(x,min(pow(y,pow(max(externalVal,externalVal),cos(externalVal))),(sin(tan(y))-(pow(y,y)/min(tan(externalVal),x))))))-x),y)*x),noise(externalVal,(x*(audio(x,mod(x,y))*x)))))/x))))",
            "g": "audio(sin(cos(externalVal)),min(sin(externalVal),sin(pow(cos((externalVal+y)),mod((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "cos(pow(pow(max(y,audio((x+tan(externalVal)),y)),y),min(min((cos(tan(y))*audio(x,(audio(x,(externalVal/sin(x)))*y))),x),(audio(externalVal,min((mod((sin(cos((noise(x,(y/(x-x)))*max(x,min((x+(pow(externalVal,max(x,min(y,y)))+audio(pow(max(x,audio((x/x),max(pow(mod(x,x),audio(pow(y,mod((pow(x,sin((cos(x)*x)))*(sin(noise(externalVal,min(y,x)))/mod(externalVal,externalVal))),y)),cos(y))),pow(externalVal,(x*(((externalVal/y)+y)*noise(tan(max((x+y),y)),(pow(y,pow(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(max(sin(y),x)+audio(x,(mod(x,(externalVal*min(x,max((mod(externalVal,x)+externalVal),externalVal))))*y)))))))))+x),y)+x),min(y,sin(x))))-x))))",
            "g": "pow(sin(cos(externalVal)),max(min((externalVal+y),mod((x+x),audio(y,y))),cos(pow(sin((externalVal+y)),noise(tan(externalVal),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(max(y,audio((x+tan(externalVal)),externalVal)),y),min(pow(externalVal,externalVal),(audio(externalVal,noise((mod((max(((noise(y,(y/(x-x)))*max(x,max((x+(audio(externalVal,tan(x))+audio(pow(tan(x),y),externalVal))),mod(externalVal,(tan(cos(y))-audio(x,(noise(x,(externalVal-max(y,mod((min(externalVal,x)-externalVal),externalVal))))/y)))))))/((cos(x)/y)+tan((externalVal/cos(x))))),min(x,noise(audio(y,audio(min(externalVal,externalVal),tan(externalVal))),(tan(tan(x))+tan(pow(y,y))))))*x),y)+x),max(y,(x/(pow(x,pow(x,x))+x)))))*x))))",
            "g": "audio((cos(externalVal)/y),max(max((externalVal-y),noise(cos(y),externalVal)),tan(mod(tan((externalVal-y)),mod(noise((externalVal/externalVal),noise(externalVal,x)),mod(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(min(mod(sin(y),externalVal),noise(tan((min((y*pow(sin(audio(audio(audio(tan(y),max((min(externalVal,externalVal)*mod(x,x)),externalVal)),min(x,audio(x,tan(y)))),y)),audio(x,(x*x)))),x)/pow(x,tan(audio(x,cos(externalVal)))))),(pow(externalVal,tan((mod((max(cos(sin(mod(x,(y/sin(x))))),min(x,mod(noise(x,mod(max(externalVal,y),tan(externalVal))),(max(cos(x),y)+(mod(y,x)/min(sin(y),x))))))*x),y)*x)))/x))))",
            "g": "pow((tan(y)/x),min(pow(y,x),tan(audio(((externalVal+y)-min((max(sin(externalVal),noise(externalVal,y))+min(pow((x-x),(noise(noise(max(sin(audio(sin((externalVal+x)),mod((x*x),audio(y,x)))),x),cos(mod(noise((externalVal+y),noise(cos(y),externalVal)),cos((x*x))))),externalVal)*x)),(externalVal+y))),externalVal)),pow((x+x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "(pow(min(max(y,pow((x*cos(externalVal)),y)),y),noise(cos((max(sin(y),x)/audio(y,(audio(x,sin(externalVal))/externalVal)))),(audio(externalVal,tan((mod((max(min((mod(x,(x/(x-x)))/noise(y,max((x+(mod(externalVal,sin(x))+mod(pow(max(x,audio(sin(x),min(mod(noise(x,x),audio(noise(y,audio((pow(x,((sin(x)*x)/y))*(sin(mod(externalVal,pow(y,y)))/audio(y,externalVal))),externalVal)),cos(y))),mod(externalVal,(x-((sin(externalVal)-y)-min(tan(cos((y*x))),(min(y,pow(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(cos(tan(externalVal))-audio(x,(noise(x,(externalVal/max(y,min((noise(externalVal,x)*y),externalVal))))*y))))))),(sin(sin(x))*tan((externalVal*max(y,y))))),max(x,min(pow(y,pow(cos(externalVal),tan(externalVal))),(tan(cos(y))+sin(mod(y,y))))))-x),y)+x)))*x)))*y)",
            "g": "audio(sin(cos(externalVal)),max(max(max(externalVal,y),(externalVal/y)),cos(pow(cos((externalVal+y)),mod((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "cos(mod(noise(cos(y),y),max(max((tan(sin(y))/audio(x,(mod(x,cos(externalVal))/y))),x),(audio(externalVal,max((noise((cos(cos((mod(y,(x*(x/x)))*max(y,min((x+(audio(externalVal,cos(x))+audio(pow(max(x,audio(sin(x),noise(mod(min(x,x),audio(pow(y,pow((audio(x,((sin(x)/y)/y))-((mod(externalVal,noise(y,y))/(sin(x)+noise(y,x)))*audio(externalVal,externalVal))),y)),tan(y))),mod(externalVal,(x-((cos(externalVal)*y)*min(noise(tan((x-y)),x),(noise(y,mod(externalVal,y))/x)))))))),y),externalVal))),audio(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal*min(y,min((min(externalVal,x)-y),externalVal))))/y)))))))))+x),y)*x),noise(externalVal,(x*(pow(x,mod(x,y))*x)))))/x))))",
            "g": "pow(sin(cos(externalVal)),min((externalVal/externalVal),(pow(max((externalVal+y),mod((min((externalVal/externalVal),noise(externalVal,x))+min(min(y,y),(externalVal/y))),externalVal)),cos((externalVal+x)))/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "(mod(noise(cos(y),y),noise(sin((max((externalVal/pow((audio(pow(audio(sin(y),max((min(externalVal,externalVal)*pow(x,x)),externalVal)),noise(x,audio(y,sin(y)))),y)*mod(externalVal,x)),audio(x,(x/x)))),x)/audio(x,cos(audio(x,sin(externalVal)))))),sin(pow(externalVal,max((noise((min(sin(sin(mod(y,(x-(x*x))))),min(x,noise(mod(y,mod(max(externalVal,externalVal),cos(externalVal))),(tan(cos(x))+(pow(y,x)/max(cos(externalVal),x))))))/x),y)-x),max(externalVal,(y/(audio(x,pow(x,x))/x))))))))/y)",
            "g": "audio((min(externalVal,x)/y),min(noise((externalVal/x),noise(cos(externalVal),externalVal)),tan(audio(sin((externalVal+x)),noise((x*x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(pow(mod(tan(y),y),noise(tan((tan(sin(y))*pow(y,(audio(x,cos(externalVal))*y)))),(audio(externalVal,tan((mod((cos(cos((audio(y,(y/(x*y)))/min(y,noise((x*(audio(externalVal,tan(x))+pow((y+y),externalVal))),pow(externalVal,((tan(y)*x)*audio(x,(mod(x,(externalVal-min(y,noise((noise(externalVal,x)+externalVal),externalVal))))*y)))))))))+x),y)/x)))*x))))",
            "g": "audio(sin(tan(y)),max(noise((externalVal-x),noise((externalVal*externalVal),externalVal)),tan(pow(tan((externalVal-y)),audio(sin(x),mod(tan(externalVal),max(externalVal,x)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "tan(pow(noise(min(y,audio((x+tan(externalVal)),externalVal)),y),min(tan((cos((y/min((audio(mod(audio(sin(y),min((tan(externalVal)-mod(x,x)),externalVal)),mod(x,pow(x,max(y,(x/(x*noise(((y*externalVal)*min(externalVal,y)),tan(x)))))))),y)/pow(externalVal,x)),pow(x,cos(x)))))*audio(x,(audio(y,(externalVal/tan(x)))/externalVal)))),(audio(externalVal,tan((pow((max(sin((mod(y,(y/(x+x)))/min(y,max((x+(audio(externalVal,cos(x))+pow(pow(max(x,audio((x/x),noise(audio(min(x,x),audio(audio(y,mod((audio(x,((cos(x)*y)/y))-((noise(externalVal,pow(y,y))/((x*x)+min(y,x)))-pow(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((sin(externalVal)+y)-min(max(sin(cos(x)),x),(min(x,audio(externalVal,y))*x)))))))),y),externalVal))),pow(externalVal,(cos(cos(y))-audio(x,(mod(x,(externalVal+min(y,noise((min(externalVal,x)*externalVal),externalVal))))/y)))))))),min(x,mod(audio(y,audio(min(externalVal,externalVal),tan(externalVal))),(tan(tan(x))-(pow(y,x)/min(cos(externalVal),x))))))*x),x)+x)))*x))))",
            "g": "audio(sin(tan(externalVal)),tan(max((externalVal-y),noise(sin(y),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "tan(mod(tan(tan(y)),noise(tan(noise(x,externalVal)),(audio(externalVal,cos((max((max(cos(sin(tan(y))),mod(x,max(pow(y,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,min(sin(x),externalVal))))),(sin(cos(y))+(tan(x)+min(max(externalVal,pow(max(sin((min(x,max(audio(min(y,externalVal),y),min(max(externalVal,tan(x)),max((pow(cos(externalVal),cos(min(y,audio((externalVal/y),y))))-externalVal),externalVal))))+x)),y),x)),x))))))+x),y)+x)))*x))))",
            "g": "pow(cos(audio(y,x)),min(max((mod(externalVal,tan(x))*externalVal),y),sin(audio(tan(noise((externalVal/externalVal),externalVal)),audio((x/x),(noise(noise(max(cos(mod(cos((externalVal+y)),pow((x-x),audio(y,x)))),y),tan(noise(audio((externalVal/y),audio(cos(externalVal),externalVal)),tan((x/x))))),externalVal)-x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(mod(max(y,audio((x-tan(externalVal)),y)),y),min(tan((tan(sin(y))/audio(x,sin(pow(x,cos(externalVal)))))),(pow(externalVal,max((noise((tan(cos((noise(y,sin(x))*min(y,max((x*(audio(externalVal,cos(x))+audio(pow(tan(x),y),externalVal))),audio(externalVal,(sin(cos(y))*mod(x,(mod(x,(externalVal*min(y,min((max(y,max(sin(x),mod(externalVal,(y+externalVal))))-externalVal),externalVal))))+y)))))))))*x),y)*x),min(externalVal,(x*(audio(x,pow(x,y))*x)))))/x))))",
            "g": "audio(tan(cos(externalVal)),max((externalVal*y),sin(audio(sin((externalVal+y)),pow((x/x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(mod(cos(y),y),min(max((tan(sin(y))/pow(y,(pow(x,(externalVal/cos(x)))/y))),x),(pow(externalVal,max((noise((max(sin((noise(y,(y/(x-x)))*max(y,max((x-(pow(externalVal,tan(x))+audio(pow(tan(x),y),externalVal))),pow(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal-min(y,min((min(externalVal,x)-externalVal),externalVal))))/y)))))))),noise(x,min(pow(y,mod(max(externalVal,externalVal),cos(externalVal))),(sin(tan(y))-(pow(y,y)/min(tan(externalVal),x))))))-x),y)*x),noise(externalVal,(x*(audio(x,mod(x,y))*x)))))/x))))",
            "g": "pow(sin(cos(externalVal)),min(sin(externalVal),cos(pow(cos((externalVal+y)),mod((x*x),audio(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(x,y)",
            "b": "(noise(mod(sin(y),externalVal),noise(tan((noise((y*pow((audio(audio(audio(cos(y),tan((max(externalVal,externalVal)/mod(x,x)))),min(x,pow(y,max(externalVal,(x*sin(x)))))),y)/pow(externalVal,x)),audio(x,(x/x)))),x)/pow(x,tan(audio(x,cos(externalVal)))))),(pow(externalVal,tan(sin(mod((min(cos(sin(mod(x,(y/(x*y))))),noise(x,noise(min(x,mod(max(externalVal,externalVal),max(externalVal,max(externalVal,noise(tan(x),externalVal))))),(cos(cos(x))+(mod(y,y)/noise(sin(externalVal),x))))))/x),y))))/x)))/y)",
            "g": "pow((min(externalVal,x)/y),min(pow(y,x),tan(audio(((externalVal+y)*min((tan((externalVal/externalVal))+min(pow((x-x),(mod(min(max((audio(sin((externalVal+x)),noise((x-x),(externalVal/externalVal)))/externalVal),x),tan(noise(mod((externalVal+y),noise(cos(y),externalVal)),cos((x*x))))),externalVal)*x)),(externalVal+y))),externalVal)),pow((x-x),audio(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "cos(mod(mod(min(x,pow((x+cos(externalVal)),externalVal)),y),noise(max((max(cos(y),x)-audio(x,(audio(x,cos(externalVal))*y))),x),(mod(externalVal,max((noise((cos(sin((audio(x,sin(x))*min(y,max((x*(pow(externalVal,(x*max(y,y)))+audio(audio(cos(x),y),y))),audio(externalVal,(sin((externalVal/min(cos(min(tan(max(sin(y),pow(sin(noise(externalVal,externalVal)),externalVal))),externalVal)),pow(x,tan(x)))))+audio(y,(pow(x,(externalVal+min(y,noise((noise(y,x)-y),externalVal))))*y)))))))))+x),y)+x),min(y,(x/(pow(x,pow(x,y))/x)))))*x))))",
            "g": "pow(cos(cos(externalVal)),max(min((externalVal+x),pow((x+x),pow(y,y))),tan(mod(cos((y-y)),mod(sin(x),noise(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "sin(pow(noise(sin(y),y),min(tan((cos((y/mod(sin(audio(noise(audio(cos(externalVal),min((max(externalVal,externalVal)*noise(x,x)),externalVal)),mod(x,pow(y,min(y,sin(x))))),y)),pow(x,cos(x)))))/audio(x,cos(pow(x,sin(externalVal)))))),(audio(externalVal,max((noise((min(cos((mod(y,tan(x))*noise(y,max((x+(audio(externalVal,cos(x))+audio(pow(tan(x),y),externalVal))),audio(externalVal,(cos(cos(externalVal))-audio(x,(mod(x,(externalVal-min(y,min((min(externalVal,x)*externalVal),externalVal))))*y)))))))),min(x,min(pow(y,pow(max(externalVal,externalVal),cos(externalVal))),((tan(y)/x)-(pow(y,y)/min(tan(externalVal),x))))))+x),y)*x),noise(externalVal,(x/(pow(x,mod(x,y))-x)))))-x))))",
            "g": "audio((sin(externalVal)/y),min(sin(externalVal),cos(pow(cos((externalVal+y)),audio((x*x),pow(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(mod(mod(tan(y),y),mod(min((sin(cos(y))/audio(y,(mod(y,sin(externalVal))-y))),x),(audio(externalVal,max((mod((cos(cos(sin(pow(y,(y/(x*x))))))+x),y)-x),noise(externalVal,(x*cos(mod(x,audio(x,x)))))))/x))))",
            "g": "audio(sin(pow(sin((externalVal+x)),mod((x/x),audio(y,y)))),max(mod((externalVal+y),noise((externalVal/externalVal),externalVal)),tan(pow(cos((externalVal+y)),pow((x*x),mod(y,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,y)",
            "b": "cos(audio(mod(max(y,audio((x+cos(externalVal)),y)),y),max(tan((tan(sin(y))/audio(x,(audio(x,(externalVal/tan(x)))*y)))),(audio(externalVal,min((mod((min(((noise(y,(y/(x-x)))*max(y,max((x+(pow(externalVal,sin(x))+pow(pow(max(x,audio((x/x),mod(audio(mod(x,x),mod(mod(externalVal,mod((audio(x,((cos(x)*y)/y))+(sin(noise(externalVal,pow(y,y)))/noise(externalVal,externalVal))),y)),tan(y))),noise(externalVal,(x/((cos(externalVal)+y)*min(max(sin(cos(x)),x),(min(x,pow(externalVal,y))/x)))))))),y),externalVal))),pow(externalVal,(sin(cos(externalVal))*pow(x,(mod(x,(externalVal-min(y,mod((min(externalVal,x)-y),externalVal))))/y)))))))/((cos(x)/y)+max((externalVal*tan(y)),min(externalVal,sin(min((externalVal+y),tan(cos(x)))))))),max(x,noise(audio(y,audio(min(externalVal,externalVal),tan(externalVal))),(cos(tan(y))+sin(noise(y,y))))))-x),y)-x),max(externalVal,(x*(audio(x,pow(x,x))+x)))))*x))))",
            "g": "audio(sin(sin(externalVal)),tan(pow((externalVal+x),max(tan(pow(sin((externalVal+y)),min(sin(x),pow(y,x)))),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,y)",
            "b": "max(mod(tan(max(y,audio((x+tan(externalVal)),externalVal))),min(max(pow(x,externalVal),x),(pow(externalVal,cos((tan((noise(cos((tan(x)/max(y,max(sin(x),noise(externalVal,(y+y)))))),mod(x,tan(audio(y,audio(noise(externalVal,externalVal),max(externalVal,min(externalVal,noise(cos(x),externalVal))))))))+x))+x)))*x))),y)",
            "g": "pow(tan(audio(y,x)),min(cos((pow(externalVal,max(x,(externalVal*y)))*externalVal)),(audio(tan(mod((y/externalVal),externalVal)),pow(sin(y),(noise(noise(max(cos(mod(cos((externalVal+y)),audio((x-x),audio(y,x)))),y),min(externalVal,y)),externalVal)-x)))/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "sin(pow(mod(noise(y,pow((x+cos(externalVal)),externalVal)),y),noise(min((tan(cos(y))*audio(x,(audio(x,sin(externalVal))*y))),x),(mod(externalVal,max((mod((sin(cos((audio(x,cos(x))/min(y,max((x/(mod(externalVal,(x*min(y,y)))-audio(pow(tan(x),y),y))),audio(externalVal,(cos((externalVal/min(cos(min(cos(max((y/x),pow(sin(min(externalVal,externalVal)),externalVal))),y)),audio(x,cos(x)))))+audio(y,(pow(x,(externalVal+min(y,mod((noise(externalVal,x)-y),externalVal))))/y)))))))))+x),y)+x),min(y,sin(x))))*x))))",
            "g": "pow(cos(cos(externalVal)),tan(noise((externalVal+x),pow((y-x),pow(y,y)))))"
          }
        }
      ],
      "timestamp": "22h:52m:25s"
    }
  ],
  "timestamp": "2023-11-05-22-47-51"
}
{
  "id": "fyfga00f-kvpj-b63w-in62-8ck1jayq6hog",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 1,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 12
  },
  "populations": [
    {
      "generation": 0,
      "id": "tdlysq2s-3zmc-iuqy-fzct-k59ek891fia5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(x+noise((externalVal/x),max(y,externalVal)))",
            "g": "noise((max(y,min(noise(externalVal,noise(externalVal,min(x,externalVal))),externalVal))/min(x,y)),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(x))",
            "b": "((x+(x+audio(tan(tan(x)),x)))*y)",
            "g": "audio(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x-(externalVal*y)),sin(externalVal))",
            "b": "cos(cos(externalVal))",
            "g": "(externalVal*(x+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow((pow(y,(y+y))-y),min(externalVal,cos(audio(x,x))))",
            "b": "tan((y-min(y,tan(cos(y)))))",
            "g": "min(max(externalVal,(((pow(y,x)+x)*cos(externalVal))*x)),pow(y,cos(pow((x*y),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise(x,mod((y+x),pow(sin((externalVal-externalVal)),min(mod(noise(x,pow(min((x-x),externalVal),y)),noise(sin(x),(max((x/externalVal),min(x,max((max(cos(x),pow(tan(pow((tan(y)/(externalVal/y)),max(x,audio(externalVal,sin(x))))),pow(externalVal,pow(y,(max(x,externalVal)*min(max(x,audio(noise(pow(x,y),externalVal),((max(externalVal,x)+externalVal)+externalVal))),x))))))*max((externalVal/(tan(y)+x)),cos(y))),(y+y))))/x))),x)))),externalVal)",
            "b": "pow(noise(x,sin(noise((y-x),x))),sin(y))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(externalVal,x)/y)",
            "b": "noise(audio(cos(max(sin(y),externalVal)),y),y)",
            "g": "noise(max(externalVal,externalVal),pow(mod((externalVal/x),((x/(mod(x,y)/x))*x)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x-mod(y,(pow(externalVal,sin(min(mod(x,max(y,(sin(mod(pow(y,x),((externalVal-x)/externalVal)))-x))),((externalVal/y)*y))))-externalVal))))",
            "b": "cos(sin(tan(externalVal)))",
            "g": "mod(mod(externalVal,sin(cos(externalVal))),(audio(x,(cos(audio(pow(cos((y/(sin(noise(externalVal,(externalVal*externalVal)))*mod(x,externalVal)))),(max(((externalVal/x)+y),(audio(y,externalVal)/x))/(tan((externalVal-y))*cos(cos(tan(y)))))),(externalVal*y)))*x))/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(y*((externalVal+externalVal)*sin(externalVal))))",
            "b": "noise(min(y,cos((y+pow(externalVal,y)))),y)",
            "g": "pow(((cos((y*max(cos((x/min((x+y),externalVal))),y)))-(sin(y)-audio((externalVal/noise((y/(externalVal-x)),externalVal)),externalVal)))*externalVal),((y*audio(max((cos(y)-noise(y,max((max(mod(((x*cos(sin(x)))/externalVal),x),cos(externalVal))+x),noise(externalVal,((y-x)+y))))),x),min(cos(externalVal),(noise(y,externalVal)-y))))*min(y,audio(externalVal,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-externalVal)",
            "b": "mod((x+cos(externalVal)),tan(y))",
            "g": "sin(min(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(x)*max(cos(mod(mod((x*x),x),cos(x))),externalVal))",
            "b": "mod((pow(sin(min(x,(audio(externalVal,y)*x))),y)+audio(cos(y),tan(cos(y)))),audio(noise(x,cos(min((y+y),(audio(y,externalVal)*pow((y+(sin(externalVal)*audio(tan(y),max(x,audio(y,noise(y,y)))))),mod(sin(x),y)))))),externalVal))",
            "g": "audio(externalVal,max((cos(cos((audio((sin(y)+noise(y,x)),externalVal)/(x+noise(y,max(externalVal,min(y,y)))))))*pow(cos(x),externalVal)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(audio(min(y,y),x)*y)))),(audio(y,noise(y,externalVal))/sin(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,max(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/pow(noise((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((tan(externalVal)-mod(sin(tan(mod(x,x))),noise(externalVal,y))),x)),audio((mod(audio(x,min(sin(externalVal),x)),mod(x,audio(max(mod(x,sin((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal))))),min((y-y),tan(mod(y,x)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),(externalVal/y))),externalVal))+((x*(x*externalVal))*max(min(max(externalVal,audio(y,x)),sin(cos(y))),y)))),x),(mod(x,x)/y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(tan((tan((y+externalVal))*externalVal)),(pow((x+cos(((externalVal*noise((max(x,(mod(audio(x,y),externalVal)-sin((x-externalVal))))*sin(y)),y))+x))),sin(y))/(x/((max(externalVal,externalVal)*max(externalVal,sin(tan(externalVal))))*cos(cos(externalVal)))))))",
            "b": "cos(cos(tan(y)))",
            "g": "max(x,(cos(externalVal)-min(externalVal,y)))"
          }
        }
      ],
      "timestamp": "19h:8m:1s"
    },
    {
      "generation": 1,
      "ascendantID": "tdlysq2s-3zmc-iuqy-fzct-k59ek891fia5",
      "id": "uizqr8dx-nre1-gwn7-yydb-dwslmrbgur6w",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(externalVal,x)/y)",
            "b": "noise(audio(cos(max(sin(y),externalVal)),y),y)",
            "g": "noise(max(externalVal,externalVal),pow(mod((externalVal/x),((x/(mod(x,y)/x))*x)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow((pow(y,(y+y))+y),noise(externalVal,tan(audio(x,x))))",
            "b": "max((y-min(y,tan(cos(y)))),y)",
            "g": "noise(min(externalVal,(((pow(y,x)+x)*cos(externalVal))*x)),pow(y,cos(pow((x*y),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(y*((externalVal+externalVal)*sin(externalVal))))",
            "b": "noise(min(y,(y-y)),y)",
            "g": "pow(((sin((y/min(cos(sin(x)),y)))-(sin(y)+audio((externalVal/noise((y/(externalVal-x)),externalVal)),externalVal)))*externalVal),((y*audio(max((cos(y)-noise(y,tan((max(pow(cos((x/cos(x))),x),cos(externalVal))+x)))),x),min(cos(externalVal),(noise(y,externalVal)-y))))*min(y,audio(externalVal,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "(x+noise((externalVal/x),max(y,externalVal)))",
            "g": "mod((x/cos(mod(x,y))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x-(externalVal*y)),cos(externalVal))",
            "b": "cos(sin(externalVal))",
            "g": "(externalVal*(x+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(y*((externalVal-externalVal)*sin(externalVal))))",
            "b": "noise(min(y,tan((y+noise(externalVal,y)))),y)",
            "g": "pow(((cos((y*max(cos((x/min((x+y),externalVal))),y)))-((y/x)*audio((externalVal/noise((y*(externalVal-x)),externalVal)),externalVal)))/externalVal),((y*audio(max((cos(externalVal)-noise(y,max((max(mod(((x*cos(sin(x)))/externalVal),x),cos(externalVal))+x),noise(externalVal,((externalVal+x)+y))))),x),min(max(externalVal,y),(min(y,externalVal)-y))))*min(y,pow(externalVal,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(x)*tan(tan(mod(((externalVal*cos(y))+x),tan(x)))))",
            "b": "mod((pow(cos(min(x,(audio(externalVal,y)/x))),y)+audio(cos(y),max(cos(y),externalVal))),audio(noise(x,tan(min((y+y),(audio(y,externalVal)/pow((y+(sin(externalVal)-audio(tan(y),max(x,audio(y,noise(y,y)))))),pow(sin(x),y)))))),externalVal))",
            "g": "audio(externalVal,tan(audio(y,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x-mod(y,(audio(externalVal,sin(min(mod(x,max(y,(cos(mod(pow(y,x),((externalVal-x)/externalVal)))-x))),((externalVal/y)*y))))-externalVal))))",
            "b": "cos(sin(tan(externalVal)))",
            "g": "pow(mod(externalVal,sin(sin(externalVal))),sin(audio(x,(sin(audio(pow(cos((y*(sin(mod(externalVal,(externalVal*externalVal)))*noise(x,externalVal)))),sin(max(((externalVal/x)+y),(pow(y,externalVal)/x)))),sin(externalVal)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(externalVal,x)/y)",
            "b": "noise(audio(mod(noise(x,x),y),y),y)",
            "g": "noise(tan(y),pow(mod((externalVal/x),((x/(mod(x,y)/x))-x)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((y-externalVal))-externalVal),externalVal),(pow((x+cos(((externalVal*min((max(x,(noise(pow(x,y),externalVal)-sin((x-externalVal))))*sin(y)),y))+x))),cos(externalVal))/(x/((max(externalVal,externalVal)*min(externalVal,sin(tan(externalVal))))*cos(cos(externalVal)))))))",
            "b": "cos(cos(max(y,sin(x))))",
            "g": "max(x,(cos(externalVal)*max(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(y*((externalVal+externalVal)*sin(externalVal))))",
            "b": "min(min(y,cos((y+pow(externalVal,y)))),y)",
            "g": "pow(((cos((y-min(cos(sin(x)),y)))-(sin(y)+audio((externalVal/noise((y/(externalVal+x)),externalVal)),externalVal)))-externalVal),((y-audio(max((cos(y)-min(y,max((max(mod(((x*cos(sin(x)))/externalVal),x),cos(externalVal))+y),noise(externalVal,((y*x)+y))))),x),min(cos(externalVal),(noise(y,externalVal)-y))))*max(x,audio(externalVal,x))))"
          }
        }
      ],
      "timestamp": "19h:8m:8s"
    },
    {
      "generation": 2,
      "ascendantID": "uizqr8dx-nre1-gwn7-yydb-dwslmrbgur6w",
      "id": "pvyfep59-x1w3-l3ut-vg35-dg44kmhg2et2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,(y*((externalVal+externalVal)*sin(externalVal))))",
            "b": "min(noise(x,cos(max(pow(tan(y),y),cos(externalVal)))),y)",
            "g": "mod(((cos((y*min(cos(sin(x)),y)))-(sin(y)+audio((externalVal/min((y*(externalVal+x)),externalVal)),externalVal)))-externalVal),((y*audio(max(((x/audio(min((externalVal+(min(cos(x),min(pow(mod(tan(externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)-noise(cos(max(mod(x,x),x)),noise(y,y))),x)),audio((noise(pow(x,mod(sin(externalVal),x)),mod(x,pow(tan(pow(x,((y+noise(x,(noise(y,max(externalVal,sin(tan(externalVal))))+externalVal)))/(externalVal+x)))),externalVal)))*externalVal),cos((y*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))-((x+(x/externalVal))-cos(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))-min(y,tan((max(mod(((x*cos(sin(x)))/externalVal),x),cos(y))+y)))),x),max(sin(externalVal),(noise(y,externalVal)-y))))*max(x,pow(externalVal,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((x-mod(y,(audio(externalVal,sin(min(mod(x,tan(y)),(sin(externalVal)*y))))-externalVal))))",
            "b": "cos(sin(tan(externalVal)))",
            "g": "audio(pow(externalVal,sin(sin(externalVal))),sin(audio(x,(sin(audio(mod(cos((y*(sin(mod(externalVal,(externalVal*externalVal)))*noise(x,externalVal)))),(max(((externalVal/x)+y),sin(pow(y,externalVal)))*(tan((externalVal*externalVal))*sin(tan(tan(y)))))),sin(externalVal)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x*pow(y,(audio(externalVal,cos(max(mod(x,max(y,(cos(mod(pow(y,x),((externalVal-x)/externalVal)))-x))),((externalVal/y)/y))))-externalVal)))/pow(max(externalVal,externalVal),externalVal))",
            "b": "cos(cos(tan(externalVal)))",
            "g": "audio(pow(externalVal,(sin(externalVal)/x)),sin(audio(x,(sin(audio(pow(sin((y*(sin(mod(externalVal,(externalVal-externalVal)))-noise(x,externalVal)))),(max((sin(externalVal)+y),(pow(y,externalVal)/x))/(tan((externalVal*externalVal))*cos(tan(max(y,max(max(x,noise(y,externalVal)),y))))))),sin(externalVal)))/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(pow(sin(y),noise(y,y))/y)",
            "b": "noise(min(min(y,tan((y+mod(externalVal,y)))),y),y)",
            "g": "noise(tan(y),pow(mod((externalVal/x),((x/(tan((x/y))/x))-x)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((y-externalVal))*externalVal),externalVal),sin(pow((x-cos(((externalVal*min((max(x,(noise(mod(x,y),externalVal)*cos((x-externalVal))))*sin(y)),y))+x))),cos(externalVal)))))",
            "b": "sin(cos(min(y,sin(x))))",
            "g": "max(x,(tan(externalVal)*max(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((y*externalVal))-externalVal),externalVal),(pow((x+cos(((externalVal*min((max(x,(noise(pow(x,y),externalVal)-sin((x-externalVal))))*sin(y)),y))+x))),cos(externalVal))/(y-((max(externalVal,externalVal)*noise(externalVal,sin(tan(externalVal))))*cos(cos(externalVal)))))))",
            "b": "cos(cos(tan(y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "(x+noise((externalVal*x),max(y,externalVal)))",
            "g": "min((x/tan(mod(x,y))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(externalVal,x)/x)",
            "b": "noise(audio(sin(max(min(sin((x/y)),min(externalVal,externalVal)),externalVal)),y),y)",
            "g": "noise(max(externalVal,externalVal),pow(mod((externalVal/x),cos(audio((x*y),externalVal))),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x*(externalVal*y)),cos(externalVal))",
            "b": "cos(sin(externalVal))",
            "g": "(externalVal*(x+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x-pow(y,(audio(externalVal,sin(noise(mod(x,max(y,((x+y)-x))),((externalVal/y)*y))))*externalVal))))",
            "b": "cos(cos(max(externalVal,y)))",
            "g": "pow(mod(externalVal,sin(cos(externalVal))),sin(audio(x,(sin(audio(pow(cos((y*(sin(mod(externalVal,(externalVal*externalVal)))*noise(x,externalVal)))),(max((sin(externalVal)+y),(pow(y,externalVal)/x))/(tan((externalVal*externalVal))*sin(tan(tan(y)))))),(externalVal/x)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((pow(y,(y+y))+y),noise(externalVal,cos(audio(x,x))))",
            "b": "max((y-min(y,tan(tan(y)))),y)",
            "g": "min(min(externalVal,(((pow(y,x)+x)/cos(externalVal))*x)),pow(y,tan(audio((x*y),externalVal))))"
          }
        }
      ],
      "timestamp": "19h:8m:15s"
    },
    {
      "generation": 3,
      "ascendantID": "pvyfep59-x1w3-l3ut-vg35-dg44kmhg2et2",
      "id": "vvmhziso-gq1l-k8q5-ef5d-q65fmp3zy2n6",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x-pow(externalVal,tan(y))))",
            "b": "cos(tan(externalVal))",
            "g": "audio(mod(externalVal,cos(sin(externalVal))),sin(audio(x,(sin(audio(pow(sin((y*(sin(noise(externalVal,(externalVal*externalVal)))*noise(x,externalVal)))),(max((sin(externalVal)+y),(pow(y,externalVal)*x))*(tan((externalVal*externalVal))/sin(tan(tan(y)))))),sin(externalVal)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((y*externalVal))-externalVal),externalVal),sin(pow((x+cos(((externalVal*min((max(x,(noise(pow(x,y),externalVal)-sin((x-externalVal))))*sin(y)),y))+x))),cos(externalVal)))))",
            "b": "tan(cos(max(externalVal,(x/max(max(externalVal,x),audio(pow((max(externalVal,x)/externalVal),min(max(y,min(audio(externalVal,y),y)),min(((y*pow(y,y))*x),max(tan(y),cos(max((externalVal-(externalVal/x)),(externalVal+min(x,sin(noise(audio(externalVal,x),audio(y,externalVal))))))))))),sin(pow(((mod(cos(tan((audio(y,x)/externalVal))),noise(externalVal,externalVal))-(((y*x)+tan((sin(externalVal)*x)))-noise(audio(sin(y),noise(x,y)),(externalVal/(sin(y)*(externalVal/y))))))-externalVal),externalVal))))))))",
            "g": "max(x,max(y,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((y-externalVal))+externalVal),externalVal),(pow((x+cos(((externalVal*min((tan(x)*sin(y)),y))+x))),tan(externalVal))/(y-((max(externalVal,externalVal)*noise(externalVal,sin(tan(externalVal))))/cos(cos(externalVal)))))))",
            "b": "sin(cos(tan(y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x*(externalVal*y)),cos(externalVal))",
            "b": "cos(cos(externalVal))",
            "g": "(y*(x+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((noise(externalVal,tan(audio(x,x)))+y),noise(externalVal,cos(pow(x,x))))",
            "b": "max((y*max(y,tan(cos(y)))),x)",
            "g": "noise(min(externalVal,(((pow(y,x)+x)*sin(externalVal))*x)),pow(y,tan(audio((x*y),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(mod((y/x),cos(mod(pow(y,x),sin((externalVal-x))))))",
            "b": "noise(sin(cos(tan(externalVal))),y)",
            "g": "noise(tan(y),mod(pow(sin(externalVal),((x/(tan(min(externalVal,y))/x))-x)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x*pow(y,(audio(externalVal,cos(max(mod(x,tan(y)),((externalVal/y)/y))))-externalVal)))/audio(max(externalVal,externalVal),y))",
            "b": "tan(cos(tan((x/y))))",
            "g": "pow(pow(externalVal,((y/externalVal)/x)),sin(audio(x,(sin(audio(pow(sin((externalVal/(cos(mod(externalVal,(externalVal-externalVal)))-pow(x,externalVal)))),(tan(((externalVal/x)+y))/(tan((externalVal*externalVal))*cos(cos(max(y,max(max(x,noise(y,externalVal)),y))))))),sin(externalVal)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((tan((y*externalVal))-externalVal),externalVal),(pow((x+cos(((externalVal*min((tan(x)*sin(y)),y))+x))),sin(externalVal))/(y-((max(externalVal,externalVal)-noise(externalVal,sin(tan(externalVal))))*cos(cos(externalVal)))))))",
            "b": "cos(sin(max(externalVal,(x/max(max(externalVal,x),pow(pow((min(externalVal,x)/externalVal),min(max(y,min(audio(externalVal,externalVal),y)),min(((y*pow(y,y))*x),tan(tan(y))))),sin(mod(((pow(cos(cos((pow(y,x)/externalVal))),min(externalVal,externalVal))*(((y*x)+max((sin(externalVal)*x),sin((mod(x,externalVal)+min(externalVal,max(max(x,x),noise(externalVal,externalVal)))))))-mod(audio(sin(y),noise(x,y)),(externalVal/((y/x)*(externalVal/y))))))+externalVal),externalVal))))))))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,(y-((externalVal+externalVal)*(externalVal/min(noise(max(y,max(externalVal,(max(x,y)*sin(externalVal)))),y),mod((noise((y+cos(x)),sin(x))+externalVal),sin(max(((externalVal/y)+(y+y)),noise(x,x)))))))))",
            "b": "min(min(y,cos(max(pow(tan(y),y),cos(externalVal)))),y)",
            "g": "mod(((cos((y*max(cos((x/min((x-y),externalVal))),y)))-(cos(y)+audio((externalVal/min((y/(externalVal+x)),externalVal)),externalVal)))*externalVal),((y*audio(max(((x/audio(min((externalVal-(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),mod(pow(max(max(y,mod((cos(externalVal)-noise(cos(max(mod(x,x),x)),mod(y,y))),x)),audio((noise(pow(x,mod(sin(externalVal),x)),mod(x,pow(tan(audio(x,((y+mod(y,(noise(y,max(externalVal,sin(cos(externalVal))))+externalVal)))/(externalVal+x)))),externalVal)))*externalVal),cos((x*audio(externalVal,externalVal))))),sin(x)),cos(externalVal))),externalVal))+((x+(x/externalVal))-cos(min(min(externalVal,audio(y,x)),(cos(y)/x)))))),y),(noise(x,x)/y)))-min(y,tan((max(mod((sin(x)/externalVal),x),cos(y))+y)))),x),max(sin(externalVal),(min(y,externalVal)-y))))*max(x,pow(externalVal,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal-mod(externalVal,sin(audio(min(y,y),x))))/(tan(x)+((x+y)-externalVal))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x*tan(cos((noise(x,externalVal)-x))))-(x*min(y,min(min(y,(y*externalVal)),x)))),(tan(y)+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,(y*((externalVal+externalVal)*sin(externalVal))))",
            "b": "max(noise(x,cos(tan(pow(tan(y),y)))),y)",
            "g": "mod(((cos((y*min(cos((x/min((x+y),externalVal))),y)))-(sin(y)+pow(sin(externalVal),y)))-externalVal),((y*audio(max(((x/audio(min((externalVal+(max(cos(x),max(pow(mod(tan(externalVal),y),noise(pow(noise(tan(y),audio((noise(pow(x,mod((y/x),x)),mod(x,pow(tan(mod(x,((y+noise(x,(max(y,max(externalVal,(tan(externalVal)/y)))-externalVal)))/(externalVal+x)))),externalVal)))*y),cos((y/audio(externalVal,externalVal))))),sin(x)),cos(externalVal))),externalVal))-((x+(x/externalVal))-cos(max(max(externalVal,audio(y,y)),(cos(y)/x)))))),y),(audio(x,x)/y)))-min(y,tan((min(pow(((x*tan(cos(x)))/externalVal),x),cos(y))+y)))),x),max(sin(externalVal),(noise(y,externalVal)*y))))/min(x,pow(externalVal,x))))"
          }
        }
      ],
      "timestamp": "19h:8m:17s"
    },
    {
      "generation": 4,
      "ascendantID": "vvmhziso-gq1l-k8q5-ef5d-q65fmp3zy2n6",
      "id": "6b1b7hp8-gykn-0383-k30t-ug9tvwhdbkbk",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x*(externalVal*y)),tan(externalVal))",
            "b": "cos(cos(externalVal))",
            "g": "(y/(x+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((tan((externalVal/externalVal))+externalVal),externalVal),(pow((x+sin(((externalVal*min((tan(x)*sin(y)),y))+x))),sin(externalVal))/(y+((max(externalVal,externalVal)-noise(externalVal,sin(tan(externalVal))))*cos(sin(externalVal)))))))",
            "b": "cos(sin(max(externalVal,sin(x))))",
            "g": "max(x,(cos(externalVal)*noise(x,audio((externalVal/pow(sin(sin(y)),x)),y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x*mod(externalVal,pow(x,y))))",
            "b": "cos(tan(externalVal))",
            "g": "audio(pow(externalVal,cos(sin(externalVal))),sin(audio(x,(sin(audio(audio(((y*(sin(mod(externalVal,(externalVal*externalVal)))*noise(x,externalVal)))/x),(tan((sin(externalVal)+y))*(tan((externalVal-externalVal))/sin(tan(tan(y)))))),cos(externalVal)))-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((y*externalVal))-externalVal),externalVal),(pow((x+cos(((externalVal/noise((tan(x)*sin(y)),y))-x))),cos(externalVal))/(y-((max(externalVal,externalVal)*noise(externalVal,sin(tan(externalVal))))*cos(cos(externalVal)))))))",
            "b": "tan(cos(max(externalVal,(x/min(tan(externalVal),audio(pow((max(externalVal,x)/externalVal),min(cos(x),min(mod(y,(mod(y,y)/y)),max(tan(y),sin(max((externalVal-(externalVal/x)),(externalVal+min(x,sin(noise(pow(externalVal,x),audio(y,y))))))))))),sin(pow(((mod(cos(cos((audio(y,x)/externalVal))),noise(externalVal,externalVal))-(((y*x)+tan((sin(externalVal)*x)))-min(audio(sin(y),noise(x,y)),(externalVal/(cos(y)*(externalVal/x))))))-externalVal),externalVal))))))))",
            "g": "max(x,max(y,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x/(externalVal*y)),cos(externalVal))",
            "b": "sin(cos(externalVal))",
            "g": "(y*(x+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,(y*((externalVal+externalVal)*sin(externalVal))))",
            "b": "max(noise(x,cos(tan(pow(cos(y),y)))),y)",
            "g": "pow(((tan((y/min(cos((x/min((x+y),externalVal))),y)))-(sin(y)+pow(sin(externalVal),y)))-externalVal),((y*audio(max(((x/audio(min((externalVal+(max(cos(x),max(pow(mod(max(externalVal,externalVal),y),noise(pow(noise(tan(y),audio((noise(audio(x,mod(sin(y),x)),mod(x,pow(tan(mod(x,((y+noise(x,(max(y,cos(externalVal))*externalVal)))/(externalVal+x)))),externalVal)))/y),cos((y/audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))-((x+(x/externalVal))-cos(max(max(externalVal,audio(y,y)),(cos(y)-x)))))),y),(audio(x,x)/y)))-min(y,tan((min(pow(((x*tan(cos(x)))/externalVal),x),cos(y))+y)))),x),max(sin(externalVal),(min(y,externalVal)/y))))/min(x,mod(externalVal,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x*pow(y,(audio(externalVal,cos(max(mod(x,cos(y)),((externalVal/y)/y))))-externalVal)))/audio(max(externalVal,externalVal),y))",
            "b": "tan(cos(tan((x/y))))",
            "g": "pow(pow(externalVal,((y/externalVal)/x)),sin(audio(x,(sin(audio(pow(sin((externalVal/((pow(externalVal,(externalVal-externalVal))/cos((x*x)))-pow(x,externalVal)))),(tan(((externalVal/x)+y))/(tan((externalVal*externalVal))*cos(cos(min(y,max(max(x,min(y,y)),y))))))),sin(externalVal)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((y-externalVal))+externalVal),externalVal),(audio((x+tan(noise(min(y,tan(externalVal)),y))),tan(externalVal))/(y-((max(externalVal,externalVal)*noise(externalVal,sin(tan(externalVal))))/cos(cos(externalVal)))))))",
            "b": "sin(cos(tan(y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x/audio(externalVal,(audio(externalVal,cos(min(mod(x,tan(y)),((externalVal*y)/y))))*externalVal))))",
            "b": "tan(cos(noise(x,sin(tan(pow(max(y,mod(y,(mod(y,y)-y))),y))))))",
            "g": "audio(pow(externalVal,((y/externalVal)*x)),sin(audio(x,(sin(audio(pow(cos((externalVal/(cos(mod(externalVal,(externalVal+externalVal)))-pow(x,externalVal)))),sin(tan(((externalVal/x)+y)))),sin(externalVal)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,(y*((externalVal-externalVal)*(externalVal/min(noise(max(y,max(externalVal,(min(x,x)*tan(externalVal)))),y),mod((min((y+tan(x)),max(y,x))-externalVal),sin(max(((externalVal/externalVal)+(y*y)),noise(x,x)))))))))",
            "b": "min(noise(x,sin(tan(pow(tan(y),y)))),y)",
            "g": "mod(((cos((y*min(tan((x/min((x+y),externalVal))),y)))*(sin(y)+pow(sin(externalVal),y)))-externalVal),((y*audio(min(((x/audio(min((externalVal-(max(sin(x),min(pow(mod(tan(externalVal),y),mod(pow(noise(tan(y),audio((noise(pow(x,mod((y/x),x)),mod(x,mod(tan(mod(x,((y+noise(x,(max(y,max(externalVal,sin(tan(externalVal))))-externalVal)))/(externalVal+x)))),externalVal)))/y),cos((y/audio(externalVal,externalVal))))),sin(x)),cos(externalVal))),externalVal))-((x+(x/externalVal))-cos(max(max(externalVal,audio(y,y)),(cos(y)/x)))))),y),(audio(x,x)-y)))-noise(y,tan((min(pow(sin((x*tan(sin(x)))),x),cos(y))-x)))),x),max(sin(externalVal),(noise(y,externalVal)*y))))/min(x,pow(externalVal,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x+mod(externalVal,max(y,x))))",
            "b": "cos(sin(cos(externalVal)))",
            "g": "audio(mod(externalVal,cos(sin(externalVal))),sin(audio(x,(sin(audio(audio(sin((y*(sin(noise(externalVal,(externalVal*externalVal)))-noise(x,externalVal)))),(max(((externalVal/x)+y),(pow(y,externalVal)*x))/(cos((externalVal*externalVal))/cos(max(tan(y),noise((max(y,noise(y,(((externalVal/x)/noise(x,x))*cos(min(min((externalVal+(mod(audio(noise((x-mod(y,externalVal)),x),(min(x,externalVal)/max((externalVal/((min(sin(externalVal),audio(y,externalVal))/x)-externalVal)),externalVal))),cos(x))/mod(((externalVal*min(externalVal,externalVal))-sin(y)),externalVal))),externalVal),sin((x+max((x+tan(externalVal)),externalVal))))))))+(mod(sin(max(min(sin(mod((x/y),externalVal)),x),y)),y)-y)),audio((noise((externalVal/externalVal),audio(x,sin(sin(audio(audio(sin((externalVal/(sin(mod(externalVal,(externalVal*externalVal)))*noise(x,externalVal)))),(tan((sin(externalVal)+y))/(tan((externalVal*externalVal))-cos(tan(max(y,max(max(x,noise(y,y)),y))))))),(externalVal/y))))))-y),x))))))),(externalVal/x)))/x))))"
          }
        }
      ],
      "timestamp": "19h:8m:19s"
    },
    {
      "generation": 5,
      "ascendantID": "6b1b7hp8-gykn-0383-k30t-ug9tvwhdbkbk",
      "id": "gtiimgl7-8qo6-itn3-81b2-jp4fhvvjy3jc",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x/(externalVal*y)),cos(externalVal))",
            "b": "cos(cos(externalVal))",
            "g": "(y/pow(noise(tan(y),pow((mod(pow(x,mod(sin(y),x)),mod(x,mod(max(mod(x,sin((y-noise(x,(max(y,max(externalVal,sin(tan(externalVal))))-externalVal))))),tan((y+y))),externalVal)))/y),sin((y/audio(externalVal,externalVal))))),tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((tan(sin(externalVal))+externalVal),externalVal),(pow((x+sin(((externalVal*min((tan(x)*(y/(min(y,externalVal)/tan(y)))),y))-x))),(externalVal/max(((externalVal*y)/externalVal),(min(tan(y),noise(externalVal,audio(externalVal,cos(externalVal))))-mod(x,(min(cos(pow(externalVal,externalVal)),(pow(tan(sin(max(externalVal,y))),externalVal)+x))-tan(y)))))))/(y+((max(externalVal,externalVal)+mod(externalVal,sin(tan(externalVal))))*sin(sin(externalVal)))))))",
            "b": "cos(sin(min(externalVal,cos(x))))",
            "g": "max(x,max(externalVal,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x/pow(y,(audio(externalVal,cos(tan(mod(x,cos(y)))))*externalVal)))/audio(max(externalVal,externalVal),y))",
            "b": "tan(cos(tan((x/y))))",
            "g": "pow(pow(externalVal,((y/externalVal)*x)),sin(audio(x,(sin(audio(pow(sin((externalVal/((mod(externalVal,(externalVal-externalVal))/cos((x*x)))-pow(x,externalVal)))),(tan(((externalVal/x)+y))/(tan((externalVal*externalVal))-cos(sin(min(y,tan(max(x,min(y,y))))))))),sin(externalVal)))/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x*pow(y,(audio(externalVal,cos(max(mod(x,cos(y)),((externalVal/y)/y))))-externalVal))))",
            "b": "max(cos(tan((x*y))),(externalVal*externalVal))",
            "g": "pow(pow(externalVal,((y/externalVal)/x)),sin(audio(x,(sin(audio(pow(cos((externalVal/((pow(externalVal,(externalVal-externalVal))/cos((x*x)))-audio(x,externalVal)))),(tan(((externalVal/x)-y))/(max((externalVal*y),sin((x/externalVal)))-cos(cos(min(y,max(max(x,min(y,y)),y))))))),sin(externalVal)))/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((tan((externalVal/externalVal))-externalVal),externalVal),(pow((x+sin(((externalVal*max((tan(x)*sin(y)),y))+x))),sin(externalVal))/(y+((max(externalVal,externalVal)+noise(externalVal,sin(tan(externalVal))))*sin((externalVal/((noise((x+y),externalVal)*externalVal)-y))))))))",
            "b": "cos(sin(max(externalVal,cos(x))))",
            "g": "max(x,(sin(externalVal)*noise(tan(y),audio((noise(pow(x,mod(sin(y),x)),mod(x,mod(tan(mod(x,((y-min(x,(max(y,cos(externalVal))*externalVal)))/(externalVal+x)))),externalVal)))*y),cos((y/audio(externalVal,y)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,(y-max(((externalVal/externalVal)+(y*y)),noise(x,x))))",
            "b": "min(min(x,cos(tan(pow(cos(y),y)))),y)",
            "g": "mod(((cos((y/max(cos((x*min((x+y),externalVal))),y)))-(sin(y)+pow(sin(externalVal),y)))+externalVal),sin((y+audio(min(((x/audio(min((externalVal+(min(cos(x),tan(pow(noise(max(externalVal,externalVal),y),noise(pow(mod(max(y,mod((cos(externalVal)+noise(cos(min(mod(x,x),x)),noise(y,y))),x)),audio((noise(audio(x,noise(sin(y),x)),mod(x,pow(tan(mod(x,((y+noise(x,(max(y,cos(externalVal))*externalVal)))/(externalVal+x)))),externalVal)))/y),cos((y/audio(externalVal,externalVal))))),sin(x)),cos(externalVal)))))-((x+(x/externalVal))*cos(max(max(externalVal,audio(y,y)),(cos(y)-x)))))),y),(audio(x,x)/y)))-min(y,tan((min(pow(((x*max(cos(y),x))/externalVal),x),cos(y))+y)))),x),max(cos(externalVal),(min(y,externalVal)/y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((externalVal/externalVal))+externalVal),externalVal),(pow((x+sin(((externalVal*min((tan(x)*sin(y)),y))-x))),sin(externalVal))/(y+((max(externalVal,externalVal)-noise(externalVal,sin(max(y,y))))*cos(sin(externalVal)))))))",
            "b": "cos(sin(tan(y)))",
            "g": "max(x,(cos(externalVal)+noise(x,audio((externalVal*pow(sin(sin(y)),x)),y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((tan((y/externalVal))+externalVal),externalVal),(pow((x+cos(((externalVal*min((tan(x)*sin(y)),y))+x))),(externalVal/max(cos((externalVal-externalVal)),(max(tan(y),mod(externalVal,audio(externalVal,cos(externalVal))))*pow(x,(noise(cos(pow(externalVal,externalVal)),(audio(tan(sin(max(externalVal,y))),externalVal)-x))+tan(y)))))))/(y+((tan(externalVal)-mod(externalVal,(cos(externalVal)/sin(max(((y+mod(y,externalVal))+pow((y-y),(tan(y)+externalVal))),audio(pow(min(externalVal,x),externalVal),externalVal))))))*tan(sin(externalVal)))))))",
            "b": "cos(sin(max(externalVal,sin(x))))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x*(externalVal*y)),tan(externalVal))",
            "b": "cos(sin(externalVal))",
            "g": "(y/(x+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,(y*((externalVal-externalVal)*(externalVal/min(noise(max(y,max(externalVal,(min(x,x)*tan(externalVal)))),externalVal),mod((min((y+tan(x)),min(y,x))-externalVal),sin(max(((externalVal*y)+(y*y)),noise(x,x)))))))))",
            "b": "min(noise(x,sin(tan(pow(cos(externalVal),y)))),y)",
            "g": "mod(((cos((y*min(tan((x/min((x-y),externalVal))),y)))*(sin(y)+mod(sin(externalVal),externalVal)))-externalVal),((y*audio(min((sin(x)-mod(y,tan((min(pow(sin((x*tan(sin(x)))),x),cos(y))-y)))),x),max(sin(externalVal),(min(y,externalVal)*y))))/min(x,audio(externalVal,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x/audio(externalVal,(audio(externalVal,cos(noise(noise(x,(externalVal*max((tan(x)*(y/(mod(y,externalVal)/sin(y)))),y))),((externalVal*y)/y))))*externalVal))))",
            "b": "tan(cos(noise(x,sin(tan(pow(max(y,mod(y,(mod(y,y)+y))),y))))))",
            "g": "mod(pow(externalVal,((y/externalVal)*x)),sin(audio(x,(sin(audio(mod(cos(sin(externalVal)),sin(tan(((externalVal*x)+y)))),sin(externalVal)))*x))))"
          }
        }
      ],
      "timestamp": "19h:8m:21s"
    },
    {
      "generation": 6,
      "ascendantID": "gtiimgl7-8qo6-itn3-81b2-jp4fhvvjy3jc",
      "id": "8punibec-s17m-yzvn-3mls-3o7tae11o633",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((tan((y*externalVal))+externalVal),externalVal),(pow((x+cos(((externalVal*min((cos(x)*(x*externalVal)),y))+x))),(externalVal/tan(cos((externalVal-externalVal)))))/(y+((tan(externalVal)-mod(externalVal,(cos(externalVal)*(max(((y+mod(y,externalVal))+pow((y*y),(tan(y)+externalVal))),audio(pow(min(externalVal,x),externalVal),externalVal))/externalVal))))*cos(sin(externalVal)))))))",
            "b": "max(sin(max(externalVal,cos(x))),x)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((y/audio(externalVal,(audio(externalVal,cos(min(noise(x,(externalVal*max((tan(x)*(y/(mod(y,externalVal)/cos(y)))),y))),((externalVal*y)/y))))*externalVal))))",
            "b": "max(cos(mod(x,sin(tan(audio(max(y,mod(y,(noise(y,y)+y))),y))))),(y*externalVal))",
            "g": "pow(pow(externalVal,((y/externalVal)-x)),sin(audio(x,(sin(audio(mod(sin(sin(externalVal)),(tan(((externalVal*x)+y))/(tan((externalVal+externalVal))/cos(sin(cos(y)))))),sin(externalVal)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x+sin(((externalVal-max((tan(x)*sin(y)),y))+x))),sin(externalVal))/(y-((max(externalVal,externalVal)+noise(externalVal,sin(tan(externalVal))))-sin((externalVal/((noise((x+y),externalVal)-externalVal)-y))))))))",
            "b": "cos(sin(max(externalVal,cos(x))))",
            "g": "max(x,((externalVal/x)*noise(max(y,pow((tan(externalVal)*pow(cos(max(((mod(externalVal,(externalVal-externalVal))/tan((x*x)))-pow(x,externalVal)),x)),noise(y,y))),x)),audio((mod(pow(x,mod(sin(y),x)),mod(x,mod(max(mod(x,((y-max(y,(tan(y)*externalVal)))/(externalVal-y))),tan((y+y))),externalVal)))*y),tan((y/audio(externalVal,externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x/(externalVal*y)),audio(y,noise(y,externalVal)))",
            "b": "cos(sin(externalVal))",
            "g": "(y/pow(noise(tan(y),pow((mod(pow(x,mod(cos(y),x)),pow(x,mod(max(pow(x,sin((y*noise(x,(max(y,max(externalVal,sin(tan(externalVal))))-externalVal))))),tan((y+y))),externalVal)))/y),sin(min(min(y,mod((cos(externalVal)-noise(cos(max(min(x,x),x)),min(y,y))),x)),mod((noise(audio(x,noise(tan(externalVal),x)),mod(x,pow(tan(pow(x,((y+noise(x,(min(y,tan(externalVal))-externalVal)))/(externalVal+x)))),externalVal)))*externalVal),cos((y*pow(externalVal,externalVal)))))))),cos(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x*(externalVal-y)),tan(externalVal))",
            "b": "cos(sin(externalVal))",
            "g": "(y/(x+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((externalVal/externalVal))+externalVal),externalVal),(audio((x+sin(((externalVal*min((tan(x)*sin(y)),y))+x))),sin(externalVal))/(y+((tan(externalVal)-noise(externalVal,sin(max(y,y))))*cos(cos(externalVal)))))))",
            "b": "cos(sin(tan(y)))",
            "g": "max(x,((externalVal/x)+mod(x,audio(pow(mod(externalVal,(y*externalVal)),y),y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x/pow(y,(audio(externalVal,cos(max(mod(y,cos(y)),sin((externalVal/y)))))*externalVal)))/audio(max(externalVal,externalVal),y))",
            "b": "tan(cos(cos((x/y))))",
            "g": "pow(mod(externalVal,((y/externalVal)*x)),sin(audio(x,(sin(audio(pow(sin((externalVal/((mod(externalVal,(externalVal-externalVal))/sin((x*x)))-pow(x,externalVal)))),(tan(((externalVal/x)+y))/(tan((externalVal*externalVal))-cos(sin(min(y,tan(max(x,min(y,y))))))))),(externalVal/y)))/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,min(y,y))",
            "b": "min(mod(x,cos(max(pow(cos(externalVal),y),cos(sin(sin(externalVal)))))),y)",
            "g": "mod(((cos((y/min(sin((x*noise((x+y),externalVal))),y)))-(cos(externalVal)+pow(sin(externalVal),y)))+externalVal),sin((y+audio(min((sin(x)-min(y,tan((min(pow(((x*min(cos(y),x))*externalVal),x),sin(y))+x)))),x),max(cos(externalVal),(min(y,externalVal)/y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x/pow(y,(pow(externalVal,cos(max(mod(x,sin(y)),sin((externalVal/y)))))-externalVal))))",
            "b": "min(cos(cos((x*y))),(externalVal*externalVal))",
            "g": "audio(pow(externalVal,((y*externalVal)/x)),sin(audio(x,(sin(audio(pow(cos((externalVal/(sin(pow(externalVal,(externalVal-externalVal)))/audio(x,externalVal)))),(max(((externalVal/x)-y),(mod(y,x)*y))/(min((y-externalVal),sin((x/externalVal)))-cos(cos(max(y,max(tan(x),y))))))),sin(externalVal)))/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x/(externalVal/x)),cos(externalVal))",
            "b": "cos(cos(externalVal))",
            "g": "(y/mod(mod(max(externalVal,mod((cos(externalVal)-noise(sin(tan(mod(x,x))),noise(y,y))),x)),pow((mod(pow(x,mod(sin(y),x)),mod(x,mod(max(mod(x,sin((y*noise(x,(max(y,max(externalVal,sin(tan(externalVal))))-externalVal))))),tan((y+y))),externalVal)))/y),sin((y/audio(externalVal,externalVal))))),tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(tan(sin(((y-externalVal)/(x+externalVal)))),(audio(y,min(y,y))/sin(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(sin((noise(x,externalVal)-x))))-(y/(x+externalVal))),(max(externalVal,(audio((y-x),x)*sin(x)))+tan(externalVal)))"
          }
        }
      ],
      "timestamp": "19h:8m:22s"
    },
    {
      "generation": 7,
      "ascendantID": "8punibec-s17m-yzvn-3mls-3o7tae11o633",
      "id": "b887umcv-ooox-c72i-a851-qs9yss409n63",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(tan(sin(((y-externalVal)/(x+externalVal)))),min(x,y))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(sin((noise(x,externalVal)-x))))-sin(y)),(max(externalVal,(audio((y-x),x)*sin(x)))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(min((tan((externalVal*externalVal))+externalVal),externalVal),(pow((x+cos(((externalVal*min((cos(x)*(x*externalVal)),y))+x))),(externalVal/tan(cos((externalVal-externalVal)))))/(y+((tan(externalVal)-mod(externalVal,(cos(externalVal)*(max(((y+pow(y,externalVal))+mod((y*y),(tan(y)+externalVal))),audio(pow(max(externalVal,y),externalVal),externalVal))/externalVal))))*cos(sin(externalVal)))))))",
            "b": "max(sin(max(externalVal,cos(x))),x)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x*audio(y,(audio(externalVal,cos(max(mod(y,(x/(max(mod(audio(y,x),((externalVal/x)/externalVal)),((externalVal+cos(noise((mod(externalVal,max(y,x))*externalVal),audio(x,x))))/noise(externalVal,pow(y,x))))+x))),((externalVal*externalVal)/y))))*externalVal)))/audio(max(externalVal,externalVal),y))",
            "b": "tan(sin(cos((x/y))))",
            "g": "audio(mod(externalVal,((y/externalVal)-x)),sin(audio(x,(sin(audio(pow(sin((externalVal/((mod(externalVal,(externalVal-externalVal))/((x*x)/externalVal))-pow(x,externalVal)))),(cos(((externalVal/x)-y))/(cos((externalVal*externalVal))+cos(sin(noise(y,tan(max(x,min(y,y))))))))),(externalVal/y)))/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x*(externalVal-y)),cos(externalVal))",
            "b": "cos(cos(externalVal))",
            "g": "(y/(x+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(y))",
            "b": "tan(cos(mod(x,sin(tan(audio(min(y,mod(y,(noise(y,y)-y))),y))))))",
            "g": "audio(pow(externalVal,((y/externalVal)+x)),sin(audio(x,(sin(audio(mod(sin(sin(externalVal)),(tan(((externalVal*x)+y))/(tan((externalVal+externalVal))/cos(sin(sin(y)))))),(externalVal/y)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,min(y,y))",
            "b": "min(mod(x,cos(max(pow(cos(externalVal),y),cos((sin(externalVal)/externalVal))))),y)",
            "g": "pow(((cos((y/min(sin((x*noise((x+y),externalVal))),y)))+(cos(externalVal)+pow(sin(externalVal),y)))+externalVal),sin((y+audio(min((sin(x)-min(y,cos((noise(pow(((x*min(sin(y),x))/externalVal),x),sin(y))+x)))),x),tan(cos(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,pow(max((tan((externalVal/externalVal))+externalVal),externalVal),(audio((x+sin(((externalVal*min((tan(x)*(y/(max(y,externalVal)/(y/(externalVal+noise(externalVal,x)))))),y))+x))),sin(externalVal))/(y+((max(externalVal,externalVal)+min(externalVal,(tan(y)/sin(max(((y-noise(x,externalVal))+pow((x-y),(tan(x)+externalVal))),pow(pow(min(externalVal,x),externalVal),externalVal))))))*cos(cos(externalVal)))))))",
            "b": "cos((max(y,cos(x))/cos(noise(externalVal,y))))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((y/audio(externalVal,(audio(externalVal,cos(min(noise(x,(externalVal*max((tan(x)*sin(y)),y))),((externalVal*y)*y))))*externalVal))))",
            "b": "max(cos(mod(x,(tan(audio(tan(y),y))/x))),sin(max(audio(min(y,noise(y,(noise(y,y)+y))),y),tan((tan(externalVal)/externalVal)))))",
            "g": "pow(audio(externalVal,((y/externalVal)-x)),sin(audio(x,(sin(audio(mod(sin(sin(externalVal)),(max(((externalVal*x)+y),(pow(x,x)-y))*(tan((externalVal+externalVal))/cos(sin(cos(y)))))),cos(externalVal)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(sin(x),cos(externalVal))",
            "b": "cos(tan(externalVal))",
            "g": "(y/pow(mod(min(externalVal,mod((cos(externalVal)+min(sin(cos(mod(x,x))),min(externalVal,y))),x)),pow((noise(pow(x,mod(sin(y),x)),mod(x,mod(max(mod(x,cos(externalVal)),tan((y-y))),externalVal)))/y),sin((y/audio(externalVal,externalVal))))),tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(noise((min((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x+sin(((externalVal-max((tan(x)*(y/(noise(y,externalVal)-tan(y)))),y))+x))),sin(externalVal))/(y*((max(externalVal,externalVal)+noise(externalVal,sin(tan(externalVal))))-cos(sin(externalVal)))))))",
            "b": "cos(sin(max(y,tan(x))))",
            "g": "max(x,((externalVal/x)*min(max(y,pow((tan(externalVal)*pow(tan(max(((mod(externalVal,(externalVal/y))/tan((x*x)))-pow(x,externalVal)),x)),noise(y,y))),x)),audio((mod(pow(x,mod(sin(externalVal),x)),mod(x,mod(max(noise(x,((y-max(y,(tan(y)*externalVal)))*(externalVal+y))),tan((y+y))),externalVal)))*y),max(sin(y),audio(x,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,min(y,y))",
            "b": "min(mod(x,cos(max(pow(cos(externalVal),externalVal),cos((cos(externalVal)/externalVal))))),y)",
            "g": "mod(((cos((y/noise(sin((x*noise((x+y),externalVal))),y)))-(cos(externalVal)+pow(sin(externalVal),y)))+externalVal),sin((y+audio(min((sin(x)-min(y,tan((min(pow(((x*noise(cos(y),x))*externalVal),x),cos(y))+x)))),x),max(cos(externalVal),(min(y,externalVal)/y))))))"
          }
        }
      ],
      "timestamp": "19h:8m:23s"
    },
    {
      "generation": 8,
      "ascendantID": "b887umcv-ooox-c72i-a851-qs9yss409n63",
      "id": "bkyhmgqz-nhv7-ejxu-nhxb-vxk69d55b0n9",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x*pow(y,(audio(externalVal,cos(max(mod(y,(x/(max(min(cos(x),x),((externalVal+cos(noise((mod(externalVal,max(y,x))*externalVal),audio(x,x))))*noise(externalVal,mod(externalVal,y))))+x))),((externalVal*externalVal)/y))))-externalVal)))/audio(max(externalVal,externalVal),externalVal))",
            "b": "tan(sin(cos((x/y))))",
            "g": "audio(mod(externalVal,(cos(y)-x)),sin(audio(x,(sin(audio(audio(cos((externalVal/((mod(externalVal,(externalVal-externalVal))/sin((x*x)))-pow(x,externalVal)))),(tan(((externalVal/x)-y))/(cos((externalVal*externalVal))+cos(sin(noise(y,cos(max(x,min(y,y))))))))),cos(externalVal)))/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x*audio(y,(audio(externalVal,cos(max(mod(y,(x/(tan(mod(audio(y,x),((externalVal/x)*externalVal)))+x))),((externalVal*externalVal)/y))))*externalVal)))/pow(tan(externalVal),y))",
            "b": "tan(sin(cos((x/y))))",
            "g": "audio(pow(externalVal,(cos(y)-x)),sin(audio(x,(sin(pow(pow(sin((externalVal/((mod(externalVal,(externalVal-externalVal))/((x-x)/externalVal))-pow(x,externalVal)))),(cos((sin(externalVal)-y))*(sin((externalVal*externalVal))+cos(cos(noise(y,tan(max(x,min(y,y))))))))),(externalVal/y)))*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,pow(noise((min((externalVal/externalVal),externalVal)+externalVal),externalVal),(pow((x+cos(((externalVal-max((max(x,(noise(pow(x,y),externalVal)-((x-externalVal)/max(x,y))))*(y/(noise(y,externalVal)-tan(y)))),y))+x))),sin(externalVal))/(y*((max(externalVal,externalVal)+noise(externalVal,sin(tan(externalVal))))-cos(sin(externalVal)))))))",
            "b": "cos(sin(max(y,tan(x))))",
            "g": "max(x,((externalVal/x)*min(tan(y),audio((noise(pow(x,mod(sin(externalVal),x)),mod(x,noise(max(noise(x,((y-max(y,(max(y,tan(externalVal))*externalVal)))*(externalVal+y))),tan((y-y))),externalVal)))-y),max((y/audio(externalVal,externalVal)),audio(x,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(noise((min((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x+sin(((externalVal-max((cos(x)*(y/(noise(y,externalVal)-tan(y)))),y))+x))),(y/min(cos((externalVal*externalVal)),(min(tan(y),noise(externalVal,pow(externalVal,cos(externalVal))))-pow(x,(mod(cos(pow(externalVal,y)),(audio(tan((max(externalVal,y)/x)),externalVal)-x))-cos(x)))))))/(y*((max(externalVal,externalVal)+noise(externalVal,sin(tan(externalVal))))-cos((externalVal/((mod((x+y),y)-externalVal)*y))))))))",
            "b": "cos((tan(externalVal)/cos(tan(externalVal))))",
            "g": "max(x,((externalVal/x)*max(noise(y,pow((cos(externalVal)*mod(cos(max(((mod(externalVal,(externalVal/y))/cos((x*x)))-mod(x,externalVal)),x)),noise(y,y))),x)),audio((mod(pow(x,mod(cos(y),x)),pow(x,pow(max(noise(x,((y-max(y,(tan(y)-externalVal)))*(externalVal+y))),tan((y+y))),externalVal)))-y),max(sin(y),audio(x,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,noise(y,y))",
            "b": "noise(mod(x,tan(max(pow(cos(externalVal),externalVal),sin((sin(externalVal)/externalVal))))),y)",
            "g": "mod(((cos((y/min(sin((x*min((x+y),externalVal))),y)))-(cos(externalVal)+pow(sin(externalVal),y)))+externalVal),sin((y+audio(min((sin(x)-max(y,cos((noise(pow(((x*max((x/(cos(y)+mod(pow(audio((((audio(externalVal,x)-audio(cos(externalVal),x))/y)-externalVal),externalVal),externalVal),x))),x))*externalVal),x),sin(y))+x)))),x),tan(cos(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,max(y,y))",
            "b": "min(mod(x,cos(max(audio(cos(externalVal),externalVal),cos((sin(externalVal)/externalVal))))),y)",
            "g": "mod(((cos((y/mod(sin((x/noise((x+y),externalVal))),y)))+(cos(y)+pow((externalVal/min((y-(externalVal+y)),y)),y)))+externalVal),cos((y-audio(max((sin(x)-min(y,cos((noise(mod(((x*max((y/(sin(y)+mod(pow(audio((((audio(externalVal,x)-mod(cos(externalVal),x))/externalVal)+externalVal),externalVal),externalVal),x))),x))*externalVal),x),sin(y))+x)))),x),tan(sin(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,pow(max((tan((externalVal/externalVal))+externalVal),externalVal),sin(audio((x+cos(((externalVal-min((cos(x)/sin(y)),y))+x))),sin(externalVal)))))",
            "b": "tan((tan(y)/cos(mod(externalVal,y))))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(max((tan((externalVal*externalVal))+externalVal),externalVal),(pow((x+tan(((externalVal*max((cos(x)*(x*externalVal)),y))+x))),(externalVal/tan(cos((externalVal-externalVal)))))/(y-((tan(externalVal)-mod(externalVal,(cos(externalVal)*(max(((y+pow(y,externalVal))+mod((y/y),(tan(y)+externalVal))),audio(pow(max(externalVal,y),externalVal),externalVal))/externalVal))))*tan((externalVal/((noise((x-y),y)/externalVal)*x))))))))",
            "b": "max(sin(max(externalVal,sin(x))),x)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((min((externalVal*externalVal),externalVal)-externalVal),externalVal),(pow((x+sin(max(x,externalVal))),cos(y))/(externalVal/((max(externalVal,externalVal)+noise(externalVal,(tan(externalVal)/(tan(((y+pow(x,externalVal))-mod((y*y),(cos(x)+externalVal))))*externalVal))))-cos(sin(externalVal)))))))",
            "b": "cos(sin(max(y,tan(x))))",
            "g": "min(x,((externalVal/x)*min(min(y,pow((tan(externalVal)*pow(tan(tan(((mod((sin(externalVal)-(x/externalVal)),externalVal)/tan((x*x)))-pow(x,externalVal)))),noise(y,y))),x)),pow((mod(pow(x,noise(cos(externalVal),x)),mod(x,noise(min(noise(x,((y-max(y,(max(y,cos(externalVal))*externalVal)))/(externalVal+y))),tan((y+y))),externalVal)))*y),max(sin(y),audio(x,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(noise((max((externalVal/externalVal),externalVal)*externalVal),externalVal),(pow((x-sin(((externalVal-noise((tan(x)-(y/(noise(y,externalVal)-tan(y)))),y))+x))),sin(y))/(y/((max(externalVal,externalVal)+noise(externalVal,sin(max(externalVal,x))))*cos(sin(externalVal)))))))",
            "b": "cos(sin(max(y,tan(x))))",
            "g": "max(x,((externalVal/x)*min(max(y,pow((max(externalVal,max(x,mod(externalVal,((mod(x,cos((x-audio(x,mod(x,x)))))+externalVal)+(pow(y,externalVal)/y)))))*pow(max(max(((mod(externalVal,(externalVal/y))/tan((x/x)))-mod(x,externalVal)),x),audio(pow(externalVal,(y-externalVal)),y)),mod(y,y))),x)),audio((mod(pow(x,mod(sin(externalVal),x)),mod(x,mod(min(noise(x,((y-max(y,(tan(y)/externalVal)))*(externalVal+y))),tan((y+y))),externalVal)))/y),max(cos(y),audio(x,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x*pow(y,(audio(externalVal,tan(max(mod(y,min(min(x,(externalVal-max((tan(x)*sin(y)),y))),((externalVal*y)*y))),(sin(externalVal)/y))))*externalVal)))/audio(max(externalVal,externalVal),y))",
            "b": "tan(sin(cos((x/y))))",
            "g": "audio(pow(externalVal,((y/externalVal)*x)),sin(audio(x,(sin(audio(mod(((externalVal/((mod(externalVal,(externalVal-externalVal))/((x*x)/externalVal))-pow(x,externalVal)))/y),(tan(((externalVal/x)-y))/(cos((externalVal-externalVal))+tan(sin(noise(y,tan(tan(x)))))))),(externalVal/y)))*x))))"
          }
        }
      ],
      "timestamp": "19h:8m:23s"
    },
    {
      "generation": 9,
      "ascendantID": "bkyhmgqz-nhv7-ejxu-nhxb-vxk69d55b0n9",
      "id": "0o90tfxs-jpas-97fg-s16r-05k5cwhpdfhw",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x*pow(y,(audio(externalVal,cos(max(mod(y,(x/(max(noise(tan(x),x),((externalVal+tan(noise((mod(externalVal,min(y,x))*externalVal),audio(x,y))))/noise(externalVal,mod(externalVal,y))))+x))),((externalVal/externalVal)*y))))-externalVal)))/audio(tan(externalVal),externalVal))",
            "b": "cos(sin(cos((x/y))))",
            "g": "audio(mod(externalVal,(cos(externalVal)-x)),sin(audio(x,(sin(audio(audio(cos((externalVal/((mod(externalVal,(externalVal-externalVal))/sin((x*x)))-mod(x,externalVal)))),(tan(((externalVal*x)-y))/(sin((y*externalVal))+cos(sin(noise(y,cos(max(x,min(y,y))))))))),(externalVal/y)))/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,mod(y,y))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "min(((x-tan(cos((mod(x,externalVal)-x))))-(x/max(y,min(min(y,(y/externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(noise((externalVal-(noise(cos(x),min(pow(mod(tan(externalVal),y),noise(audio(min(min(y,mod((cos(externalVal)+noise(cos(max(min(x,x),x)),min(y,y))),x)),pow((noise(audio(x,noise(min(externalVal,sin(max(x,mod((x/externalVal),y)))),x)),pow(x,pow(max(pow(x,((y+noise(x,(min(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),max(noise(y,y),externalVal))),externalVal)))*externalVal),sin((y*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(sin(y)/x)))))),x),(pow(x,x)/y)))))+tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,tan(y))",
            "b": "min(max(audio(tan(externalVal),externalVal),cos((sin(externalVal)/externalVal))),y)",
            "g": "mod(((tan((y/pow(sin(sin(x)),y)))+(cos(y)+mod((externalVal/min(min(y,externalVal),y)),y)))+externalVal),cos((y-audio(max((sin(x)*min(y,sin((noise(pow(((x-max(cos(y),x))*externalVal),x),(y/x))+x)))),x),max(tan(externalVal),(min(y,externalVal)/y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,noise(y,y))",
            "b": "noise(mod(x,tan(max(pow(cos(externalVal),externalVal),sin((max(pow(cos(externalVal),externalVal),cos(sin(sin(externalVal))))/externalVal))))),y)",
            "g": "mod(((cos(sin(y))-(sin(y)+audio(sin(externalVal),y)))+externalVal),sin((y+audio(min((sin(x)-min(externalVal,cos((noise(audio(((x*min((x/(sin(y)+mod(pow(audio((((audio(externalVal,x)-audio(tan(externalVal),x))/y)-externalVal),externalVal),externalVal),x))),x))/externalVal),x),cos(externalVal))+x)))),x),max(cos(externalVal),(max(y,externalVal)/y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(max((tan((externalVal*externalVal))+externalVal),externalVal),sin(audio((x+cos(((externalVal-min((cos(x)/cos(y)),y))+x))),sin(externalVal)))))",
            "b": "max((tan(y)/cos(mod(y,y))),y)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,audio(min((tan((y-externalVal))+externalVal),externalVal),sin(audio((x+tan(((externalVal*max((cos(x)*(x+externalVal)),y))+x))),(externalVal/tan(cos((externalVal-externalVal))))))))",
            "b": "max((max(externalVal,sin(x))/max(tan(externalVal),(max((noise(externalVal,mod((x*(externalVal+externalVal)),externalVal))*noise(noise(noise((externalVal*y),(externalVal+externalVal)),x),(x+min(sin(tan(y)),noise(max(y,(mod(pow(externalVal,mod(max(((sin(x)+sin((cos(externalVal)/externalVal)))/x),audio(min(y,externalVal),noise(externalVal,y))),y)),externalVal)+externalVal)),x))))),max(x,y))/y))),x)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(min((max((externalVal/externalVal),externalVal)*externalVal),externalVal),(pow((x-sin(((externalVal-noise((tan(x)-(y/(noise(y,externalVal)-tan(y)))),y))+y))),sin(y))/sin(y))))",
            "b": "cos(cos(max(y,tan(x))))",
            "g": "noise(x,(sin(externalVal)*max(max(y,pow((max(externalVal,max(x,noise(y,((noise(x,sin((x+audio(x,noise(x,x)))))+externalVal)+(min(x,noise(externalVal,((mod(x,cos(externalVal))*externalVal)+cos(pow(y,externalVal)))))/y)))))*mod(max(max(((mod(externalVal,sin(y))/max((x/x),externalVal))-mod(x,externalVal)),x),audio(pow(externalVal,(y+externalVal)),y)),mod(y,y))),x)),audio((mod(mod(x,mod(sin(externalVal),x)),noise(x,mod(max(mod(x,((y-max(y,sin(max(y,cos(externalVal)))))-(y+y))),tan((y+y))),externalVal)))*y),max(cos(y),audio(x,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,max(y,y))",
            "b": "min(noise(x,tan(tan(audio(cos(externalVal),externalVal)))),y)",
            "g": "mod(((tan((y/mod(sin((x-noise((y+y),externalVal))),y)))+(cos(y)+mod((externalVal*min((x*(externalVal+y)),y)),y)))+externalVal),cos((y-audio(max((sin(x)-min(y,tan((noise(mod(((x*max((y/(sin(y)+mod(pow(audio((((pow(externalVal,x)+mod(cos(externalVal),x))/externalVal)+externalVal),externalVal),externalVal),x))),x))*externalVal),x),sin(y))+x)))),x),cos(sin(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(noise((max((externalVal/externalVal),externalVal)/externalVal),externalVal),(pow((x-cos(((externalVal-noise((tan(x)-(y*(noise(y,externalVal)+tan(y)))),y))+x))),(y/noise(cos((externalVal*externalVal)),(noise(tan(externalVal),min(externalVal,pow(externalVal,sin(externalVal))))-pow(x,(mod(tan(audio(externalVal,externalVal)),(pow(tan((max(externalVal,y)/x)),externalVal)-x))+sin(y)))))))/sin(y))))",
            "b": "cos((max(y,tan(x))*max(max(externalVal,y),(noise((min(externalVal,mod(sin(x),externalVal))/noise(cos(pow((externalVal-y),(externalVal+externalVal))),(x+min(sin(tan(y)),pow(max(y,(mod(audio(externalVal,mod(max((((x-noise(y,x))-mod((audio(y,(externalVal*x))/y),cos(y)))/x),pow(noise(y,externalVal),noise(y,y))),y)),externalVal)-y)),y))))),mod(x,x))*x))))",
            "g": "max(x,((externalVal/x)*min(max(x,pow((tan(externalVal)*pow(max(max(((audio(externalVal,(externalVal/y))/tan((x/x)))-mod(x,externalVal)),x),audio(audio(externalVal,(y-externalVal)),y)),mod(y,y))),x)),audio((mod(pow(x,mod(sin(externalVal),x)),noise(x,mod(min(min(x,((y-max(y,(tan(y)/externalVal)))*(externalVal+y))),tan((y+y))),externalVal)))/y),max(pow(x,pow(tan(noise(x,((y-max(y,(cos(y)-externalVal)))-(externalVal-x)))),externalVal)),audio(x,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(tan((tan((externalVal*externalVal))+externalVal)),(pow((x+tan(((externalVal-tan((cos(x)*(x*externalVal))))+x))),(y/tan(cos((externalVal-externalVal)))))/(y*((max(externalVal,externalVal)-mod(externalVal,(sin(y)*(max(((y+pow(y,externalVal))+noise((y/y),(cos(y)+externalVal))),pow(pow(max(externalVal,y),externalVal),externalVal))/externalVal))))*tan((externalVal/((noise((x-y),y)/externalVal)/x))))))))",
            "b": "max(sin(max(externalVal,sin(x))),x)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(noise((min((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x+((max(externalVal,externalVal)+min(externalVal,(tan(y)/sin(tan(((y+noise(x,externalVal))+audio((x+y),(cos(y)-externalVal))))))))*sin(cos(externalVal)))),(y/min(cos((externalVal*externalVal)),(max(tan(y),noise(externalVal,pow(externalVal,tan(externalVal))))-audio(x,(pow(cos(pow(externalVal,y)),(audio(tan((max(externalVal,y)/x)),externalVal)*x))-sin(y)))))))/(y*((max(externalVal,externalVal)+noise(externalVal,sin(tan(externalVal))))-cos((externalVal/((mod((x+y),y)*externalVal)*y))))))))",
            "b": "cos((tan(externalVal)/tan(tan(externalVal))))",
            "g": "max(x,(cos(externalVal)-noise(x,sin(y))))"
          }
        }
      ],
      "timestamp": "19h:8m:23s"
    },
    {
      "generation": 10,
      "ascendantID": "0o90tfxs-jpas-97fg-s16r-05k5cwhpdfhw",
      "id": "8su9cd1o-0juh-rfqd-o1hs-eeol63y328yi",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((min((externalVal/externalVal),externalVal)+externalVal),externalVal),(pow((x+((tan(externalVal)+min(externalVal,sin(tan(y))))*sin(cos(externalVal)))),(y/max(sin((externalVal-externalVal)),(min(max(externalVal,x),noise(externalVal,audio(externalVal,max(externalVal,mod(cos((y+x)),(y+((y+externalVal)/noise((sin(externalVal)*x),externalVal))))))))-audio(x,(pow(cos(mod(externalVal,y)),(pow(tan((max(externalVal,y)/x)),externalVal)*x))-cos(x)))))))/(y*((max(externalVal,externalVal)+noise(externalVal,cos(tan(externalVal))))*cos((externalVal/((noise((x+y),y)*externalVal)*y))))))))",
            "b": "cos((tan(externalVal)/cos(max(externalVal,externalVal))))",
            "g": "max(x,(cos(externalVal)-noise(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(tan((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,y))*cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "min(((x+tan(cos((mod(x,externalVal)-x))))-(x/max(y,noise(min(y,(y/externalVal)),x)))),(max(y,(audio((y-x),x)*(x/pow(noise((externalVal-(noise(cos(x),min(pow(mod(min(y,externalVal),y),noise(audio(min(min(y,mod((tan(externalVal)+min(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(min(externalVal,cos(max(x,mod((y*externalVal),y)))),x)),pow(x,mod(max(pow(x,((y+noise(x,(min(y,max(externalVal,cos(max(externalVal,externalVal))))+externalVal)))/(externalVal+x))),min((y-y),max(mod(y,y),externalVal))),y)))*externalVal),sin((y+audio(externalVal,externalVal))))),sin(x)),cos(externalVal))),externalVal))+((x-(x/externalVal))*tan(tan(tan(externalVal)))))),x),(pow(x,x)/y)))))+tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-noise(externalVal,sin(audio(noise(externalVal,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((min(x,externalVal)-x))))-(x/max(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)/(x/pow(noise((externalVal+(min(sin(x),noise(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((tan(externalVal)-noise(tan(tan(noise(x,x))),noise(externalVal,y))),x)),audio((noise(audio(x,mod(sin(externalVal),x)),pow(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))-externalVal)))/(externalVal+x))),tan((y-y))),externalVal)))-externalVal),cos((y*mod(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(tan(externalVal),(cos(y)/x)))))),x),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,audio(min((tan((y-externalVal))+externalVal),externalVal),(pow((x+tan(((externalVal*max((cos(x)*(x+externalVal)),y))-x))),sin(externalVal))/(y-((max(externalVal,externalVal)*mod(externalVal,(cos(externalVal)*(max(((y+pow(y,externalVal))-noise((y/y),(max(y,x)+externalVal))),audio(pow(tan(externalVal),externalVal),externalVal))/externalVal))))*sin((externalVal*((min((x-y),y)/externalVal)-y))))))))",
            "b": "max((max(externalVal,sin(x))/max(max(y,externalVal),(tan((noise(externalVal,mod((x*(externalVal+externalVal)),externalVal))-noise(noise(noise((externalVal*y),(externalVal+externalVal)),x),(x+min((min(y,x)/y),noise(min(y,(mod(pow(externalVal,mod(max(sin((sin(x)+sin((cos(externalVal)/externalVal)))),audio(min(y,externalVal),noise(externalVal,y))),y)),externalVal)+externalVal)),x))))))*y))),x)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,max(y,y))",
            "b": "min(noise(x,(externalVal+externalVal)),y)",
            "g": "mod(((tan((y/mod(sin((x-min((y+y),externalVal))),y)))+(cos(y)+mod((externalVal-min((x*(externalVal+y)),y)),y)))+externalVal),cos((y+audio(tan((sin(x)+min(y,tan((noise(mod(((x*max((y/(sin(y)+mod(pow(audio((((pow(externalVal,x)-pow(cos(externalVal),x))/externalVal)+externalVal),externalVal),externalVal),x))),x))-externalVal),x),sin(y))+y))))),cos(sin(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(noise((min((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x+((min(externalVal,externalVal)+min(externalVal,sin(tan(y))))/sin(cos(externalVal)))),(y/max(cos((externalVal/externalVal)),(max(max(externalVal,x),min(externalVal,audio(externalVal,tan(externalVal))))-audio(x,(pow(cos(mod(externalVal,y)),(audio(tan((max(externalVal,y)/x)),externalVal)*x))-(y/pow(x,max(min(y,externalVal),x)))))))))/(y-((max(externalVal,externalVal)+min(externalVal,sin(tan(externalVal))))-cos(sin(externalVal)))))))",
            "b": "cos((tan(externalVal)/tan(max(externalVal,y))))",
            "g": "max(x,(cos(externalVal)-noise(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(noise((max((externalVal/externalVal),externalVal)+externalVal),externalVal),(pow((x+((min(externalVal,externalVal)+noise(externalVal,(tan(y)/sin(cos(((y+mod(x,externalVal))+audio((x+y),(cos(y)*externalVal))))))))*sin(sin(externalVal)))),(y/noise(cos((externalVal*externalVal)),(tan(tan(y))-audio(x,(audio(sin(pow(externalVal,y)),(audio(tan(sin(max(externalVal,y))),externalVal)*x))-sin(y)))))))/(y*((max(externalVal,externalVal)+noise(externalVal,cos(tan(externalVal))))-cos(sin(externalVal)))))))",
            "b": "cos(sin(tan(externalVal)))",
            "g": "max(x,(cos(externalVal)-mod(x,(cos(max(tan(externalVal),mod(y,y)))*externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal-mod(externalVal,sin(audio(max(externalVal,y),x))))),(audio(y,noise(y,y))/cos(externalVal)))",
            "b": "max(externalVal,sin(tan(sin(tan((x/y))))))",
            "g": "noise(((x*tan(cos((pow(x,externalVal)-x))))-(x/max(y,min(min(y,sin(x)),x)))),(tan(y)+tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(x)/audio(tan(externalVal),externalVal))",
            "b": "cos((sin((x/y))+mod((audio(y,min(max(max(y,sin((y+mod(externalVal,y)))),y),y))*tan(min(tan(y),externalVal))),(externalVal/(sin(y)+(y/y))))))",
            "g": "audio(noise(externalVal,(cos(externalVal)-x)),sin(audio(x,(sin(audio(audio(cos((externalVal/((mod(externalVal,(externalVal*externalVal))/((x*x)/externalVal))-pow(x,externalVal)))),(tan(((externalVal*x)-y))/(cos((y*externalVal))+tan((noise(y,cos(max(x,min(y,y))))/min((max(y,audio(y,(sin((externalVal/x))/sin(pow(pow((externalVal+(mod(mod(tan((y+audio(x,externalVal))),(noise(x,externalVal)/min(sin(externalVal),externalVal))),sin(x))*mod(((externalVal/tan(externalVal))*(x*y)),externalVal))),externalVal),sin(sin(y)))))))+(mod(sin(min(mod(min(externalVal,x),x),y)),x)*y)),pow((pow((externalVal/externalVal),(y/mod(mod(noise(y,max(min(((audio(externalVal,(externalVal*externalVal))/tan((x/x)))-mod(x,externalVal)),x),audio(audio(externalVal,(y-externalVal)),y))),mod((min(audio(x,mod(sin(externalVal),x)),mod(x,mod(min(mod(x,cos(externalVal)),max((y-y),max(noise(x,y),externalVal))),externalVal)))*y),((y/audio(externalVal,externalVal))/pow(x,x)))),tan(y))))+y),x))))))),(externalVal/y)))/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,cos(y))",
            "b": "min(noise(x,tan(max(audio(cos(externalVal),externalVal),sin(((externalVal/y)/externalVal))))),y)",
            "g": "mod(((tan((y/mod(sin((x+noise((y+y),externalVal))),y)))+(sin(y)+mod((externalVal/max((x*(externalVal+y)),y)),y)))+externalVal),cos((y*audio(max((sin(x)-min(y,tan((noise(mod(((x*max((y/((y/tan(externalVal))+mod(pow(audio((((pow(externalVal,x)+mod(cos(externalVal),x))/externalVal)+externalVal),externalVal),externalVal),x))),x))*externalVal),x),sin(y))+x)))),y),cos(sin(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,audio(min((max((y-externalVal),externalVal)+externalVal),externalVal),(audio((x+tan(((externalVal/max((cos(x)*(x+externalVal)),y))+x))),(externalVal*cos(cos((externalVal-externalVal)))))/(y-((tan(externalVal)*mod(externalVal,(tan(externalVal)/(max(((y+pow(y,externalVal))+mod((y/y),(tan(y)+externalVal))),audio(audio(tan(externalVal),externalVal),externalVal))/externalVal))))*cos((externalVal*((min((x-y),y)*externalVal)*x))))))))",
            "b": "max((max(externalVal,sin(x))*max(tan(externalVal),(max((noise(externalVal,noise((x*(externalVal+externalVal)),externalVal))*noise(noise(noise((externalVal*y),(y+externalVal)),x),(x+min(sin(tan(y)),min(cos(y),y))))),tan(x))/x))),x)",
            "g": "max(x,(sin(audio(externalVal,sin(y)))*cos(noise(noise((externalVal+(pow(mod(max((x-noise(x,pow((externalVal/pow(cos(cos(x)),x)),y))),x),sin(mod(x,externalVal))),cos(y))/mod((sin(externalVal)-(x-externalVal)),externalVal))),externalVal),cos((x-min((x+max(externalVal,x)),externalVal)))))))"
          }
        }
      ],
      "timestamp": "19h:8m:23s"
    },
    {
      "generation": 11,
      "ascendantID": "8su9cd1o-0juh-rfqd-o1hs-eeol63y328yi",
      "id": "v8mynva5-v7pt-uami-3pbs-pzfrdtkim5fp",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "max(externalVal,(audio(y,max(y,pow(externalVal,x)))/max(max(noise(x,(externalVal+externalVal)),y),cos(externalVal))))",
            "g": "mod(((x-max(cos((min(x,externalVal)-x)),externalVal))-(x/min(y,noise(min(y,(y*externalVal)),y)))),(max(y,(pow((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(tan(externalVal),y),noise(audio(min(tan(y),audio((min(audio(x,min(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+min(x,(noise(y,tan(externalVal))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-mod(x,x))*tan(max(max(externalVal,audio(y,y)),(cos(y)/x)))))),x),sin(pow(x,x))))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,pow(min((min((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x+((tan(externalVal)+noise(externalVal,sin(tan(y))))*(cos(externalVal)/sin(sin(x))))),(y/min(cos((externalVal*y)),(min(max(externalVal,x),noise(externalVal,audio(externalVal,max(externalVal,mod(cos((externalVal-x)),(y+((y+externalVal)/noise((sin(externalVal)*x),externalVal))))))))-audio(x,(mod(cos(mod(externalVal,y)),(mod(tan((tan(externalVal)/x)),externalVal)*x))-cos(x)))))))/(y*((max(externalVal,externalVal)+noise(externalVal,cos(tan(externalVal))))*cos((externalVal/((noise((x+y),externalVal)*externalVal)*y))))))))",
            "b": "tan((tan(externalVal)/cos(max(externalVal,externalVal))))",
            "g": "min(x,tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-noise(externalVal,cos(audio(min(externalVal,y),x))))),(audio(y,mod(y,externalVal))/sin(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x*tan(cos((noise(x,externalVal)-x))))-(x/min(y,max(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/pow(noise((externalVal+(noise(sin(x),max(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(tan(tan(noise(x,x))),mod(externalVal,y))),x)),audio((noise(audio(x,pow(sin(externalVal),x)),audio(x,pow(max(pow(x,((y+mod(y,(noise(y,max(externalVal,cos(tan(externalVal))))-externalVal)))/(externalVal+x))),tan((y-y))),externalVal)))*externalVal),cos((y*mod(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))-((x-(x/externalVal))*tan(max(tan(externalVal),(tan(externalVal)/x)))))),x),sin(pow(x,x))))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(min((max((y-externalVal),externalVal)+externalVal),externalVal),(pow((x+tan(((externalVal/max((cos(x)/(x-externalVal)),y))-x))),(externalVal/tan(tan((externalVal*y)))))/(y-((max(externalVal,externalVal)*mod(externalVal,(cos(externalVal)*(max(((y+pow(x,externalVal))-noise(sin(y),(max(y,x)+externalVal))),audio(pow(tan(externalVal),externalVal),externalVal))/externalVal))))*((externalVal*((min((x-y),y)/externalVal)-y))/cos((x/y))))))))",
            "b": "max((max(externalVal,sin(x))/max(max(y,externalVal),(tan((min(externalVal,mod((x-(externalVal+externalVal)),externalVal))-min(noise(noise((externalVal*y),(externalVal+externalVal)),x),(x+min((min(y,x)*y),mod(min(y,(noise(audio(externalVal,mod(max(sin((sin(x)+((tan(externalVal)/externalVal)/(y+externalVal)))),audio(noise(y,externalVal),noise(externalVal,y))),y)),externalVal)+externalVal)),y))))))*y))),x)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,tan(y))",
            "b": "min(tan(max(audio(cos(externalVal),externalVal),sin(((externalVal/y)/externalVal)))),y)",
            "g": "pow(((tan(sin(x))+(max(y,x)+pow((externalVal-max((x*(externalVal+y)),y)),y)))+externalVal),cos((y+audio(tan((cos(x)+max(y,cos((noise(mod(((x/max((y/(sin(y)+mod(pow(audio((sin((pow(externalVal,x)-pow(cos(externalVal),x)))+externalVal),externalVal),externalVal),x))),x))-externalVal),x),sin(y))+y))))),tan(sin(externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal-mod(externalVal,(pow(max(externalVal,y),x)/y)))),(audio(y,mod(y,y))/cos(externalVal)))",
            "b": "max(externalVal,cos(max(sin(tan((x/y))),sin(externalVal))))",
            "g": "mod(((x-max(cos((pow(x,externalVal)-x)),externalVal))-sin(x)),(max(y,(audio((y+y),x)*(x/audio(mod((externalVal+(noise(cos(x),min(pow(noise(tan(externalVal),y),noise(audio(min(min(y,noise((cos(externalVal)+noise(tan(max(min(x,y),x)),min(y,y))),x)),pow((noise(audio(x,min(max(externalVal,cos(max(x,mod((x/externalVal),y)))),x)),mod(x,audio(max(audio(x,((y+noise(x,(min(y,tan(externalVal))+externalVal)))/(externalVal+x))),max((y+y),max(noise(y,y),externalVal))),y)))*externalVal),((y/audio(externalVal,externalVal))/pow(x,x)))),sin(x)),(externalVal/externalVal))),externalVal))+((x+sin(x))/max(max(min(externalVal,pow(y,y)),(sin(y)/x)),y)))),x),sin(noise(x,x))))))+tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(sin((externalVal+noise(externalVal,sin(audio(audio(y,noise(y,externalVal)),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "min(((x-tan(sin((min(x,externalVal)-x))))+(x/max(x,noise(min(x,(y/externalVal)),x)))),(tan(y)+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max(sin(externalVal),externalVal)-externalVal),externalVal),(mod((x+((tan(externalVal)+noise(externalVal,sin(max(y,y))))*cos(cos(externalVal)))),(y/max(cos((externalVal-externalVal)),(min(max(externalVal,x),noise(externalVal,audio(externalVal,max(externalVal,mod(cos((y-x)),(y+((y+externalVal)/noise((sin(externalVal)/y),externalVal))))))))-audio(x,(pow(cos(mod(externalVal,y)),(pow(tan((min(externalVal,y)/x)),externalVal)*x))-cos(x)))))))/(externalVal-((max(externalVal,externalVal)+noise(externalVal,cos(tan(externalVal))))*cos((externalVal/((noise((x+y),y)*externalVal)/y))))))))",
            "b": "cos((cos((x/y))/sin(max(externalVal,externalVal))))",
            "g": "max(x,(tan(sin((pow(x,externalVal)-x)))-min(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,audio(max((max((y-externalVal),externalVal)+externalVal),externalVal),(audio((x+tan(((externalVal/max((cos(x)*(x+externalVal)),y))+x))),(externalVal/cos(cos((externalVal-externalVal)))))/(y/((tan(externalVal)*mod(externalVal,(tan(externalVal)/(max(((y-mod(y,externalVal))+mod((y*y),(tan(x)+externalVal))),pow(audio(tan(externalVal),externalVal),externalVal))/externalVal))))*cos((externalVal/((min((x-y),y)*externalVal)*x))))))))",
            "b": "min((max(externalVal,(x/tan((max(externalVal,y)/externalVal))))*max(max(externalVal,externalVal),(max((noise(externalVal,noise((x*(externalVal+externalVal)),externalVal))*min(noise(noise((externalVal*y),(y+externalVal)),x),(x+noise(sin(tan(y)),min(max(y,(mod(pow(externalVal,mod(min(sin((sin(x)+sin((tan(externalVal)/externalVal)))),pow(min(y,externalVal),noise(externalVal,y))),y)),externalVal)+externalVal)),y))))),tan(x))/x))),x)",
            "g": "max(x,((audio(externalVal,sin(y))/externalVal)*cos(noise(mod((externalVal+(audio(mod(tan((x-noise(x,pow((externalVal/pow(sin(cos(x)),x)),y)))),(mod(x,externalVal)/min((externalVal/(sin(max(tan(externalVal),pow(x,externalVal)))-externalVal)),externalVal))),tan(y))/mod((sin(externalVal)-(x-externalVal)),externalVal))),externalVal),cos((x-min((x+max(externalVal,x)),externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x+((cos(externalVal)+min(externalVal,sin(tan(y))))*sin(cos(externalVal)))),(externalVal/tan(tan((externalVal-externalVal)))))/(y*((max(externalVal,externalVal)-mod(externalVal,cos(tan(externalVal))))*cos(sin(externalVal)))))))",
            "b": "cos(sin(tan(externalVal)))",
            "g": "max(x,(cos(externalVal)-noise(x,(externalVal/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,cos(y))",
            "b": "min(mod(x,tan(max(audio(cos(externalVal),externalVal),sin(((externalVal/y)/externalVal))))),y)",
            "g": "mod(((tan((y/noise(sin((x+noise((y+y),externalVal))),y)))+(sin(y)+mod((externalVal*min((x*(externalVal+y)),y)),y)))+externalVal),cos((y*audio(max((sin(x)-noise(y,tan((noise(mod(((x*tan((y/((y/tan(externalVal))+mod(pow(pow((sin((audio(externalVal,x)+mod(cos(externalVal),x)))-externalVal),externalVal),externalVal),x)))))*externalVal),x),sin(y))+x)))),y),cos(sin(externalVal))))))"
          }
        }
      ],
      "timestamp": "19h:8m:24s"
    },
    {
      "generation": 12,
      "ascendantID": "v8mynva5-v7pt-uami-3pbs-pzfrdtkim5fp",
      "id": "mjsnnv51-hviq-x1dl-c86b-hza6y6cp6gqd",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((y/externalVal),externalVal)*externalVal),externalVal),(pow((x+((cos(externalVal)+min(externalVal,(tan(y)/(tan(((y-mod(x,y))+pow((x+y),(tan(y)-externalVal))))/externalVal))))-sin(cos(externalVal)))),(externalVal/tan(tan((externalVal-externalVal)))))*(y*((max(externalVal,externalVal)-mod(externalVal,cos(min(externalVal,y))))*cos(cos(externalVal)))))))",
            "b": "cos(sin(tan(externalVal)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((externalVal/externalVal),externalVal)*externalVal),externalVal),(pow((x+((cos(externalVal)+noise(externalVal,sin(tan(y))))*sin(sin(externalVal)))),(externalVal/max(tan((externalVal*externalVal)),(tan(max(externalVal,x))-mod(x,(audio(cos(mod(externalVal,y)),(pow(tan((max(externalVal,y)/x)),externalVal)/x))-sin(y)))))))/(y*cos(sin(y))))))",
            "b": "cos(sin(tan(externalVal)))",
            "g": "max(x,(cos(externalVal)-noise(x,(externalVal/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x+((cos(externalVal)+min(externalVal,sin(max(y,externalVal))))*sin(tan(externalVal)))),(externalVal*cos(tan((externalVal*externalVal)))))/(y*((max(externalVal,externalVal)+mod(externalVal,cos(tan(externalVal))))*cos(sin(externalVal)))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "max(x,(max(sin(y),min(externalVal,x))-noise(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-noise(externalVal,cos(audio(min(externalVal,y),x))))),(audio(y,mod(y,externalVal))/sin(externalVal)))",
            "b": "cos(externalVal)",
            "g": "noise(((x*tan(sin((noise(x,externalVal)-x))))-(x/min(y,max(min(y,(y-externalVal)),x)))),(tan(y)+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(max((tan((y-externalVal))+externalVal),externalVal),(audio((x+tan(((externalVal/max((cos(x)*(x+externalVal)),y))+x))),(externalVal/cos(cos((externalVal-externalVal)))))/(y/((tan(externalVal)-mod(externalVal,(tan(externalVal)/(max(((y-mod(y,externalVal))+pow((y*y),(cos(x)+externalVal))),pow(audio(tan(externalVal),externalVal),externalVal))/externalVal))))*cos((externalVal/((noise((x*y),y)*externalVal)*x))))))))",
            "b": "min((max(externalVal,(x*tan((max(externalVal,y)/externalVal))))/max(max(externalVal,externalVal),(max((noise(externalVal,noise((x*(externalVal-externalVal)),externalVal))*min(noise(noise((externalVal-y),(y+externalVal)),x),(x+noise(sin(max(y,x)),min(max(y,(mod(pow(externalVal,mod(min(sin((sin(x)+cos((max(externalVal,y)/externalVal)))),audio(min(y,externalVal),noise(externalVal,y))),y)),externalVal)+externalVal)),y))))),tan(x))/y))),x)",
            "g": "max(x,(cos(audio(externalVal,sin(y)))*cos(cos(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((y-externalVal),externalVal)+externalVal),externalVal),(pow((x+tan(((externalVal/max((cos(x)/(x-externalVal)),y))-x))),(externalVal/max(max((externalVal-y),externalVal),(noise(cos(y),min(y,pow(externalVal,sin(externalVal))))*mod(x,(min(tan(mod(externalVal,externalVal)),(pow(tan((mod(externalVal,y)/x)),externalVal)+x))+tan(y)))))))/(y-((max(externalVal,externalVal)*mod(externalVal,(tan(y)*(max(((externalVal+pow(x,externalVal))-max(cos(y),(max(y,x)+externalVal))),audio(mod(tan(externalVal),externalVal),externalVal))/externalVal))))*((externalVal*((noise((x*y),y)/externalVal)-y))/cos((x/y))))))))",
            "b": "max((max(externalVal,sin(x))/tan(max(y,externalVal))),x)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,pow(max((min((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x+((tan(externalVal)+noise(externalVal,sin(tan(y))))-(tan(externalVal)/sin(sin(x))))),(y/min(cos((externalVal*y)),(min(tan(y),noise(externalVal,pow(externalVal,tan(externalVal))))-audio(x,(pow(tan(mod(externalVal,y)),(mod(tan((tan(externalVal)/x)),externalVal)*x))-cos(x)))))))/(y*((max(externalVal,externalVal)+noise(externalVal,cos(max(externalVal,x))))+cos((externalVal/((noise((x+y),externalVal)-externalVal)*y))))))))",
            "b": "tan((tan(externalVal)/cos(max(externalVal,y))))",
            "g": "max(x,tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(sin((externalVal+noise(externalVal,sin(audio(audio(externalVal,noise(y,externalVal)),x))))),(audio(y,min(y,externalVal))-cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x*tan(sin((min(x,externalVal)-x))))+(x/tan(x))),(max(y,sin(audio((y+x),x)))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,pow(min((max((y-externalVal),externalVal)+externalVal),externalVal),(pow((x+min(((externalVal/max((cos(x)*(x-externalVal)),y))+x),noise(externalVal,externalVal))),(externalVal*tan(tan((externalVal-y)))))/(y-((max(externalVal,externalVal)*mod(externalVal,(cos(externalVal)/sin(tan(((y+pow(x,externalVal))-mod(sin(y),(min(y,x)+externalVal))))))))-((externalVal*((min((x-externalVal),y)/externalVal)*y))/cos((x*x))))))))",
            "b": "min((max(y,(x/max((max(externalVal,y)*externalVal),pow(noise((max(externalVal,x)/externalVal),noise(max(x,min(pow(externalVal,externalVal),y)),mod(((y/min(externalVal,x))-x),cos(cos(x))))),cos(noise(((pow(max(max((noise(y,x)/externalVal),tan(min(x,externalVal))),noise(y,externalVal)),tan(externalVal))-((sin((x/y))+noise((audio(y,min(max(max(y,sin((y+noise(externalVal,y)))),y),y))/max(min(max(y,audio(y,(max(y,y)*y))),externalVal),cos(externalVal))),(externalVal*(cos(x)+(y*y)))))+mod(cos(audio(y,min((min(x,tan((y+mod(externalVal,y))))*externalVal),y))),(externalVal/((y*x)/(externalVal/y))))))-externalVal),externalVal))))))/max(tan(y),(tan((max(externalVal,mod((x-(externalVal+externalVal)),externalVal))-min(min(mod((externalVal*y),(externalVal+externalVal)),x),(x*max((min(y,x)*y),mod(mod(y,(min(audio(externalVal,mod(max(sin((sin(x)+((tan(externalVal)/externalVal)/(y+externalVal)))),audio(noise(y,externalVal),noise(externalVal,y))),y)),externalVal)+externalVal)),y))))))*y))),x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((y*noise(externalVal,cos(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "cos(externalVal)",
            "g": "mod(((y-tan(cos((noise(x,externalVal)+x))))-(x*min(y,min(min(y,(y/externalVal)),x)))),(min(y,(audio(cos(y),x)*(x/audio(noise((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((tan(externalVal)-noise(tan(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(cos(externalVal),x)),noise(x,pow(max(mod(x,((y+noise(x,(noise(y,max(externalVal,cos(cos(y))))+externalVal)))/(externalVal+x))),max((y-y),cos(noise(y,y)))),externalVal)))*externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),(externalVal/y))),externalVal))-((x-(x/externalVal))-tan(max(min(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,max(y,y))",
            "b": "min(noise(x,tan(max(audio((y/noise(externalVal,y)),externalVal),sin(((externalVal/y)/externalVal))))),y)",
            "g": "noise(((cos((y/(audio(externalVal,(y/externalVal))*externalVal)))-(sin(y)+mod((externalVal*min((y/(externalVal+x)),y)),y)))+externalVal),cos((y*audio(max((sin(x)-noise(y,tan((noise(noise(((x*tan((y/((y/tan(externalVal))+pow(pow(pow((sin((audio(externalVal,x)+mod(cos(externalVal),x)))-externalVal),externalVal),externalVal),x)))))*externalVal),x),sin(y))+x)))),y),max(sin(externalVal),(min(y,externalVal)-y))))))"
          }
        }
      ],
      "timestamp": "19h:8m:24s"
    },
    {
      "generation": 13,
      "ascendantID": "mjsnnv51-hviq-x1dl-c86b-hza6y6cp6gqd",
      "id": "varrfcv6-hyx6-8d8k-y3o5-pwthdcs3o3ck",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(tan((y*noise(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((y-tan(cos((noise(x,externalVal)+x))))-(x*min(y,min(min(x,(y/externalVal)),x)))),(min(y,(pow(tan(y),y)*sin(x)))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((externalVal/externalVal),externalVal)*externalVal),externalVal),(pow((x+((cos(externalVal)+min(externalVal,cos(min(y,externalVal))))*cos(tan(externalVal)))),(externalVal*sin(tan((externalVal-externalVal)))))/(y*((max(externalVal,externalVal)+mod(externalVal,cos(max(y,x))))*cos(sin(externalVal)))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(min((min(sin(externalVal),externalVal)-externalVal),externalVal),(mod((x+((tan(externalVal)+noise(externalVal,(tan(y)/cos(tan(((y+noise(x,externalVal))+audio((x*externalVal),(tan(y)-externalVal))))))))*(tan(externalVal)/sin(cos(x))))),(externalVal/min(sin((externalVal-y)),(min(cos(externalVal),noise(externalVal,pow(externalVal,tan(externalVal))))-audio(x,(pow(tan(mod(externalVal,y)),(pow(tan((cos(externalVal)*x)),externalVal)*x))*cos(x)))))))/(y*((max(externalVal,externalVal)+mod(externalVal,cos(max(externalVal,x))))+cos((externalVal/((noise((x+y),externalVal)+y)*y))))))))",
            "b": "tan((tan(externalVal)/cos(max(externalVal,y))))",
            "g": "max(x,max(x,(cos(audio(externalVal,(y/externalVal)))/cos(noise(min((externalVal*cos(mod(audio(tan((x+min(x,audio((externalVal/audio(cos(cos(x)),x)),y)))),(tan(x)/max((externalVal*(tan(max(sin(externalVal),(y+pow(x,externalVal))))/externalVal)),externalVal))),sin(y)))),externalVal),cos((x-min((x-max(externalVal,x)),externalVal))))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((tan((externalVal*externalVal))-externalVal),externalVal),(audio((x+((cos(externalVal)+noise(externalVal,sin(tan(y))))*sin((externalVal/((noise(x,max(y,y))/externalVal)*y))))),(externalVal/tan(tan((externalVal-y)))))/(y*cos(sin(y))))))",
            "b": "cos(sin(tan(externalVal)))",
            "g": "max(x,(cos(externalVal)-noise(x,noise(x,(externalVal/x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,pow(max((noise((externalVal/externalVal),externalVal)+externalVal),externalVal),(pow((x+((tan(externalVal)+min(externalVal,cos(tan(y))))-(cos(externalVal)/sin(sin(x))))),(y/min(cos((externalVal*y)),(noise(tan(y),noise(externalVal,pow(externalVal,tan(externalVal))))-audio(x,(pow(tan(mod(externalVal,y)),(pow(tan((tan(externalVal)/x)),externalVal)-x))-cos(x)))))))*(y*((max(externalVal,externalVal)+noise(externalVal,tan(tan(externalVal))))+cos((externalVal/((noise((x+y),externalVal)-externalVal)*y))))))))",
            "b": "tan((tan(externalVal)/cos(max(externalVal,y))))",
            "g": "min(x,tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,pow(max((max((externalVal/externalVal),externalVal)-externalVal),externalVal),(pow((x*((max(externalVal,externalVal)+min(externalVal,sin(max(y,y))))+(tan(externalVal)/sin(sin(x))))),(externalVal/min(cos((externalVal-y)),(max(tan(y),noise(externalVal,pow(externalVal,tan(externalVal))))-audio(x,(pow(tan(mod(externalVal,y)),(mod(tan(sin(tan(externalVal))),externalVal)+x))-sin(x)))))))/(y*((max(externalVal,externalVal)+noise(externalVal,cos(max(externalVal,x))))*tan((externalVal/((noise((x+y),externalVal)-externalVal)/y))))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "max(x,tan(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((tan((externalVal/externalVal))-externalVal),externalVal),(pow((x+((cos(externalVal)+min(externalVal,sin(tan(y))))*(tan(externalVal)/(cos(x)/sin(max(mod(tan(y),sin(audio(externalVal,y))),((externalVal+externalVal)+(externalVal*y)))))))),(externalVal*tan(tan((externalVal*externalVal)))))/(y*((tan(externalVal)+pow(externalVal,tan(tan(externalVal))))/cos(sin(externalVal)))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(cos(y),(pow((x+((tan(externalVal)+noise(externalVal,sin(cos(y))))*cos(sin(externalVal)))),(externalVal/max(tan((externalVal*y)),(tan(min(externalVal,x))-mod(x,(audio(cos(mod(externalVal,y)),(pow(cos((max(externalVal,y)/x)),externalVal)*x))-sin(y)))))))/(y-cos(sin(y))))))",
            "b": "cos(sin(tan(externalVal)))",
            "g": "max(x,(cos(externalVal)-noise(x,(externalVal/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*pow(externalVal,sin(max((externalVal/audio(externalVal,x)),min(x,mod(x,x))))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(sin((noise(x,externalVal)-x))))-(x/noise(y,min(min(y,cos(externalVal)),x)))),(max(y,(audio((y+y),x)*sin(x)))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(noise((max((y/externalVal),externalVal)-externalVal),externalVal),(mod((x+((cos(externalVal)+min(externalVal,sin(max(y,externalVal))))*sin(tan(externalVal)))),(externalVal*cos(cos((externalVal*externalVal)))))/(y-((max(externalVal,externalVal)+mod(externalVal,cos(tan(externalVal))))*cos(sin(externalVal)))))))",
            "b": "max(sin(cos(externalVal)),y)",
            "g": "max(x,(max(sin(y),min(externalVal,x))-noise(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((externalVal*externalVal),externalVal)+externalVal),externalVal),(pow((x+((cos(externalVal)+min(externalVal,sin(max(y,externalVal))))-sin(tan(externalVal)))),(externalVal-cos(max((externalVal*externalVal),externalVal))))/(y*((max(externalVal,externalVal)+mod(externalVal,cos(tan(externalVal))))*sin(sin(externalVal)))))))",
            "b": "tan((tan(externalVal)*tan(min(externalVal,externalVal))))",
            "g": "max(x,(max((y/pow(mod(x,externalVal),audio(max(y,x),x))),noise(externalVal,x))-noise(x,cos(y))))"
          }
        }
      ],
      "timestamp": "19h:8m:27s"
    },
    {
      "generation": 14,
      "ascendantID": "varrfcv6-hyx6-8d8k-y3o5-pwthdcs3o3ck",
      "id": "4cdq4m3d-8c6f-lx25-fmk2-ma39n6hujvgr",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))*cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y+y),x)/(x/audio(min((externalVal-(max(cos(x),noise(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((tan(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,max(sin(externalVal),x)),mod(x,pow(max(mod(x,((y+noise(x,(noise(y,max(externalVal,sin(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y*y),tan(noise(y,y)))),externalVal)))*externalVal),cos((y*mod(externalVal,externalVal))))),cos(x)),sin(externalVal))),externalVal))+((x-(x*externalVal))*max(max(max(externalVal,audio(y,x)),(cos(y)/x)),y)))),y),(pow(x,x)/y)))))-cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((externalVal*externalVal),externalVal)+externalVal),externalVal),(pow((x+((tan(externalVal)+min(externalVal,sin(tan(y))))-sin(max(externalVal,((noise(x,min(y,y))-externalVal)+y))))),(y*cos(tan((externalVal*externalVal)))))/(y*((min(externalVal,externalVal)+mod(externalVal,tan(tan(externalVal))))*sin(cos(externalVal)))))))",
            "b": "max((max(externalVal,max(x,max(max(externalVal,x),pow(audio(cos((externalVal+externalVal)),tan(min(x,max(pow(externalVal,externalVal),x)))),cos(cos(x))))))*cos(tan(externalVal))),y)",
            "g": "max(x,(max((y/pow(mod(x,externalVal),audio(max(x,x),y))),noise(externalVal,x))-noise(x,cos(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(max((max((externalVal*externalVal),externalVal)+externalVal),externalVal),(pow((x-((cos(externalVal)+min(externalVal,sin(tan(y))))+sin(tan(externalVal)))),(externalVal-sin(max((externalVal*externalVal),externalVal))))/(y*((max(externalVal,externalVal)*mod(externalVal,sin(tan(externalVal))))*(cos(externalVal)/(sin(x)/sin(sin(pow(sin(y),cos(pow(externalVal,externalVal))))))))))))",
            "b": "tan((tan(externalVal)*tan(min(externalVal,externalVal))))",
            "g": "max(x,(max((y/pow(noise(x,externalVal),audio(tan(y),x))),noise(externalVal,x))-noise(x,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal*pow(externalVal,sin(max((externalVal/audio(externalVal,x)),max(x,mod(x,x))))))),sin(audio(y,mod(y,externalVal))))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(sin((min(x,externalVal)-x))))-(x/noise(y,min(min(y,cos(externalVal)),x)))),(max(y,(audio((y+y),x)*sin(x)))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(min((noise(sin(externalVal),externalVal)-externalVal),externalVal),(mod((x+((tan(externalVal)+mod(externalVal,(tan(y)/sin(tan(((y+noise(x,externalVal))+audio((x*y),(tan(y)-externalVal))))))))*(tan(externalVal)/sin(cos(x))))),(externalVal/max(cos((externalVal-y)),(min(cos(externalVal),noise(externalVal,pow(externalVal,tan(externalVal))))*audio(x,(pow(tan(mod(externalVal,y)),(pow(max((cos(externalVal)*x),noise(externalVal,(tan(y)/sin(x)))),externalVal)*x))*sin(x)))))))/(y*((max(externalVal,externalVal)+mod(externalVal,max(max(externalVal,x),(sin(((y-audio(x,y))*mod(sin(y),(min(x,y)+externalVal))))-externalVal))))+cos((externalVal*((noise((x+y),externalVal)+y)/x))))))))",
            "b": "cos((tan(externalVal)/cos(max(externalVal,y))))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal*pow(externalVal,sin(max((externalVal/audio(externalVal,x)),min(x,mod(x,x))))))),sin(audio(y,min(y,externalVal))))",
            "b": "tan(externalVal)",
            "g": "mod(((x*max(sin((noise(x,externalVal)*x)),externalVal))-(x*mod(y,min(min(y,cos(externalVal)),x)))),(max(y,(audio((y+y),x)*(x/audio(min((y+(max(cos(x),min(audio(noise(max(externalVal,externalVal),y),noise(audio(min(tan(y),mod((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+(x+min(x,audio((externalVal/audio(cos(cos(x)),x)),y))))/(externalVal+x))),tan((y*y))),y)))-externalVal),sin((y-audio(externalVal,externalVal))))),sin(x)),(externalVal/externalVal))),externalVal))+((x-(x/externalVal))*max(tan(max(externalVal,audio(y,x))),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((externalVal*externalVal),externalVal)+externalVal),externalVal),sin(pow((x+((cos(externalVal)+noise(externalVal,sin(max(y,externalVal))))-sin(tan(externalVal)))),(y-cos(min((externalVal*externalVal),externalVal)))))))",
            "b": "tan((tan(externalVal)*tan(min(externalVal,externalVal))))",
            "g": "max(x,(tan((y/pow(noise(x,externalVal),audio(tan(y),x))))-noise(x,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(min((max((externalVal/externalVal),externalVal)*externalVal),externalVal),(pow((x+((cos(externalVal)+min(externalVal,tan(min(y,externalVal))))*cos(tan(externalVal)))),(externalVal*(cos((externalVal-externalVal))/(tan(tan(y))+pow(x,(audio(tan(noise(externalVal,y)),(pow(cos((max(externalVal,y)/x)),y)-x))-(y/audio(x,noise(max(y,y),x)))))))))/(y*((max(externalVal,externalVal)+noise(externalVal,cos(max(y,x))))*tan(sin(externalVal)))))))",
            "b": "tan((tan(externalVal)/sin(min(externalVal,externalVal))))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,pow(min((max((externalVal/externalVal),externalVal)/externalVal),externalVal),(mod((x+((cos(externalVal)+min(externalVal,cos(min(y,externalVal))))*sin(tan(externalVal)))),(externalVal*sin(tan((externalVal-externalVal)))))/(y*((max(externalVal,externalVal)-mod(externalVal,cos(max(y,x))))*cos(sin(externalVal)))))))",
            "b": "max(sin(cos(externalVal)),y)",
            "g": "max(x,(max(cos(externalVal),min(externalVal,x))-noise(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan((y*mod(externalVal,cos(pow(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "max(externalVal,sin(pow(externalVal,max(y,pow(externalVal,x)))))",
            "g": "noise(((y-tan(cos((noise(x,externalVal)+x))))-(x*min(y,min(max(y,(y/externalVal)),x)))),(min(y,(pow(max(y,audio(noise(x,y),pow(cos(y),y))),x)*(x/audio(noise((y-(min(tan(x),min(pow(mod(tan(externalVal),y),mod(audio(noise(max(y,mod((max(externalVal,noise(x,max(y,((min(x,tan(externalVal))-externalVal)+cos(audio(y,externalVal))))))-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((mod(audio(x,noise(tan(y),x)),noise(x,pow(max(audio(x,((y+mod(y,(min(y,max(externalVal,tan(tan(y))))+externalVal)))*(externalVal+y))),max((y-y),tan(noise(y,y)))),externalVal)))*externalVal),tan((y*pow(externalVal,externalVal))))),(x/(min(externalVal,(max(y,((cos(externalVal)-y)/sin((externalVal/audio(x,x)))))/y))+min(min(externalVal,tan(noise(tan(externalVal),min(y,x)))),sin(externalVal))))),(externalVal/y))),externalVal))*((x+sin(x))*tan(max(max(externalVal,audio(y,x)),(cos(y)*x)))))),y),(pow(x,x)/y)))))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(noise((max(sin(y),externalVal)-externalVal),externalVal),(audio((x+((cos(externalVal)+min(externalVal,cos(tan(y))))*(tan(externalVal)/sin(cos(x))))),(externalVal*cos(cos((externalVal*externalVal)))))/(y*((cos(externalVal)+pow(externalVal,max(tan(externalVal),(cos(((y+mod(y,y))*pow((x-y),(tan(x)+externalVal))))/externalVal))))/tan(sin(externalVal)))))))",
            "b": "max(sin(tan(externalVal)),y)",
            "g": "tan(x)"
          }
        }
      ],
      "timestamp": "19h:8m:30s"
    },
    {
      "generation": 15,
      "ascendantID": "4cdq4m3d-8c6f-lx25-fmk2-ma39n6hujvgr",
      "id": "n73rzxfc-s2rf-rfss-m2vn-fylwow73jbyy",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,pow(min((max((externalVal/externalVal),externalVal)/externalVal),externalVal),(noise((x+((cos(externalVal)+min(externalVal,cos(min(y,externalVal))))/sin(tan(externalVal)))),(externalVal*sin(tan((externalVal+externalVal)))))*(y*((tan(externalVal)-mod(externalVal,cos(max(y,x))))*tan(sin(externalVal)))))))",
            "b": "tan(cos(tan(externalVal)))",
            "g": "max(x,(max(sin(y),min(externalVal,x))-noise(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,pow(min((max((externalVal*externalVal),externalVal)/externalVal),externalVal),(mod((x+((cos(externalVal)+min(externalVal,cos(min(y,externalVal))))/sin(tan(externalVal)))),(externalVal*cos(cos((externalVal-externalVal)))))/(y-((max(externalVal,externalVal)-noise(externalVal,cos(min(y,x))))*cos(cos(externalVal)))))))",
            "b": "max(sin(cos(externalVal)),y)",
            "g": "max(x,(cos(cos(externalVal))*noise(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal*mod(externalVal,sin(min((externalVal/audio(externalVal,x)),min(x,mod(x,x))))))),sin(audio(y,min(y,externalVal))))",
            "b": "tan(externalVal)",
            "g": "mod(((x*min(sin((noise(x,externalVal)/x)),externalVal))-(x/mod(y,min(min(y,cos(externalVal)),x)))),(max(y,(audio((y+y),x)*(x/audio(min((externalVal-(max(tan(x),noise(audio(noise(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(tan(min(x,x))),min(y,y))),x)),mod((noise(audio(x,noise(sin(externalVal),x)),mod(x,audio(max(pow(x,((y+(x+min(x,audio((externalVal/audio(sin(cos(x)),x)),y))))/(externalVal+x))),cos((externalVal*y))),y)))+externalVal),((y-audio(externalVal,externalVal))/pow(x,x)))),sin(x)),sin(externalVal))),externalVal))+((x*(x/externalVal))*max(tan(max(externalVal,audio(y,x))),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((y*mod(externalVal,cos(pow(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "max(externalVal,sin(pow(externalVal,max(y,pow(externalVal,x)))))",
            "g": "noise(((y-max(cos((noise(x,externalVal)+x)),externalVal))-(x-tan(y))),(noise(externalVal,(pow(max(y,audio(noise(x,y),mod(cos(y),y))),x)*sin(y)))+max(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,pow(min((max((externalVal/externalVal),externalVal)*y),externalVal),sin(mod((x+((tan(externalVal)+mod(externalVal,cos(min(y,externalVal))))-(max(externalVal,((pow(x,max(y,externalVal))-externalVal)+y))/(tan(x)*(max(pow(sin(externalVal),(audio(externalVal,y)/y)),((externalVal+externalVal)+(externalVal*y)))/(max(audio((externalVal/y),audio(cos(externalVal),externalVal)),(y-x))/(sin(((max(externalVal,externalVal)*mod(x,y))-externalVal))*externalVal))))))),(externalVal*sin(tan((externalVal*externalVal))))))))",
            "b": "tan((cos(externalVal)*sin(max(externalVal,externalVal))))",
            "g": "max(x,(max(cos(y),min(externalVal,x))-min(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(noise((max(sin(y),externalVal)+externalVal),externalVal),(audio((x+((tan(externalVal)+min(externalVal,cos(tan(y))))/sin(tan(externalVal)))),(y*cos(cos((externalVal-y)))))*(y*((cos(externalVal)+pow(externalVal,max(tan(externalVal),(cos(((y+pow(y,y))-pow((x-y),(tan(y)-externalVal))))/externalVal))))*tan(cos(externalVal)))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan((y*mod(externalVal,cos(pow(min(y,y),x))))),(audio(y,((y*audio(x,y))+mod((y+y),(cos(x)/externalVal))))*sin(externalVal)))",
            "b": "max(externalVal,sin(noise(audio(externalVal,x),audio(externalVal,externalVal))))",
            "g": "noise(((y-max(cos((noise(x,externalVal)+x)),externalVal))-(x*min(y,max(tan(y),x)))),(min(y,(pow(max(y,audio(noise(x,y),pow((y/x),y))),x)*(x/audio(mod((y-(min(tan(x),min(mod(mod(tan(externalVal),y),mod(audio(noise(max(y,pow((max(externalVal,noise(x,max(y,((min(x,tan(externalVal))-externalVal)+cos(audio(y,externalVal))))))-noise(audio(tan(y),x),min(y,y))),x)),audio((mod(audio(x,noise(cos(y),x)),noise(x,pow(max(audio(x,((y-mod(y,(min(y,tan(externalVal))+externalVal)))*(externalVal-y))),min((y-y),tan(noise(y,y)))),externalVal)))*externalVal),sin((y-pow(externalVal,externalVal))))),(x/(min(externalVal,(max(y,((cos(externalVal)-y)/((externalVal/pow(x,x))/sin(x))))/y))+max(min(externalVal,tan(noise(tan(externalVal),min(y,x)))),(externalVal/y))))),(externalVal/y))),externalVal))*((x+sin(x))*tan(max(min(externalVal,audio(y,x)),(cos(y)*x)))))),y),(pow(x,x)/y)))))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((y/externalVal),externalVal)-externalVal),externalVal),(audio((x+((cos(externalVal)+min(externalVal,cos(tan(y))))*(max(externalVal,((noise(x,max(y,y))*externalVal)/y))/(tan(x)/sin(tan(noise(tan(y),sin(audio(externalVal,y))))))))),(externalVal*tan(tan((externalVal*externalVal)))))-(y*((cos(externalVal)+pow(externalVal,max(tan(externalVal),(cos(((x+mod(y,y))*pow((x-y),(tan(x)+externalVal))))/externalVal))))/tan(sin(externalVal)))))))",
            "b": "noise(sin(tan(externalVal)),y)",
            "g": "max(x,(max(sin(y),noise(externalVal,x))-noise(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan((y*mod(externalVal,cos(pow(min(y,y),x))))),(audio(y,min(y,externalVal))/cos(externalVal)))",
            "b": "max(externalVal,sin(audio(externalVal,max(y,pow(externalVal,x)))))",
            "g": "pow(((y*tan(tan((mod(x,externalVal)+x))))-(x*min(y,noise(max(y,(y/externalVal)),x)))),(min(y,(pow(max(y,audio(noise(x,y),pow(cos(y),y))),x)*(x/audio(noise((y-(min(tan(x),min(pow(mod(tan(externalVal),y),mod(pow(noise(tan(y),audio((mod(audio(x,mod(tan(y),x)),noise(x,mod(min(audio(x,((y+mod(y,(noise(y,max(externalVal,tan(tan(y))))+externalVal)))/(externalVal+y))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),sin((y*pow(externalVal,externalVal))))),(x*(min(externalVal,sin(max(y,((sin(externalVal)-x)/sin((externalVal/audio(x,x)))))))+min(min(externalVal,tan(noise(tan(externalVal),min(y,x)))),sin(externalVal))))),(externalVal/y))),externalVal))*((x+sin(x))*tan(max(tan(externalVal),(cos(y)*x)))))),y),(pow(x,x)/y)))))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(max((mod(sin(externalVal),externalVal)-externalVal),externalVal),(mod((x+((max(y,externalVal)+noise(externalVal,(cos(y)/sin(tan(((y-noise(x,externalVal))+audio((x*y),(cos(y)-externalVal))))))))*(tan(externalVal)/sin(cos(x))))),(externalVal*max(cos((externalVal-y)),(min((y+noise(x,externalVal)),noise(externalVal,pow(externalVal,tan(externalVal))))*audio(x,(pow(tan(noise(externalVal,y)),(pow(max((cos(externalVal)/x),noise(externalVal,(tan(y)/sin(x)))),externalVal)-x))*sin(x)))))))*(y*((tan(y)+mod(externalVal,max(max(externalVal,x),(sin(((y-pow(x,y))/mod(sin(y),(min(x,y)+externalVal))))-externalVal))))+cos((externalVal*((noise((x+externalVal),externalVal)+y)*y))))))))",
            "b": "cos((tan(externalVal)/sin(max(externalVal,y))))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((tan((externalVal/externalVal))*externalVal),externalVal),(pow((x+((sin(externalVal)+min(externalVal,max(min(y,externalVal),sin(cos(((y/noise(y,y))+pow((x+y),(sin(x)*externalVal))))))))*cos(tan(externalVal)))),(externalVal*(cos((externalVal-externalVal))/(tan(tan(y))+mod(x,(audio(tan(noise(externalVal,y)),(pow(sin((max(externalVal,y)/x)),y)-x))-(y/audio(x,noise(max(y,y),x)))))))))*(y*((tan(externalVal)+noise(externalVal,cos(tan(externalVal))))*tan(cos(externalVal)))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "tan(x)"
          }
        }
      ],
      "timestamp": "19h:8m:33s"
    },
    {
      "generation": 16,
      "ascendantID": "n73rzxfc-s2rf-rfss-m2vn-fylwow73jbyy",
      "id": "rgk2ukl2-pvym-pij4-xzq7-pmpsz1d70vap",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max((y*noise(externalVal,tan(pow(max(externalVal,y),x)))),(max(x,(x+(pow(audio(y,noise(y,y)),x)/y)))+((x/y)+y))),(audio(y,min(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((y*tan(tan((noise(x,externalVal)-x))))*(x*max(x,mod(max(y,(y/externalVal)),x)))),(min(y,(audio(max(y,audio(mod(x,y),pow(cos(y),y))),x)*(x/audio(noise((y+(noise(tan(x),min(pow(mod(tan(externalVal),y),mod(audio(mod(tan(y),audio((mod(audio(x,mod(tan(y),x)),noise(x,pow(min(audio(x,sin((y+noise(y,(noise(y,min(externalVal,tan(tan(y))))+externalVal))))),max((y*y),tan(noise(y,y)))),externalVal)))-externalVal),sin((y-mod(externalVal,externalVal))))),(x*(min(externalVal,sin(tan(y)))+min(min(externalVal,tan(noise(tan(externalVal),min(y,x)))),sin(externalVal))))),(externalVal/y))),externalVal))*((x+sin(x))*tan(max(tan(externalVal),(cos(y)-x)))))),y),(pow(x,x)/y)))))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal/mod(externalVal,sin(noise((externalVal/audio(externalVal,x)),min(x,mod(x,x))))))),sin(audio(y,min(y,externalVal))))",
            "b": "tan(externalVal)",
            "g": "pow(((x-noise(sin((noise(x,externalVal)/x)),externalVal))-(x/mod(y,max(min(y,sin(externalVal)),x)))),(max(y,(pow((y+y),x)+(x/audio(min((externalVal+(max(tan(x),noise(audio(noise(max(externalVal,externalVal),y),noise(audio(noise(max(y,mod((cos(externalVal)-noise(tan(tan(noise(x,x))),min(y,y))),x)),pow((min(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y+(x+min(x,mod((externalVal/audio((sin(y)/externalVal),x)),y))))*(externalVal+y))),cos((externalVal*y))),y)))+externalVal),((y-audio(externalVal,externalVal))*pow(x,x)))),sin(x)),(externalVal/externalVal))),externalVal))+((x*(x/externalVal))*max(tan(tan(externalVal)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(mod((max(sin(y),externalVal)+externalVal),externalVal),(audio((x+((tan(externalVal)+min(externalVal,x))/cos(tan(externalVal)))),(y*cos(cos((externalVal-y)))))/(y/((cos(externalVal)-pow(externalVal,max(tan(externalVal),(cos(((y+pow(y,y))-pow((x-y),(tan(y)-externalVal))))/externalVal))))*cos(cos(externalVal)))))))",
            "b": "tan(sin(cos(externalVal)))",
            "g": "max(x,((max(sin(y),mod(externalVal,x))+mod(x,sin(y)))*noise(x,sin(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(noise((max(sin(y),externalVal)+externalVal),externalVal),(audio((x+((cos(externalVal)+max(externalVal,tan(tan(y))))/sin(max(externalVal,((min(x,max(y,y))+externalVal)-y))))),(y*cos(cos((externalVal*y)))))*(y*((cos(externalVal)+pow(externalVal,max(cos(externalVal),(cos(((y+pow(y,y))-pow((x-y),(tan(y)-externalVal))))/externalVal))))*tan(cos(externalVal)))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(min((max((externalVal*externalVal),externalVal)/externalVal),externalVal),(noise((x+((cos(externalVal)-max(externalVal,tan(min(y,externalVal))))/sin(tan(externalVal)))),(externalVal/cos(sin((externalVal-externalVal)))))/(y-((min(externalVal,externalVal)-noise(externalVal,cos(min(y,x))))/cos(cos(externalVal)))))))",
            "b": "max(cos(cos(externalVal)),y)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan((y*mod(externalVal,cos(audio(min(y,y),x))))),(audio(y,min(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "pow(((y/tan(tan((mod(x,externalVal)+x))))-(x*min(y,noise(max(y,(y/externalVal)),x)))),(min(y,(mod(max(y,pow(mod(x,y),mod(cos(y),y))),x)/(x/audio(mod((y-(min(tan(x),min(pow(mod(max(externalVal,externalVal),y),mod(pow(mod(tan(y),audio((mod(audio(x,mod(max(y,x),x)),noise(x,mod(min(pow(x,((y-noise(y,(noise(y,max(externalVal,tan(tan(y))))+externalVal)))/(externalVal+y))),max((y-y),max(noise(y,y),externalVal))),externalVal)))*externalVal),cos((x-pow(externalVal,externalVal))))),(x*(min(externalVal,cos(max(y,((sin(externalVal)-x)/sin((externalVal/pow(x,x)))))))+min(noise(externalVal,tan(noise(max(externalVal,x),min(externalVal,x)))),sin(externalVal))))),(externalVal/y))),externalVal))/((x+sin(x))*tan(max(tan(externalVal),(cos(y)*x)))))),x),(pow(x,x)/y)))))+min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((y/mod(externalVal,sin(noise((externalVal*audio(externalVal,x)),min(x,mod(x,x))))))),sin(audio(y,min(y,externalVal))))",
            "b": "cos(externalVal)",
            "g": "mod(((x*max(sin((noise(x,externalVal)/x)),externalVal))-(x/mod(y,min(min(y,cos(externalVal)),x)))),(max(y,(audio((y+y),x)*(x/audio(noise((y-(max(tan(x),noise(audio(noise(max(externalVal,externalVal),y),noise(audio(max(max(y,mod((tan(externalVal)-noise((min(noise(x,x),x)/max(pow(externalVal,(y*externalVal)),y)),min(y,y))),x)),mod((noise(audio(x,noise(sin(externalVal),x)),mod(x,audio(tan(mod(x,((y+(x+min(x,audio((externalVal/audio(sin(tan(x)),x)),y))))/(externalVal+x)))),y)))-externalVal),((y-audio(externalVal,externalVal))/pow(x,x)))),sin(x)),sin(externalVal))),externalVal))+((x*(x/externalVal))*tan(tan(max(externalVal,audio(y,x))))))),x),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,cos(audio(max(y,y),x))))),sin(tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((mod(x,externalVal)-x))))-(x*min(y,min(noise(y,(y*externalVal)),x)))),(max(y,(audio((y+y),x)*(x/pow(min((externalVal+(max(cos(x),max(noise(mod(tan(externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)-noise(x,mod(max(audio(x,((y+mod(y,(min(y,tan(externalVal))+externalVal)))*(externalVal+y))),max((y-y),tan(mod(y,y)))),externalVal))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,pow(max(mod(x,sin((y+noise(x,(noise(y,max(externalVal,tan(tan(externalVal))))+externalVal))))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),(externalVal/externalVal))),externalVal))+((x-(x/externalVal))*tan(min(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,pow(min((max((externalVal*externalVal),externalVal)/externalVal),externalVal),(mod((x+sin((cos(externalVal)+noise(externalVal,cos(min(y,y)))))),(externalVal*cos(cos((externalVal-externalVal)))))/(y*((min(y,externalVal)*noise(externalVal,cos(max(externalVal,x))))*cos(cos(externalVal)))))))",
            "b": "max(sin(cos(externalVal)),y)",
            "g": "max(x,(cos(cos(externalVal))-min(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,pow(min((max((externalVal/externalVal),externalVal)*y),externalVal),sin(mod((x+((max(y,externalVal)+mod(externalVal,tan(min(y,externalVal))))-(max(externalVal,((pow(x,max(y,externalVal))-externalVal)*y))/(cos(x)*(max(mod(cos(externalVal),(audio(externalVal,y)/y)),((externalVal+externalVal)+(externalVal*y)))/(max(audio((externalVal/y),audio(sin(y),externalVal)),(y-x))*(sin(((min(y,externalVal)*pow(x,y))-externalVal))*externalVal))))))),(externalVal*cos(cos((externalVal*externalVal))))))))",
            "b": "tan((sin(externalVal)*cos(max(externalVal,externalVal))))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max((y*mod(externalVal,sin(pow(min(externalVal,y),x)))),(max(x,(x+(pow(audio(y,audio(y,x)),x)/y)))+((x*y)+y))),(audio(y,min(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,sin(audio(externalVal,max(y,pow(externalVal,x)))))",
            "g": "mod(((y*max(tan((mod(x,externalVal)+y)),externalVal))*(x*min(x,min(tan(x),x)))),(max(externalVal,(pow(max(y,audio(noise(x,y),audio(cos(y),y))),x)*(x/audio(mod((y-(max(tan(x),min(pow(pow(tan(externalVal),y),mod(pow(mod(cos(y),audio((mod(audio(x,mod(tan(y),x)),noise(x,noise(max(audio(x,((y+mod(y,(noise(y,tan(externalVal))+externalVal)))/(externalVal+y))),tan((y+y))),externalVal)))-externalVal),sin((x*pow(externalVal,externalVal))))),(x-(min(externalVal,sin(max(y,((sin(externalVal)-x)/sin((externalVal*audio(x,x)))))))+min(min(externalVal,tan(noise(cos(externalVal),min(y,x)))),sin(externalVal))))),(externalVal/y))),externalVal))-((x+sin(x))*tan(max(cos(externalVal),(cos(y)*x)))))),x),max(pow(externalVal,(y*externalVal)),y)))))+min(y,x)))"
          }
        }
      ],
      "timestamp": "19h:8m:36s"
    },
    {
      "generation": 17,
      "ascendantID": "rgk2ukl2-pvym-pij4-xzq7-pmpsz1d70vap",
      "id": "gi7e6k69-eum4-zbkh-4r5l-b41t44txq0b3",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan((y*mod(externalVal,cos(audio(min(y,y),x))))),(min(externalVal,x)/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((y/tan(tan((mod(x,externalVal)+x))))-(x*min(y,noise(max(y,(y/externalVal)),x)))),(min(y,(mod(max(y,pow(mod(x,y),mod(cos(y),y))),x)/(x/audio(noise((y+(tan(tan(x))/((x+sin(x))*tan(tan(tan(externalVal)))))),y),(mod(y,x)/y)))))+min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan((y*mod(externalVal,sin(pow(min(externalVal,y),x))))),(audio(y,min(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,sin(audio(externalVal,max(y,pow(externalVal,x)))))",
            "g": "noise(((y*max(tan((mod(x,externalVal)+y)),externalVal))*(x*min(x,min(tan(x),x)))),(max(externalVal,(audio(min(y,audio(noise(x,y),audio(cos(y),y))),x)*(x/audio(min((y*(max(tan(x),min(mod(pow(max(externalVal,externalVal),y),mod(pow(noise(cos(y),audio((mod(pow(x,noise(tan(y),x)),mod(x,noise(noise(audio(x,((y-mod(y,(noise(y,tan(externalVal))+externalVal)))/(externalVal+y))),tan((y+y))),externalVal)))*y),sin((x*pow(externalVal,externalVal))))),(x-(min(externalVal,sin(max(y,((sin(externalVal)-x)/sin((externalVal*audio(x,x)))))))+noise(min(externalVal,tan(noise(sin(externalVal),min(y,x)))),(externalVal*y))))),(externalVal/y))),externalVal))-((x+sin(x))*tan(tan(cos(externalVal)))))),y),max(audio(externalVal,(y*externalVal)),y)))))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(mod((max(sin(y),externalVal)-externalVal),externalVal),(audio((x+sin((tan(externalVal)+min(externalVal,x)))),(externalVal/cos(cos((externalVal-y)))))/(y*((tan(externalVal)-pow(externalVal,max(tan(externalVal),(cos(((y+pow(x,y))-sin(pow(min(externalVal,y),x))))*externalVal))))/cos(cos(externalVal)))))))",
            "b": "max(sin(cos(externalVal)),x)",
            "g": "min(x,(((mod(audio(x,noise(tan(y),x)),noise(x,min(max(audio(x,((y+pow(y,(noise(y,tan(externalVal))+externalVal)))/(externalVal+y))),min((y-y),tan(min(y,x)))),externalVal)))-externalVal)+pow(x,sin(y)))/noise(x,sin(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(mod((tan(sin(y))*externalVal),externalVal),(audio((x+((max(externalVal,externalVal)+max(y,x))/sin(max(externalVal,((max(x,max(y,y))+externalVal)+x))))),(y*cos(sin((externalVal+y)))))/(y/((cos(externalVal)-audio(externalVal,max(tan(externalVal),sin(cos(((y+pow(y,y))-pow((x*y),(tan(y)-externalVal))))))))*cos(cos(externalVal)))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "max(x,((max(cos(y),mod(externalVal,x))+mod(x,sin(y)))-noise(x,sin(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan((y*mod(externalVal,cos(pow(min(y,y),x))))),sin(audio(y,min(y,externalVal))))",
            "b": "tan(externalVal)",
            "g": "pow(((y*tan(tan((mod(x,externalVal)+x))))-(x*min(y,noise(max(y,sin(y)),x)))),(min(y,(mod(max(y,pow(mod(x,y),mod(cos(y),y))),x)/(x/audio(mod((y-(max(cos(x),max(pow(mod(cos(externalVal),y),mod(pow(noise(tan(y),audio((noise(audio(x,mod(min(y,x),x)),noise(x,mod(noise(pow(x,((y+noise(y,(mod(y,tan(externalVal))+externalVal)))/(externalVal+y))),max((y-externalVal),max(noise(y,y),externalVal))),externalVal)))-externalVal),cos((y-pow(externalVal,externalVal))))),(x*(min(externalVal,cos(max(y,((sin(externalVal)+y)/cos((externalVal/audio(x,x)))))))+max(noise(externalVal,tan(noise(tan(externalVal),min(externalVal,x)))),sin(externalVal))))),(externalVal/y))),externalVal))/((x-(x/externalVal))*max(max(tan(externalVal),(cos(y)*x)),y)))),x),(pow(x,x)/y)))))+min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((y*mod(externalVal,sin(noise((externalVal*audio(y,x)),max(x,mod(x,x))))))),sin(audio(y,min(y,y))))",
            "b": "tan(externalVal)",
            "g": "mod(((x*max(sin(sin(noise(x,externalVal))),externalVal))*sin(x)),(max(y,(audio((y+y),x)*sin(x)))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal-mod(externalVal,sin(audio(noise(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "cos(externalVal)",
            "g": "mod(((x*tan(cos((noise(x,externalVal)-x))))*(x/noise(y,noise(min(y,(y*externalVal)),x)))),(max(y,(audio((y+x),x)*(x*audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,y),y),mod(audio(min(max(y,mod((tan(externalVal)-noise(tan(tan(noise(x,x))),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),noise(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(min(x,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),(externalVal/y))),externalVal))+((x-(x*externalVal))*max(max(min(externalVal,audio(y,x)),(sin(y)/x)),y)))),y),(mod(x,x)/y)))))-tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,cos(audio(max(y,y),x))))),cos(tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((mod(x,externalVal)-x))))*(x*min(y,max(noise(y,(y-externalVal)),x)))),(max(y,(audio((y+y),x)*(x/pow(min((externalVal+(max(sin(x),max(mod(pow(cos(externalVal),y),noise(pow(min(max(y,pow((cos(externalVal)-min(x,mod(max(audio(x,((y+mod(y,(min(y,tan(externalVal))+externalVal)))*(y*y))),tan((y-y))),externalVal))),x)),audio((noise(pow(x,max(sin(externalVal),x)),mod(x,audio(min(pow(x,sin((y-noise(x,(mod(y,max(externalVal,max(tan(externalVal),y)))+externalVal))))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y-pow(externalVal,externalVal))))),sin(x)),(externalVal/externalVal))),externalVal))+((x-sin(x))/cos(noise(min(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan((y*mod(y,cos(audio(min(externalVal,audio(externalVal,max(externalVal,mod(sin((y+y)),(y+((y+externalVal)/mod((sin(externalVal)*x),externalVal))))))),x))))),sin(audio(y,min(y,externalVal))))",
            "b": "max(externalVal,sin(pow(externalVal,max(y,pow(externalVal,x)))))",
            "g": "mod(((y/tan(tan((mod(x,externalVal)+x))))-(x*min(y,noise(max(y,(y/externalVal)),x)))),(min(y,(mod(max(y,pow(mod(x,y),mod(sin(y),y))),x)*(x/audio(mod((y+(min(max(x,y),min(noise(mod(min(externalVal,externalVal),y),mod(pow(mod(tan(y),audio((mod(pow(x,mod(max(y,x),x)),noise(x,pow(max(mod(x,((externalVal-noise(y,(noise(y,max(externalVal,tan(tan(y))))+externalVal)))/(externalVal+y))),cos((y+externalVal))),externalVal)))*externalVal),tan((y*pow(externalVal,externalVal))))),(x*(max(externalVal,sin(max(y,min(externalVal,x))))+min(noise(externalVal,tan(min(tan(externalVal),min(externalVal,x)))),sin(externalVal))))),(externalVal/y))),externalVal))/((x+sin(x))*tan(min(tan(externalVal),(cos(y)/x)))))),x),(pow(x,x)/y)))))+min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(mod((max(sin(externalVal),externalVal)+externalVal),externalVal),(audio((x+((tan(externalVal)+min(externalVal,x))/cos(tan(externalVal)))),(y*cos(sin((externalVal-y)))))/(y/((cos(externalVal)-audio(externalVal,max(tan(externalVal),(cos(((y+pow(y,y))-pow((x-x),(cos(y)+y))))/externalVal))))*cos(cos(externalVal)))))))",
            "b": "cos((cos(externalVal)/tan(min(externalVal,externalVal))))",
            "g": "max(x,((max((y/audio(mod(x,y),pow(sin(y),y))),mod(externalVal,x))+mod(x,sin(y)))*noise(x,sin(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,audio(mod((max(sin(y),externalVal)+externalVal),y),(audio((x+((tan(externalVal)+min(externalVal,x))/cos(tan(externalVal)))),(y/cos(tan((externalVal+y)))))/(y/((tan(externalVal)-pow(externalVal,max(tan(externalVal),(cos(((y-pow(y,y))-mod((x-y),(tan(y)-externalVal))))/externalVal))))*tan(cos(externalVal)))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "max(x,((min(sin(y),mod(externalVal,x))+mod(x,(y/y)))*noise(x,sin(externalVal))))"
          }
        }
      ],
      "timestamp": "19h:8m:41s"
    },
    {
      "generation": 18,
      "ascendantID": "gi7e6k69-eum4-zbkh-4r5l-b41t44txq0b3",
      "id": "sqbdh8ld-8qkb-pjp4-ztyl-dv47ho5516af",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,noise(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)-noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((noise(audio(x,noise(sin(externalVal),x)),mod(x,pow(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x-(x/externalVal))*tan(max(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(pow((max(sin(externalVal),externalVal)+externalVal),externalVal),(audio((x+((tan(externalVal)+min(externalVal,x))/cos(tan(externalVal)))),(y*tan(((externalVal-y)/externalVal))))/(y*sin((tan(externalVal)-audio(externalVal,max(max(externalVal,x),(cos(((y+pow(y,y))-pow((x-x),(cos(y)+y))))/externalVal)))))))))",
            "b": "cos((cos(externalVal)/tan(min(externalVal,externalVal))))",
            "g": "max(x,((max((y/audio(mod(x,y),pow(sin(y),y))),min(externalVal,tan(noise(tan(externalVal),noise(y,x)))))+noise(x,sin(y)))*mod(x,(externalVal/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,cos(audio(max(y,y),x))))),tan(min(y,y)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((pow(x,externalVal)-x))))*(x*min(y,max(noise(y,(y-externalVal)),x)))),(max(y,(audio((y+y),x)*(x/pow(min((y+(max(sin(x),min(mod(pow(tan(externalVal),y),mod(pow(noise(max(y,pow((cos(externalVal)-min(x,noise(tan(audio(x,((y+mod(x,(min(y,tan(externalVal))+externalVal)))*(y*y)))),externalVal))),x)),audio((noise(pow(x,max(sin(externalVal),x)),mod(x,audio(min(pow(x,cos((y*noise(x,(mod(y,max(externalVal,max(max(externalVal,externalVal),y)))+externalVal))))),max((y+y),tan(noise(y,y)))),externalVal)))-externalVal),cos((y-pow(externalVal,externalVal))))),(x/(noise(externalVal,(max(y,((tan(externalVal)/y)/(sin(externalVal)/(x*externalVal))))*y))+noise(min(externalVal,tan(noise(noise(externalVal,x),min(externalVal,x)))),(y/y))))),(externalVal/externalVal))),externalVal))+((x+sin(x))/cos(noise(max(externalVal,audio(y,x)),(cos(y)/x)))))),y),(pow(x,x)/y)))))+noise(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max((y*mod(externalVal,sin(audio(min(externalVal,y),x)))),(max(x,(x-(pow(audio(y,audio(y,x)),x)/y)))-((x*y)+y))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((y*max(tan((pow(x,externalVal)+y)),externalVal))-(x*min(x,max(max(y,(y*externalVal)),x)))),(max(externalVal,(audio(min(y,audio(noise(x,y),pow(cos(x),y))),x)*(x/audio(noise((y*(max(tan(x),min(mod(mod(max(externalVal,externalVal),y),mod(pow(noise(cos(y),audio((mod(pow(x,noise(tan(y),x)),mod(x,noise(min(audio(x,((y-mod(y,(pow(y,tan(externalVal))+externalVal)))*(externalVal+y))),tan((y+y))),externalVal)))-y),sin((x*pow(externalVal,externalVal))))),(x-(min(externalVal,(max(y,((sin(externalVal)-x)/sin((externalVal-audio(x,x)))))/y))+noise(min(externalVal,tan(noise(sin(y),min(y,x)))),(externalVal*y))))),(externalVal/y))),externalVal))+((x+sin(x))*max(tan(sin(externalVal)),y)))),x),max(pow(externalVal,(y*externalVal)),y)))))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,audio(pow((max(sin(y),externalVal)+externalVal),y),(pow((x+((tan(externalVal)+min(externalVal,x))/sin(tan(externalVal)))),(y/tan(tan((externalVal-y)))))/(y/((tan(externalVal)-audio(externalVal,min(tan(externalVal),(cos(((y-pow(y,y))-noise((x-y),(cos(y)-externalVal))))/externalVal))))*tan(cos(externalVal)))))))",
            "b": "tan(sin(cos(externalVal)))",
            "g": "max(x,((min(cos(y),mod(externalVal,x))+pow(x,((min((y/audio(mod(x,y),pow(cos(y),y))),mod(externalVal,x))+mod(x,(y*y)))*noise(x,sin(y)))))*noise(x,cos(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,cos(audio(max(y,y),x))))),tan(tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-cos(tan((mod(x,externalVal)+x))))*(x*min(y,max(noise(y,(y-externalVal)),x)))),(max(y,(audio((y+y),x)*(x/mod(min((y+(max(cos(x),max(mod(pow(cos(externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)-min(y,audio(max(audio(x,((y+mod(y,(min(y,tan(externalVal))+externalVal)))*(y*y))),tan((y-y))),externalVal))),x)),audio((noise(pow(x,max(sin(externalVal),x)),mod(x,audio(min(pow(x,sin((y-noise(y,(mod(y,max(externalVal,max(tan(externalVal),y)))+externalVal))))),max((y-y),tan(min(x,y)))),externalVal)))*externalVal),cos((y-pow(externalVal,externalVal))))),cos(x)),sin(externalVal))),externalVal))+((x-sin(x))/cos(noise(min(externalVal,audio(y,x)),(sin(y)/x)))))),y),(pow(y,x)/y)))))+min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(pow((tan(cos(externalVal))*externalVal),externalVal),(audio((x-sin((tan(externalVal)-max(y,x)))),(externalVal/cos(sin((externalVal+y)))))/(y/((cos(externalVal)+pow(externalVal,max(cos(y),sin(cos(((y+pow(y,y))-noise((x*y),(cos(y)+externalVal))))))))*max(cos(externalVal),(sin(x)-(cos(mod(sin(y),sin(audio(externalVal,y))))/(tan(pow(cos(externalVal),audio(max(externalVal,(mod(externalVal,externalVal)-x)),externalVal)))-sin(max((sin(noise(externalVal,externalVal))+externalVal),externalVal)))))))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "max(x,((tan(cos(y))+mod(x,sin(y)))+min(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(sin(y),(audio((x+((tan(externalVal)+min(externalVal,x))/cos(max(externalVal,((max(x,max(y,y))-externalVal)-y))))),(y*tan(sin((externalVal-y)))))*(y/((cos(externalVal)-audio(externalVal,tan(max(y,x))))/tan(cos(externalVal)))))))",
            "b": "cos((cos(externalVal)/tan(tan(externalVal))))",
            "g": "max(x,((max((y/audio(mod(x,y),pow(sin(y),y))),mod(externalVal,x))+mod(x,audio(max(x,y),pow(max(y,x),y))))*noise(x,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*mod(externalVal,sin(audio(min(y,y),x))))),(audio(y,mod(y,externalVal))/cos(externalVal)))",
            "b": "cos(externalVal)",
            "g": "mod(((x*tan(cos((mod(x,externalVal)*x))))*(x/noise(y,noise(noise(y,(y/externalVal)),x)))),(tan(y)-min(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan((y*mod(externalVal,sin(pow(noise(externalVal,audio(externalVal,max(externalVal,mod(((y+y)/audio((externalVal/noise(y,sin(externalVal))),noise(y,externalVal))),(y+sin((y+externalVal))))))),x))))),sin(audio(y,min(y,externalVal))))",
            "b": "max(externalVal,sin(pow(externalVal,max(y,pow(externalVal,x)))))",
            "g": "mod(((y-tan(tan((mod(x,externalVal)+x))))-(x*max(y,noise(max(y,(y/externalVal)),x)))),(min(y,(mod(tan(y),x)*(x/audio(mod((y+(noise(min(x,y),min(noise(mod(noise(externalVal,externalVal),y),mod(pow(mod(tan(y),audio((mod(mod(x,noise(max(y,x),x)),noise(x,mod(max(mod(x,((externalVal-noise(y,(noise(y,max(externalVal,max(tan(y),y)))+externalVal)))-(externalVal-y))),cos((y+externalVal))),externalVal)))*externalVal),tan((y-audio(externalVal,externalVal))))),(x-(min(externalVal,sin(max(y,min(externalVal,x))))+noise(noise(externalVal,tan(min(tan(externalVal),min(externalVal,x)))),sin(externalVal))))),(externalVal*externalVal))),externalVal))/((x+sin(x))*min(min(cos(externalVal),(cos(y)/x)),y)))),x),(pow(x,x)/y)))))+min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,audio(mod((tan(sin(y))*externalVal),externalVal),sin(audio((x+((max(externalVal,externalVal)+max(y,x))*cos(min(externalVal,((max(x,max(y,y))+externalVal)+x))))),(y*cos(sin((externalVal-y))))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "max(x,((min(sin(y),mod(externalVal,x))-mod(x,sin(y)))-noise(x,(externalVal/x))))"
          }
        }
      ],
      "timestamp": "19h:9m:4s"
    },
    {
      "generation": 19,
      "ascendantID": "sqbdh8ld-8qkb-pjp4-ztyl-dv47ho5516af",
      "id": "8bobq0ig-2ikc-h00t-rvcp-nrrr53oo7tx5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal-mod(externalVal,cos(audio(max(y,y),x))))),max(tan(externalVal),tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-cos(max((noise(x,externalVal)+x),(x-noise(max(tan(tan(cos(y))),externalVal),externalVal)))))*(y/min(y,max(noise(y,(y*externalVal)),x)))),(max(y,(audio((y+y),x)*sin(x)))-min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,cos(audio(min(externalVal,y),x))))),tan(min(y,y)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((pow(x,externalVal)-x))))*(x*tan(y))),(max(y,(audio((y+y),x)/(x/pow(max((y+(max(sin(x),noise(mod(pow(cos(y),y),noise(pow(noise(max(y,pow((sin(externalVal)-min(x,noise(tan(audio(x,sin((y+mod(x,(min(y,min(externalVal,sin(tan(y))))+externalVal)))))),externalVal))),x)),audio((noise(pow(x,tan(sin(externalVal))),pow(x,audio(min(mod(x,tan((y-noise(x,(mod(sin(y),y)+externalVal))))),tan((externalVal+y))),externalVal)))-externalVal),cos((y-pow(externalVal,externalVal))))),(x/(mod(externalVal,(max(y,((tan(externalVal)/x)/(sin(externalVal)/(x*externalVal))))*y))+noise(min(externalVal,tan(noise(noise(externalVal,x),min(externalVal,x)))),(y/y))))),(externalVal/externalVal))),externalVal))+((x+sin(x))/cos(noise(max(externalVal,audio(y,x)),(sin(y)/x)))))),y),sin(pow(x,x))))))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(externalVal,pow(pow((min((y/externalVal),externalVal)+externalVal),externalVal),sin(audio((x+((tan(externalVal)+min(externalVal,x))/cos(tan(externalVal)))),(y*cos(((externalVal*y)*externalVal)))))))",
            "b": "cos((cos(externalVal)/max(max(externalVal,externalVal),(max((noise(externalVal,min(sin(y),y))*pow(cos(mod(tan(externalVal),sin(externalVal))),(x+max(sin(cos(y)),min(min(y,(pow(audio(y,pow(mod(sin(((x/mod(y,x))-mod((pow(y,(externalVal*x))*x),cos(externalVal)))),audio(min(y,externalVal),mod(x,x))),y)),externalVal)+y)),y))))),audio(x,x))-x))))",
            "g": "noise(x,((max((y/audio(mod(x,y),pow(cos(x),y))),min(externalVal,tan(noise(tan(externalVal),noise(y,x)))))+noise(x,sin(y)))*mod(x,(externalVal/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,min(y,externalVal)),(audio(y,noise(y,externalVal))*cos(externalVal)))",
            "b": "max(externalVal,sin(audio(externalVal,max(y,pow(externalVal,x)))))",
            "g": "noise(((y*max(cos((pow(x,externalVal)+y)),externalVal))-(x*min(x,tan(max(y,(y*externalVal)))))),(min(externalVal,(audio(max(y,audio(noise(x,y),mod(cos(y),y))),x)*(y*pow(noise((y-(max(cos(x),min(mod(mod(max(externalVal,externalVal),y),mod(mod(noise(sin(externalVal),audio((mod(audio(x,min(tan(y),x)),pow(x,min(min(audio(x,((y-mod(y,(pow(y,tan(externalVal))-externalVal)))/(externalVal+y))),tan((y+y))),y)))-y),sin((x*pow(externalVal,externalVal))))),(x-(min(externalVal,(tan(y)/y))+min(min(externalVal,tan(noise(sin(y),max(y,x)))),(externalVal*y))))),sin(externalVal))),externalVal))+((x-sin(x))*min(tan(sin(externalVal)),y)))),x),max(pow(externalVal,(y*externalVal)),y)))))+noise(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(audio((tan(cos(externalVal))*externalVal),externalVal),sin(audio((x-sin((tan(externalVal)+tan(externalVal)))),(externalVal/cos(sin((externalVal+y))))))))",
            "b": "tan(sin(tan(externalVal)))",
            "g": "min(x,((tan(cos(y))+mod(x,sin(y)))+min(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max((y/max(externalVal,y)),(max(x,(x-(pow(audio(y,audio(x,x)),x)/y)))*((x*y)+y))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((y*min(tan((pow(x,externalVal)-x)),externalVal))-(x*min(x,max(max(y,(x*externalVal)),x)))),(sin((x*pow(externalVal,externalVal)))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min((y*sin(audio(min(y,y),x))),(max(x,(x-(pow(audio(y,audio(y,x)),x)/y)))-((x/y)+y))),(pow(y,noise(y,externalVal))*max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "noise(((y*max(cos((mod(x,externalVal)+y)),externalVal))-(x*min(x,min(max(y,(y*externalVal)),x)))),(max(externalVal,(audio(max(y,audio(noise(x,y),pow(cos(x),y))),x)*(x/audio(noise((y*(min(tan(x),noise(mod(pow(tan(y),x),mod(pow(noise(cos(externalVal),audio((mod(audio(x,noise(tan(y),x)),mod(x,noise(min(audio(x,((y+(x/min(y,noise(min(y,(y/externalVal)),x))))-(externalVal+y))),tan((y+y))),externalVal)))-y),sin((x*pow(externalVal,externalVal))))),(x-(min(externalVal,(max(y,((sin(externalVal)-x)/sin((externalVal+audio(x,x)))))/y))+noise(min(externalVal,tan(noise(sin(y),min(y,x)))),(externalVal*y))))),(externalVal/y))),externalVal))+((y+sin(x))/max(tan(sin(externalVal)),y)))),x),max(pow(externalVal,(y*externalVal)),y)))))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*pow(externalVal,sin(audio(min(y,y),x))))),(audio(y,mod(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x*tan(tan((mod(x,externalVal)*x))))*(x/noise(y,noise(noise(y,(y-externalVal)),y)))),(cos(y)-min(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((y*mod(externalVal,cos(audio(min(externalVal,y),x)))),(max(x,(x-(pow(audio(y,audio(y,x)),x)/y)))+((x-y)+y))),audio(tan(y),x))",
            "b": "tan(externalVal)",
            "g": "noise(((y*max(tan((audio(x,externalVal)+y)),externalVal))-(x*(mod(x,cos(externalVal))/externalVal))),(tan(externalVal)+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(y,noise(y,externalVal)),cos(tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-cos(tan((mod(x,externalVal)+x))))*(x*max(x,tan(noise(y,(y-externalVal)))))),(max(y,(audio((y+y),x)/cos(x)))-min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max((y*noise(y,sin(audio(max(externalVal,y),x)))),(max(x,(x+sin(pow(audio(y,audio(y,x)),x))))-((x*y)+y))),(mod(y,x)/max(externalVal,(audio(y,x)+x))))",
            "b": "cos(externalVal)",
            "g": "noise(((y*max(tan((pow(x,externalVal)+y)),externalVal))+(x*min(x,max(min(x,(y*externalVal)),x)))),(min(y,(audio(min(y,audio(noise(x,y),mod(tan(x),y))),x)*(y*audio(noise((y/(max(tan(x),noise(pow(mod(max(externalVal,externalVal),y),mod(pow(noise(cos(y),audio((mod(audio(x,noise(max(y,x),x)),mod(x,noise(min(audio(x,((y+mod(y,(pow(y,tan(externalVal))+externalVal)))/(externalVal+x))),max((y+y),tan(mod(x,x)))),y)))-y),sin((x*audio(externalVal,externalVal))))),(x-(max(externalVal,sin(max(y,(((y/externalVal)+x)/sin((externalVal+audio(x,x)))))))+noise(min(externalVal,tan(noise(sin(y),min(y,x)))),(externalVal/y))))),(externalVal/y))),externalVal))+((x+sin(x))-max(tan((externalVal/audio(y,x))),y)))),x),max(pow(externalVal,(y*externalVal)),y)))))+min(y,y)))"
          }
        }
      ],
      "timestamp": "19h:9m:29s"
    },
    {
      "generation": 20,
      "ascendantID": "8bobq0ig-2ikc-h00t-rvcp-nrrr53oo7tx5",
      "id": "btneth3n-qzkh-c957-53bj-y4wudaqqp1vj",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min((y*sin(audio(max(y,y),x))),(max(x,(x-cos(pow(audio(y,audio(y,x)),x))))-((x/y)-y))),sin(pow(max(externalVal,y),x)))",
            "b": "tan(externalVal)",
            "g": "noise(((y*max(cos((mod(x,externalVal)+y)),externalVal))-(x*max(x,min(tan(x),x)))),(max(externalVal,(audio(min(y,audio(noise(x,externalVal),audio(cos(x),y))),x)*(x/audio(mod((y*(min(tan(y),noise(pow(pow(tan(y),x),mod(pow(noise(cos(externalVal),audio((pow(audio(x,noise(max(y,y),x)),mod(x,noise(noise(audio(x,((y+(x*max(x,noise(min(y,(y/externalVal)),x))))-(externalVal+y))),tan((y+y))),externalVal)))*y),sin((y*pow(externalVal,externalVal))))),(x-(min(externalVal,(max(y,((sin(externalVal)-x)/sin((externalVal+audio(x,x)))))/y))+noise(min(externalVal,noise(y,y)),(externalVal/y))))),(externalVal/y))),externalVal))+((y+sin(x))/max(tan(sin(externalVal)),y)))),x),max(audio(externalVal,(y*externalVal)),y)))))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*audio(externalVal,cos(audio(min(y,y),x))))),(audio(y,mod(y,externalVal))*cos(externalVal)))",
            "b": "max(externalVal,(audio(y,max(y,pow(externalVal,x)))*min(mod(max(y,mod(y,(mod(y,y)+y))),y),tan(sin(externalVal)))))",
            "g": "mod(((x*cos(tan((noise(x,externalVal)*x))))*(x/noise(y,noise(min(y,(y-externalVal)),y)))),(tan(y)-min(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min((y*mod(externalVal,(audio(tan(externalVal),x)/externalVal))),(max(x,(x+(pow(audio(y,audio(x,x)),x)/y)))-((x*y)+y))),sin(mod(y,x)))",
            "b": "cos(externalVal)",
            "g": "noise(((y*max(tan((pow(x,externalVal)+y)),externalVal))+(x*max(y,max(noise(x,(y/externalVal)),x)))),(min(y,(audio(noise(y,audio(noise(x,y),mod(cos(x),y))),x)*(y*audio(noise((y/(max(tan(x),noise(mod(mod(max(externalVal,externalVal),y),mod(mod(noise(cos(y),audio((mod(pow(x,min(max(y,x),x)),mod(x,noise(noise(audio(x,((y+mod(y,(pow(y,tan(externalVal))+externalVal)))/(externalVal+x))),max((y-y),cos(mod(x,x)))),y)))-y),cos((x-audio(externalVal,externalVal))))),(x-(min(externalVal,(max(y,((sin(y)+x)*((externalVal+audio(x,x))/(x/y))))/y))+noise(min(externalVal,tan(noise(sin(y),min(y,x)))),sin(externalVal))))),(externalVal/y))),externalVal))+((y+sin(x))-min(max((externalVal/audio(y,x)),(tan(y)-x)),x)))),x),max(pow(externalVal,(y/externalVal)),y)))))+min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(y,min(y,externalVal)),cos(max(externalVal,y)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-cos(tan((mod(x,externalVal)+x))))*(y-min(x,max(noise(y,(y-externalVal)),x)))),(min(y,(audio((y+y),x)*tan(x)))-min(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((min(x,max(y,y))-externalVal),(pow(y,noise(y,externalVal))*max(externalVal,x)))",
            "b": "tan(y)",
            "g": "noise(((y*max(sin((mod(x,externalVal)+y)),externalVal))-(x/min(x,min(max(y,(y/externalVal)),x)))),(max(externalVal,(audio(max(y,audio(noise(x,y),mod(tan(x),y))),x)*(x/audio(mod((y/(min(tan(x),noise(mod(pow(tan(y),x),mod(pow(noise(cos(externalVal),audio((mod(audio(x,noise(tan(y),x)),noise(x,noise(min(audio(x,((y+(x/min(y,mod(noise(x,(y/externalVal)),x))))-(externalVal-y))),tan((y+y))),externalVal)))-y),((x*pow(externalVal,externalVal))/pow(x,x)))),(x-(min(externalVal,(cos(y)/y))+noise(min(externalVal,tan(noise(sin(y),min(y,x)))),(externalVal/y))))),(externalVal/externalVal))),externalVal))-((y+audio(mod(x,y),pow(sin(y),y)))/tan(tan(cos(externalVal)))))),y),min(pow(externalVal,(y*externalVal)),y)))))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max(externalVal,x),max(cos(externalVal),tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x*tan(max((min(x,externalVal)+x),(x-noise(min(tan(cos(cos(y))),externalVal),externalVal)))))*(y/tan(x))),(max(y,(audio((y+y),x)*cos(x)))-min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,max(y,y)),(audio(y,noise(y,externalVal))*cos(externalVal)))",
            "b": "max(externalVal,sin(pow(externalVal,max(y,pow(externalVal,x)))))",
            "g": "noise(((y*max(cos((mod(x,externalVal)+x)),externalVal))*(x/min(x,tan(max(y,(y*externalVal)))))),(max(externalVal,(audio(max(y,audio(mod(x,y),mod(cos(y),y))),x)*(y*pow(noise((y-(max(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(mod(noise(sin(externalVal),audio((mod(audio(x,min(tan(y),x)),mod(y,noise(min(audio(x,sin((y-mod(y,(pow(y,tan(externalVal))-externalVal))))),tan((y+y))),y)))-y),sin((x*pow(externalVal,externalVal))))),(x+(noise(externalVal,(tan(y)/y))+min(min(externalVal,cos(noise(sin(y),max(y,x)))),(externalVal*y))))),sin(externalVal))),externalVal))+((x-sin(x))*min(max(sin(externalVal),(cos(y)*x)),x)))),x),max(noise(externalVal,(y*externalVal)),y)))))+noise(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*pow(externalVal,sin(audio(min(y,y),x))))),(audio(y,mod(y,y))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x*tan(tan((mod(x,externalVal)*x))))*(x/noise(y,noise(noise(y,(y-externalVal)),y)))),(cos(y)-min(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((y/min(externalVal,y)),(max(x,(x-(audio(audio(y,audio(x,x)),x)/y)))*((x*y)+y))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "min(((y*max(tan((audio(x,externalVal)-y)),externalVal))-(x-min(x,max(max(y,(y/externalVal)),x)))),(sin((x*mod(externalVal,externalVal)))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,audio(mod((min(sin(y),externalVal)+externalVal),externalVal),sin(audio((x+sin((tan(externalVal)+min(externalVal,x)))),(y*cos(((externalVal/externalVal)*externalVal)))))))",
            "b": "cos((cos(externalVal)/tan(max(externalVal,externalVal))))",
            "g": "min(x,((max((y/audio(mod(x,externalVal),pow(cos(x),y))),noise(externalVal,tan(noise(max(externalVal,x),noise(y,x)))))+noise(x,sin(y)))*mod(x,(externalVal/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal-noise(externalVal,cos(audio(noise(externalVal,y),x))))),tan(min(y,y)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((pow(x,externalVal)-x))))*(x*max(y,max(mod(y,(y*externalVal)),x)))),(sin(pow(x,x))+min(y,x)))"
          }
        }
      ],
      "timestamp": "19h:9m:47s"
    },
    {
      "generation": 21,
      "ascendantID": "btneth3n-qzkh-c957-53bj-y4wudaqqp1vj",
      "id": "8ry7qe94-oppd-l330-d8ao-rcu7g73rl8er",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal/max(externalVal,y)),(max(x,(x+(pow(audio(y,audio(x,x)),x)/y)))*((x*y)+y))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "min(((y*max(tan((audio(x,externalVal)-y)),externalVal))-(x-min(x,max(max(x,(y/externalVal)),x)))),(cos((x*pow(externalVal,externalVal)))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max(externalVal,x),min(cos(externalVal),mod(max(externalVal,x),max(max(externalVal,y),cos(externalVal)))))",
            "b": "tan(externalVal)",
            "g": "mod(((x*cos(max((min(x,externalVal)+x),(x-noise(min(tan(cos(cos(y))),externalVal),externalVal)))))*(x/max(x,max(noise(y,(y*externalVal)),x)))),(max(y,(audio((y+y),x)*cos(x)))-max(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((y/audio(externalVal,(audio(min(y,y),x)/y)))),(audio(y,mod(y,y))*cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x*max(tan((mod(x,externalVal)*x)),externalVal))*(x/noise(y,noise(noise(y,(y*externalVal)),y)))),(tan(y)-min(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal-noise(externalVal,cos(audio(noise(externalVal,y),x))))),tan(max(y,y)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-max(cos((pow(x,externalVal)-x)),externalVal))*(x/max(y,max(mod(y,(y-externalVal)),x)))),(sin(mod(y,x))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min((y-sin(pow(max(y,y),x))),(max(x,(x-(pow(audio(y,audio(y,x)),x)/y)))-((x/y)-y))),sin(pow(max(externalVal,y),x)))",
            "b": "tan(externalVal)",
            "g": "max(((y*max(cos((mod(x,externalVal)-y)),externalVal))-(x*min(x,min(tan(x),x)))),(min(y,(audio(min(y,audio(min(x,externalVal),audio(cos(x),y))),x)*(x*audio(pow((y*(min(tan(y),mod(pow(pow(max(externalVal,externalVal),x),audio(pow(noise(cos(externalVal),audio((pow(audio(x,noise(max(y,y),x)),mod(x,noise(noise(pow(x,((x+(x*max(x,noise(min(y,(y/externalVal)),x))))-(externalVal+y))),tan((y+y))),externalVal)))*y),sin((y*pow(externalVal,externalVal))))),(x-(max(externalVal,(max(y,((sin(externalVal)*x)/sin((externalVal+audio(x,x)))))*y))+noise(min(externalVal,noise(y,y)),(externalVal/y))))),(externalVal/y))),externalVal))+((y+cos(x))/min(tan(sin(externalVal)),y)))),x),max(audio(externalVal,(y*externalVal)),y)))))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,pow(mod((min(sin(y),externalVal)+externalVal),externalVal),sin(audio((x+sin((tan(externalVal)+min(externalVal,x)))),(y*cos(((externalVal/externalVal)/externalVal)))))))",
            "b": "cos(sin(cos(externalVal)))",
            "g": "noise(x,((max((y*pow(noise(x,y),pow(sin(y),y))),noise(externalVal,tan(noise(max(externalVal,x),noise(y,x)))))+noise(x,sin(y)))*pow(x,(externalVal/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*audio(externalVal,sin(audio(min(y,y),x))))),(audio(y,mod(y,y))-cos(externalVal)))",
            "b": "max(externalVal,(audio(y,tan(y))*min(mod(max(y,mod(y,(pow(y,y)+y))),y),tan(sin(externalVal)))))",
            "g": "mod(((x*sin(tan((noise(x,externalVal)-x))))*(x/noise(y,noise(min(y,(y-externalVal)),y)))),(tan(y)-max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(tan(externalVal),max(tan(externalVal),tan(externalVal)))",
            "b": "max(externalVal,(audio(externalVal,tan(y))*audio(externalVal,max(y,pow(externalVal,x)))))",
            "g": "mod(((x*cos(max((min(x,externalVal)-x),(x+noise(min(tan(tan(cos(y))),externalVal),externalVal)))))+(y/min(y,max(mod(y,(y*externalVal)),x)))),(max(y,(audio((y+x),x)/cos(x)))-min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal-noise(externalVal,cos(audio(noise(externalVal,y),x))))),tan(min(y,y)))",
            "b": "max(externalVal,sin(audio(externalVal,tan(y))))",
            "g": "mod(((x-tan(cos((pow(x,externalVal)-x))))*(x*max(y,tan(mod(y,(y*externalVal)))))),(cos(pow(x,x))+noise(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(y,max(y,externalVal)),(audio(y,audio(y,noise(y,externalVal)))/tan(externalVal)))",
            "b": "min(y,cos(y))",
            "g": "mod(((y*max(cos((mod(x,externalVal)+x)),externalVal))*(x*min(x,tan(tan(x))))),(max(externalVal,(audio(max(y,audio(mod(x,y),mod(cos(y),y))),x)*(x*pow(mod((y-(noise(cos(x),min(audio(mod(max(externalVal,externalVal),y),noise(pow(noise(sin(externalVal),(externalVal*y)),(x+(noise(externalVal,(tan(y)/y))+min(min(externalVal,tan(noise(sin(y),max(y,x)))),(externalVal/y))))),sin(externalVal))),externalVal))+((x-sin(x))*min(max(cos(externalVal),(sin(y)*x)),x)))),x),max(noise(externalVal,(y*externalVal)),y)))))+noise(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal*noise(externalVal,sin(audio(noise(externalVal,y),x))))/((tan(externalVal)+audio(externalVal,min(sin(y),(sin(((y+mod(y,y))*mod((x+y),min(externalVal,y))))/externalVal))))-((x*y)+y))),cos(min(y,y)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((pow(x,externalVal)-x))))-(x*max(y,max(mod(y,(y*externalVal)),x)))),(sin(pow(x,x))+min(y,x)))"
          }
        }
      ],
      "timestamp": "19h:9m:59s"
    },
    {
      "generation": 22,
      "ascendantID": "8ry7qe94-oppd-l330-d8ao-rcu7g73rl8er",
      "id": "gd50vjg5-x0jd-iv77-edp5-ltwr4nsoxcc2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,min(y,y)),(audio(y,audio(y,noise(y,externalVal)))/tan(externalVal)))",
            "b": "min(y,cos(y))",
            "g": "mod(((y-max(cos((pow(x,externalVal)+y)),externalVal))*(x*min(x,cos(tan(x))))),(max(externalVal,(audio(min(externalVal,audio(mod(x,y),mod(cos(y),y))),x)*(x-mod(mod((y-(noise(cos(x),min(audio(mod(cos(externalVal),y),noise(pow(noise(sin(externalVal),(externalVal-y)),(x+(min(externalVal,sin(cos(y)))+min(max(externalVal,max(noise(sin(y),min(y,x)),cos(y))),(externalVal/y))))),(externalVal/externalVal))),externalVal))+((x-sin(x))/min(tan(cos(externalVal)),x)))),x),max(min(externalVal,(y*externalVal)),y)))))+noise(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min((y-sin(pow(tan(y),x))),(min(x,(x-(audio(audio(y,audio(x,x)),x)/y)))-((x/y)-y))),sin(audio(tan(externalVal),x)))",
            "b": "max(externalVal,sin(pow(externalVal,max(y,audio(externalVal,max(y,audio(externalVal,y)))))))",
            "g": "max(((y*min(cos((mod(x,externalVal)-y)),externalVal))-(x-noise(x,min(tan(x),x)))),(min(y,(audio(min(y,audio(min(x,externalVal),pow(cos(x),y))),y)/(x*audio(pow((y*(min(tan(y),mod(pow(pow(max(externalVal,externalVal),x),audio(pow(min(cos(externalVal),audio((pow(audio(x,noise(max(y,y),x)),mod(x,noise(noise(pow(x,((y+(x/max(x,noise(min(y,(y/externalVal)),x))))-(externalVal+x))),tan((y+y))),externalVal)))*y),sin((y*pow(externalVal,externalVal))))),(x-(max(externalVal,(tan(y)*y))+noise(min(externalVal,mod(x,y)),(externalVal/y))))),(externalVal/y))),externalVal))+((y+cos(x))/min(tan(sin(externalVal)),y)))),x),max(audio(externalVal,(y*externalVal)),y)))))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*audio(externalVal,sin(audio(min(y,y),x))))),(audio(y,mod(y,y))-sin(externalVal)))",
            "b": "noise(externalVal,(audio(y,cos(y))*min(noise(max(y,mod(y,(pow(y,y)+y))),y),tan(sin(externalVal)))))",
            "g": "mod(((x*sin(tan((mod(x,externalVal)-x))))*(x/noise(y,noise(noise(y,(y-externalVal)),y)))),(cos(y)*max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*audio(externalVal,sin(audio(min(y,y),x))))),(audio(y,pow(y,y))-cos(externalVal)))",
            "b": "max(externalVal,(audio(y,tan(y))*min(mod(max(y,mod(y,(audio(y,y)+y))),y),tan(sin(externalVal)))))",
            "g": "mod(((x-sin(max((noise(x,externalVal)-x),sin(x))))*(x/noise(y,mod(min(y,(y-externalVal)),x)))),(tan(y)-max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((y/tan(externalVal)),(tan(x)*((x*y)+y))),(audio(y,noise(y,externalVal))-tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "min(((y/max(tan((audio(x,externalVal)-y)),externalVal))-(x-min(x,max(max(x,(y*externalVal)),x)))),(sin((y/pow(externalVal,externalVal)))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(((externalVal-noise(externalVal,cos(audio(min(externalVal,externalVal),x))))/((cos(externalVal)+audio(externalVal,min(sin(externalVal),sin((((y+pow(y,y))/mod((x*y),min(externalVal,y)))/audio(pow(noise(externalVal,y),externalVal),externalVal))))))-((x/y)+y))),tan(max(y,y)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((pow(x,externalVal)-x))))*(x*tan(y))),(sin(mod(x,x))+noise(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max(externalVal,x),min(cos(externalVal),mod(max(externalVal,x),max(max(externalVal,y),sin(externalVal)))))",
            "b": "tan(externalVal)",
            "g": "mod(((x*cos(max((noise(x,externalVal)+x),(x-mod(min(tan(cos(cos(y))),externalVal),y)))))-(x/min(x,max(mod(x,(y/externalVal)),x)))),(max(y,(audio((y+y),x)*cos(x)))-max(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal*min(externalVal,sin(audio(max(externalVal,externalVal),x))))/((tan(externalVal)+audio(externalVal,noise(sin(y),sin(sin(((y+noise(y,y))*pow((x-y),min(externalVal,y))))))))-((x*y)+y))),sin(min(y,y)))",
            "b": "tan(externalVal)",
            "g": "pow(((x+tan(cos((pow(x,externalVal)-x))))-(x*max(y,max(mod(y,(y*externalVal)),x)))),mod(externalVal,max(max(y,externalVal),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(((externalVal*mod(externalVal,sin(audio(noise(externalVal,y),x))))*((cos(externalVal)-audio(externalVal,min(sin(externalVal),(sin(((y+mod(y,y))-noise((x-y),min(externalVal,y))))/externalVal))))+((x*y)+y))),cos(min(y,y)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(cos((mod(x,externalVal)-x))))*(x*max(y,min(mod(y,(y*externalVal)),x)))),(sin(noise(x,x))+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(y,max(y,externalVal)),(audio(y,audio(y,noise(y,externalVal)))/tan(externalVal)))",
            "b": "min(y,cos(y))",
            "g": "pow(((y*max(cos((mod(x,externalVal)-x)),externalVal))*(x*min(x,tan(sin(x))))),(max(externalVal,(audio(max(y,audio(mod(x,y),mod(cos(y),y))),x)-(x*pow(mod((y*(noise(cos(x),min(audio(mod(max(externalVal,externalVal),y),noise(pow(mod(sin(externalVal),(externalVal*y)),(x-(noise(externalVal,sin(tan(y)))+min(min(externalVal,tan(min((externalVal/x),tan(y)))),(externalVal/y))))),sin(externalVal))),externalVal))+((x-sin(x))*noise(max(sin(externalVal),(sin(y)*x)),y)))),x),max(min(externalVal,(y*externalVal)),y)))))+cos((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max(externalVal,x),max((audio(y,x)+x),mod(max(externalVal,x),max(max(externalVal,y),cos(externalVal)))))",
            "b": "tan(externalVal)",
            "g": "mod(((x*cos(max((min(x,externalVal)+x),(x-noise(min(cos(cos(cos(y))),externalVal),externalVal)))))*(x*min(x,tan(noise(y,(y*externalVal)))))),(max(y,(audio((y+y),x)*cos(x)))-max(externalVal,y)))"
          }
        }
      ],
      "timestamp": "19h:10m:5s"
    },
    {
      "generation": 23,
      "ascendantID": "gd50vjg5-x0jd-iv77-edp5-ltwr4nsoxcc2",
      "id": "9qx6btka-0f0c-4rqx-ysid-8uo3psz3knpw",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio(y,max(y,y)),(audio(y,audio(y,noise(y,externalVal)))/cos(externalVal)))",
            "b": "min(externalVal,tan(y))",
            "g": "mod(((y-tan(tan((pow(x,externalVal)+y))))*(x*min(x,cos(tan(x))))),(max(externalVal,(audio(max(externalVal,audio(pow(x,externalVal),mod(tan(y),y))),x)*(x-mod(mod((y-(noise(cos(y),noise(audio(mod(tan(externalVal),y),min(audio(noise(sin(externalVal),(externalVal-y)),(x+(noise(externalVal,(cos(y)/externalVal))+min(max(externalVal,min(noise((y/x),min(y,x)),cos(y))),(externalVal/y))))),(externalVal/externalVal))),externalVal))+((x*sin(x))/min(tan(cos(externalVal)),x)))),x),max(min(externalVal,(y*externalVal)),y)))))+mod(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,noise(y,y)),(audio(y,audio(y,noise(y,externalVal)))*(externalVal*audio(externalVal,sin(audio(min(y,y),x))))))",
            "b": "min(y,tan(y))",
            "g": "mod(((y-tan(cos((pow(x,externalVal)+y))))*(x*min(x,tan(tan(x))))),(max(externalVal,(audio(min(externalVal,audio(pow(x,y),mod(cos(y),y))),y)*(x-mod(mod((y*(mod(sin(x),min(audio(pow(cos(externalVal),y),noise(mod(noise(sin(externalVal),(externalVal+y)),(x+(min(externalVal,sin(cos(y)))+min(tan(externalVal),(externalVal/y))))),(externalVal/externalVal))),externalVal))-sin((x-sin(x))))),x),min(min(externalVal,(y*externalVal)),y)))))+noise(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal-mod(externalVal,sin(pow(min(externalVal,y),x))))/(tan(x)-((x+y)-externalVal))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,(pow(y,max(y,pow(externalVal,x)))/max(audio(max(y,mod(y,(pow(y,y)*y))),externalVal),cos(externalVal))))",
            "g": "mod(((x+tan(max((mod(x,externalVal)-x),(x*min(max(tan(cos(tan(y))),externalVal),externalVal)))))+(x/min(y,min(min(y,(y*externalVal)),x)))),(min(y,(pow((y-y),x)*(x/audio(max((externalVal+(min(cos(x),min(pow(pow(max(externalVal,externalVal),y),noise(audio(noise(max(y,mod((sin(externalVal)*noise(sin(tan(noise(x,x))),min(y,y))),x)),audio((noise(audio(x,noise((externalVal/x),x)),pow(x,audio(min(pow(x,((y-mod(x,(min(y,tan(externalVal))+externalVal)))/(externalVal+y))),max((externalVal-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(cos(y)/x)),y)))),y),(pow(x,x)-y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,tan(y)),(audio(y,audio(y,max(y,externalVal)))/tan(externalVal)))",
            "b": "max(y,cos(y))",
            "g": "mod(((y*max(sin((noise(tan(y),y)*x)),externalVal))/(x*min(x,cos(cos(x))))),(min(externalVal,(pow(max(y,audio(mod(x,y),mod(cos(y),y))),x)-(y-pow(mod((y*(noise(cos(x),min(audio(mod(max(externalVal,externalVal),y),mod(pow(mod(sin(externalVal),(externalVal/y)),(x*(noise(externalVal,sin(tan(y)))+min(noise(externalVal,tan(min((externalVal/x),tan(y)))),(externalVal/y))))),sin(externalVal))),externalVal))+((x*sin(x))*noise(max(sin(externalVal),(sin(y)*x)),y)))),x),max(min(externalVal,(y*externalVal)),y)))))+cos((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-pow(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))/tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((pow(x,externalVal)*x))))-(x/noise(x,min(min(y,(y*externalVal)),x)))),(max(y,(pow((y-y),y)*(x/audio(min((externalVal+(max(cos(x),max(mod(mod(max(externalVal,externalVal),y),noise(pow(min(min(y,mod((cos(externalVal)*mod(sin(cos(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),pow(x,audio(max(pow(x,((y-mod(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y+y),tan(min(x,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),cos(x)),cos(externalVal))),externalVal))+((x+(x/externalVal))*max(max(max(externalVal,audio(y,y)),(max(externalVal,x)*x)),y)))),x),(pow(x,x)*y)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(sin(y),(min(y,externalVal)*((x*y)+y))),(audio(y,min(y,externalVal))-max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "min(((y/min(tan((audio(x,externalVal)-y)),externalVal))*(x-min(x,max(max(x,(y*externalVal)),x)))),(((y/pow(externalVal,externalVal))/noise(x,x))+noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*audio(externalVal,sin(audio(min(y,y),x))))),(audio(y,audio(y,y))-cos(externalVal)))",
            "b": "min(externalVal,(audio(y,tan(y))*min(mod(tan(y),externalVal),tan(sin(externalVal)))))",
            "g": "noise(((x-sin(max((min(x,externalVal)*x),sin(x))))*(x*noise(y,noise(max(y,(y-externalVal)),x)))),(tan(y)-min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,max(y,externalVal)),(audio(y,audio(y,noise(y,externalVal)))/tan(externalVal)))",
            "b": "min(y,cos(y))",
            "g": "audio(((y*max(cos((mod(x,externalVal)-x)),externalVal))*(x*min(x,tan((x/sin(x)))))),(max(externalVal,(audio(max(y,audio(mod(x,y),mod(tan(x),externalVal))),y)-(x*pow(mod((y*(noise((y/y),min(audio(pow(max(externalVal,externalVal),y),noise(pow(pow(sin(externalVal),(externalVal*y)),(x-(pow(externalVal,sin(tan(y)))+noise(min(externalVal,min(noise((externalVal/x),min(y,x)),cos(y))),(externalVal/y))))),(externalVal/y))),externalVal))+((x*sin(x))*noise(max(sin(externalVal),(cos(y)*x)),y)))),x),max(min(externalVal,(y*externalVal)),y)))))+sin((audio(x,externalVal)+x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))*(x/min(y,min(min(y,(y/externalVal)),x)))),(max(y,(audio((y-y),x)*sin(x)))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*pow(externalVal,(audio(noise(externalVal,y),x)/y)))),(audio(y,audio(y,y))-sin(externalVal)))",
            "b": "max(externalVal,(audio(y,max(y,pow(externalVal,x)))*min(mod(max(y,pow(x,(audio(y,y)+y))),y),tan(sin(externalVal)))))",
            "g": "mod(((x-sin(max((noise(x,externalVal)-x),sin(x))))*sin(x)),(tan(y)*max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal-mod(externalVal,(pow(min(externalVal,y),x)/y)))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((min(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(pow((y-y),x)*sin(y)))+tan(externalVal)))"
          }
        }
      ],
      "timestamp": "19h:10m:10s"
    },
    {
      "generation": 24,
      "ascendantID": "9qx6btka-0f0c-4rqx-ysid-8uo3psz3knpw",
      "id": "96l78ekc-qnwn-hd55-v7xe-gxwwpxz7le9r",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal-mod(externalVal,sin(audio(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))/tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+max(tan((mod(x,externalVal)*x)),y))-(x/noise(y,min(min(y,(y/externalVal)),x)))),(tan(y)+min(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal+mod(externalVal,sin(pow(max(y,y),x))))/(max(x,sin(x))-((x+y)-externalVal))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,(audio(externalVal,max(y,audio(externalVal,x)))/max(mod(tan(y),externalVal),cos(externalVal))))",
            "g": "mod(((x+tan(max((noise(x,externalVal)-x),(x*min(min(tan(cos(cos(y))),y),externalVal)))))*(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-x),x)*sin(x)))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,mod(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),noise(mod(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((sin(externalVal)-noise(cos(tan(noise(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(mod(x,((y-mod(x,(noise(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(min(y,y)))),externalVal)))*y),cos((y/audio(externalVal,externalVal))))),sin(x)),cos(externalVal))),externalVal))+((x+(x/externalVal))*max(max(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(y,x)*y)))))-tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,min(y,y)),(audio(y,audio(y,noise(y,externalVal)))/min(externalVal,y)))",
            "b": "min(y,max(y,pow(externalVal,x)))",
            "g": "audio(((y*tan(cos((mod(x,externalVal)-x))))*(x*min(x,tan((x/cos(x)))))),(min(externalVal,(audio(min(y,audio(pow(x,y),mod(tan(x),externalVal))),y)*(x*audio(mod((y*(max(y,pow(noise(x,y),mod(tan(y),y)))+((x*sin(x))/noise(max(sin(externalVal),(cos(y)-x)),y)))),x),max(max(externalVal,(y*externalVal)),y)))))+cos((audio(x,externalVal)+x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((y-pow(externalVal,(audio(noise(externalVal,y),x)/y)))),(audio(y,audio(y,y))-sin(externalVal)))",
            "b": "max(externalVal,(audio(y,max(y,pow(externalVal,x)))*min(mod(max(y,audio(x,(audio(y,y)+y))),y),max(cos(externalVal),(mod(externalVal,externalVal)/(noise((mod(externalVal,noise(sin(y),y))+min(cos(min(max(y,x),(y-externalVal))),(y+max(sin((y/x)),noise(min(y,(audio(noise(y,mod(mod(sin(((x-pow(y,y))-mod((pow(y,sin(externalVal))*x),tan(y)))),noise(min(y,externalVal),pow(y,x))),externalVal)),externalVal)+y)),x))))),audio(x,y))+x))))))",
            "g": "noise(((x*(max((noise(x,externalVal)-x),(x/mod(max(sin(sin((y/audio(min(x,externalVal),max(tan(x),y))))),externalVal),externalVal)))/externalVal))*sin(x)),(tan(y)*max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(audio(max(externalVal,y),x))))),(audio(y,min(y,externalVal))-cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y+x),x)*(x/audio(min((y-(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),min(pow(max(tan(y),audio((noise(audio(x,mod((y/x),x)),mod(x,audio(max(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))*(externalVal+x))),max((y*y),tan(noise(y,y)))),externalVal)))*y),sin((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))/max(min(max(externalVal,audio(externalVal,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow(y,tan(y)),(audio(y,audio(y,max(y,externalVal)))/tan(externalVal)))",
            "b": "max(y,cos(y))",
            "g": "mod(((y*min(sin((noise(tan(y),y)*x)),externalVal))/(x-min(x,cos(tan(x))))),(max(externalVal,(pow(max(y,audio(mod(x,y),pow(sin(y),externalVal))),x)*(y-pow(mod((y*(noise(sin(x),min(audio(noise(max(externalVal,externalVal),y),mod(pow(mod(sin(externalVal),(externalVal/y)),(x*(noise(externalVal,sin(tan(y)))+min(noise(externalVal,max(noise((externalVal/x),tan(y)),tan(y))),(externalVal/y))))),sin(externalVal))),externalVal))+((x*cos(x))/min(max(sin(externalVal),(sin(y)*x)),y)))),x),max(noise(externalVal,(y*externalVal)),y)))))+cos((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan(sin(y)),(audio(y,min(y,externalVal))+max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "min(((y*tan(tan((audio(x,externalVal)-y))))/(x-max(x,max(tan(x),x)))),(((y/pow(externalVal,externalVal))/noise(x,x))-noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal*audio(externalVal,sin(audio(min(externalVal,y),x))))/(max(x,(y+(max(((pow(pow(max(externalVal,y),externalVal),externalVal)*min(externalVal,(audio(y,x)-x)))/externalVal),pow(x,externalVal))/min(x,y))))+(audio(tan(sin(y)),(audio(y,min(y,externalVal))*max(externalVal,x)))+externalVal))),(audio(y,audio(y,y))*cos(externalVal)))",
            "b": "min(externalVal,(audio(externalVal,tan(y))*min(mod(cos(y),externalVal),tan(sin(externalVal)))))",
            "g": "noise(((x-sin(max((min(x,externalVal)*x),(x/audio(min(tan(cos((y*audio(min(x,externalVal),max(sin(y),y))))),externalVal),externalVal)))))*(x*noise(y,noise(max(y,(y-externalVal)),x)))),(tan(y)-min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-pow(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,min(y,externalVal))/tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((pow(x,externalVal)*x))))-(x/noise(y,min(noise(y,(y*externalVal)),x)))),(max(y,(pow((y+y),y)*(x*audio(min((externalVal+(tan(sin(x))+((x+(x*externalVal))-max(max(min(externalVal,audio(y,y)),(max(externalVal,x)*x)),y)))),x),(pow(y,x)-x)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(x,(y*externalVal)),x)))),(max(y,(audio((y+y),x)*(x/audio(max((externalVal+(min(cos(x),min(mod(pow(tan(externalVal),y),noise(pow(min(tan(y),audio((noise(audio(x,min(tan(y),x)),noise(x,audio(tan(pow(x,((y-noise(x,(noise(y,tan(externalVal))-externalVal)))/(externalVal+x)))),externalVal)))*y),cos((y*audio(externalVal,externalVal))))),sin(x)),cos(externalVal))),externalVal))+((x-sin(x))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        }
      ],
      "timestamp": "19h:10m:16s"
    },
    {
      "generation": 25,
      "ascendantID": "96l78ekc-qnwn-hd55-v7xe-gxwwpxz7le9r",
      "id": "3t2r1eci-g8zw-8ig1-w378-ly4d07uoj2rt",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(cos((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+max(tan((noise(x,externalVal)-x)),y))-(x/min(y,min(max(y,(y*externalVal)),x)))),(max(y,(pow((y-y),y)/(x/audio(min((externalVal+(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(pow(mod(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),max(y,y))),x)),audio((noise(audio(x,noise(sin(y),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+y))),max((y+y),tan(min(y,y)))),externalVal)))*y),cos((x*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)/y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(audio(max(externalVal,y),x)*y)))),(audio(y,min(y,externalVal))+tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x+tan(cos((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y+x),y)*(x/audio(min((y-(min(cos(x),max(mod(pow(max(externalVal,externalVal),y),min(pow(max(tan(y),audio((noise(audio(x,mod((y/x),x)),mod(x,audio(max(pow(x,((y+noise(x,(min(y,max(externalVal,sin(tan(externalVal))))+externalVal)))*(externalVal+x))),max((y*y),tan(noise(y,y)))),externalVal)))*y),sin((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))/max(min(min(externalVal,audio(externalVal,y)),(tan(y)/x)),y)))),y),(pow(x,x)-y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal+pow(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))/tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((audio(x,y)/x))))-(x/noise(y,min(mod(y,(y*externalVal)),x)))),(max(y,(pow((y+y),y)/(x*audio(min((externalVal-(tan(sin(x))+((x+(x*externalVal))*min(max(min(externalVal,audio(y,y)),(min(y,x)*x)),y)))),x),(audio(y,x)-x)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(pow(max(y,y),x)/y)))),(audio(y,noise(y,externalVal))/tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((noise(x,externalVal)-x))))-sin(x)),(max(y,(audio((y+y),x)*(x/mod(max((externalVal-(min(cos(x),min(mod(pow(tan(externalVal),y),noise(audio(min(tan(y),audio((min(audio(x,noise(tan(y),x)),noise(x,audio(tan(pow(x,sin((y-min(x,(noise(y,tan(externalVal))-externalVal)))))),externalVal)))*y),cos((y*audio(externalVal,externalVal))))),cos(x)),sin(externalVal))),externalVal))+((x-sin(x))/max(min(max(externalVal,pow(externalVal,x)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal-pow(externalVal,sin(audio(max(y,y),x))))),sin(audio(y,min(y,externalVal))))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((pow(x,externalVal)*x))))-sin(x)),(tan(y)+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*tan(sin(y)))),(audio(y,noise(y,externalVal))/tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+cos(tan((noise(x,externalVal)*x))))-(x/noise(x,min(min(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)-(x/audio(noise((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(tan(y),audio((tan(x)*y),cos((x*audio(externalVal,externalVal))))),cos(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(max(tan(externalVal),(tan(y)/x)),y)))),x),(pow(x,x)/y)))))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal-noise(externalVal,sin(pow(cos(y),x))))/(min(x,(x/(noise(cos(cos(y)),audio(x,externalVal))*min(x,y))))-((x+y)-y))),audio(y,max(y,externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((mod(x,externalVal)-x))))*sin(x)),(max(y,(audio((y+x),x)*(x/audio(min((externalVal+(min(cos(x),max(mod(min(y,y),noise(pow(min(max(y,mod((tan(externalVal)/noise(cos(tan(mod(x,x))),max(y,y))),x)),audio((noise(audio(x,max(cos(externalVal),x)),mod(x,audio(max(mod(x,sin((y-mod(y,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal))))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),sin((x*pow(externalVal,y))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),sin(tan(y))),y)))),y),(mod(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(y,tan(y)),(audio(y,audio(y,(externalVal+noise(externalVal,sin(pow(max(externalVal,y),x))))))/tan(externalVal)))",
            "b": "max(y,sin(y))",
            "g": "noise(((y*noise(sin((noise(tan(y),y)*x)),externalVal))/(x+min(x,cos(tan(x))))),(max(externalVal,(pow(max(y,audio(mod(x,y),audio(sin(y),y))),x)-(y*pow(mod((y*(noise(sin(x),min(audio(noise(max(externalVal,externalVal),y),pow(pow(mod(sin(externalVal),(externalVal/y)),(x-(mod(externalVal,(cos(y)/y))+min(min(externalVal,max(noise(sin(y),cos(y)),cos(y))),(externalVal/y))))),sin(externalVal))),externalVal))+((y/cos(x))/min(max(sin(externalVal),(sin(y)*x)),y)))),x),tan(noise(externalVal,(y-externalVal)))))))+cos((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal+mod(externalVal,sin(pow(max(y,y),x))))/(max(x,sin(x))-((x+y)-y))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,(pow(externalVal,max(y,audio(externalVal,y)))/max(noise(max(x,pow(y,(mod(y,y)+y))),externalVal),cos(externalVal))))",
            "g": "pow(((x+tan(min((mod(x,externalVal)-x),(x/min(min(tan(cos(cos(y))),y),externalVal)))))*sin(x)),(max(y,(audio((y*y),y)*sin(x)))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-pow(externalVal,sin(pow((max(((mod(pow(max(externalVal,y),y),externalVal)/min(externalVal,(audio(y,x)-x)))/externalVal),audio(x,y))/min(x,y)),x))))),(audio(y,min(y,externalVal))-cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x+tan(cos((noise(x,externalVal)*x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(min(externalVal,(audio((y+x),x)-(x/audio(min((y-(min(cos(x),min(mod(mod(tan(externalVal),y),min(pow(max(tan(y),audio((noise(audio(x,mod((y/x),x)),mod(x,audio(min(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))*(externalVal+x))),max((y*y),cos(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))/max(min(max(externalVal,pow(externalVal,y)),(tan(y)/x)),y)))),y),(audio(y,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow(y,tan(y)),(audio(y,audio(y,max(y,externalVal)))/tan(externalVal)))",
            "b": "max(y,cos(y))",
            "g": "mod(((y-min(sin((noise(tan(y),y)*x)),externalVal))/(x-min(x,cos(tan(x))))),(min(externalVal,(pow(min(y,audio(mod(x,y),pow((y/x),externalVal))),x)*(y-pow(noise((y*(noise(cos(x),min(audio(noise(max(externalVal,externalVal),y),mod(pow(mod(cos(externalVal),(externalVal/y)),(x*(mod(externalVal,sin(cos(y)))+min(noise(externalVal,max(noise((externalVal/x),tan(y)),tan(y))),(externalVal/y))))),sin(externalVal))),externalVal))+((x*cos(x))*min(min(sin(externalVal),(sin(y)-x)),y)))),x),max(min(externalVal,(y-externalVal)),y)))))+cos((pow(x,externalVal)-x))))"
          }
        }
      ],
      "timestamp": "19h:10m:23s"
    },
    {
      "generation": 26,
      "ascendantID": "3t2r1eci-g8zw-8ig1-w378-ly4d07uoj2rt",
      "id": "cm2fyjyk-vkx5-je9x-l3y6-a68d7pk3roc2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal+mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,min(y,y))/max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+max(max((noise(x,externalVal)*x),(x*mod(max(cos(cos(cos(y))),externalVal),externalVal))),externalVal))-sin(x)),(max(y,(audio((y-y),x)-(x/audio(max((externalVal+(min(cos(x),min(mod(pow(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((mod(pow(x,min((y/x),x)),noise(x,audio(tan(pow(x,sin((y-noise(y,(noise(y,tan(externalVal))-externalVal)))))),externalVal)))*y),sin((x*mod(externalVal,y))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))-max(noise(max(externalVal,pow(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(externalVal,y),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+cos(tan((noise(x,externalVal)-x))))+(x/min(y,min(min(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),noise(mod(mod(max(externalVal,externalVal),y),noise(pow(min(noise(y,noise((sin(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),pow((noise(audio(x,noise(cos(y),x)),mod(x,audio(max(audio(x,((y+noise(x,(noise(y,max(externalVal,tan(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),cos(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))-max(min(max(externalVal,audio(y,y)),(tan(y)*x)),y)))),y),(pow(y,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(pow(max(externalVal,y),x)/y)))),(pow(y,min(y,externalVal))-tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "min(((x+tan(cos(min(cos(x),min(pow(mod(max(externalVal,externalVal),y),noise(mod(min(tan(y),audio((tan(x)*y),cos((y*audio(externalVal,externalVal))))),cos(x)),(externalVal/externalVal))),externalVal)))))-(x*min(y,min(min(y,(y-externalVal)),x)))),(max(y,(audio((y+x),x)*(x*audio(max((y-(min(cos(x),max(noise(pow(max(externalVal,externalVal),y),noise(pow(tan(tan(y)),cos(x)),sin(externalVal))),externalVal))+sin((x+sin(x))))),y),(pow(x,x)*y)))))+max(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal*noise(externalVal,sin(pow(cos(y),x))))/(min(x,(x/(noise(cos(tan(y)),audio(x,externalVal))-max(x,y))))-((x+y)-y))),audio(y,max(y,externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((mod(x,externalVal)-x))))*(x/min(x,tan(max(y,(y*externalVal)))))),(max(y,(audio((y+x),x)*(x/audio(noise((externalVal+(min(cos(x),max(mod(min(y,y),noise(pow(min(max(y,mod((tan(externalVal)/min(cos(tan(noise(x,x))),max(y,y))),x)),audio((noise(audio(x,max(cos(externalVal),x)),mod(x,audio(max(mod(x,sin((y+mod(y,(noise(y,max(externalVal,cos(max(externalVal,externalVal))))+externalVal))))),max((y-y),tan(noise(y,y)))),externalVal)))-externalVal),sin((x*pow(externalVal,y))))),sin(x)),(externalVal/y))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),sin(tan(y))),y)))),y),(mod(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,cos(mod(audio(x,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((mod(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(tan(y)+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))-tan(externalVal)))",
            "b": "cos(externalVal)",
            "g": "mod(((x+tan(tan((mod(x,externalVal)/x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y+y),x)*(x*audio(min((externalVal+(noise(cos(x),min(mod(mod(tan(externalVal),y),noise(audio(min(min(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),max(y,y))),x)),audio((noise(audio(x,max(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,sin(cos(externalVal))))-externalVal)))*(externalVal+y))),min((y+y),tan(noise(y,y)))),externalVal)))*y),sin((y/audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)*x)),y)))),y),(mod(x,x)/y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(externalVal,x),(audio(y,mod(y,externalVal))/max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "noise(((x+tan(cos((noise(x,externalVal)-x))))-cos(x)),(tan(y)+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow(y,tan(y)),(audio(y,audio(y,max(y,externalVal)))/cos(externalVal)))",
            "b": "max(y,sin(y))",
            "g": "mod(((y-min(sin((mod(tan(y),y)*x)),externalVal))/(x*max(x,cos(tan(x))))),(min(externalVal,(pow(min(y,audio(pow(x,y),pow((y/x),externalVal))),x)*(y-pow(noise((y*(noise(cos(x),min(audio(noise(min(externalVal,externalVal),y),mod(mod(noise(sin(externalVal),(externalVal/y)),(x*(pow(externalVal,sin(cos(y)))+max(noise(externalVal,max(noise((externalVal/x),max(y,x)),tan(y))),sin(externalVal))))),sin(externalVal))),externalVal))-((x*cos(x))*min(min(cos(externalVal),(sin(y)*x)),y)))),x),max(min(externalVal,(y-externalVal)),y)))))-tan((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(mod(tan(externalVal),x)/y)))),(audio(y,noise(y,externalVal))*cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((noise(x,externalVal)+x))))+(x/mod(y,max(min(y,(y*externalVal)),x)))),sin(min((externalVal*x),min(externalVal,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-pow(externalVal,sin(pow(cos(externalVal),x))))),(audio(y,noise(y,y))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "min(((x+max(tan((noise(x,externalVal)-x)),y))-(x/min(x,min(min(y,(y/externalVal)),x)))),(max(y,(pow((y-y),y)*(x*pow(min((externalVal+(noise(cos(x),min(mod(mod(max(externalVal,externalVal),y),min(pow(min(max(externalVal,noise((cos(externalVal)*noise(cos(tan(pow(x,x))),max(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,sin(sin(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),max(noise(x,y),externalVal))),externalVal)))*externalVal),cos((x*audio(externalVal,y))))),sin(x)),sin(externalVal))),externalVal))+((x+sin(x))*max(min(max(externalVal,audio(y,y)),(max(y,x)/x)),y)))),y),(mod(x,x)/y)))))+tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(cos((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))/tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+max(tan((min(x,externalVal)+x)),y))-(x*min(y,min(max(y,(y*externalVal)),x)))),(tan(y)+max(y,y)))"
          }
        }
      ],
      "timestamp": "19h:10m:32s"
    },
    {
      "generation": 27,
      "ascendantID": "cm2fyjyk-vkx5-je9x-l3y6-a68d7pk3roc2",
      "id": "loobb5bl-8mxk-7nt6-cbmz-fwhosfcmqqyp",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal+mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,min(y,y))/max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+max(max((noise(x,externalVal)*x),(x*mod(tan(cos(cos(cos(y)))),externalVal))),externalVal))+(x/min(y,max(noise(y,sin(y)),x)))),(max(y,(audio((y-y),x)-(x/audio(max((externalVal+(min(cos(x),min(noise(pow(max(externalVal,externalVal),y),min(pow(min(min(externalVal,min((sin(externalVal)*pow(tan(tan(mod(x,x))),min(y,y))),x)),audio((mod(pow(x,min((y/x),x)),min(y,audio(tan(pow(x,sin((y-min(y,(noise(y,cos(externalVal))-externalVal)))))),externalVal)))*y),sin((x*pow(externalVal,y))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(noise(max(externalVal,pow(y,y)),(cos(y)/x)),y)))),y),(pow(x,x)*y)))))-cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((y/x),sin(audio(y,pow(y,externalVal))))",
            "b": "tan(externalVal)",
            "g": "min(((x+tan(cos((mod(x,externalVal)-x))))*sin(x)),(max(y,(audio((y+x),x)-(x/mod(min((externalVal-(min(cos(x),min(pow(pow(cos(externalVal),y),min(audio(noise(tan(y),audio((max(audio(x,noise(max(externalVal,x),x)),noise(x,pow(max(mod(x,((y-min(x,(mod(y,cos(externalVal))-externalVal)))/(externalVal+x))),max((y-y),sin(min(y,y)))),externalVal)))/y),cos(noise(externalVal,tan(noise(max(externalVal,x),noise(externalVal,x))))))),(x/(noise(externalVal,(tan(y)-externalVal))+noise(min(externalVal,tan(noise(tan(externalVal),max(y,x)))),sin(externalVal))))),sin(externalVal))),externalVal))+((x-(x/externalVal))/tan(min(min(externalVal,audio(externalVal,y)),(tan(y)*x)))))),x),(pow(x,x)*y)))))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow(y,tan(y)),(audio(y,audio(y,max(y,externalVal)))-sin(externalVal)))",
            "b": "max(y,sin(y))",
            "g": "mod(sin((y-min(sin((noise(tan(y),y)*x)),externalVal))),(mod(externalVal,(pow(min(y,audio(pow(x,y),pow((y/x),externalVal))),y)*(x-pow(noise((y*(noise(cos(x),min(pow(noise(tan(externalVal),y),mod(mod(noise(sin(externalVal),(externalVal/y)),(x*(pow(externalVal,sin(cos(y)))+max(noise(externalVal,max(noise((externalVal/x),max(y,x)),tan(y))),sin(externalVal))))),sin(externalVal))),externalVal))+((x-cos(x))*max(max((externalVal/noise(min(x,y),min(mod(mod(min(externalVal,externalVal),y),mod(audio(mod(max(y,max((tan(externalVal)+pow(cos(min(audio(y,x),x)),noise(y,y))),x)),audio((noise(pow(x,min(cos(y),x)),mod(x,pow(min(mod(x,((externalVal*audio(x,(noise(externalVal,tan(externalVal))-externalVal)))-(externalVal+y))),((y+externalVal)/mod(mod(y,y),externalVal))),externalVal)))*externalVal),tan((y+audio(externalVal,externalVal))))),(y*(mod(externalVal,sin(tan(y)))+mod(min(externalVal,max(noise(tan(y),max(externalVal,y)),max(x,audio((externalVal+min(((x/sin(y))/externalVal),x)),y)))),tan(y))))),sin(externalVal))),externalVal))),(sin(y)*x)),y)))),x),max(max(externalVal,(y-externalVal)),y)))))-tan((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-pow(externalVal,sin(pow(max(externalVal,y),x))))),(pow(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)+x))))-(x/min(x,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)-(x/audio(min((externalVal+(min(tan(x),min(noise(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,noise((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((mod(audio(x,noise(sin(externalVal),x)),noise(x,audio(max(pow(x,((y-noise(x,(mod(y,max(externalVal,tan(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),max(noise(y,y),externalVal))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*min(min(max(externalVal,audio(externalVal,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(tan(y),x))))),(audio(y,noise(y,externalVal))-tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x+tan(tan((mod(x,externalVal)/x))))-(x/min(x,min(noise(x,(y*externalVal)),x)))),(max(y,(mod((y+y),y)*(x*pow(max((externalVal+(noise(cos(x),min(mod(pow(max(externalVal,y),y),noise(audio(max(min(y,noise((tan(externalVal)*noise(cos(tan(mod(x,x))),max(y,externalVal))),x)),audio((noise(audio(x,max(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,sin(cos(externalVal))))*externalVal)))*(externalVal-x))),min((y-y),max(noise(y,y),externalVal))),externalVal)))*y),sin((y/audio(externalVal,externalVal))))),cos(x)),sin(externalVal))),externalVal))+((x+(x*externalVal))*min(noise(max(externalVal,audio(y,y)),(max(y,x)*x)),y)))),y),(mod(x,x)/y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal-pow(externalVal,sin(pow(max(externalVal,y),x))))),sin(audio(y,min(y,externalVal))))",
            "b": "tan(externalVal)",
            "g": "noise(((x+cos(cos((noise(x,externalVal)-x))))-(x/mod(y,min(max(y,(y*externalVal)),x)))),(max(y,(audio((y+y),x)-(x/audio(max((y+(min(tan(x),min(noise(mod(max(externalVal,externalVal),y),noise(audio(min(max(y,mod((cos(externalVal)*mod(cos(tan(pow(x,x))),noise(y,y))),x)),audio((noise(audio(x,min(cos(externalVal),x)),mod(x,audio(tan(pow(x,((y+noise(x,(noise(y,max(externalVal,sin(cos(externalVal))))+externalVal)))/(externalVal+x)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),cos(externalVal))),externalVal))+((x+(x*externalVal))*min(min(tan(externalVal),(tan(y)/x)),y)))),y),(pow(x,x)-y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(mod(sin(externalVal),x)/y)))),(audio(y,min(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)+x))))+(x/noise(y,max(max(x,(y*externalVal)),x)))),sin((y*y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(cos((externalVal-mod(externalVal,(pow(max(externalVal,y),x)/y)))),(audio(y,noise(y,externalVal))*max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+max(tan((min(x,externalVal)+x)),y))-(x*min(y,min(max(y,(y*externalVal)),x)))),(tan(externalVal)+min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-noise(externalVal,sin(pow(tan(y),x))))),(audio(y,noise(y,y))*max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-sin(x)),(max(y,(audio((y-y),x)*(x/pow(min((externalVal+(min(tan(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(noise(max(externalVal,mod((sin(externalVal)-noise(tan(tan(mod(x,x))),max(y,y))),x)),audio((noise(audio(x,noise(cos(y),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(externalVal,y)),(tan(y)/x)),y)))),y),(audio(y,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal+noise(externalVal,(mod(cos(sin(y)),audio(x,externalVal))*max(x,y))))),(audio(y,min(y,y))/max(externalVal,x)))",
            "b": "max(externalVal,(audio(externalVal,min(y,audio(externalVal,x)))/tan(audio(tan(y),externalVal))))",
            "g": "mod(((x+max(max((noise(x,externalVal)*x),(x*mod(tan(cos(cos(cos(y)))),externalVal))),externalVal))-sin(x)),(max(y,(audio((y-y),x)-(x/audio(max((externalVal+(min(cos(x),noise(mod(pow(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((tan(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((mod(pow(x,noise((y/x),x)),noise(x,pow(tan(pow(x,sin((y-noise(y,(noise(y,tan(externalVal))-externalVal)))))),externalVal)))/y),sin((x*pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))-((x+(x/externalVal))-(x/min(y,min(min(y,(y*externalVal)),x)))))),y),(pow(x,x)/y)))))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal-mod(externalVal,(pow(cos(y),x)/y)))/(min(x,(x/(noise(sin(tan(y)),audio(x,y))-max(x,y))))-((x+y)+externalVal))),audio(y,max(y,externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((mod(x,externalVal)-x))))*(x*min(x,max(noise(y,(y*externalVal)),x)))),(max(y,(pow((y+x),y)/(x/audio(noise((externalVal+(min(cos(x),max(mod(min(y,y),noise(pow(min(max(externalVal,mod(sin(tan(externalVal)),x)),audio((mod(audio(x,noise(tan(externalVal),x)),mod(x,audio(max(mod(x,sin((y+mod(y,(noise(y,max(externalVal,cos(max(externalVal,externalVal))))+externalVal))))),max((y-y),max(noise(x,y),externalVal))),externalVal)))-externalVal),sin((x*pow(externalVal,y))))),sin(x)),(externalVal/externalVal))),externalVal))+((x+(x/externalVal))*max(min(min(externalVal,audio(y,y)),sin(tan(y))),y)))),y),(mod(y,x)/y)))))+max(externalVal,x)))"
          }
        }
      ],
      "timestamp": "19h:10m:41s"
    },
    {
      "generation": 28,
      "ascendantID": "loobb5bl-8mxk-7nt6-cbmz-fwhosfcmqqyp",
      "id": "572dxgxv-3kny-d702-9cqg-nwmxevixmx25",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(cos((externalVal+mod(externalVal,(pow(max(y,y),x)/y)))),(audio(y,noise(y,externalVal))*max(externalVal,x)))",
            "b": "max(externalVal,(pow(y,min(y,audio(externalVal,x)))/tan(externalVal)))",
            "g": "mod(((x+max(tan((min(x,externalVal)+x)),y))-(x*min(y,min(max(y,(y*externalVal)),x)))),(max(externalVal,sin(audio((y-y),y)))+max(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal+noise(externalVal,pow(max(externalVal,y),x)))),sin(audio(y,min(y,y))))",
            "b": "max(externalVal,(pow(externalVal,noise(y,audio(externalVal,x)))/tan(audio(tan(y),externalVal))))",
            "g": "mod(((x+max(tan((noise(x,externalVal)*x)),externalVal))-sin(x)),(max(y,(audio((y-y),y)-(x*audio(cos((externalVal+(min(cos(x),noise(mod(pow(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)/noise(tan(tan(mod(x,x))),max(y,y))),x)),audio((noise(pow(x,min((y/x),x)),noise(x,pow(tan(pow(x,((y+noise(x,(noise(y,max(externalVal,cos(tan(externalVal))))-externalVal)))/(externalVal-y)))),externalVal)))/y),sin((x*pow(externalVal,y))))),sin(x)),sin(externalVal))),externalVal))-((x+(x/externalVal))-(x/min(y,min(noise(y,(y*externalVal)),x))))))),(pow(x,x)/y)))))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow(sin((externalVal-pow(externalVal,sin(pow(max(externalVal,y),x))))),(mod(y,noise(y,externalVal))*tan(externalVal))),(audio(y,audio(y,max(y,externalVal)))-sin(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((y+min(sin((noise(tan(y),y)*x)),externalVal))/(x-noise(x,cos(tan(x))))),(noise(externalVal,(pow(noise(y,audio(pow(x,y),pow((y/x),externalVal))),y)*(x*pow(noise(min((cos(externalVal)-noise(tan(tan(mod(x,x))),min(y,externalVal))),x),x),max(min(externalVal,(y-externalVal)),y)))))-tan((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal-mod(externalVal,(pow(cos(y),x)/y)))/(min(x,(x*(noise(cos(tan(y)),audio(x,y))-min(x,y))))+((x+y)+externalVal))),pow(externalVal,sin(y)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((mod(x,externalVal)-x))))*(x*min(x,max(noise(y,(y*externalVal)),x)))),(max(y,tan(externalVal))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(mod(y,cos(y)),(audio(y,audio(y,max(externalVal,y)))-sin(externalVal)))",
            "b": "max(y,cos(y))",
            "g": "mod(sin((y+min(sin((noise(tan(y),y)*x)),externalVal))),(mod(externalVal,(pow(min(y,audio(pow(x,y),pow((y/x),externalVal))),y)*(x-mod(noise((y-(mod(cos(x),min(pow(noise(tan(externalVal),y),mod(mod(noise(sin(externalVal),sin(externalVal)),(x*(pow(externalVal,cos(cos(y)))+max(min(externalVal,max(noise(sin(externalVal),max(y,x)),tan(y))),sin(externalVal))))),sin(externalVal))),externalVal))+((x-cos(x))*max(max((externalVal*noise(min(x,y),min(mod(mod(min(externalVal,externalVal),y),mod(audio(mod(max(externalVal,tan((tan(externalVal)+pow(cos(min(audio(y,x),x)),noise(y,y))))),pow((noise(pow(x,min(cos(y),x)),mod(x,pow(min(mod(x,((externalVal*audio(x,(noise(externalVal,max(externalVal,tan(sin(y))))*externalVal)))-(externalVal-y))),((y+externalVal)/mod(mod(y,y),externalVal))),externalVal)))*externalVal),tan((y+audio(externalVal,externalVal))))),(y*(mod(externalVal,sin(tan(y)))+mod(min(externalVal,max(noise(tan(y),max(externalVal,y)),max(x,audio((externalVal+min(((x/(x/externalVal))*externalVal),x)),y)))),tan(y))))),cos(externalVal))),externalVal))),(sin(y)*x)),y)))),x),max(max(externalVal,(y-externalVal)),y)))))-cos((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin(((externalVal-noise(externalVal,sin(audio(tan(y),x))))/(min(x,(x/(noise(cos((y/x)),audio(x,externalVal))*max(x,y))))-((x+y)-externalVal)))),(audio(y,mod(y,externalVal))*max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((pow(x,externalVal)*x))))-sin(x)),(tan(y)+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*mod(externalVal,sin(mod(cos(externalVal),x))))),(tan((externalVal+mod(externalVal,(pow(max(externalVal,y),x)/y))))+tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x+tan(cos((noise(x,externalVal)/x))))-(x/noise(x,min(max(x,(y*externalVal)),x)))),(max(y,(mod((y+y),y)*(x*pow(max((externalVal+(noise(tan(x),max(mod(mod(min(externalVal,externalVal),y),min(audio(max(min(y,noise((tan(externalVal)-min(cos(tan(mod(x,x))),max(y,externalVal))),x)),audio((noise(audio(x,max(sin(externalVal),x)),noise(x,pow(max(pow(x,((y-noise(x,(min(y,cos(externalVal))-externalVal)))*(externalVal-x))),noise((y-y),max(noise(y,y),externalVal))),externalVal)))*y),sin((y/pow(externalVal,externalVal))))),cos(x)),sin(externalVal))),externalVal))+((x+(x*externalVal))*min(noise(max(externalVal,audio(y,y)),(max(y,x)*x)),y)))),y),(mod(x,x)*y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((y/x),sin(tan(y)))",
            "b": "tan(externalVal)",
            "g": "noise(((x-tan(cos((mod(x,externalVal)-x))))*sin(x)),(max(y,(pow((y+x),x)-(x/mod(min((externalVal-(min(cos(x),min(mod(pow(cos(externalVal),y),min(audio(min(max(externalVal,audio((cos(externalVal)*noise(cos(max(noise(x,x),y)),max(externalVal,y))),x)),audio((max(audio(x,noise(cos(externalVal),x)),pow(x,pow(max(mod(x,((y-min(x,(mod(y,cos(externalVal))-externalVal)))/(externalVal+x))),max((y*y),cos(min(y,y)))),externalVal)))*externalVal),sin(noise(externalVal,cos(noise(max(externalVal,x),noise(externalVal,x))))))),sin(x)),sin(externalVal))),externalVal))+((x-(x*externalVal))*tan(min(min(externalVal,audio(externalVal,y)),(tan(y)*x)))))),y),(pow(x,x)*y)))))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,tan(y)),(audio(y,audio(y,tan(y)))-sin(externalVal)))",
            "b": "max(y,sin(y))",
            "g": "noise(sin((y*min(sin((noise(tan(y),y)*x)),externalVal))),(mod(externalVal,(pow(min(y,audio(pow(x,y),pow(sin(y),externalVal))),y)-(x-mod(noise((y/(min(cos(x),noise(pow(noise(tan(externalVal),y),mod(pow(noise(cos(y),(externalVal/y)),(x*(pow(externalVal,sin(cos(y)))+max(noise(externalVal,max(min((y*x),min(y,x)),tan(y))),cos(externalVal))))),sin(externalVal))),externalVal))-((x*cos(x))*max(max(sin(externalVal),(sin(y)-x)),y)))),x),min(max(externalVal,(y-externalVal)),y)))))-tan((audio(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-pow(externalVal,cos(pow(max(y,y),x))))),(pow(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((mod(x,externalVal)+x))))-(x*min(x,min(min(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)*(x*pow(min((externalVal+(max(tan(x),min(noise(noise(cos(externalVal),y),noise(mod(min(max(y,noise((cos(externalVal)*noise(cos(max(mod(x,x),x)),min(y,y))),x)),audio((mod(audio(x,mod(sin(y),x)),mod(x,audio(max(audio(x,((y-noise(y,(mod(y,max(externalVal,tan(tan(externalVal))))+externalVal)))/(externalVal+y))),max((y+y),max(noise(y,y),externalVal))),externalVal)))*y),cos((x/pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(externalVal,y)),(tan(y)/x)),y)))),y),(mod(y,x)*y)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(pow(sin(externalVal),x)/y)))),(audio(y,max(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,max(y,mod(x,(cos(y)*y))))",
            "g": "noise(((x-max(max((mod(x,externalVal)-x),(x-pow(tan(tan(sin((y/pow(min(x,externalVal),mod(cos(y),y)))))),externalVal))),y))-(x/noise(y,max(max(x,(y-externalVal)),x)))),sin((y-y)))"
          }
        }
      ],
      "timestamp": "19h:11m:4s"
    },
    {
      "generation": 29,
      "ascendantID": "572dxgxv-3kny-d702-9cqg-nwmxevixmx25",
      "id": "py5caqeu-wr7n-4k11-w2x4-lf4vs5isdvne",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio((y*x),(tan(y)/max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "min(((x-tan(cos((mod(x,externalVal)-x))))/sin(x)),(min(y,(pow((y+x),x)-(x/pow(min((externalVal+(min(cos(x),max(audio(pow(cos(externalVal),y),noise(audio(noise(max(externalVal,audio((tan(externalVal)*noise(cos(max(noise(x,x),y)),max(externalVal,y))),x)),audio((min(audio(x,min(cos(externalVal),x)),pow(x,mod(max(mod(x,((y/min(x,(mod(y,cos(externalVal))-externalVal)))/(externalVal+x))),max((y*y),cos(min(y,y)))),externalVal)))*externalVal),sin(max(externalVal,tan(noise(max(externalVal,x),noise(externalVal,x))))))),cos(x)),sin(externalVal))),externalVal))+((x-(x*externalVal))/tan(max(min(y,audio(externalVal,y)),(tan(y)*x)))))),y),(pow(x,x)-y)))))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(((externalVal-mod(externalVal,sin(pow(min(externalVal,y),x))))/(max(x,(x/(mod(cos(sin(y)),audio(x,y))*min(x,y))))+((x+y)-externalVal))),(audio(y,mod(y,y))*max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(noise(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)*sin(x)))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*mod(externalVal,sin(mod(cos(externalVal),x))))),(tan((externalVal+sin(y)))+tan(externalVal)))",
            "b": "max(externalVal,sin(externalVal))",
            "g": "min(((x+tan(cos((noise(x,externalVal)/x))))-(x/noise(x,max(tan(x),x)))),(max(y,(mod((externalVal+x),y)*(y/pow(max((externalVal+(noise(tan(x),min(mod(mod(max(y,externalVal),y),noise(audio(min(min(y,noise((max(externalVal,max(x,mod(y,((pow(x,sin(externalVal))*externalVal)-sin(audio(y,externalVal))))))-max(tan(tan(mod(x,x))),max(y,externalVal))),x)),audio((noise(audio(x,max(sin(y),x)),noise(x,pow(max(pow(x,((y-noise(x,(max(y,cos(externalVal))-externalVal)))*(externalVal-x))),noise((y-y),min(noise(y,y),externalVal))),externalVal)))*y),sin((y/pow(externalVal,externalVal))))),cos(x)),cos(externalVal))),externalVal))+((x-(x*externalVal))*min(noise(min(externalVal,audio(y,y)),(max(y,x)*x)),y)))),x),(pow(x,x)*y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal-audio(externalVal,(pow(max(y,y),x)/y)))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "pow(((x+tan(tan((mod(x,externalVal)+x))))+(x/min(x,min(min(y,(y-externalVal)),x)))),(min(externalVal,(audio((y-y),x)*(x*audio(min((externalVal+(max(tan(x),min(noise(mod(cos(externalVal),y),noise(pow(min(max(y,min((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((mod(audio(x,mod(sin(y),x)),mod(x,audio(max(audio(x,((y-min(y,(noise(y,tan(externalVal))+externalVal)))/(externalVal+y))),max((y+y),max(min(x,y),externalVal))),externalVal)))*y),cos((x/pow(externalVal,externalVal))))),sin(x)),(externalVal/externalVal))),externalVal))+((x+(x/externalVal))*max(noise(max(externalVal,audio(externalVal,y)),(tan(y)/x)),y)))),y),(mod(x,x)*y)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,tan(y)),(audio(y,audio(y,tan(y)))-(x+y)))",
            "b": "max(y,(audio(externalVal,min(y,pow(externalVal,x)))/tan(audio(tan(y),externalVal))))",
            "g": "noise(sin((y*min(sin((min(tan(y),y)*x)),externalVal))),(mod(externalVal,(pow(min(y,audio(pow(x,y),pow(sin(y),externalVal))),y)-(x+mod(noise((y/(max(cos(x),noise(audio(noise(tan(externalVal),y),mod(pow(noise(sin(externalVal),sin(externalVal)),(x*(audio(externalVal,(cos(y)/y))+max(noise(externalVal,max(min((externalVal-x),min(y,x)),max(y,audio((externalVal+mod(sin((x-(x*y))),x)),externalVal)))),cos(externalVal))))),sin(externalVal))),externalVal))-((x*cos(x))-min(min(sin(externalVal),(sin(y)*x)),y)))),x),min(max(externalVal,(y-externalVal)),y)))))-max((pow(x,externalVal)*x),cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal-mod(externalVal,(pow(max(externalVal,y),x)/y)))),(audio(y,min(y,externalVal))*max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/noise(x,noise(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x*audio(min((externalVal+(min(cos(x),min(mod(mod(tan(externalVal),y),noise(pow(min(tan(y),audio((mod(audio(x,min(sin(externalVal),x)),mod(x,pow(max(pow(x,sin((y-mod(x,(noise(y,tan(externalVal))+externalVal))))),tan((y-y))),externalVal)))/externalVal),cos(sin(x)))),sin(x)),cos(externalVal))),externalVal))+((x+(x/externalVal))*max(max(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(tan((externalVal-mod(externalVal,(pow(max(y,y),x)/y)))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,(pow(y,min(y,audio(externalVal,x)))*tan(externalVal)))",
            "g": "mod(((x+max(tan((noise(x,externalVal)+x)),y))*(x*min(y,min(max(y,(y*externalVal)),x)))),(max(externalVal,sin(audio((y-y),y)))-max(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal+noise(externalVal,pow(max(externalVal,y),x)))),sin(pow(y,noise(y,y))))",
            "b": "max(externalVal,(pow(externalVal,noise(y,audio(externalVal,x)))/tan(audio(cos(y),externalVal))))",
            "g": "noise(((x-max(cos((noise(x,externalVal)*x)),externalVal))-sin(x)),(max(y,(audio((y-y),y)-(x*audio(cos((externalVal+(min(cos(x),noise(mod(pow(max(externalVal,externalVal),y),noise(pow(noise(max(y,mod((cos(externalVal)/noise(tan(tan(pow(x,x))),max(y,y))),x)),audio((mod(audio(x,min((y/x),x)),noise(x,pow(tan(audio(x,((y+noise(x,(noise(y,max(externalVal,sin(x)))-externalVal)))/(externalVal-y)))),externalVal)))/y),sin((x*audio(externalVal,y))))),sin(x)),sin(externalVal))),externalVal))-((x+(x/externalVal))-(x/min(y,min(noise(y,(y*externalVal)),x))))))),(pow(x,x)/y)))))+cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(mod(y,tan(y)),(audio(y,pow(tan(externalVal),x))-sin(externalVal)))",
            "b": "max(y,max(audio(max(y,mod(y,(pow(y,y)+y))),externalVal),cos(externalVal)))",
            "g": "mod(((y+min(((noise(tan(y),y)-x)/(x-cos(sin(sin(noise(sin(y),max(y,x))))))),externalVal))*(x-min(mod(noise(max(externalVal,externalVal),y),mod(pow(min(max(y,mod((cos(externalVal)*noise(sin(tan(mod(x,x))),min(y,y))),x)),pow((noise(pow(x,noise(sin(externalVal),x)),mod(x,audio(tan(pow(x,sin((y-min(x,(noise(y,max(externalVal,sin(cos(externalVal))))+externalVal)))))),externalVal)))/externalVal),cos((x*pow(externalVal,y))))),sin(x)),sin(externalVal))),externalVal))),(mod(externalVal,(pow(min(y,audio(pow(x,y),pow((y/x),externalVal))),y)/(x-noise(noise((y-(mod(tan(x),min(audio(noise(tan(externalVal),y),noise(mod(noise(sin(externalVal),sin(externalVal)),(x*(audio(externalVal,cos(sin(y)))-min(min(externalVal,max(noise((externalVal/x),max(y,x)),cos(y))),sin(externalVal))))),sin(externalVal))),externalVal))+((x-cos(x))*max(min((externalVal*noise(noise(x,y),min(mod(noise(min(externalVal,externalVal),y),mod(pow(noise(max(externalVal,tan((tan(externalVal)+pow(sin(min(audio(y,x),x)),noise(y,y))))),pow((noise(audio(x,min(cos(y),x)),mod(x,audio(min(pow(x,((externalVal*audio(x,(noise(externalVal,max(externalVal,tan(sin(externalVal))))*externalVal)))*(externalVal-y))),((y+externalVal)*mod(mod(y,y),externalVal))),externalVal)))*externalVal),max((y+audio(externalVal,externalVal)),noise(x,x)))),(x*(mod(externalVal,sin(max(y,noise(externalVal,x))))+mod(min(externalVal,tan(noise(tan(y),min(externalVal,x)))),tan(y))))),cos(externalVal))),externalVal))),(sin(y)*x)),y)))),x),max(max(externalVal,(y+externalVal)),y)))))-sin((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(pow(tan(externalVal),x)/y)))),(pow(y,max(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,max(y,noise(x,(sin(y)*y))))",
            "g": "mod(((x-max(max((pow(x,y)-x),(x-pow(tan(tan(sin(sin(y)))),externalVal))),y))-(x/noise(y,max(max(x,(y-externalVal)),x)))),sin((y-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow(sin((externalVal*pow(externalVal,(pow(max(externalVal,y),x)/y)))),(mod(y,mod(y,externalVal))*tan(externalVal))),(audio(y,audio(y,tan(externalVal)))*sin(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((y+min(sin((noise(tan(y),y)-x)),externalVal))/(x-noise(x,cos(tan(x))))),(noise(externalVal,(audio(noise(y,audio(pow(x,y),pow((y/x),externalVal))),y)*(x/audio(noise(min((cos(externalVal)-noise(tan(tan(mod(x,x))),min(y,externalVal))),x),x),max(min(externalVal,(y-externalVal)),y)))))-tan((mod(x,externalVal)-x))))"
          }
        }
      ],
      "timestamp": "19h:11m:10s"
    },
    {
      "generation": 30,
      "ascendantID": "py5caqeu-wr7n-4k11-w2x4-lf4vs5isdvne",
      "id": "awpjl6px-nech-bqjd-pg6v-m54ksxylkimq",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal-audio(externalVal,(audio(max(y,y),x)/y)))),(audio(y,noise(y,externalVal))*cos(externalVal)))",
            "b": "max(externalVal,(audio(externalVal,max(y,audio(externalVal,x)))*max(audio(tan(y),externalVal),tan(externalVal))))",
            "g": "pow(((x+tan(tan((mod(x,externalVal)+x))))+(x/noise(x,noise(min(y,(y+externalVal)),x)))),(noise(externalVal,(pow((y-x),x)*(x*audio(min((externalVal-(max(tan(x),min(noise(mod(cos(externalVal),y),noise(audio(min(tan(y),audio((noise(pow(x,min(sin(y),x)),mod(x,audio(tan(pow(x,((y-max(y,(noise(y,tan(externalVal))-externalVal)))/(externalVal+y)))),externalVal)))/y),tan((x/audio(externalVal,externalVal))))),sin(x)),(externalVal/externalVal))),externalVal))+((x+(x/externalVal))*min(mod(max(externalVal,audio(externalVal,y)),(tan(y)/x)),y)))),y),(mod(x,x)/y)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin(audio(y,mod(externalVal,y))),(audio(y,noise(y,y))*cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "pow(((x+tan(tan((mod(x,externalVal)+x))))+(x*min(x,min(min(y,(y-externalVal)),x)))),(min(externalVal,(audio((y-y),x)*(y*audio(max((externalVal+(max(tan(x),max(noise(pow(cos(externalVal),y),noise(pow(min(max(y,min((cos(externalVal)/noise(cos(max(mod(x,x),x)),min(y,y))),x)),audio((mod(audio(x,noise(sin(y),x)),noise(x,audio(min(audio(x,(tan(tan(externalVal))/(externalVal+y))),tan((y+y))),externalVal)))*y),cos((x/pow(externalVal,externalVal))))),sin(x)),(externalVal/externalVal))),externalVal))+((x+(x/externalVal))*max(noise(max(externalVal,audio(externalVal,y)),(tan(y)/x)),y)))),x),(pow(y,x)*y)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(((externalVal/mod(externalVal,sin(pow(max(y,y),x))))/(max(x,(x-(noise(cos(cos(y)),audio(x,y))*max(x,y))))-((x-externalVal)*y))),(audio(y,noise(y,externalVal))*cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-cos(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)/(x/audio(min((externalVal+(max(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(mod(min(max(y,min((cos(externalVal)-noise(cos(tan(mod(x,x))),min(y,y))),x)),pow((noise(audio(x,min((externalVal/x),x)),mod(x,pow(min(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),max(noise(x,y),externalVal))),externalVal)))-y),cos((y/audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*min(min(tan(externalVal),sin(tan(y))),y)))),y),(pow(x,x)-x)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,tan(y)),(audio(y,audio(y,tan(externalVal)))-(x+y)))",
            "b": "max(y,(pow(y,min(y,pow(externalVal,x)))/tan(audio(tan(y),externalVal))))",
            "g": "noise(sin((y-min(sin((min(tan(y),y)*x)),externalVal))),(mod(externalVal,(pow(min(y,audio(pow(x,y),pow(sin(y),externalVal))),y)-(x+mod(noise(sin(x),x),min(tan(externalVal),y)))))-tan((pow(x,externalVal)*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(sin((externalVal-mod(externalVal,(audio(min(y,y),x)/y)))),(audio(y,min(y,externalVal))*tan(externalVal)))",
            "b": "cos(externalVal)",
            "g": "mod(((x+tan(tan((mod(x,externalVal)-x))))-sin(x)),(max(y,(audio((y-y),x)*(x*audio(min((externalVal+(min(cos(x),min(mod(mod(tan(externalVal),y),noise(pow(min(min(y,mod((cos(externalVal)*min(cos(max(mod(x,x),x)),mod(y,y))),x)),audio((mod(audio(x,min(sin(externalVal),x)),noise(x,pow(max(pow(x,sin((y-mod(x,(noise(y,cos(externalVal))+externalVal))))),tan((y-y))),externalVal)))/y),cos((x/audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x*externalVal))*max(max(max(externalVal,audio(externalVal,y)),(tan(y)*x)),y)))),y),(pow(x,x)*y)))))+min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal*mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x-tan(tan((noise(x,externalVal)-x))))+cos(x)),(max(y,(audio((y+y),x)*(x/pow(min((externalVal-(min(cos(x),min(mod(noise(min(externalVal,externalVal),y),noise(pow(min(min(externalVal,mod((cos(externalVal)/noise(tan(cos(mod(x,x))),min(y,externalVal))),x)),audio((noise(audio(x,max(sin(externalVal),x)),pow(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(max(externalVal,externalVal))))+externalVal)))/(externalVal-x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),(externalVal/y))),externalVal))+((x+(x/externalVal))*max(min(tan(externalVal),(max(y,x)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/mod(externalVal,sin(audio(y,noise(y,externalVal)))))),(tan((externalVal+sin(y)))+max(externalVal,x)))",
            "b": "max(externalVal,max(externalVal,(audio(externalVal,tan(y))-max(audio(max(y,audio(y,(noise(y,x)-y))),externalVal),max(externalVal,x)))))",
            "g": "min(((x+tan(cos((noise(x,externalVal)/x))))-(x/noise(x,min(tan(x),x)))),(max(y,(mod((externalVal+x),y)*(y/pow(cos((externalVal+(noise(cos(x),min(mod(mod(max(y,externalVal),y),noise(pow(min(min(y,noise((min(externalVal,max(x,pow(y,((pow(x,sin(externalVal))*externalVal)-cos(audio(y,externalVal))))))-max(tan(tan(mod(x,x))),max(y,externalVal))),x)),audio((noise(audio(x,max(cos(y),x)),noise(x,pow(max(pow(x,((y*noise(x,(min(y,cos(externalVal))+externalVal)))*(externalVal-x))),min((y-y),min(noise(y,y),externalVal))),externalVal)))*y),sin((y/pow(externalVal,externalVal))))),cos(x)),tan(externalVal))),externalVal))-((x-(x*externalVal))*max(noise(noise(externalVal,audio(y,y)),(tan(y)*x)),y))))),(pow(x,x)*y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(y,tan(externalVal)),(audio(y,audio(mod(y,tan(y)),(audio(y,pow(cos(externalVal),x))+sin(externalVal))))-(x+y)))",
            "b": "min(externalVal,(audio(externalVal,min(y,(audio(y,y)+y)))/max(audio(max(y,mod(x,(pow(y,y)-y))),externalVal),cos(externalVal))))",
            "g": "noise(sin((y*min(sin((tan(tan(y))-x)),externalVal))),(mod(externalVal,(audio(min(y,audio(pow(x,y),pow(sin(y),externalVal))),y)+(x+mod(noise((y/(max(cos(x),min(audio(noise(tan(externalVal),y),mod(audio((mod(externalVal,sin(max(y,noise(externalVal,x))))+mod(tan(externalVal),tan(y))),(x*(audio(externalVal,(cos(y)/y))+tan(noise(externalVal,min(min((externalVal-x),min(y,x)),max(y,audio((externalVal+mod(sin((x+(x*y))),x)),externalVal)))))))),(externalVal/y))),externalVal))*((x*cos(x))-min(min(sin(externalVal),(sin(y)*x)),y)))),x),min(max(externalVal,(x/externalVal)),y)))))-max((pow(x,externalVal)*x),sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(sin((externalVal+pow(externalVal,(pow(max(externalVal,y),x)/y)))),(pow(y,noise(y,y))/audio(x,y))),(audio(y,audio(y,tan(externalVal)))*sin(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((y+min(sin((noise(tan(y),y)-x)),externalVal))/(x-min(x,sin(max(x,(x/y)))))),(noise(externalVal,(audio(min(y,audio(pow(x,y),audio((y*x),externalVal))),y)/(x/audio(noise(min((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,externalVal))),x),x),max(min(externalVal,(y-externalVal)),y)))))-tan((mod(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(((externalVal*mod(externalVal,(pow(max(externalVal,y),x)/y)))/(min(x,(x/(mod(cos(sin(y)),audio(x,externalVal))*max(x,y))))-((x+y)-externalVal))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,tan(min(y,(y/externalVal)))))),(max(y,(audio((y-y),y)-(x/audio(min((externalVal+(min(cos(x),noise((x*audio(externalVal,externalVal)),externalVal))+((x+(x/externalVal))*tan(noise(max(externalVal,audio(y,y)),(tan(y)/x)))))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal-mod(externalVal,sin(audio(max(externalVal,y),x))))),(audio(y,min(y,externalVal))/tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x+tan(tan((noise(x,externalVal)-x))))-(x/noise(x,noise(min(y,(y*externalVal)),x)))),(max(y,(audio((y+x),x)*(x*audio(noise((externalVal+(min(cos(x),min(noise(mod(cos(externalVal),y),noise(mod(min(tan(y),audio((noise(audio(x,noise(sin(externalVal),x)),min(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/externalVal),cos(sin(x)))),sin(x)),cos(externalVal))),externalVal))+((x+(x/externalVal))/tan(max(max(externalVal,audio(y,y)),(cos(externalVal)/x)))))),x),(mod(y,x)*x)))))+min(externalVal,y)))"
          }
        }
      ],
      "timestamp": "19h:11m:28s"
    },
    {
      "generation": 31,
      "ascendantID": "awpjl6px-nech-bqjd-pg6v-m54ksxylkimq",
      "id": "umw7g55i-amwf-uvij-db9q-8lejowjpndd5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin(audio(y,mod(externalVal,y))),(audio(y,noise(y,y))*sin(externalVal)))",
            "b": "tan(externalVal)",
            "g": "pow(((x+tan(tan((mod(x,externalVal)+x))))+(x*max(x,min(min(y,(y-externalVal)),x)))),(min(externalVal,(audio((y+x),x)*(y*pow(max((externalVal+(min(cos(x),max(mod(pow(cos(externalVal),y),noise(audio(min(min(externalVal,min((cos(externalVal)/noise(cos(max(mod(x,x),x)),min(y,y))),x)),pow((mod(audio(x,min(sin(y),x)),min(x,audio(min(audio(x,sin(tan(tan(externalVal)))),min((y-y),min(min(x,y),externalVal))),externalVal)))*y),cos((x/mod(externalVal,externalVal))))),sin(x)),(externalVal/externalVal))),externalVal))+((x+sin(x))*max(noise(max(externalVal,audio(externalVal,y)),(tan(y)/x)),y)))),x),(pow(y,x)*y)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin(audio(y,mod(externalVal,y))),(audio(y,noise(y,y))*cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "pow(((x+tan(tan((mod(x,externalVal)-x))))+(x/max(y,min(min(y,(y-externalVal)),x)))),(min(externalVal,(pow((y-y),x)*(y*audio(max((externalVal+(max(tan(x),max(min(pow(sin(externalVal),y),noise(audio(noise(min(y,min((cos(externalVal)*noise(tan(max(mod(x,x),x)),noise(y,y))),x)),audio((noise(audio(x,noise(sin(y),x)),min(x,audio(min(audio(x,(max(tan(externalVal),y)/(externalVal+y))),tan((externalVal+y))),y)))-y),cos((x/pow(externalVal,externalVal))))),sin(x)),(externalVal/externalVal))),externalVal))+((x+(x/externalVal))*max(mod(max(externalVal,pow(externalVal,x)),(tan(y)/x)),y)))),x),(pow(y,x)*y)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(pow(min(externalVal,y),x)/y)))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)*x))))-(x/min(y,noise(min(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(max((externalVal+(tan(cos(x))+((x-(x/externalVal))*max(min(max(externalVal,audio(externalVal,x)),(tan(y)/x)),y)))),y),(pow(x,x)/y)))))+min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin(pow(y,mod(externalVal,y))),(audio(y,noise(y,y))*cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "pow(((x+tan(tan((mod(x,externalVal)+x))))+(x*min(x,min(min(y,(y-externalVal)),x)))),(min(externalVal,(audio((y*y),x)*(y/audio(max((externalVal+(max(tan(x),max(min(audio(cos(externalVal),y),noise(pow(min(max(y,min((tan(externalVal)/min(cos(max(mod(x,x),x)),min(y,y))),x)),audio((mod(audio(x,mod(cos(y),x)),noise(x,audio(min(audio(x,(tan(cos(externalVal))/(externalVal+y))),tan((y+y))),externalVal)))*y),cos((x/pow(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*min(noise(max(externalVal,pow(externalVal,x)),(tan(y)/x)),y)))),x),(pow(y,x)*y)))))+max(y,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(sin((externalVal-pow(externalVal,(pow(min(y,y),x)*y)))),(audio(y,min(y,externalVal))/tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((y+tan(tan((mod(x,externalVal)-x))))*sin(x)),(max(y,(audio((y-y),x)/(x*pow(min((externalVal-(min(sin(x),min(noise(mod(tan(externalVal),y),noise(pow(min(min(y,mod((tan(externalVal)*min(tan(max(mod(x,x),x)),noise(y,y))),x)),audio((mod(pow(x,mod(sin(externalVal),x)),noise(x,audio(tan(audio(x,((y-mod(x,(noise(y,tan(externalVal))+externalVal)))/(externalVal+x)))),externalVal)))*y),cos((x/audio(externalVal,externalVal))))),sin(x)),cos(externalVal))),externalVal))+((x+(x*externalVal))-max(max(tan(externalVal),(max(y,x)*x)),y)))),y),(pow(x,x)-y)))))+noise(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(((externalVal-mod(externalVal,(audio(min(y,y),x)/y)))/(min(x,sin(x))+((x+y)-externalVal))),(audio(y,min(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+max(min((mod(x,externalVal)-x),(x/noise(max(min(cos(cos(y)),x),externalVal),externalVal))),y))*cos(x)),(max(y,(audio((y-y),x)*(y/audio(min((externalVal+(min(tan(x),min(mod(pow(cos(externalVal),y),mod(audio(min(max(y,noise((cos(externalVal)*min(cos(max(mod(x,x),x)),mod(y,y))),x)),audio((mod(audio(x,min(sin(externalVal),x)),noise(x,mod(max(mod(x,sin((y-mod(x,(noise(y,cos(externalVal))-externalVal))))),tan((y-y))),externalVal)))/y),cos((x/audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x*externalVal))*max(max(max(externalVal,audio(y,x)),(tan(y)*x)),y)))),y),(mod(x,x)*y)))))+min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,tan(y)),(audio(y,audio(y,tan(externalVal)))-audio(y,pow(cos(externalVal),x))))",
            "b": "max(y,(pow(y,min(y,mod(externalVal,x)))/tan(externalVal)))",
            "g": "noise(sin((y*min(((min(tan(y),y)*x)*(x-max(((noise((y/mod(max(x,y),pow(cos(x),externalVal))),min(y,x))*y)*externalVal),externalVal))),externalVal))),(mod(externalVal,(pow(max(y,audio(pow(x,y),mod(sin(y),externalVal))),y)-(x+noise(min((x/(max(cos(x),noise(pow(noise(max(y,externalVal),y),mod(pow(noise(sin(y),cos(externalVal)),(x-(audio(externalVal,(cos(y)/y))+max(noise(externalVal,min(min((externalVal-x),min(y,x)),max(y,audio((externalVal+pow(sin((x+(x*y))),x)),externalVal)))),tan(externalVal))))),sin(externalVal))),externalVal))+((x*cos(x))+max(min(sin(externalVal),(cos(y)*x)),x)))),x),min(tan(externalVal),y)))))-tan((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(audio(x,externalVal),(max((externalVal+sin(y)),(tan(x)+(cos(y)-y)))+tan(externalVal)))",
            "b": "max(externalVal,max(externalVal,(audio(externalVal,cos(y))-min(audio(max(y,audio(y,(pow(y,noise(y,pow(externalVal,x)))*sin(externalVal)))),externalVal),max(externalVal,x)))))",
            "g": "min(((x+tan(cos(sin(noise(x,externalVal)))))-(x/mod(x,noise(tan(x),x)))),(max(y,(mod((externalVal+x),y)*sin(x)))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,tan(y)),(audio(y,audio(y,tan(externalVal)))-(x+y)))",
            "b": "max(y,(pow(y,min(y,tan(audio(tan(y),externalVal))))/tan(audio(tan(y),y))))",
            "g": "noise(sin((y*min(sin((min(tan(y),y)*x)),externalVal))),(noise(externalVal,(pow(min(y,audio(pow(x,y),pow(sin(y),externalVal))),y)-(x+mod(mod(cos(x),x),max(tan(externalVal),y)))))-tan((pow(x,externalVal)*y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal*mod(externalVal,cos(noise(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,(pow(externalVal,min(y,audio(externalVal,x)))/tan(audio(max(y,mod(y,mod(y,y))),externalVal))))",
            "g": "noise(((x*max(tan((noise(x,externalVal)-x)),externalVal))+tan(x)),(max(y,(audio((y+y),x)*(x/mod(min((externalVal+(min(sin(x),min(mod(min(min(externalVal,externalVal),y),noise(pow(min(max(externalVal,mod((cos(externalVal)/min(tan(sin(noise(x,x))),noise(y,y))),x)),audio((noise(audio(x,max(sin(externalVal),x)),mod(x,audio(max(pow(x,((y+noise(x,(noise(y,max(externalVal,sin(max(externalVal,externalVal))))+externalVal)))/(externalVal-x))),max((y-y),tan(noise(y,y)))),externalVal)))*externalVal),cos((x/audio(externalVal,externalVal))))),sin(x)),(externalVal/y))),externalVal))+((x+(x/externalVal))/tan(min(tan(externalVal),(max(y,x)/x)))))),y),(mod(x,x)*y)))))-max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin(sin(sin(y))),(audio(y,min(y,y))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(sin((pow(x,externalVal)-x))))-(x*min(x,min(min(y,(y*externalVal)),x)))),(max(y,(pow((y-y),x)/(x/audio(max((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((sin(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(y),x)),mod(x,audio(max(audio(x,((y+noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),min((y-y),tan(noise(x,y)))),externalVal)))*y),sin((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+sin(x))-max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),x),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        }
      ],
      "timestamp": "19h:11m:35s"
    },
    {
      "generation": 32,
      "ascendantID": "umw7g55i-amwf-uvij-db9q-8lejowjpndd5",
      "id": "bobgqf0x-mr49-0ho1-1eax-xyl05f8gdws7",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,cos(y)),(audio(y,audio(externalVal,max(y,externalVal)))-(x+y)))",
            "b": "max(y,(pow(y,noise(y,tan(audio(tan(y),externalVal))))/tan(audio(tan(y),y))))",
            "g": "noise(sin((y+min(sin((max(tan(y),externalVal)+x)),externalVal))),(noise(externalVal,(pow(min(y,audio(mod(x,y),audio(sin(y),externalVal))),y)*(x+mod(noise(cos(x),y),min(tan(externalVal),y)))))-max((pow(x,externalVal)*y),cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,tan(y)),(audio(y,audio(y,tan(externalVal)))-(x+y)))",
            "b": "max(y,(pow(y,min(y,tan(audio(tan(y),y))))/tan(pow(tan(y),y))))",
            "g": "mod(sin((y*min(cos((min(tan(y),y)*x)),externalVal))),(noise(externalVal,(audio(max(y,audio(pow(x,y),audio((y/x),y))),y)+(x+mod(pow(tan(x),x),tan(tan(externalVal))))))-tan((pow(x,externalVal)*y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal*mod(externalVal,(pow(noise(externalVal,y),x)/y)))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)*x))))-(x/min(y,mod(min(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(max((externalVal+(tan(cos(x))-((x-(x/externalVal))*max(min(max(externalVal,audio(y,x)),(tan(y)/x)),y)))),y),(pow(x,x)/y)))))+min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin(sin(sin(y))),(audio(y,min(y,y))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(sin((pow(x,externalVal)-x))))*(x*min(y,min(min(y,(y*externalVal)),x)))),(min(y,(pow((y-y),x)/(x*audio(max((externalVal-(min(cos(x),max(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,min(((externalVal/min(x,noise(externalVal,((pow(x,cos(externalVal))/externalVal)-sin(audio(externalVal,externalVal))))))*min(cos(min(mod(x,x),x)),min(y,y))),x)),audio((min(audio(x,min(sin(y),x)),mod(x,audio(max(audio(x,((y+noise(x,(noise(y,max(externalVal,tan(cos(externalVal))))+externalVal)))*(externalVal+y))),min((y-y),tan(min(y,y)))),externalVal)))*y),sin((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))-((x+sin(x))-max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),x),(pow(x,x)*y)))))+max(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,tan(y)),(audio(y,audio(y,tan(externalVal)))*(x+y)))",
            "b": "max(y,(pow(y,min(y,cos(audio(tan(y),externalVal))))*cos(audio(tan(y),y))))",
            "g": "noise(sin((y/max(cos((min(tan(y),y)-x)),y))),(noise(externalVal,(pow(min(y,audio(pow(x,y),audio(sin(y),y))),y)-(x+mod(mod(cos(x),x),max(cos(externalVal),y)))))-tan((pow(x,externalVal)/y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin((externalVal*mod(externalVal,sin(pow(max(y,y),x))))),(audio(y,mod(y,externalVal))*max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "min(((x+tan(cos((noise(x,externalVal)-x))))-sin(x)),(max(y,(audio((y*x),x)*(x*audio(min((externalVal+(min(cos(x),min(pow(mod(tan(externalVal),y),noise(audio(min(min(y,mod((tan(externalVal)*noise(cos(max(noise(x,x),x)),min(y,y))),x)),audio((min(audio(x,min((externalVal/x),x)),mod(x,audio(min(pow(x,((y+noise(x,(min(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),cos(noise(y,y)))),externalVal)))*externalVal),sin((x*audio(externalVal,externalVal))))),sin(x)),cos(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,(mod(min(externalVal,y),x)*y)))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x-tan(tan((pow(sin(externalVal),y)*x))))+(x/min(y,mod(min(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)/(x/audio(max((externalVal-(tan(cos(x))+((x-sin(x))*max(min(max(externalVal,audio(externalVal,x)),(tan(y)/x)),y)))),y),(pow(x,x)/y)))))+min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,tan(externalVal)),(audio(y,audio(y,tan(externalVal)))-(x+y)))",
            "b": "tan(y)",
            "g": "mod(sin((y*min(sin((min(cos(y),y)*x)),externalVal))),(noise(externalVal,(pow(min(y,audio(pow(x,y),audio(cos(y),y))),y)-(x+mod(mod(sin(x),x),max(tan(externalVal),y)))))+tan((pow(x,externalVal)*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-noise(externalVal,sin(pow(tan(y),x))))),(audio(y,mod(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+max(cos((noise(x,externalVal)-x)),y))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)-(x/audio(max((externalVal+(min(cos(x),min(mod(mod(tan(externalVal),y),noise(mod(min(max(y,mod((cos(externalVal)*min(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(audio(x,((y*mod(x,(noise(y,tan(externalVal))+externalVal)))/(externalVal-x))),max((y-y),tan(noise(x,y)))),externalVal)))*y),cos((x*pow(externalVal,y))))),sin(x)),sin(externalVal))),externalVal))+((x+(x*externalVal))*max(noise(max(externalVal,audio(y,x)),(tan(y)/x)),y)))),x),(pow(x,x)*y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin(cos(sin(y))),(audio(y,noise(((externalVal+audio(externalVal,(pow(min(y,y),x)*y)))/(min(x,(x*(mod(cos(tan(y)),audio(x,externalVal))/tan(x))))-((x-y)+externalVal))),(audio(y,min(y,externalVal))/tan(externalVal))))*cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(cos((mod(x,externalVal)-x))))-(x*min(x,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y+y),x)/(x*audio(min((externalVal+(max(tan(x),min(mod(noise(max(externalVal,externalVal),y),mod(pow(min(tan(y),audio((noise(audio(x,noise(cos(y),x)),mod(x,audio(tan(audio(x,((y+noise(x,(noise(y,max(externalVal,tan(cos(externalVal))))+externalVal)))/(externalVal+x)))),externalVal)))*y),sin((x-audio(externalVal,externalVal))))),cos(x)),(externalVal/y))),externalVal))+((x+sin(x))*max(min(min(externalVal,audio(y,y)),(tan(y)/x)),y)))),x),(audio(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(cos((y/mod(externalVal,tan(noise(tan(externalVal),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,(audio(externalVal,min(y,audio(externalVal,x)))/tan(pow(tan(y),externalVal))))",
            "g": "noise(((y*max(tan((min(x,externalVal)-x)),externalVal))+tan(x)),(tan(y)-max(externalVal,x)))"
          }
        }
      ],
      "timestamp": "19h:11m:53s"
    },
    {
      "generation": 33,
      "ascendantID": "bobgqf0x-mr49-0ho1-1eax-xyl05f8gdws7",
      "id": "mr7xmry9-knq9-an4x-ac7c-sku3nh7kybee",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(tan((noise(x,externalVal)-x))))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(min((externalVal+(min(cos(x),min(mod(mod(max(externalVal,externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*noise(cos(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),mod(x,audio(max(pow(x,((y-noise(x,(noise(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),tan(noise(y,y)))),externalVal)))*y),cos((x*audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)*y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(cos((y*mod(externalVal,tan(noise(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,(audio(externalVal,min(y,audio(externalVal,x)))/tan(pow(max(y,mod(y,mod(y,y))),externalVal))))",
            "g": "noise(((x/max(tan((mod(x,externalVal)+x)),externalVal))+tan(x)),(tan(y)-max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(cos((externalVal*audio(externalVal,sin(mod(min(y,y),x))))),(audio(y,mod(y,externalVal))*max(externalVal,x)))",
            "b": "max(externalVal,(audio(externalVal,min(y,audio(externalVal,x)))/tan(pow(tan(y),externalVal))))",
            "g": "min(((x+tan(cos((noise(x,externalVal)-x))))-sin(x)),(min(y,(audio((y-x),x)*(x*audio(min((y-(min(cos(x),min(pow(noise(tan(externalVal),y),noise(audio(min(min(y,mod((tan(externalVal)*noise(cos(max(min(x,x),x)),min(y,y))),x)),audio((min(audio(x,min((externalVal/x),x)),mod(x,audio(min(audio(x,((y+noise(x,(min(y,max(externalVal,cos(tan(externalVal))))+externalVal)))/(externalVal+x))),max((y-y),sin(noise(y,y)))),externalVal)))*externalVal),sin((x*pow(externalVal,externalVal))))),(x/(min(externalVal,(cos(y)-y))+mod(noise(externalVal,tan(mod(max(externalVal,x),max(externalVal,x)))),(externalVal/y))))),cos(externalVal))),externalVal))+((x+sin(x))*max(min(max(externalVal,audio(y,y)),(max(y,x)/x)),y)))),y),(pow(x,x)-y)))))+tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,sin(y)),(audio(y,audio(externalVal,min(y,externalVal)))-(x+y)))",
            "b": "max(y,(audio(y,noise(y,tan(audio(tan(y),externalVal))))/tan(pow(tan(y),y))))",
            "g": "noise(((y+min(sin((max(tan(y),externalVal)+x)),externalVal))/(x+min(x,sin(max(y,cos(x)))))),(noise(externalVal,(pow(min(y,audio(noise(x,y),audio(sin(y),externalVal))),x)-(x+mod(noise(sin(x),y),min(cos(externalVal),y)))))-max((pow(x,externalVal)*y),cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,tan(y)),max(x,y))",
            "b": "max(y,(pow(y,max(y,tan(audio(tan(y),y))))/tan(pow(tan(y),y))))",
            "g": "mod(sin((y*noise(cos((min(tan(y),y)*x)),y))),(noise(externalVal,(audio(max(y,audio(pow(x,y),audio((y/x),y))),y)+(x+mod(pow(tan(x),x),max(cos(externalVal),y)))))-max((pow(x,externalVal)*y),cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal*noise(externalVal,sin(pow(tan(externalVal),x))))),(audio(y,mod(y,externalVal))*tan(externalVal)))",
            "b": "max(externalVal,(audio(externalVal,max(y,audio(externalVal,x)))*tan(audio(tan(y),externalVal))))",
            "g": "mod(((x-max(tan((noise(x,externalVal)+x)),y))-(x/min(y,min(min(y,(y*externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(max((externalVal+(min(cos(x),max(noise(pow(cos(externalVal),y),noise(pow(min(max(y,mod((cos(externalVal)*max(cos(tan(mod(x,x))),max(y,y))),x)),audio((noise(audio(x,min(sin(externalVal),x)),pow(x,audio(min(pow(x,sin((y+mod(x,(noise(y,tan(externalVal))+externalVal))))),max((y-y),tan(min(x,y)))),externalVal)))*y),sin((x*pow(externalVal,y))))),sin(x)),(externalVal/externalVal))),externalVal))+((x-(x*externalVal))*max(noise(max(externalVal,audio(y,x)),(tan(y)/x)),y)))),x),(mod(x,x)*y)))))+max(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal/pow(externalVal,(pow(noise(externalVal,y),x)/y)))),(audio(y,noise(y,externalVal))/max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "pow(((x-tan(tan((noise(x,externalVal)*x))))-(x/min(y,mod(min(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(max((externalVal+(tan(cos(x))*((x-(x*externalVal))*max(sin(externalVal),y)))),y),sin(pow(x,x))))))+min(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,max(externalVal,externalVal)),(audio(y,pow(y,max(y,externalVal)))-(x+y)))",
            "b": "cos(y)",
            "g": "mod(sin((y*min(sin((min(cos(y),y)*x)),externalVal))),(noise(externalVal,(pow(max(y,audio(pow(x,y),audio(cos(y),y))),y)*(x+mod(mod(sin(x),x),max(tan(externalVal),y)))))+tan((pow(x,externalVal)-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin(sin(cos(y))),(audio(y,noise(y,y))*tan(externalVal)))",
            "b": "tan(externalVal)",
            "g": "mod(((x+tan(sin((pow(x,externalVal)-x))))*(x/min(y,min(min(y,(y*externalVal)),x)))),(min(y,(pow((y+y),x)/(x*pow(max((externalVal-(min(tan(x),max(mod(mod(max(externalVal,externalVal),y),noise(mod(min(max(y,min(((externalVal/max(x,(x*cos(x))))/max(sin(min(mod(x,x),x)),min(y,y))),x)),audio((min(audio(x,min(cos(y),x)),mod(x,audio(tan(audio(x,((y+noise(x,(noise(y,tan(externalVal))+externalVal)))/(externalVal-y)))),externalVal)))*y),sin((x*pow(externalVal,y))))),sin(x)),sin(externalVal))),externalVal))-((x+sin(x))-max(min(max(externalVal,audio(y,y)),(tan(y)/x)),y)))),y),(pow(x,x)-y)))))+max(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(audio(x,cos(y)),(audio(y,audio(externalVal,max(y,externalVal)))-(x+y)))",
            "b": "max(y,(audio(y,noise(y,tan(audio(tan(y),externalVal))))/tan(audio(tan(y),y))))",
            "g": "noise(((y+min(sin((max(tan(y),externalVal)-x)),externalVal))/(x+min(x,cos(tan(x))))),(noise(externalVal,(pow(max(y,audio(noise(x,y),audio(sin(y),externalVal))),y)*(x+mod(noise(cos(x),y),min(tan(externalVal),x)))))-tan((pow(x,externalVal)*y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal*noise(externalVal,pow(sin(sin((y/y))),(audio(y,min(y,y))*cos(externalVal)))))),(audio(y,min(y,externalVal))/cos(externalVal)))",
            "b": "tan(externalVal)",
            "g": "noise(((x+tan(tan((noise(x,externalVal)*x))))-(x/max(y,mod(noise(y,(y-externalVal)),x)))),(max(y,(audio((y-y),x)*(x/audio(max((externalVal-(tan(cos(x))-((x*(x*externalVal))*tan(min(max(externalVal,audio(y,x)),(tan(y)/x)))))),y),(mod(x,x)/y)))))+max(externalVal,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal-mod(externalVal,sin(pow(max(externalVal,y),x))))),(audio(y,noise(y,externalVal))*max(externalVal,x)))",
            "b": "tan(externalVal)",
            "g": "pow(((x+cos(tan((mod(x,externalVal)/x))))-cos(x)),(max(y,(audio((y-y),x)/(x/pow(max((y-(min(cos(x),max(mod(pow(tan(externalVal),y),mod(pow(noise(max(y,mod((sin(externalVal)*noise(tan(tan(mod(x,x))),min(y,y))),x)),audio((noise(audio(x,min(sin(y),x)),pow(x,audio(min(audio(x,((y-noise(x,(mod(y,max(externalVal,cos(cos(externalVal))))+externalVal)))/(externalVal+x))),min((y-y),tan(noise(y,y)))),externalVal)))*y),cos((y/audio(externalVal,externalVal))))),sin(x)),sin(externalVal))),externalVal))+((x+(x/externalVal))*tan(min(max(externalVal,audio(y,y)),sin(tan(y))))))),y),(mod(x,x)*y)))))+tan(externalVal)))"
          }
        }
      ],
      "timestamp": "19h:12m:15s"
    }
  ],
  "timestamp": "2023-11-05-19-07-57"
}
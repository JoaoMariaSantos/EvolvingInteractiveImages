{
  "id": "7jwv45gz-odv0-azv7-tvog-7qkd63yj6bul",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 0,
    "tournamentSize": 3,
    "mutationRate": 0.20000000298023224,
    "populationSize": 2
  },
  "populations": [{
    "generation": 0,
    "id": "g2r7xjue-2y9y-hv11-7l5p-lrn66kbo9bko",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "(tan((tan(x)-tan(noise(x,(((y/y)/y)/noise(x,externalVal))))))/tan(noise(noise(x,y),y)))",
          "b": "(x-y)",
          "g": "tan(y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(max(sin(min(tan(cos(tan(externalVal))),externalVal)),y)*(min(x,y)/audio(x,((max(max(min(max(externalVal,(audio(cos(x),externalVal)*mod(cos(y),externalVal))),externalVal),x),((sin(y)/x)+(externalVal/mod(x,y))))*externalVal)/audio(externalVal,y)))))",
          "b": "tan(x)",
          "g": "(noise(y,min(x,externalVal))*(pow(mod(cos(externalVal),(y/y)),audio(mod((mod(x,mod(noise(externalVal,(externalVal/(externalVal*x))),(x-max(pow(max(y,externalVal),(x*(y*(x+y)))),min(((pow(x,(y/(x/externalVal)))+noise(tan(externalVal),externalVal))*externalVal),x)))))-y),audio(y,externalVal)),sin(externalVal)))*externalVal))"
        }
      }
    ],
    "timestamp": "23h:33m:24s"
  }],
  "timestamp": "2023-11-4-23-33-22"
}
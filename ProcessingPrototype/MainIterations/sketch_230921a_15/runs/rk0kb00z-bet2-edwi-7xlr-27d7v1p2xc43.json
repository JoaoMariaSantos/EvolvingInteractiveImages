{
  "id": "rk0kb00z-bet2-edwi-7xlr-27d7v1p2xc43",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.20000000298023224,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 3,
      "ascendantID": "ca07uxso-0ec6-qvok-iqxw-r8kqxdvrnldm",
      "id": "f680tki5-m7df-ogip-z5ny-e3yl8xze0zz5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(pow(min(pow(x,sin(x)),tan(max(externalVal,(x/x)))),y))",
            "b": "sin(max(externalVal,min(((tan(x)-min(y,x))-x),y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(((x-noise(mod(max(max(y,(externalVal+min((x-y),y))),noise(x,y)),y),tan(y)))-pow(x,min(cos((x+(tan(x)+externalVal))),x)))))",
            "b": "max(mod(externalVal,max(x,cos((noise(externalVal,y)-externalVal)))),externalVal)",
            "g": "max(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(x))",
            "b": "min(cos(externalVal),max(externalVal,noise(((min(x,externalVal)+max(x,x))-x),externalVal)))",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(pow(min(pow(x,sin(x)),tan(pow(max((y+y),y),sin(externalVal)))),x))",
            "b": "sin(max(externalVal,noise(((tan(x)-max(x,x))-x),externalVal)))",
            "g": "max(x,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(min(pow(x,sin(x)),tan(min(y,sin(x)))),x))",
            "b": "sin(max(externalVal,noise(((tan(x)-min(y,x))-x),y)))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+(externalVal/x))",
            "b": "mod(min(((tan(x)*min(y,x))+x),y),x)",
            "g": "noise(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(((x-noise(mod(max(max(y,(externalVal+mod((x-y),x))),noise(x,y)),y),tan(x)))-pow(x,min(cos((x*(sin((x/x))+externalVal))),x)))))",
            "b": "max(mod(externalVal,max(x,cos(mod(externalVal,(y-x))))),externalVal)",
            "g": "max(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(((x-noise(mod(max(max(y,(externalVal+min((x-y),x))),noise(x,x)),x),tan(y)))-pow(x,min(cos((x+(tan(x)+externalVal))),x)))))",
            "b": "max(mod(externalVal,max(x,cos((noise(externalVal,y)-externalVal)))),externalVal)",
            "g": "min(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(min(audio(x,sin(x)),(x/x)),y))",
            "b": "sin(max(externalVal,min(((max(x,externalVal)-mod(externalVal,(x/x)))-x),y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((externalVal-x))",
            "b": "noise(cos(externalVal),pow(audio(x,pow(y,(y*min(y,y)))),mod(y,tan(externalVal))))",
            "g": "sin(y)"
          }
        }
      ],
      "timestamp": "23h:20m:17s"
    },
    {
      "generation": 4,
      "ascendantID": "f680tki5-m7df-ogip-z5ny-e3yl8xze0zz5",
      "id": "j81f4s71-um9t-wu9z-3y1c-v5fxbogycpph",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(pow(min(pow(x,sin(x)),tan(max(externalVal,(x/x)))),y))",
            "b": "sin(max(externalVal,min(((tan(x)-min(y,x))-x),y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(((x-noise(mod(max(max(y,(externalVal+min((x-y),y))),noise(x,y)),y),tan(y)))-pow(x,min(cos((x+(tan(x)+externalVal))),x)))))",
            "b": "max(mod(externalVal,max(x,cos((noise(externalVal,y)-externalVal)))),externalVal)",
            "g": "max(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(((x-noise(mod(max(max(y,(externalVal+min((x-y),y))),noise(x,y)),y),tan(y)))-audio(x,min(tan((x+(tan(x)+y))),x)))),x)",
            "b": "max(mod(externalVal,max(x,cos((min(y,x)-externalVal)))),externalVal)",
            "g": "max(y,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(min(max(noise(x,(externalVal+min((x-y),y))),noise(x,y)),(x/x)),y))",
            "b": "sin(max(externalVal,min(((max(x,externalVal)-mod(externalVal,noise(externalVal,y)))-x),y)))",
            "g": "max(x,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(sin(x))",
            "b": "min(cos(y),max(externalVal,noise(((min(x,externalVal)+max(x,x))-x),externalVal)))",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+(externalVal/x))",
            "b": "mod(min(((tan(x)*min(y,x))*x),y),x)",
            "g": "noise(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(((x-noise(mod(max(audio(x,tan(x)),noise(x,x)),y),tan(y)))-pow(x,min(cos((x-(tan(x)+externalVal))),x)))))",
            "b": "min(mod(externalVal,(x/x)),y)",
            "g": "min(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(min(pow(x,sin(x)),tan(min(y,sin(x)))),x))",
            "b": "sin(max(externalVal,noise(((tan(x)-min(y,x))-x),y)))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(((x-noise(mod(max(tan(y),noise(x,y)),y),tan(x)))*pow(x,min(cos((x*(sin((x/x))+externalVal))),x)))))",
            "b": "max(mod(externalVal,max(x,cos(noise(y,(y-x))))),externalVal)",
            "g": "max(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(min(pow(x,sin(x)),tan(min(y,sin(x)))),x))",
            "b": "sin(cos(externalVal))",
            "g": "cos(x)"
          }
        }
      ],
      "timestamp": "23h:20m:18s"
    },
    {
      "generation": 5,
      "ascendantID": "j81f4s71-um9t-wu9z-3y1c-v5fxbogycpph",
      "id": "rj9aj8rc-knma-oeo1-32ae-qygj27h65ns0",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(pow(min(pow(x,sin(x)),tan(max(externalVal,(x/x)))),y))",
            "b": "sin(max(externalVal,min(((tan(x)-min(y,x))-x),y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(((x-noise(mod(max(max(y,(externalVal+min((x-y),y))),noise(x,y)),y),tan(y)))-pow(x,min(cos((x+(tan(x)+externalVal))),x)))))",
            "b": "max(mod(externalVal,max(x,cos((noise(externalVal,y)-externalVal)))),externalVal)",
            "g": "max(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(((x-noise(mod(max(max(y,(externalVal+noise((x-y),x))),noise(mod(max(tan(y),noise(x,y)),y),tan(x))),y),tan(y)))-audio(x,noise(tan((x+(tan(x)+y))),x)))),x)",
            "b": "max(audio(externalVal,max(x,cos((x-x)))),externalVal)",
            "g": "max(y,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(min(noise(x,y),max(min(externalVal,sin(x)),x)),x))",
            "b": "sin(max(externalVal,noise(((max(mod(externalVal,max(x,cos(noise(y,(y-x))))),externalVal)-min(y,x))-x),y)))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(((x-mod(mod(max(max(y,(externalVal+noise((x-y),y))),noise(x,y)),x),tan(y)))-audio(x,min(cos((x+(max(x,y)+y))),x)))),x)",
            "b": "max(mod(externalVal,max(x,tan((min(y,x)-externalVal)))),externalVal)",
            "g": "max(y,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+(externalVal/x))",
            "b": "mod(min((max(x,cos((min(y,x)-externalVal)))*x),y),x)",
            "g": "noise(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(sin(x),x)",
            "b": "min(cos(y),min(externalVal,noise(((max(x,externalVal)+max(x,x))-x),externalVal)))",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(sin(x))",
            "b": "min(tan(y),min(y,mod(((min(x,externalVal)+max(x,x))-x),externalVal)))",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(((x-noise(mod(max(max(y,min(cos(((x-noise(mod(max(max(x,(externalVal+min((x*x),y))),noise(x,y)),y),tan(y)))-audio(x,min(tan((x+(min(x,externalVal)+y))),x)))),x)),noise(x,y)),y),tan(y)))-audio(x,min(tan((x+(tan(x)+y))),x)))),x)",
            "b": "min(mod(externalVal,max(x,cos((max(y,x)-externalVal)))),externalVal)",
            "g": "max(y,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(min(pow(x,sin(x)),tan(noise(y,sin(x)))),x))",
            "b": "sin(max(externalVal,noise(((max(x,externalVal)-min(y,x))-x),y)))",
            "g": "cos(x)"
          }
        }
      ],
      "timestamp": "23h:20m:18s"
    }
  ],
  "timestamp": "2023-11-4-22-49-27"
}
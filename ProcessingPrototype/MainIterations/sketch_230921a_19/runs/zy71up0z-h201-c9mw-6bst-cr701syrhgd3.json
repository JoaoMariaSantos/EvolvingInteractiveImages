{
  "id": "zy71up0z-h201-c9mw-6bst-cr701syrhgd3",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [
    {
      "generation": 0,
      "id": "isxyq27a-3tia-x0e0-lnkt-y21wa1t3uuiz",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.48759627,x)",
            "b": "min(y,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.40579677"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.8492937",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+externalVal)",
            "b": "(y+y)",
            "g": "(y+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.7060175",
            "g": "0.9777031"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.090898275",
            "b": "externalVal",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.13242245"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(x,0.27780533)",
            "b": "min(externalVal,x)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,((tan(x)/x)+x))",
            "b": "pow(externalVal,((tan(y)/x)+0.9547863))",
            "g": "pow(x,((tan(0.3722644)/0.9125669)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(mod((externalVal*x),(max(tan(cos(0.8355932)),tan((0.24805069-(max((pow((y*0.1877904),noise(pow(y,externalVal),externalVal))-tan(externalVal)),min(y,tan(max(pow(0.36706734,y),0.7677574))))/externalVal))))+0.05095625)),0.46098304)-externalVal)",
            "b": "(noise(mod((0.8195081*externalVal),(max(tan(cos(x)),tan((y-(max((pow((y*externalVal),noise(pow(externalVal,x),x))-tan(externalVal)),min(y,tan(max(pow(0.7995696,y),x))))/0.6215832))))+x)),externalVal)-externalVal)",
            "g": "(noise(mod((x*externalVal),(max(tan(cos(0.11628175)),tan((externalVal-(max((pow((externalVal*x),noise(pow(y,externalVal),x))-tan(x)),min(externalVal,tan(max(pow(y,x),externalVal))))/y))))+externalVal)),0.7534323)-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(((y-externalVal)+mod(0.43436646,(0.37933135*0.20627165))),externalVal)",
            "b": "max(((externalVal-y)+mod(externalVal,(0.667362*externalVal))),0.30116415)",
            "g": "max(((externalVal-x)+mod(y,(externalVal*0.8573611))),0.45243168)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,y)",
            "b": "max(externalVal,externalVal)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.8663354",
            "b": "externalVal",
            "g": "0.59913063"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.7026961",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "0.42090034"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,externalVal)",
            "b": "mod(0.9775746,externalVal)",
            "g": "mod(x,0.5508435)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.402344",
            "b": "0.033084393",
            "g": "0.86719966"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(tan(0.06617665))",
            "b": "tan(tan(y))",
            "g": "tan(tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "audio(externalVal,externalVal)",
            "g": "audio(y,y)"
          }
        }
      ],
      "timestamp": "23h:23m:48s"
    },
    {
      "generation": 1,
      "ascendantID": "isxyq27a-3tia-x0e0-lnkt-y21wa1t3uuiz",
      "id": "ul9mgpm1-s52k-eub4-ts14-7x9x6lmovuxv",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.30445552,x)",
            "b": "min(y,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.40579677"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.5079391",
            "b": "0.0",
            "g": "0.7995088"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9474039",
            "b": "externalVal",
            "g": "0.4284061"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(0.30445552,x),x)",
            "b": "min(min(y,externalVal),externalVal)",
            "g": "min(min(x,y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.090898275",
            "b": "externalVal",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.7026961",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.5079391",
            "b": "0.0",
            "g": "0.7995088"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.30445552,x)",
            "b": "min(y,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,externalVal)",
            "b": "pow(externalVal,externalVal)",
            "g": "pow(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+externalVal)",
            "b": "(y+y)",
            "g": "(y+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,((cos(x)/x)+x))",
            "b": "pow(externalVal,((cos(y)/x)+0.9547863))",
            "g": "pow(x,((cos(0.3722644)/0.9646855)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(mod((externalVal*x),(min(max(cos(0.8355932),externalVal),tan((0.24805069*(max((pow((y*0.0),pow(pow(y,externalVal),externalVal))-tan(externalVal)),min(y,tan(max(audio(0.36706734,y),0.4052613))))/externalVal))))+0.05095625)),0.46098304)+externalVal)",
            "b": "(noise(mod((0.9949589*externalVal),(min(max(cos(x),y),tan((y*(max((pow((y*externalVal),pow(pow(externalVal,x),x))-tan(externalVal)),min(y,tan(max(audio(0.7995696,x),x))))/0.6215832))))+x)),externalVal)+y)",
            "g": "(noise(mod((x*externalVal),(min(max(cos(0.11628175),y),tan((externalVal*(max((pow((externalVal*x),pow(pow(y,externalVal),x))-tan(x)),min(externalVal,tan(max(audio(y,x),externalVal))))/y))))+externalVal)),0.7534323)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.40579677"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.30445552,x)",
            "b": "min(y,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.7845265",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,externalVal)",
            "b": "pow(0.9775746,externalVal)",
            "g": "pow(x,0.18936881)"
          }
        }
      ],
      "timestamp": "23h:23m:51s"
    },
    {
      "generation": 2,
      "ascendantID": "ul9mgpm1-s52k-eub4-ts14-7x9x6lmovuxv",
      "id": "7py4hlkm-9stj-n3jy-1hoi-i9kx2gge6t6u",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.46067604,x)",
            "b": "min(y,externalVal)",
            "g": "min(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.45890555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.46067604,x)",
            "b": "max(y,externalVal)",
            "g": "max(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.46067604,x)",
            "b": "min(y,externalVal)",
            "g": "min(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise(0.46067604,x),x)",
            "b": "min(noise(y,externalVal),externalVal)",
            "g": "min(noise(x,externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.21234807",
            "b": "externalVal",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.46067604,x)",
            "b": "max(y,externalVal)",
            "g": "max(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.46067604,x)",
            "b": "min(y,externalVal)",
            "g": "min(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,externalVal)",
            "b": "pow(0.7845265,externalVal)",
            "g": "pow(0.0,0.18936881)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,externalVal)",
            "b": "pow(externalVal,externalVal)",
            "g": "pow(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "noise(y,externalVal)",
            "g": "noise(0.26681027,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.46067604,x)",
            "b": "min(y,externalVal)",
            "g": "min(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6343576",
            "b": "0.0",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.7229981",
            "b": "externalVal",
            "g": "0.7643612"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(noise((externalVal/0.95248276),(min(max(cos(0.47506365),externalVal),tan((0.46657422*(min((pow((y*0.0),pow(pow(x,externalVal),externalVal))+tan(externalVal)),min(y,tan(max(pow(0.5226023,y),0.4052613))))/externalVal))))+0.05095625)),0.46098304)+externalVal)",
            "b": "(noise(noise((0.9949589/externalVal),(min(max(cos(x),y),tan((y*(min((pow((y*externalVal),pow(pow(externalVal,x),x))+tan(externalVal)),min(y,tan(max(pow(0.8538401,x),x))))/0.6215832))))+x)),externalVal)+y)",
            "g": "(noise(noise((x/externalVal),(min(max(cos(0.33649144),y),tan((y*(min((pow((externalVal*x),pow(pow(y,externalVal),x))+tan(x)),min(externalVal,tan(max(pow(y,x),externalVal))))/y))))+externalVal)),0.7534323)+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.46067604,x)",
            "b": "min(y,externalVal)",
            "g": "min(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,((cos(x)/x)+x))",
            "b": "pow(externalVal,((cos(y)/x)+0.9547863))",
            "g": "pow(x,((cos(0.101744175)/0.9646855)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.45890555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6343576",
            "b": "0.0",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.7229981",
            "b": "externalVal",
            "g": "0.7643612"
          }
        }
      ],
      "timestamp": "23h:23m:57s"
    },
    {
      "generation": 3,
      "ascendantID": "7py4hlkm-9stj-n3jy-1hoi-i9kx2gge6t6u",
      "id": "l41boytq-na5c-t8el-v7kl-8s8yh1124cjf",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.06165895,x)",
            "b": "min(y,y)",
            "g": "min(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.45890555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6343576",
            "b": "0.0",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,externalVal)",
            "b": "pow(externalVal,externalVal)",
            "g": "pow(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(noise((externalVal/0.95536804),(max(tan(cos(0.29387158)),tan((0.46657422*(min((pow((externalVal/0.0),pow(pow(y,externalVal),externalVal))+cos(externalVal)),min(y,tan(max(pow(0.0,y),0.4052613))))*externalVal))))+0.0)),0.4851912)+externalVal)",
            "b": "(noise(noise((0.9949589/externalVal),(max(tan(cos(x)),tan((y*(min((pow((y/externalVal),pow(pow(externalVal,x),x))+cos(externalVal)),min(y,tan(max(pow(0.14416093,x),x))))*0.7370958))))+0.9389395)),externalVal)+y)",
            "g": "(noise(noise((x/externalVal),(max(tan(cos(0.20222655)),tan((y*(min((pow((externalVal/x),pow(pow(y,externalVal),x))+cos(x)),min(externalVal,tan(max(pow(y,x),externalVal))))*y))))+externalVal)),0.9464253)+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.06165895,x)",
            "b": "min(y,y)",
            "g": "min(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.7229981",
            "b": "externalVal",
            "g": "0.7643612"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(0.06165895,x)",
            "b": "noise(y,y)",
            "g": "noise(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.7229981",
            "b": "externalVal",
            "g": "0.7643612"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(0.7229981,((sin(x)/0.9099404)+x))",
            "b": "pow(externalVal,((sin(y)/0.80851847)+x))",
            "g": "pow(0.7643612,((sin(0.45627752)/0.97705376)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,((cos(x)/0.9099404)+x))",
            "b": "pow(externalVal,((cos(y)/0.80851847)+x))",
            "g": "pow(y,((cos(0.45627752)/0.97705376)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.06165895,x)",
            "b": "max(y,y)",
            "g": "max(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,externalVal)",
            "b": "pow(externalVal,externalVal)",
            "g": "pow(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "min(y,y)",
            "g": "min(0.0,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.45890555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "noise(y,y)",
            "g": "noise(0.0,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(0.06165895,x)",
            "b": "noise(y,y)",
            "g": "noise(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(pow(sin(externalVal),(max(min(cos(0.29387158),externalVal),tan((0.46657422*(min((pow((externalVal*0.0),pow(pow(y,externalVal),externalVal))-cos(externalVal)),noise(y,tan(max(pow(0.0,y),0.4052613))))*externalVal))))+0.0)),0.4851912)+externalVal)",
            "b": "(min(pow(sin(0.9949589),(max(min(cos(x),externalVal),tan((y*(min((pow((y*externalVal),pow(pow(externalVal,x),x))-cos(externalVal)),noise(y,tan(max(pow(0.14416093,x),x))))*0.7370958))))+0.9389395)),externalVal)+y)",
            "g": "(min(pow(sin(x),(max(min(cos(0.20222655),y),tan((y*(min((pow((externalVal*x),pow(pow(y,externalVal),x))-cos(x)),noise(externalVal,tan(max(pow(y,x),externalVal))))*y))))+externalVal)),0.9464253)+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,((tan(x)/0.9099404)-x))",
            "b": "pow(externalVal,((tan(y)/0.80851847)-x))",
            "g": "pow(y,((tan(0.45627752)/0.97705376)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.06165895,x)",
            "b": "min(y,y)",
            "g": "min(0.9406132,y)"
          }
        }
      ],
      "timestamp": "23h:23m:59s"
    },
    {
      "generation": 4,
      "ascendantID": "l41boytq-na5c-t8el-v7kl-8s8yh1124cjf",
      "id": "z1c1hwz5-tu04-c65l-xpyz-uj9phe5k6g0s",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.06165895,x)",
            "b": "min(y,y)",
            "g": "min(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.24120091"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9345298",
            "b": "externalVal",
            "g": "0.39592853"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.06165895,x)",
            "b": "max(y,y)",
            "g": "max(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(0.06165895,x)",
            "b": "noise(y,y)",
            "g": "noise(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.06165895,x)",
            "b": "max(y,y)",
            "g": "max(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "min(y,y)",
            "g": "min(0.13694999,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(0.06165895,x)",
            "b": "noise(y,y)",
            "g": "noise(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,externalVal)",
            "b": "pow(y,externalVal)",
            "g": "pow(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(y,x)",
            "b": "noise(y,y)",
            "g": "noise(0.13694999,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9345298",
            "b": "externalVal",
            "g": "0.39592853"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(0.06165895,externalVal)",
            "b": "pow(y,externalVal)",
            "g": "pow(0.9406132,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(0.9345298,((sin(x)/x)+x))",
            "b": "pow(externalVal,((sin(y)/0.91800535)+0.92920685))",
            "g": "pow(0.39592853,((sin(0.35692796)/0.84362197)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,x)",
            "b": "min(y,y)",
            "g": "min(0.13694999,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.24120091"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,((cos(x)/x)+x))",
            "b": "audio(externalVal,((cos(y)/0.91800535)+0.92920685))",
            "g": "audio(y,((cos(0.35692796)/0.84362197)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.9345298,((sin(x)/x)-x))",
            "b": "audio(externalVal,((sin(y)/0.91800535)-0.92920685))",
            "g": "audio(0.39592853,((sin(0.35692796)/0.84362197)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(audio((externalVal/x),(min(min(cos(0.52908516),externalVal),tan((0.39033014-(noise((mod((externalVal*0.0),pow(pow(y,externalVal),externalVal))-cos(externalVal)),noise(y,tan(min(pow(0.0,y),0.7019219))))*externalVal))))+0.0)),0.4851912)+externalVal)",
            "b": "(noise(audio((0.6177124/externalVal),(min(min(cos(x),externalVal),tan((y-(noise((mod((y*externalVal),pow(pow(externalVal,x),0.86687344))-cos(externalVal)),noise(externalVal,tan(min(pow(0.14416093,x),x))))*0.8590542))))+0.9389395)),externalVal)+y)",
            "g": "(noise(audio((x/externalVal),(min(min(cos(0.6657641),y),tan((externalVal-(noise((mod((y*x),pow(pow(y,externalVal),x))-cos(x)),noise(externalVal,tan(min(pow(y,x),externalVal))))*y))))+externalVal)),0.9464253)+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.24120091"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(noise((externalVal/x),(tan(tan(tan(0.52908516)))+0.0)),0.4851912)+externalVal)",
            "b": "(noise(noise((0.6177124/externalVal),(tan(tan(tan(x)))+0.9389395)),externalVal)+y)",
            "g": "(noise(noise((x/externalVal),(tan(tan(tan(0.6657641)))+externalVal)),0.9464253)+x)"
          }
        }
      ],
      "timestamp": "23h:24m:1s"
    },
    {
      "generation": 5,
      "ascendantID": "z1c1hwz5-tu04-c65l-xpyz-uj9phe5k6g0s",
      "id": "3bfjddyo-vddq-4t0p-l00b-ft6t7llzhryj",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "0.73231554"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.036133498,0.0)",
            "b": "min(y,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "0.73231554"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9345298",
            "b": "externalVal",
            "g": "0.39592853"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "0.73231554"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "0.73231554"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(0.036133498,0.0)",
            "b": "mod(y,externalVal)",
            "g": "mod(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "0.73231554"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "0.73231554"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(y,0.0),0.0)",
            "b": "noise(noise(y,externalVal),externalVal)",
            "g": "noise(noise(0.13694999,y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(0.036133498)",
            "b": "tan(y)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,0.0)",
            "b": "min(y,externalVal)",
            "g": "min(0.13694999,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,externalVal)",
            "b": "pow(externalVal,externalVal)",
            "g": "pow(y,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(noise((externalVal/x),(tan(tan(max(0.52908516,y)))+0.0)),0.4851912)+externalVal)",
            "b": "(noise(noise((0.2350505/externalVal),(tan(tan(max(x,y)))+0.9389395)),externalVal)+y)",
            "g": "(noise(noise((x/externalVal),(tan(tan(max(0.6657641,x)))+externalVal)),0.9464253)+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "0.73231554"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,0.0)",
            "b": "min(y,externalVal)",
            "g": "min(0.13694999,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "0.73231554"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.036133498,0.0)",
            "b": "min(y,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(0.036133498)",
            "b": "cos(y)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,externalVal)",
            "b": "pow(0.7556554,externalVal)",
            "g": "pow(externalVal,x)"
          }
        }
      ],
      "timestamp": "23h:24m:8s"
    },
    {
      "generation": 6,
      "ascendantID": "3bfjddyo-vddq-4t0p-l00b-ft6t7llzhryj",
      "id": "68v34zta-w1oy-zfou-brw7-8t763jc2t0hb",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.68922794,0.124154076)",
            "b": "min(externalVal,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.0,0.124154076)",
            "b": "min(y,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(0.77172345,externalVal)",
            "b": "pow(externalVal,externalVal)",
            "g": "pow(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(y,0.124154076),0.124154076)",
            "b": "mod(mod(y,externalVal),externalVal)",
            "g": "mod(mod(0.4804206,y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(0.68922794,0.124154076)",
            "b": "mod(externalVal,externalVal)",
            "g": "mod(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(0.95277274,externalVal)",
            "b": "mod(x,externalVal)",
            "g": "mod(externalVal,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(noise((externalVal/x),(tan(max(min(0.2533435,y),externalVal))+0.0)),0.4851912)+externalVal)",
            "b": "(noise(noise((0.403711/externalVal),(tan(max(min(x,x),externalVal))+0.78830516)),externalVal)+y)",
            "g": "(noise(noise((x/externalVal),(tan(max(min(0.46431756,x),y))+externalVal)),0.9464253)+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min((0.34429508*tan(0.68922794)),externalVal))",
            "b": "tan(min((y*tan(externalVal)),0.43517682))",
            "g": "tan(min((externalVal*tan(x)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.68922794,0.124154076)",
            "b": "min(externalVal,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(pow(0.0,y),0.7856748))",
            "b": "cos(min(pow(0.05694613,x),0.8369889))",
            "g": "cos(min(pow(externalVal,x),externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9345298",
            "b": "externalVal",
            "g": "0.39592853"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.68922794,0.124154076)",
            "b": "min(externalVal,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(0.68922794,0.124154076)",
            "b": "mod(externalVal,externalVal)",
            "g": "mod(x,y)"
          }
        }
      ],
      "timestamp": "23h:24m:11s"
    },
    {
      "generation": 7,
      "ascendantID": "68v34zta-w1oy-zfou-brw7-8t763jc2t0hb",
      "id": "w9qbvl09-vowe-2b9i-4564-zenbigxiwin9",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.64588225"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.8638575,0.5007641)",
            "b": "min(externalVal,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(0.9524522,0.5007641),0.5007641)",
            "b": "mod(mod(externalVal,externalVal),externalVal)",
            "g": "mod(mod(y,y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(mod(noise((externalVal/x),(0.9524522+0.0)),0.4851912)-y)",
            "b": "(mod(noise((0.4772162/externalVal),(externalVal+0.85822254)),externalVal)-y)",
            "g": "(mod(noise((0.9035641/externalVal),(y+externalVal)),0.9464253)-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,externalVal)",
            "b": "mod(x,externalVal)",
            "g": "mod(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.64588225"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.77172345,externalVal)",
            "b": "audio(externalVal,externalVal)",
            "g": "audio(x,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(0.81321365,0.5007641)",
            "b": "mod(externalVal,externalVal)",
            "g": "mod(0.7557176,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,externalVal)",
            "b": "mod(x,externalVal)",
            "g": "mod(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,externalVal)",
            "b": "pow(x,externalVal)",
            "g": "pow(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.64588225"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.81321365+y)",
            "b": "(externalVal+y)",
            "g": "(0.7557176+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(0.8638575,0.5007641)",
            "b": "mod(externalVal,externalVal)",
            "g": "mod(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.64588225"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.0,0.5007641)",
            "b": "min(y,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.64588225"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.64588225"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(y,0.5007641),0.5007641)",
            "b": "mod(mod(y,externalVal),externalVal)",
            "g": "mod(mod(0.4804206,y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.64588225"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.8638575,0.5007641)",
            "b": "min(externalVal,externalVal)",
            "g": "min(x,y)"
          }
        }
      ],
      "timestamp": "23h:24m:12s"
    },
    {
      "generation": 8,
      "ascendantID": "w9qbvl09-vowe-2b9i-4564-zenbigxiwin9",
      "id": "mtg4d22z-gkjy-qq2k-55xt-i7uahhmr6evq",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.8638575,0.9060137)",
            "b": "min(externalVal,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.8638575,0.9060137)",
            "b": "min(externalVal,externalVal)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(0.17842326,0.9060137),0.9060137)",
            "b": "mod(mod(y,externalVal),externalVal)",
            "g": "mod(mod(y,y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.17842326,0.9060137)",
            "b": "min(y,externalVal)",
            "g": "min(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,externalVal)",
            "b": "mod(x,externalVal)",
            "g": "mod(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(0.737795,0.9060137)",
            "b": "mod(externalVal,externalVal)",
            "g": "mod(0.94576335,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(mod(noise(0.737795,(x+0.0)),0.4851912)-y)",
            "b": "(mod(noise(externalVal,(externalVal+0.85822254)),externalVal)-y)",
            "g": "(mod(noise(0.94576335,(externalVal+externalVal)),0.9464253)-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(0.8638575,0.9060137)",
            "b": "noise(externalVal,externalVal)",
            "g": "noise(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(x,0.9060137),0.9060137)",
            "b": "mod(noise(externalVal,externalVal),externalVal)",
            "g": "mod(noise(externalVal,y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.77172345,externalVal)",
            "b": "audio(externalVal,externalVal)",
            "g": "audio(x,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.0"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.8638575,0.9060137)",
            "b": "min(externalVal,externalVal)",
            "g": "min(x,y)"
          }
        }
      ],
      "timestamp": "23h:24m:13s"
    }
  ],
  "timestamp": "2024-03-18-23-23-45"
}
{
  "id": "mana750u-6rgf-9cac-9fnz-k0ttm96da2vh",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 1,
    "tournamentSize": 3,
    "mutationRate": 0.5,
    "populationSize": 20
  },
  "populations": [
    {
      "generation": 0,
      "id": "guzuccf7-kbxf-4rky-s8rw-tns05q1wh83r",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.4067924"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.598186",
            "g": "0.3669579"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(tan(cos(x)),0.99775076)",
            "b": "mod(tan(cos(y)),externalVal)",
            "g": "mod(tan(cos(y)),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "externalVal",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,x)",
            "b": "max(externalVal,y)",
            "g": "max(externalVal,0.27644897)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.06707358",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,cos(sin((x+y))))",
            "b": "audio(x,cos(sin((0.9388869+0.29391408))))",
            "g": "audio(y,cos(sin((0.66381955+0.9354415))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.74499726",
            "b": "0.7402611",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(externalVal,0.819839),min(0.0031621456,x))",
            "b": "noise(min(x,0.77127504),min(externalVal,0.060626507))",
            "g": "noise(min(x,0.19732642),min(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "0.5904703",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod((externalVal+x),min(sin(y),externalVal)),max(audio(y,cos(y)),(sin(0.7427311)/pow(0.17372918,0.7595141))))",
            "b": "noise(mod((0.10766697+0.4474628),min(sin(y),0.051207066)),max(audio(0.008133888,cos(0.8793516)),(sin(y)/pow(externalVal,y))))",
            "g": "noise(mod((externalVal+x),min(sin(0.6635678),x)),max(audio(y,cos(y)),(sin(y)/pow(x,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(0.026563406,0.0027210712)",
            "b": "noise(y,y)",
            "g": "noise(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        }
      ],
      "timestamp": "0h:23m:30s"
    },
    {
      "generation": 1,
      "ascendantID": "guzuccf7-kbxf-4rky-s8rw-tns05q1wh83r",
      "id": "oavpmar0-avzo-srcj-axek-gfgzxos2dva7",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(externalVal,0.819839),min(0.0031621456,x))",
            "b": "noise(min(y,0.77127504),min(externalVal,0.060626507))",
            "g": "noise(min(x,0.19732642),min(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "externalVal",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(mod(x,y),externalVal)",
            "b": "max(mod(0.18417716,externalVal),y)",
            "g": "max(mod(0.97020435,0.5138247),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.41903964"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.6345392))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(mod((externalVal+x),min(cos(y),externalVal)),max(pow(y,cos(y)),(sin(0.7427311)/audio(0.17372918,0.7135726))))",
            "b": "min(mod((0.10766697+0.4474628),min(cos(y),0.051207066)),max(pow(0.008133888,cos(x)),(sin(y)/audio(externalVal,externalVal))))",
            "g": "min(mod((externalVal+x),min(cos(0.6635678),x)),max(pow(y,cos(y)),(sin(externalVal)/audio(x,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "externalVal",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(pow((externalVal+x),max(sin(y),externalVal)),min(audio(y,cos(y)),sin(sin(pow(tan(cos(x)),0.7171263)))))",
            "b": "noise(pow((0.10766697+0.4474628),max(sin(y),0.051207066)),min(audio(0.008133888,cos(0.8793516)),sin(sin(pow(tan(cos(y)),externalVal)))))",
            "g": "noise(pow((externalVal+x),max(sin(0.6635678),x)),min(audio(y,cos(y)),sin(sin(pow(tan(cos(y)),externalVal)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        }
      ],
      "timestamp": "0h:23m:45s"
    },
    {
      "generation": 2,
      "ascendantID": "oavpmar0-avzo-srcj-axek-gfgzxos2dva7",
      "id": "i57kopv1-eitf-yaj8-nb71-qyan0jde6htf",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(mod(x,y))",
            "b": "cos(mod(0.0,externalVal))",
            "g": "cos(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod((externalVal+x),tan(sin(y))),max(audio(y,cos(y)),(sin(mod(tan(cos(x)),0.7171263))/pow(0.24950472,0.7595141))))",
            "b": "noise(mod((0.10766697+0.4474628),tan(sin(y))),max(audio(0.39549854,cos(0.8793516)),(sin(mod(tan(cos(y)),externalVal))/pow(externalVal,y))))",
            "g": "noise(mod((externalVal+x),tan(sin(0.6635678))),max(audio(y,cos(y)),(sin(mod(tan(cos(y)),externalVal))/pow(x,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(mod((externalVal-x),min(cos(x),externalVal)),tan(pow(externalVal,cos(y))))",
            "b": "max(mod((0.10766697-0.4474628),min(cos(externalVal),0.051207066)),tan(pow(0.1901289,cos(x))))",
            "g": "max(mod((externalVal-x),min(cos(y),x)),tan(pow(y,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(externalVal,0.819839),min(0.0031621456,x))",
            "b": "noise(min(y,0.77127504),min(externalVal,0.060626507))",
            "g": "noise(min(x,0.19732642),min(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(externalVal,0.819839),max(0.0031621456,x))",
            "b": "noise(min(y,0.77127504),max(externalVal,0.060626507))",
            "g": "noise(min(x,0.19732642),max(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.41903964"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "externalVal",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(externalVal,0.819839),min(0.0031621456,x))",
            "b": "noise(min(y,0.77127504),min(externalVal,0.060626507))",
            "g": "noise(min(x,0.19732642),min(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(mod(x,y),externalVal)",
            "b": "max(mod(0.18417716,externalVal),y)",
            "g": "max(mod(0.590858,0.6345392),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "externalVal",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(x,y))",
            "b": "tan(noise(0.42488566,externalVal))",
            "g": "tan(noise(x,0.8699281))"
          }
        }
      ],
      "timestamp": "0h:23m:46s"
    },
    {
      "generation": 3,
      "ascendantID": "i57kopv1-eitf-yaj8-nb71-qyan0jde6htf",
      "id": "kpidjjsd-y8wf-vv8n-7tb1-z3ihktm5ryfw",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(externalVal,0.819839),noise(0.0031621456,x))",
            "b": "noise(min(y,0.77127504),noise(externalVal,0.060626507))",
            "g": "noise(min(x,0.19732642),noise(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise(x,y),externalVal)",
            "b": "max(noise(0.2962153,externalVal),y)",
            "g": "max(noise(x,0.8699281),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.41903964"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.7770929",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(mod(x,y))",
            "b": "cos(mod(0.42488566,externalVal))",
            "g": "cos(mod(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise((externalVal-x),min(sin(x),externalVal)),tan(mod(externalVal,tan(y))))",
            "b": "min(noise((0.10766697-0.4474628),min(sin(externalVal),0.051207066)),tan(mod(0.1901289,tan(x))))",
            "g": "min(noise((externalVal-x),min(sin(y),x)),tan(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "externalVal",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(noise(x,y))",
            "b": "cos(noise(0.07880458,externalVal))",
            "g": "cos(noise(x,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(y,y))",
            "b": "tan(noise(0.5071058,externalVal))",
            "g": "tan(noise(x,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "externalVal",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.41903964"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        }
      ],
      "timestamp": "0h:23m:53s"
    },
    {
      "generation": 4,
      "ascendantID": "kpidjjsd-y8wf-vv8n-7tb1-z3ihktm5ryfw",
      "id": "iyufexh4-q0pq-0afc-09qk-maerl7n4eh32",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.41903964"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(noise(x,y))",
            "b": "sin(noise(0.07880458,externalVal))",
            "g": "sin(noise(x,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(noise(x,y))",
            "b": "cos(noise(0.03364578,externalVal))",
            "g": "cos(noise(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(x,y))",
            "b": "cos(min(0.07880458,externalVal))",
            "g": "cos(min(x,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise(y,y),externalVal)",
            "b": "max(noise(0.5071058,externalVal),y)",
            "g": "max(noise(x,0.8699281),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(externalVal,0.85494286),min(0.0031621456,x))",
            "b": "noise(min(y,0.77127504),min(externalVal,0.31585917))",
            "g": "noise(min(x,0.19732642),min(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise((externalVal*x),noise(sin(y),externalVal)),cos(mod(externalVal,cos(y))))",
            "b": "min(noise((0.10766697*0.4474628),noise(sin(externalVal),0.24837491)),cos(mod(0.1901289,cos(x))))",
            "g": "min(noise((externalVal*x),noise(sin(y),x)),cos(mod(y,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.7770929",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(x,y))",
            "b": "tan(pow(0.18417716,externalVal))",
            "g": "tan(pow(x,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise((externalVal-x),min(sin(x),externalVal)),cos(pow(externalVal,cos(y))))",
            "b": "min(noise((0.10766697-0.089847356),min(sin(externalVal),0.051207066)),cos(pow(0.17594197,cos(x))))",
            "g": "min(noise((externalVal-x),min(sin(y),x)),cos(pow(y,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.7770929",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(noise(x,y))",
            "b": "cos(noise(0.12350297,externalVal))",
            "g": "cos(noise(x,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(mod((externalVal-x),min(sin(x),externalVal)),tan(mod(externalVal,tan(externalVal))))",
            "b": "max(mod((0.10766697-0.26763892),min(sin(externalVal),0.051207066)),tan(mod(0.1901289,tan(x))))",
            "g": "max(mod((externalVal-x),min(sin(y),x)),tan(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(noise(x,y))",
            "b": "cos(noise(0.42488566,externalVal))",
            "g": "cos(noise(x,x))"
          }
        }
      ],
      "timestamp": "0h:24m:1s"
    },
    {
      "generation": 5,
      "ascendantID": "iyufexh4-q0pq-0afc-09qk-maerl7n4eh32",
      "id": "mpv5z9xa-7tqe-jnwe-wbqx-jln7byim5bc3",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min(x,y))",
            "b": "tan(min(0.07880458,externalVal))",
            "g": "tan(min(x,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(y,y)/y)",
            "b": "(noise(0.0,externalVal)/x)",
            "g": "(noise(x,0.8699281)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.7821002",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.7770929",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(mod((externalVal-x),min((x/0.7244618),externalVal)),tan(pow(externalVal,tan(y))))",
            "b": "max(mod((0.10766697-0.26763892),min((externalVal/y),0.051207066)),tan(pow(0.1901289,tan(x))))",
            "g": "max(mod((externalVal-x),min((y/externalVal),x)),tan(pow(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.7770929)",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min(x,y))",
            "b": "sin(min(0.07880458,externalVal))",
            "g": "sin(min(x,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise(y,y),externalVal)",
            "b": "max(noise(0.7316904,externalVal),y)",
            "g": "max(noise(x,0.8699281),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(x,y))",
            "b": "tan(noise(0.03364578,externalVal))",
            "g": "tan(noise(0.7877351,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(mod((externalVal-x),min(sin(x),externalVal)),tan(mod(externalVal,tan(externalVal))))",
            "b": "min(mod((0.10766697-0.26763892),min(sin(externalVal),0.051207066)),tan(mod(0.1901289,tan(x))))",
            "g": "min(mod((externalVal-x),min(sin(y),x)),tan(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(x,y))",
            "b": "cos(min(0.07880458,externalVal))",
            "g": "cos(min(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min(externalVal,0.85494286),y)",
            "b": "mod(min(y,0.77127504),x)",
            "g": "mod(min(x,0.19732642),0.38313127)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise((externalVal-x),tan(externalVal)),sin(pow(externalVal,cos(y))))",
            "b": "min(noise((0.10766697-0.089847356),tan(x)),sin(pow(0.36041474,cos(x))))",
            "g": "min(noise((externalVal-x),tan(y)),sin(pow(y,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "y",
            "g": "x"
          }
        }
      ],
      "timestamp": "0h:24m:3s"
    },
    {
      "generation": 6,
      "ascendantID": "mpv5z9xa-7tqe-jnwe-wbqx-jln7byim5bc3",
      "id": "5p4lf9fl-gub7-iffo-ojh4-54g42kapc7r5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise(x,y),externalVal)",
            "b": "max(noise(0.7316904,externalVal),y)",
            "g": "max(noise(x,0.8699281),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise((externalVal-x),tan(externalVal)),sin(noise(externalVal,cos(y))))",
            "b": "min(noise((0.10766697-0.089847356),tan(x)),sin(noise(0.36041474,cos(x))))",
            "g": "min(noise((externalVal-x),tan(y)),sin(noise(y,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,externalVal)",
            "b": "max(x,y)",
            "g": "max(externalVal,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(y,y))",
            "b": "tan(noise(0.07880458,externalVal))",
            "g": "tan(noise(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "0.12951411",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(pow((externalVal-x),min(sin(x),externalVal)),cos(mod(externalVal,tan(externalVal))))",
            "b": "min(pow((0.10766697-0.1959483),min(sin(externalVal),0.051207066)),cos(mod(0.1901289,tan(x))))",
            "g": "min(pow((externalVal-x),min(sin(y),x)),cos(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(pow((externalVal-x),min(externalVal,externalVal)),y)",
            "b": "min(pow((0.10766697-0.089847356),min(x,x)),y)",
            "g": "min(pow((externalVal-x),min(y,0.111791015)),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.33389306)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(externalVal/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(externalVal,0.85494286),y)",
            "b": "pow(min(y,0.77127504),x)",
            "g": "pow(min(x,0.19732642),0.5707166)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(mod(x,y))",
            "b": "cos(mod(0.18417716,externalVal))",
            "g": "cos(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min(x,y))",
            "b": "sin(min(0.07880458,externalVal))",
            "g": "sin(min(x,0.8699281))"
          }
        }
      ],
      "timestamp": "0h:24m:5s"
    },
    {
      "generation": 7,
      "ascendantID": "5p4lf9fl-gub7-iffo-ojh4-54g42kapc7r5",
      "id": "oj9evkk7-mg1e-j091-as1z-4td7p62lwae9",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.33389306)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.21508488)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(x,y)/externalVal)",
            "b": "(min(0.07880458,externalVal)/x)",
            "g": "(min(x,0.8699281)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(pow((externalVal-x),min(sin(x),externalVal)),tan(mod(externalVal,min(externalVal,externalVal))))",
            "b": "min(pow((0.10766697-0.1959483),min(sin(externalVal),0.051207066)),tan(mod(0.1901289,min(x,x))))",
            "g": "min(pow((externalVal-x),min(sin(y),x)),tan(mod(y,min(y,0.47215208))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "0.12951411",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.0)",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(pow((externalVal-x),min((externalVal-x),externalVal)),y)",
            "b": "min(pow((0.10766697-0.089847356),min((0.4842761-0.1959483),x)),y)",
            "g": "min(pow((externalVal-x),min((externalVal-x),0.4509773)),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.5296563",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(y,y))",
            "b": "tan(noise(0.07880458,externalVal))",
            "g": "tan(noise(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,externalVal)",
            "b": "max(0.12951411,y)",
            "g": "max(externalVal,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(mod(x,y),y)",
            "b": "max(mod(0.52796614,externalVal),y)",
            "g": "max(mod(0.97020435,0.8699281),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((externalVal-x),tan(externalVal)),sin(noise(y,cos(y))))",
            "b": "noise(noise((0.10766697-0.089847356),tan(x)),sin(noise(0.36041474,cos(x))))",
            "g": "noise(noise((externalVal-x),tan(y)),sin(noise(y,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise(x,y),externalVal)",
            "b": "max(noise(0.7316904,externalVal),y)",
            "g": "max(noise(x,0.8699281),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(pow((externalVal-x),min(sin(x),externalVal)),cos(mod(externalVal,tan(externalVal))))",
            "b": "min(pow((0.24119344-0.1959483),min(sin(externalVal),0.0)),cos(mod(0.1901289,tan(x))))",
            "g": "min(pow((externalVal-x),min(sin(y),x)),cos(mod(y,tan(y))))"
          }
        }
      ],
      "timestamp": "0h:24m:6s"
    },
    {
      "generation": 8,
      "ascendantID": "oj9evkk7-mg1e-j091-as1z-4td7p62lwae9",
      "id": "2dn0nb2i-z000-0ybm-vexr-9p7q6m78k6j3",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,externalVal))",
            "g": "tan(mod(0.97020435,0.8699281))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),sin(noise(y,tan(y))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),tan(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.63076675",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(mod((externalVal+x),max(cos(y),externalVal)),max(mod(externalVal,min(externalVal,externalVal)),y))",
            "b": "min(mod((0.10766697+0.12424612),max(cos(externalVal),0.051207066)),max(mod(0.1901289,min(x,x)),0.2865699))",
            "g": "min(mod((externalVal+x),max(cos(y),x)),max(mod(y,min(y,0.47215208)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow((externalVal+x),noise((x/0.88009095),externalVal)),cos(mod(externalVal,tan(externalVal))))",
            "b": "max(pow((0.24119344+0.5192013),noise((externalVal/y),0.0)),cos(mod(0.1901289,tan(x))))",
            "g": "max(pow((externalVal+x),noise((y/externalVal),x)),cos(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.33389306)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.013116032",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(audio((externalVal-x),min((x/0.7244618),externalVal)),cos(mod(externalVal,max(y,externalVal))))",
            "b": "min(audio((0.21254829-0.5720087),min((externalVal/y),0.051207066)),cos(mod(0.05655989,max(0.77423483,x))))",
            "g": "min(audio((externalVal-x),min((y/externalVal),x)),cos(mod(y,max(y,0.54052615))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.38109696)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(mod(x,y),externalVal)",
            "b": "max(mod(0.18417716,externalVal),y)",
            "g": "max(mod(0.97020435,0.8699281),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow((externalVal+x),min(sin(x),externalVal)),sin(mod(externalVal,max(externalVal,externalVal))))",
            "b": "max(pow((0.24119344+0.24314311),min(sin(externalVal),0.0)),sin(mod(0.1901289,max(x,x))))",
            "g": "max(pow((externalVal+x),min(sin(externalVal),x)),sin(mod(y,max(y,0.47215208))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(pow((externalVal-x),noise(sin(x),externalVal)),cos(mod(externalVal,min(externalVal,externalVal))))",
            "b": "min(pow((0.0-0.1959483),noise(sin(externalVal),0.0)),cos(mod(0.1901289,min(x,x))))",
            "g": "min(pow((externalVal-x),noise(sin(y),x)),cos(mod(y,min(y,0.47215208))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(y,y)",
            "g": "max(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.0)",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        }
      ],
      "timestamp": "0h:24m:8s"
    },
    {
      "generation": 9,
      "ascendantID": "2dn0nb2i-z000-0ybm-vexr-9p7q6m78k6j3",
      "id": "fg3l4w9n-dfcm-jlwu-owrr-p8btokezhc1l",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),sin(noise(y,tan(y))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),tan(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow((externalVal+x),noise((x/0.88009095),externalVal)),cos(mod(externalVal,cos(externalVal))))",
            "b": "max(pow((0.026466802+0.5192013),noise((externalVal/y),0.0)),cos(mod(0.0,cos(x))))",
            "g": "max(pow((externalVal+x),noise((externalVal/externalVal),x)),cos(mod(y,cos(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.28055897)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal*y),tan(externalVal)),sin(noise(y,tan(y))))",
            "b": "mod(min((0.16515034*0.4775302),tan(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal*x),tan(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.38109696)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.0)",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,externalVal)",
            "b": "max(0.16927055,y)",
            "g": "max(externalVal,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.3559084",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(audio((externalVal-x),min((x/x),externalVal)),cos(mod(externalVal,max(y,externalVal))))",
            "b": "min(audio((0.0-0.5720087),min((externalVal/y),0.051207066)),cos(mod(0.05655989,max(0.77423483,x))))",
            "g": "min(audio((externalVal-x),min((y/externalVal),x)),cos(mod(y,max(y,0.54052615))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal-x),tan(externalVal)),sin(mod(y,max(y,externalVal))))",
            "b": "mod(max((0.16515034-0.4455899),tan(x)),sin(mod(0.36041474,max(x,0.9646473))))",
            "g": "mod(max((externalVal-x),tan(y)),sin(mod(y,max(y,0.48402464))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.013116032",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow((y+x),noise((x/0.88009095),externalVal)),cos(mod(y,tan(externalVal))))",
            "b": "max(pow((externalVal+0.5192013),noise((externalVal/y),0.0)),cos(mod(0.20610923,tan(x))))",
            "g": "max(pow((0.8699281+x),noise((y/externalVal),x)),cos(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*y)",
            "b": "(y*x)",
            "g": "(y*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,0.013116032))",
            "g": "tan(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.013116032",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(mod(x,y),externalVal)",
            "b": "max(mod(0.18417716,externalVal),y)",
            "g": "max(mod(0.97020435,0.8699281),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.013116032",
            "g": "externalVal"
          }
        }
      ],
      "timestamp": "0h:24m:15s"
    },
    {
      "generation": 10,
      "ascendantID": "fg3l4w9n-dfcm-jlwu-owrr-p8btokezhc1l",
      "id": "8t26885z-85kf-7irw-2jf5-fg877y6pf783",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),sin(noise(y,tan(y))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),tan(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*y)",
            "b": "(0.36041474*x)",
            "g": "(y*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,externalVal)",
            "b": "max(0.16927055,y)",
            "g": "max(externalVal,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(x,y))",
            "b": "tan(noise(0.15378696,0.013116032))",
            "g": "tan(noise(x,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(mod(x,y),externalVal)",
            "b": "max(mod(0.18417716,0.013116032),x)",
            "g": "max(mod(0.97020435,externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((externalVal-x),tan(externalVal)),sin(noise(y,tan(y))))",
            "b": "mod(noise((0.16515034-0.4455899),tan(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(noise((externalVal-x),tan(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,externalVal)",
            "b": "max(0.3353684,y)",
            "g": "max(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(max((externalVal-x),tan(externalVal)),sin(noise(y,min(y,externalVal))))",
            "b": "noise(max((0.16515034-0.4455899),tan(x)),sin(noise(0.36041474,min(x,0.9646473))))",
            "g": "noise(max((externalVal-x),tan(y)),sin(noise(y,min(y,0.48402464))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(min(y,y))",
            "b": "tan(min(0.0,x))",
            "g": "tan(min(externalVal,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(noise((x*0.88009095),y))",
            "b": "cos(noise((externalVal*y),0.013116032))",
            "g": "cos(noise((externalVal*externalVal),externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal-x),max(externalVal,externalVal)),sin(mod(y,min(y,externalVal))))",
            "b": "mod(max((0.16515034-0.78973615),max(x,x)),sin(mod(0.5527384,min(x,0.9646473))))",
            "g": "mod(max((externalVal-y),max(y,0.47215208)),sin(mod(y,min(y,0.48402464))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(pow((y+x),noise((x/0.88009095),externalVal)),cos(mod(y,tan(externalVal))))",
            "b": "min(pow((externalVal+0.5192013),noise((externalVal/y),0.0)),cos(mod(0.0,tan(0.9210194))))",
            "g": "min(pow((0.8699281+x),noise((y/externalVal),x)),cos(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),tan(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.0)",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(externalVal/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,0.013116032))",
            "g": "tan(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        }
      ],
      "timestamp": "0h:24m:17s"
    },
    {
      "generation": 11,
      "ascendantID": "8t26885z-85kf-7irw-2jf5-fg877y6pf783",
      "id": "2fv0hbtk-1ki6-907c-32n7-5iavcd3e3nt4",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),tan(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(max((externalVal-x),max(externalVal,externalVal)),sin(noise(y,min(y,externalVal))))",
            "b": "noise(max((0.16515034-0.4455899),max(x,x)),sin(noise(0.36041474,min(x,0.9646473))))",
            "g": "noise(max((externalVal-x),max(y,0.47215208)),sin(noise(y,min(y,0.48826116))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,0.013116032))",
            "g": "tan(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(mod(x,y))",
            "b": "cos(mod(0.18417716,0.0))",
            "g": "cos(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((y/y),externalVal)",
            "b": "max((externalVal/x),y)",
            "g": "max((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.5527384)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(externalVal/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,0.013116032))",
            "g": "tan(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,sin(noise(y,min(y,externalVal))))",
            "b": "mod(0.0,sin(noise(0.5527384,min(x,0.9646473))))",
            "g": "mod(y,sin(noise(y,min(y,0.48402464))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.5530888,0.013116032))",
            "g": "tan(mod(0.97020435,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(tan((externalVal*x)),sin(mod(y,noise(y,externalVal))))",
            "b": "noise(tan((0.52585983*0.22712752)),sin(mod(0.36041474,noise(x,0.74826884))))",
            "g": "noise(tan((externalVal*x)),sin(mod(y,noise(y,0.48402464))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal-x),max(externalVal,externalVal)),cos(mod(y,min(y,externalVal))))",
            "b": "pow(max((0.16515034-0.78973615),max(x,x)),cos(mod(0.5527384,min(x,x))))",
            "g": "pow(max((externalVal-y),max(y,0.47215208)),cos(mod(y,min(y,0.6230446))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(externalVal/x)",
            "g": "(x/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),sin(mod(y,tan(y))))",
            "b": "mod(min((0.16515034-0.591431),tan(x)),sin(mod(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),tan(y)),sin(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(mod(x,y),externalVal)",
            "b": "min(mod(0.18417716,0.013116032),x)",
            "g": "min(mod(0.97020435,externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.33389306",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.0)",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        }
      ],
      "timestamp": "0h:24m:20s"
    },
    {
      "generation": 12,
      "ascendantID": "2fv0hbtk-1ki6-907c-32n7-5iavcd3e3nt4",
      "id": "2zjtrub8-3mr1-f82l-epmi-qrzd4e1q8mku",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),tan(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((y/y),externalVal)",
            "b": "max((externalVal/y),y)",
            "g": "max((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(externalVal)",
            "b": "tan(0.5140868)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal-x),max(externalVal,externalVal)),sin(noise(y,max(y,externalVal))))",
            "b": "mod(max((0.16515034-0.4455899),max(x,x)),sin(noise(0.36041474,max(x,0.90288776))))",
            "g": "mod(max((externalVal-x),max(y,0.47215208)),sin(noise(y,max(y,0.48826116))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(mod(x,y))",
            "b": "cos(mod(0.18417716,0.0))",
            "g": "cos(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(noise(x,y))",
            "b": "sin(noise(0.18417716,0.0))",
            "g": "sin(noise(0.6739151,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(tan((externalVal*x)),cos(mod(y,noise(y,externalVal))))",
            "b": "noise(tan((0.52585983*0.22712752)),cos(mod(0.36041474,noise(x,0.74826884))))",
            "g": "noise(tan((externalVal*x)),cos(mod(y,noise(y,0.48402464))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((y/y),y)",
            "b": "max((externalVal/x),y)",
            "g": "max((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*y)",
            "b": "(externalVal*y)",
            "g": "(y*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(sin(y),externalVal)",
            "b": "max(sin(externalVal),y)",
            "g": "max(sin(y),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((y/y),externalVal)",
            "b": "max((externalVal/x),y)",
            "g": "max((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,(noise(y,min(y,externalVal))/(sin(0.51837796)*y)))",
            "b": "pow(0.29828408,(noise(0.5909763,min(x,0.9646473))/(sin(y)*0.37996283)))",
            "g": "pow(y,(noise(y,min(y,0.48402464))/(sin(externalVal)*y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(externalVal/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((y/y),externalVal)",
            "b": "max((externalVal/x),y)",
            "g": "max((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(mod(x,y))",
            "b": "cos(mod(0.18417716,0.0))",
            "g": "cos(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.18417716,0.013116032))",
            "g": "tan(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(x,y))",
            "b": "tan(noise(0.5530888,0.41247135))",
            "g": "tan(noise(0.97020435,y))"
          }
        }
      ],
      "timestamp": "0h:24m:21s"
    },
    {
      "generation": 13,
      "ascendantID": "2zjtrub8-3mr1-f82l-epmi-qrzd4e1q8mku",
      "id": "2vngnu4b-91yz-v1d5-dubr-f3b2he84dnhn",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),tan(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((externalVal*y),tan(externalVal)),(mod(y,max(y,externalVal))/(y*mod(0.0,0.40295905))))",
            "b": "noise(min((0.16515034*0.4455899),tan(x)),(mod(0.36041474,max(x,0.81285685))/(0.013116032*mod(externalVal,externalVal))))",
            "g": "noise(min((externalVal*x),tan(y)),(mod(y,max(externalVal,0.79486734))/(externalVal*mod(0.8143167,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*y)",
            "b": "(externalVal*y)",
            "g": "(y*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(sin(y))",
            "b": "tan(sin(externalVal))",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(sin(y),externalVal)",
            "b": "max(sin(externalVal),y)",
            "g": "max(sin(y),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),(noise(y,tan(externalVal))/(y*audio(0.0,0.48590496))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),(noise(0.36041474,tan(x))/(0.0*audio(externalVal,externalVal))))",
            "g": "mod(min((externalVal-x),tan(y)),(noise(y,tan(y))/(y*audio(0.8143167,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(x,y))",
            "b": "tan(mod(0.27631736,0.013116032))",
            "g": "tan(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((externalVal-x),externalVal)",
            "b": "max((0.16515034-0.4455899),y)",
            "g": "max((externalVal-x),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(externalVal)",
            "b": "cos(0.5140868)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*y)",
            "b": "(externalVal*y)",
            "g": "(y*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(sin(y),externalVal)",
            "b": "max(sin(externalVal),y)",
            "g": "max(sin(y),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.6529468,y)",
            "b": "max(externalVal,y)",
            "g": "max(y,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,(noise(y,max(y,externalVal))/(sin(0.2265107)*y)))",
            "b": "pow(0.29828408,(noise(0.5909763,max(x,x))/(sin(y)*0.6410777)))",
            "g": "pow(y,(noise(y,max(y,0.48402464))/(sin(externalVal)*y)))"
          }
        }
      ],
      "timestamp": "0h:24m:23s"
    },
    {
      "generation": 14,
      "ascendantID": "2vngnu4b-91yz-v1d5-dubr-f3b2he84dnhn",
      "id": "lynkaeq5-lm0w-b5g4-ybzp-lyszhl07r29r",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((y/externalVal),y)",
            "b": "min((externalVal/y),y)",
            "g": "min((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(x,y))",
            "b": "tan(noise(0.43780246,0.013116032))",
            "g": "tan(noise(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal*x),cos(externalVal)),sin(mod(y,tan(externalVal))))",
            "b": "mod(min((0.16515034*0.4455899),cos(x)),sin(mod(0.36041474,tan(x))))",
            "g": "mod(min((externalVal*x),cos(y)),sin(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal-x),tan(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(max((0.16515034-0.4455899),tan(0.7979795)),sin(noise(externalVal,tan(x))))",
            "g": "mod(max((externalVal-x),tan(y)),sin(noise(x,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((externalVal+x),externalVal)",
            "b": "max((0.16515034+0.4455899),y)",
            "g": "max((externalVal+x),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "(externalVal/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*y)",
            "b": "(externalVal*y)",
            "g": "(y*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(y)/y)",
            "b": "(sin(externalVal)/x)",
            "g": "(sin(y)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((externalVal*y),max(externalVal,externalVal)),(mod(y,max(y,externalVal))/(y-mod(0.0,0.40295905))))",
            "b": "mod(noise((0.16515034*0.4455899),max(x,x)),(mod(0.36041474,max(x,0.81285685))/(0.013116032-mod(externalVal,externalVal))))",
            "g": "mod(noise((externalVal*x),max(y,0.47215208)),(mod(y,max(y,0.79486734))/(externalVal-mod(0.8143167,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(sin(externalVal),tan(externalVal)),(mod(y,max(y,externalVal))/(y*mod(0.0,0.40295905))))",
            "b": "min(min(sin(0.16515034),tan(x)),(mod(0.5931517,max(x,0.608629))/(0.013116032*mod(externalVal,externalVal))))",
            "g": "min(min(sin(externalVal),tan(y)),(mod(y,max(externalVal,0.79486734))/(externalVal*mod(0.8143167,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal*y),tan(externalVal)),cos(mod(y,tan(externalVal))))",
            "b": "mod(max((0.16515034*0.4455899),tan(x)),cos(mod(0.36041474,tan(x))))",
            "g": "mod(max((externalVal*x),tan(y)),cos(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(y)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(mod(x,y))",
            "b": "cos(mod(0.27631736,0.013116032))",
            "g": "cos(mod(0.97020435,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.26362538",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "(y/x)",
            "g": "(y/externalVal)"
          }
        }
      ],
      "timestamp": "0h:24m:26s"
    },
    {
      "generation": 15,
      "ascendantID": "lynkaeq5-lm0w-b5g4-ybzp-lyszhl07r29r",
      "id": "r7a3leno-51vf-r3gr-xceq-qocu5juwt4c8",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((externalVal/x),cos(externalVal)),cos(y))",
            "b": "noise(min((0.16515034/0.6902206),cos(x)),cos(0.14934224))",
            "g": "noise(min((externalVal/x),cos(y)),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.21693635)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*y)",
            "b": "(y*y)",
            "g": "(y*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.26362538",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(pow((x/y),externalVal),cos(externalVal)),sin(mod(y,tan(externalVal))))",
            "b": "mod(noise(pow((y/y),x),cos(x)),sin(mod(0.36041474,tan(x))))",
            "g": "mod(noise(pow((y/externalVal),y),cos(y)),sin(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(((x/y)/externalVal),y)",
            "b": "max(((y/x)/y),y)",
            "g": "max(((y/externalVal)/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(sin(externalVal),cos(externalVal)),(mod(y,tan(y))/(y/pow(0.0,0.7347846))))",
            "b": "min(min(sin(0.16515034),cos(x)),(mod(0.5931517,tan(x))/(0.0/pow(externalVal,externalVal))))",
            "g": "min(min(sin(externalVal),cos(y)),(mod(y,tan(externalVal))/(externalVal/pow(0.8143167,0.2947589))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(x/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal*y),tan(externalVal)),cos(mod(y,tan(externalVal))))",
            "b": "mod(max((0.16515034*0.4455899),tan(x)),cos(mod(0.36041474,tan(x))))",
            "g": "mod(max((externalVal*x),tan(y)),cos(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal-x),tan(externalVal)),(noise(y,cos(tan((externalVal+x))))/(y*pow(0.19394627,0.09755574))))",
            "b": "mod(max((0.16515034-0.4455899),tan(0.4977694)),(noise(externalVal,cos(tan((0.16515034+0.4455899))))/(0.06835309*pow(externalVal,externalVal))))",
            "g": "mod(max((externalVal-x),tan(y)),(noise(y,cos(tan((externalVal+x))))/(externalVal*pow(0.8143167,0.14342391))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "(externalVal/x)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((externalVal*y),tan(externalVal)),sin(mod(y,tan(y))))",
            "b": "mod(noise((0.5328268*0.51088166),tan(x)),sin(mod(0.36041474,tan(x))))",
            "g": "mod(noise((externalVal*x),tan(y)),sin(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(y)/y)",
            "b": "(sin(y)/x)",
            "g": "(sin(y)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.21693635",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(sin(externalVal),tan(externalVal)),(x*(y-noise(0.21028218,0.40295905))))",
            "b": "min(min(sin(0.0),tan(x)),(y*(0.013116032-noise(externalVal,externalVal))))",
            "g": "min(min(sin(externalVal),tan(y)),(y*(externalVal-noise(x,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(externalVal/y)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((y/externalVal),y)",
            "b": "max((externalVal/y),y)",
            "g": "max((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(y)/y)",
            "b": "(cos(externalVal)/x)",
            "g": "(cos(y)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        }
      ],
      "timestamp": "0h:24m:27s"
    },
    {
      "generation": 16,
      "ascendantID": "r7a3leno-51vf-r3gr-xceq-qocu5juwt4c8",
      "id": "4y0da4fw-qr2c-yr5j-qely-e3dbio5bk5by",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(cos((x/y)),y)",
            "b": "max(cos((y/x)),y)",
            "g": "max(cos((y/externalVal)),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(mod(sin(x),externalVal),cos(externalVal)),(mod(y,tan(externalVal))/(y+pow(0.31431088,0.29659164))))",
            "b": "pow(noise(mod(sin(y),x),cos(x)),(mod(0.36041474,tan(x))/(0.204631+pow(externalVal,externalVal))))",
            "g": "pow(noise(mod(sin(y),y),cos(y)),(mod(y,tan(y))/(externalVal+pow(0.94151795,0.60409963))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.13102713",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(x/x)",
            "g": "(externalVal/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal+x),tan(externalVal)),(noise(y,tan(cos((externalVal+x))))/(y*mod(0.19394627,0.09755574))))",
            "b": "mod(max((0.16515034+0.4455899),tan(0.4977694)),(noise(externalVal,tan(cos((0.16515034+0.4455899))))/(0.0*mod(externalVal,externalVal))))",
            "g": "mod(max((externalVal+x),tan(y)),(noise(y,tan(cos((externalVal+x))))/(externalVal*mod(0.8143167,0.14342391))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal*y),tan(externalVal)),cos(mod(y,max(externalVal,externalVal))))",
            "b": "mod(max((0.16515034*0.4455899),tan(x)),cos(mod(0.51871276,max(x,x))))",
            "g": "mod(max((externalVal*x),tan(y)),cos(mod(y,max(y,0.48744988))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(y))",
            "b": "sin(sin(externalVal))",
            "g": "sin(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.21693635)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(sin(externalVal),max(externalVal,externalVal)),(x*(y-noise(0.21028218,0.40295905))))",
            "b": "noise(min(sin(0.0),max(x,x)),(y*(0.013116032-noise(externalVal,externalVal))))",
            "g": "noise(min(sin(externalVal),max(y,0.5012235)),(y*(externalVal-noise(x,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/externalVal)",
            "b": "(externalVal/y)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min(sin(externalVal),tan(externalVal)),(y*(y*mod(0.21028218,0.40295905))))",
            "b": "max(min(sin(0.0),tan(x)),(y*(0.013116032*mod(externalVal,externalVal))))",
            "g": "max(min(sin(externalVal),tan(y)),(y*(externalVal*mod(x,0.49305582))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal-x),tan(externalVal)),(mod(tan((externalVal*y)),cos(mod(y,cos(externalVal))))/(y*audio(0.19394627,0.09755574))))",
            "b": "mod(max((0.16515034-0.4455899),tan(0.4977694)),(mod(tan((0.16515034*0.10428721)),cos(mod(0.36041474,cos(x))))/(0.06835309*audio(externalVal,externalVal))))",
            "g": "mod(max((externalVal-x),tan(y)),(mod(tan((externalVal*x)),cos(mod(y,cos(y))))/(externalVal*audio(0.8143167,0.44484976))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(sin(externalVal),cos(externalVal)),(mod(y,tan(y))*(y/pow(0.0,0.7347846))))",
            "b": "min(min(sin(0.16515034),cos(x)),(mod(0.5931517,tan(x))*(0.0/pow(externalVal,externalVal))))",
            "g": "min(min(sin(externalVal),cos(y)),(mod(y,tan(externalVal))*(externalVal/pow(0.8143167,0.2947589))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((y/externalVal),y)",
            "b": "max((externalVal/y),y)",
            "g": "max((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(sin(externalVal),tan(externalVal)),(x*(y-mod(0.21028218,0.40295905))))",
            "b": "min(min(sin(0.0),tan(x)),(y*(0.013116032-mod(externalVal,externalVal))))",
            "g": "min(min(sin(externalVal),tan(y)),(y*(externalVal-mod(x,0.5503684))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod((externalVal*y),tan(externalVal)),sin(mod(y,tan(y))))",
            "b": "pow(mod((0.5328268*0.51088166),tan(x)),sin(mod(0.36041474,tan(x))))",
            "g": "pow(mod((externalVal*x),tan(y)),sin(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((min(min(sin(externalVal),sin(externalVal)),sin(mod(y,tan(y))))/externalVal),y)",
            "b": "max((min(min(sin(0.16515034),sin(x)),sin(mod(0.5931517,tan(x))))/y),y)",
            "g": "max((min(min(sin(externalVal),sin(y)),sin(mod(y,tan(externalVal))))/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((externalVal*y),cos(externalVal)),sin(mod(y,tan(y))))",
            "b": "mod(noise((0.5328268*0.51088166),cos(x)),sin(mod(0.36041474,tan(x))))",
            "g": "mod(noise((externalVal*x),cos(y)),sin(mod(y,tan(y))))"
          }
        }
      ],
      "timestamp": "0h:24m:35s"
    },
    {
      "generation": 17,
      "ascendantID": "4y0da4fw-qr2c-yr5j-qely-e3dbio5bk5by",
      "id": "k7oh8v99-8qv1-ktn3-5su5-3i10avd9swyi",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*y)",
            "b": "(x*x)",
            "g": "(externalVal*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((externalVal*y),cos(externalVal)),sin(pow(y,cos(y))))",
            "b": "mod(noise((0.5328268*0.51088166),cos(x)),sin(pow(0.74233294,cos(x))))",
            "g": "mod(noise((externalVal*x),cos(y)),sin(pow(x,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal*y),sin(y)),(mod(y,tan(y))*(y*pow(0.0,0.40295905))))",
            "b": "mod(mod((0.5328268*0.51088166),sin(x)),(mod(0.36041474,tan(x))*(0.013116032*pow(externalVal,y))))",
            "g": "mod(mod((externalVal*x),sin(externalVal)),(mod(y,tan(y))*(externalVal*pow(0.8143167,0.5188116))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(tan((x*y)),y)",
            "b": "max(tan((y*x)),y)",
            "g": "max(tan((y*externalVal)),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise((externalVal-y),tan(externalVal)),sin(externalVal))",
            "b": "pow(noise((0.51468873-0.6604736),tan(x)),sin(x))",
            "g": "pow(noise((externalVal-x),tan(y)),sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod((externalVal*y),tan(externalVal)),sin(mod(y,tan(y))))",
            "b": "pow(mod((0.5328268*0.51088166),tan(x)),sin(mod(0.36041474,tan(x))))",
            "g": "pow(mod((externalVal*x),tan(y)),sin(mod(x,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(max(sin(externalVal),tan(externalVal)),(y/(y-noise(0.01524657,0.40295905))))",
            "b": "min(max(sin(0.0),tan(x)),(0.4102575/(0.013116032-noise(externalVal,y))))",
            "g": "min(max(sin(externalVal),tan(y)),(y/(externalVal-noise(x,0.67927444))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal*x),tan(externalVal)),sin(mod(max((externalVal*y),tan(externalVal)),cos(mod(y,cos(externalVal))))))",
            "b": "mod(max((0.16515034*0.3490321),tan(0.4977694)),sin(mod(max((0.043680668*0.10428721),tan(x)),cos(mod(0.47155216,cos(x))))))",
            "g": "mod(max((externalVal*x),tan(y)),sin(mod(max((externalVal*x),tan(y)),cos(mod(y,cos(y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/externalVal)",
            "b": "(externalVal/y)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(noise((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(noise((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((y/y))",
            "b": "sin((externalVal/y))",
            "g": "sin((y/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((y/externalVal),y)",
            "b": "max((externalVal/y),y)",
            "g": "max((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((min(min(sin(externalVal),cos(externalVal)),sin(mod(y,tan(y))))/externalVal),y)",
            "b": "max((min(min(sin(0.16515034),cos(x)),sin(mod(0.21593592,tan(x))))/y),y)",
            "g": "max((min(min(sin(externalVal),cos(y)),sin(mod(y,tan(externalVal))))/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((y/y)/externalVal)",
            "b": "((x/x)/y)",
            "g": "((externalVal/externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.13102713",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(0.21693635/y)",
            "g": "(y/externalVal)"
          }
        }
      ],
      "timestamp": "0h:24m:41s"
    },
    {
      "generation": 18,
      "ascendantID": "k7oh8v99-8qv1-ktn3-5su5-3i10avd9swyi",
      "id": "vuzxztxy-opff-vvrs-18n2-5ikhuj3zrufq",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((min(max(sin(externalVal),tan(externalVal)),(noise(externalVal,max(y,y))/(y/mod(0.0,0.7347846))))/externalVal))",
            "b": "tan((min(max(sin(0.16515034),tan(x)),(noise(0.21593592,max(x,0.9421894))/(0.0/mod(externalVal,externalVal))))/y))",
            "g": "tan((min(max(sin(externalVal),tan(y)),(noise(y,max(externalVal,0.9072342))/(externalVal/mod(0.8143167,0.63692445))))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise((externalVal-y),tan(externalVal)),(externalVal*(y*mod(0.0,0.40295905))))",
            "b": "audio(noise((0.51468873-0.6604736),tan(x)),(x*(0.0*mod(externalVal,y))))",
            "g": "audio(noise((externalVal-x),tan(y)),(y*(externalVal*mod(0.8143167,0.21881515))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(sin(min(max(sin(externalVal),cos(externalVal)),(mod(y,cos(y))/(y/pow(0.0,0.41594872))))),y)",
            "b": "max(sin(min(max(sin(0.16515034),cos(0.8856534)),(mod(0.21593592,cos(0.9392041))/(0.0/pow(externalVal,externalVal))))),y)",
            "g": "max(sin(min(max(sin(externalVal),cos(y)),(mod(y,cos(externalVal))/(externalVal/pow(0.8143167,0.90906656))))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((y/y))",
            "b": "sin((externalVal/y))",
            "g": "sin((y/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod((externalVal-y),tan(y)),sin(mod(y,y)))",
            "b": "pow(mod((0.5328268-0.51088166),tan(x)),sin(mod(0.36041474,x)))",
            "g": "pow(mod((externalVal-x),tan(externalVal)),sin(mod(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise((externalVal-y),tan(externalVal)),(externalVal/(y*mod(0.0,0.40295905))))",
            "b": "pow(noise((0.51468873-0.9858407),tan(x)),(x/(0.013116032*mod(externalVal,y))))",
            "g": "pow(noise((externalVal-x),tan(y)),(y/(externalVal*mod(0.8143167,0.21881515))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.19411507",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal*y),sin(externalVal)),(noise(y,tan(y))*(y*pow(0.0,0.40295905))))",
            "b": "mod(mod((0.5328268*0.51088166),sin(x)),(noise(0.36041474,tan(x))*(0.013116032*pow(externalVal,y))))",
            "g": "mod(mod((externalVal*x),sin(externalVal)),(noise(x,tan(y))*(externalVal*pow(0.8143167,0.5188116))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((min(min(sin(externalVal),cos(externalVal)),sin(noise(y,tan(y))))/y),y)",
            "b": "max((min(min(sin(0.49102685),cos(x)),sin(noise(0.21593592,tan(x))))/y),y)",
            "g": "max((min(min(sin(externalVal),cos(y)),sin(noise(y,tan(externalVal))))/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((min(noise((externalVal*y),cos(externalVal)),sin(mod(y,tan(y))))/externalVal),y)",
            "b": "max((min(noise((0.5251198*0.6522755),cos(x)),sin(mod(0.21593592,tan(x))))/y),y)",
            "g": "max((min(noise((externalVal*x),cos(y)),sin(mod(y,tan(externalVal))))/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(tan((x/y)))",
            "b": "tan(tan((y/y)))",
            "g": "tan(tan((y/externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.32175067",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(cos(max(min(sin(externalVal),cos(externalVal)),sin(noise(y,max(y,y))))),y)",
            "b": "max(cos(max(min(sin(0.16515034),cos(x)),sin(noise(0.21593592,max(x,x))))),y)",
            "g": "max(cos(max(min(sin(externalVal),cos(y)),sin(noise(y,max(y,0.9691572))))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal-y),tan(y)),(mod(y,tan(y))*(y*pow(0.0,0.7005261))))",
            "b": "mod(mod((0.5328268-0.57107407),tan(x)),(mod(0.14619894,tan(x))*(0.013116032*pow(externalVal,y))))",
            "g": "mod(mod((externalVal-x),tan(externalVal)),(mod(y,tan(y))*(externalVal*pow(0.8143167,0.5188116))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(0.0/y)",
            "g": "(y/externalVal)"
          }
        }
      ],
      "timestamp": "0h:24m:43s"
    },
    {
      "generation": 19,
      "ascendantID": "vuzxztxy-opff-vvrs-18n2-5ikhuj3zrufq",
      "id": "oadytuya-qswh-ok1d-d8ss-ihlxbxlnqb1e",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4523899",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((y/y))",
            "b": "cos((externalVal/y))",
            "g": "cos((y/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((min(min(sin(externalVal),cos(externalVal)),(noise(y,tan(y))/sin(y)))/y),y)",
            "b": "max((min(min(sin(0.49102685),cos(0.9871502)),(noise(0.5101719,tan(x))/sin(0.0)))/y),y)",
            "g": "max((min(min(sin(externalVal),cos(y)),(noise(y,tan(externalVal))/sin(externalVal)))/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(max(min(sin(externalVal),cos(externalVal)),cos(noise(y,max(y,y))))),y)",
            "b": "min(cos(max(min(sin(0.49808487),cos(x)),cos(noise(0.3743856,max(x,x))))),y)",
            "g": "min(cos(max(min(sin(externalVal),cos(y)),cos(noise(y,max(y,0.9691572))))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow((externalVal-y),cos(y)),cos(mod(y,y)))",
            "b": "pow(pow((0.5328268-0.51088166),cos(x)),cos(mod(0.6321502,x)))",
            "g": "pow(pow((externalVal-x),cos(externalVal)),cos(mod(y,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((y/y))",
            "b": "sin((externalVal/y))",
            "g": "sin((y/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((x/y),y)",
            "b": "max((0.19411507/y),y)",
            "g": "max((y/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.27990493",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise((externalVal-y),tan(externalVal)),(y/(y/mod(0.0,0.40295905))))",
            "b": "pow(noise((0.559966-0.9858407),tan(x)),(x/(0.0/mod(externalVal,y))))",
            "g": "pow(noise((externalVal-x),tan(y)),(y/(externalVal/mod(0.5951727,0.21881515))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod((externalVal+y),cos(y)),(mod(y,y)/(y-audio(0.0,x))))",
            "b": "pow(mod((0.6067755+0.8056139),cos(x)),(mod(0.057466835,x)/(0.0-audio(externalVal,externalVal))))",
            "g": "pow(mod((externalVal+x),cos(externalVal)),(mod(x,externalVal)/(y-audio(0.8143167,0.5188116))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((min(max(sin(externalVal),tan(externalVal)),sin(noise(externalVal,max(y,y))))/externalVal))",
            "b": "tan((min(max(sin(0.30567774),tan(0.9617003)),sin(noise(0.21593592,max(x,0.9421894))))/y))",
            "g": "tan((min(max(sin(externalVal),tan(y)),sin(noise(y,max(externalVal,0.9072342))))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.13999447",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise((externalVal-x),sin(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "pow(noise((0.16515034-0.4455899),sin(x)),sin(noise(0.36041474,tan(x))))",
            "g": "pow(noise((externalVal-x),sin(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min((externalVal*y),tan(externalVal)),(externalVal*(y*noise(0.22104362,0.40295905))))",
            "b": "audio(min((0.51468873*x),tan(x)),(x*(0.0*noise(externalVal,y))))",
            "g": "audio(min((externalVal*x),tan(externalVal)),(y*(externalVal*noise(0.99976957,0.21881515))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod((externalVal-y),max(y,externalVal)),tan((x/y)))",
            "b": "pow(mod((0.8611226-0.51088166),max(x,x)),tan((y/y)))",
            "g": "pow(mod((externalVal-x),max(y,0.58609915)),tan((y/externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise((externalVal-x),tan(externalVal)),(externalVal/(y*mod(0.0,0.40295905))))",
            "b": "audio(noise((0.7518829-0.6604736),tan(x)),(x/(0.0*mod(y,y))))",
            "g": "audio(noise((externalVal-x),tan(y)),(y/(externalVal*mod(x,0.21881515))))"
          }
        }
      ],
      "timestamp": "0h:24m:46s"
    },
    {
      "generation": 20,
      "ascendantID": "oadytuya-qswh-ok1d-d8ss-ihlxbxlnqb1e",
      "id": "kz6omkep-t09k-j3rz-67gx-mv1u73uv0q9c",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(tan(min(sin(externalVal),sin(externalVal)))),y)",
            "b": "min(cos(tan(min(sin(0.49808487),sin(x)))),y)",
            "g": "min(cos(tan(min(sin(externalVal),sin(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((min(min(sin(externalVal),cos(externalVal)),(min(y,y)/sin(y)))/y),y)",
            "b": "max((min(min(sin(0.21906301),cos(0.85852534)),(min(0.5101719,0.08450705)/sin(0.0)))/y),y)",
            "g": "max((min(min(sin(externalVal),cos(y)),(min(y,y)/sin(externalVal)))/externalVal),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,sin(noise(y,max(externalVal,externalVal))))",
            "b": "pow(0.0,sin(noise(0.36041474,max(x,0.81285685))))",
            "g": "pow(y,sin(noise(y,max(y,0.47979447))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),cos(noise(y,max(externalVal,externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),cos(noise(0.36041474,max(x,x))))",
            "g": "mod(min((externalVal-x),tan(y)),cos(noise(y,max(y,0.84236884))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),sin(noise(y,max(externalVal,externalVal))))",
            "b": "mod(min((0.24494436-0.4455899),tan(x)),sin(noise(0.3578507,max(x,0.8695296))))",
            "g": "mod(min((externalVal-x),tan(y)),sin(noise(y,max(y,0.5639895))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((y/y))",
            "b": "sin((externalVal/y))",
            "g": "sin((y/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(sin(max(min((externalVal/y),cos(externalVal)),cos(mod(y,max(y,y))))),y)",
            "b": "max(sin(max(min((0.49808487/0.98746383),cos(x)),cos(mod(0.5525329,max(x,x))))),y)",
            "g": "max(sin(max(min((externalVal/x),cos(y)),cos(mod(y,max(y,0.9691572))))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((min(max(sin(externalVal),tan(externalVal)),sin(noise(externalVal,max(y,y))))/externalVal))",
            "b": "tan((min(max(sin(0.30567774),tan(0.9617003)),sin(noise(0.13749588,max(x,0.9421894))))/y))",
            "g": "tan((min(max(sin(externalVal),tan(y)),sin(noise(y,max(externalVal,0.9072342))))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.13999447",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(tan(tan(min((externalVal/y),tan(externalVal)))),y)",
            "b": "min(tan(tan(min((0.49808487/x),tan(x)))),y)",
            "g": "min(tan(tan(min((externalVal/x),tan(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.27990493",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4523899",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise((externalVal*y),tan(externalVal)),(externalVal*(y*mod(0.22104362,0.03747189))))",
            "b": "audio(noise((0.51468873*x),tan(x)),(x*(0.0*mod(externalVal,externalVal))))",
            "g": "audio(noise((externalVal*x),tan(externalVal)),(y*(externalVal*mod(0.99976957,0.1598601))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((x/y))",
            "b": "cos((0.46544784/y))",
            "g": "cos((y/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod((externalVal-x),sin(y)),sin(mod(y,y)))",
            "b": "pow(mod((0.8757266-0.6832614),sin(externalVal)),sin(mod(0.057466835,x)))",
            "g": "pow(mod((externalVal-x),sin(y)),sin(mod(x,externalVal)))"
          }
        }
      ],
      "timestamp": "0h:24m:48s"
    },
    {
      "generation": 21,
      "ascendantID": "kz6omkep-t09k-j3rz-67gx-mv1u73uv0q9c",
      "id": "ypmvima4-08ad-qagg-6wpy-5s0cjosbaxhr",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,sin(noise(y,min(externalVal,externalVal))))",
            "b": "mod(0.0,sin(noise(0.36041474,min(x,0.839223))))",
            "g": "mod(y,sin(noise(y,min(y,0.47979447))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.14833215",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow((externalVal-x),sin(y)),sin(mod(y,y)))",
            "b": "pow(pow((x-0.6832614),sin(externalVal)),sin(mod(0.057466835,x)))",
            "g": "pow(pow((externalVal-x),sin(y)),sin(mod(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal-x),max(externalVal,externalVal)),sin(noise(y,max(externalVal,externalVal))))",
            "b": "mod(max((0.24494436-0.4455899),max(x,x)),sin(noise(0.3578507,max(x,0.8695296))))",
            "g": "mod(max((externalVal-x),max(y,0.3047062)),sin(noise(y,max(y,0.5639895))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.13999447",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(tan(min((externalVal/y),tan(externalVal)))),externalVal)",
            "b": "min(cos(tan(min((0.49808487/x),tan(x)))),y)",
            "g": "min(cos(tan(min((externalVal/x),tan(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.13999447",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod((externalVal*x),sin(x)),sin(pow(y,y)))",
            "b": "pow(mod((0.8757266*0.6832614),sin(externalVal)),sin(pow(0.0,x)))",
            "g": "pow(mod((externalVal*x),sin(y)),sin(pow(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((min(max(sin(externalVal),cos(externalVal)),sin(noise(y,max(y,y))))/externalVal))",
            "b": "tan((min(max(sin(0.30567774),cos(0.9617003)),sin(noise(0.13749588,max(x,0.9421894))))/y))",
            "g": "tan((min(max(sin(externalVal),cos(y)),sin(noise(y,max(externalVal,0.9072342))))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((pow(y,max(externalVal,externalVal))*externalVal)/y)",
            "b": "((pow(0.0224154,max(x,0.8695296))*y)/y)",
            "g": "((pow(y,max(y,0.5639895))*externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(tan(tan(min(sin(externalVal),tan(externalVal)))),y)",
            "b": "min(tan(tan(min(sin(0.49808487),tan(x)))),y)",
            "g": "min(tan(tan(min(sin(externalVal),tan(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x/y))",
            "b": "sin((externalVal/y))",
            "g": "sin((y/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(tan(min((externalVal/y),cos(externalVal)))),y)",
            "b": "min(cos(tan(min((0.87366635/x),cos(x)))),y)",
            "g": "min(cos(tan(min((externalVal/x),cos(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4523899",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((min(min((externalVal/y),cos(externalVal)),sin(min(y,y)))*y),y)",
            "b": "min((min(min((0.21906301/0.7445221),cos(0.85852534)),sin(min(0.7575662,0.08450705)))*y),y)",
            "g": "min((min(min((externalVal/x),cos(y)),sin(min(y,y)))*externalVal),externalVal)"
          }
        }
      ],
      "timestamp": "0h:24m:49s"
    },
    {
      "generation": 22,
      "ascendantID": "ypmvima4-08ad-qagg-6wpy-5s0cjosbaxhr",
      "id": "yj3onokt-2j50-fxxk-3lts-bx26q3qsmake",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(y,max(externalVal,externalVal))*externalVal)/y)",
            "b": "((mod(0.0224154,max(x,0.8695296))*y)/y)",
            "g": "((mod(y,max(y,0.5639895))*externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,sin(mod(y,min(externalVal,externalVal))))",
            "b": "mod(0.0,sin(mod(0.36041474,min(x,0.839223))))",
            "g": "mod(y,sin(mod(y,min(y,0.47979447))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(0.14833215/y)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(tan(min((externalVal/y),tan(externalVal)))),externalVal)",
            "b": "min(cos(tan(min((0.49808487/x),tan(x)))),y)",
            "g": "min(cos(tan(min((externalVal/x),tan(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4523899",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod((externalVal*x),sin(x)),sin(mod(y,y)))",
            "b": "pow(mod((0.8757266*0.6832614),sin(externalVal)),sin(mod(0.0,x)))",
            "g": "pow(mod((externalVal*x),sin(y)),sin(mod(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.51176405",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal*x),cos(x)),tan(pow(y,externalVal)))",
            "b": "mod(mod((x*0.6832614),cos(externalVal)),tan(pow(0.0,x)))",
            "g": "mod(mod((externalVal*x),cos(y)),tan(pow(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((pow(y,max(externalVal,externalVal))*externalVal))",
            "b": "sin((pow(0.1397163,max(x,0.8695296))*x))",
            "g": "sin((pow(y,max(y,0.5639895))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,sin(noise(y,max(externalVal,externalVal))))",
            "b": "mod(0.0,sin(noise(0.6589358,max(x,0.778696))))",
            "g": "mod(y,sin(noise(x,max(y,0.16014391))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(cos(tan(min((externalVal/y),tan(externalVal)))),externalVal)",
            "b": "noise(cos(tan(min((0.49808487/x),tan(x)))),y)",
            "g": "noise(cos(tan(min((externalVal/x),tan(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(mod((externalVal*x),sin(x)),(pow(audio(0.33894297,0.29659164),y)/(y/pow(0.0,x))))",
            "b": "audio(mod((0.8757266*0.6832614),sin(externalVal)),(pow(audio(externalVal,externalVal),x)/(0.0/pow(externalVal,externalVal))))",
            "g": "audio(mod((externalVal*0.97096246),sin(y)),(pow(audio(x,0.61791277),externalVal)/(y/pow(0.8143167,0.3242944))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal+x),max(externalVal,externalVal)),sin(noise(y,min(externalVal,externalVal))))",
            "b": "mod(max((0.24494436+0.1930924),max(x,x)),sin(noise(0.35065398,min(x,0.8695296))))",
            "g": "mod(max((externalVal+y),max(y,0.3047062)),sin(noise(y,min(y,0.5639895))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),tan(externalVal)),cos(pow(y,tan(externalVal))))",
            "b": "mod(min((0.16515034+0.4455899),tan(x)),cos(pow(0.6065285,tan(x))))",
            "g": "mod(min((externalVal+x),tan(y)),cos(pow(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal-x),min(externalVal,externalVal)),sin(noise(y,max(externalVal,externalVal))))",
            "b": "pow(max((0.019653961-0.4455899),min(x,x)),sin(noise(0.3578507,max(x,0.8695296))))",
            "g": "pow(max((externalVal-x),min(y,0.57193553)),sin(noise(x,max(y,0.5639895))))"
          }
        }
      ],
      "timestamp": "0h:24m:51s"
    },
    {
      "generation": 23,
      "ascendantID": "yj3onokt-2j50-fxxk-3lts-bx26q3qsmake",
      "id": "6y8vez4u-cc7m-qh70-ndrl-jdlhwlnw6232",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((pow(y,externalVal)*externalVal)/externalVal)",
            "b": "((pow(0.1397163,x)*x)/y)",
            "g": "((pow(y,externalVal)*externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(y,max(externalVal,externalVal))*externalVal)/y)",
            "b": "((mod(0.0224154,max(x,0.8695296))*y)/y)",
            "g": "((mod(y,max(y,0.5639895))*externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/y)",
            "b": "(0.0/y)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(cos(noise(sin(externalVal),tan(externalVal)))),externalVal)",
            "b": "min(cos(cos(noise(sin(0.15555942),tan(x)))),y)",
            "g": "min(cos(cos(noise(sin(externalVal),tan(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal*y),tan(externalVal)),sin(mod(y,tan(y))))",
            "b": "pow(max((0.16515034*0.4455899),tan(x)),sin(mod(0.36041474,tan(x))))",
            "g": "pow(max((externalVal*x),tan(y)),sin(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),tan(externalVal)),cos(pow(y,max(externalVal,externalVal))))",
            "b": "mod(min((0.08517817+0.4455899),tan(x)),cos(pow(0.6065285,max(x,0.81285685))))",
            "g": "mod(min((externalVal+x),tan(y)),cos(pow(y,max(y,0.79486734))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(max(min((externalVal/y),tan(externalVal)),cos(noise(y,tan(y))))),externalVal)",
            "b": "min(cos(max(min((0.49808487/x),tan(x)),cos(noise(0.3975864,tan(x))))),y)",
            "g": "min(cos(max(min((externalVal/x),tan(y)),cos(noise(y,tan(y))))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4523899",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(mod((externalVal*x),sin(x)),(pow(audio(0.33894297,0.18088791),y)/(y/audio(0.0,x))))",
            "b": "audio(mod((0.79128844*0.6832614),sin(externalVal)),(pow(audio(externalVal,y),x)/(0.0/audio(externalVal,externalVal))))",
            "g": "audio(mod((externalVal*0.73408693),sin(y)),(pow(audio(x,0.61791277),externalVal)/(y/audio(0.8143167,0.22913766))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise((externalVal/x),sin(x)),sin(pow(y,externalVal)))",
            "b": "pow(noise((0.8757266/0.7094532),sin(externalVal)),sin(pow(0.0,x)))",
            "g": "pow(noise((externalVal/x),sin(y)),sin(pow(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(cos(tan(noise(sin(externalVal),tan(externalVal)))),externalVal)",
            "b": "noise(cos(tan(noise(sin(0.49808487),tan(x)))),y)",
            "g": "noise(cos(tan(noise(sin(externalVal),tan(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod((externalVal*x),cos(x)),sin(noise(y,y)))",
            "b": "pow(mod((0.8757266*0.6832614),cos(externalVal)),sin(noise(0.0,x)))",
            "g": "pow(mod((externalVal*x),cos(y)),sin(noise(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow((max(y,externalVal)/x),cos(x)),sin(mod(y,y)))",
            "b": "pow(pow((max(x,x)/0.6832614),cos(externalVal)),sin(mod(0.0,x)))",
            "g": "pow(pow((max(y,0.5762646)/x),cos(y)),sin(mod(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(pow((externalVal-x),sin(x)),(mod(audio(0.33894297,0.29659164),y)*(y/pow(0.0,x))))",
            "b": "audio(pow((x-x),sin(externalVal)),(mod(audio(externalVal,externalVal),x)*(0.0/pow(externalVal,externalVal))))",
            "g": "audio(pow((externalVal-x),sin(y)),(mod(audio(x,0.61791277),externalVal)*(y/pow(0.8143167,0.3242944))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow((externalVal*x),sin(x)),sin(mod(y,y)))",
            "b": "pow(pow((0.61790866*0.6832614),sin(externalVal)),sin(mod(0.0,x)))",
            "g": "pow(pow((externalVal*x),sin(y)),sin(mod(x,externalVal)))"
          }
        }
      ],
      "timestamp": "0h:24m:53s"
    },
    {
      "generation": 24,
      "ascendantID": "6y8vez4u-cc7m-qh70-ndrl-jdlhwlnw6232",
      "id": "nix7jyuq-4aza-194t-544v-ulx5zks80qo7",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(sin(externalVal),sin(x)),cos(pow(y,externalVal)))",
            "b": "audio(noise(sin(0.8757266),sin(externalVal)),cos(pow(0.0,x)))",
            "g": "audio(noise(sin(externalVal),sin(y)),cos(pow(x,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(mod((externalVal/x),sin(x)),(pow(noise(y,y),y)/(y/audio(0.0,x))))",
            "b": "audio(mod((0.79128844/0.6832614),sin(externalVal)),(pow(noise(0.3975864,0.0),y)/(0.10604003/audio(externalVal,externalVal))))",
            "g": "audio(mod((externalVal/0.73408693),sin(y)),(pow(noise(y,y),externalVal)/(y/audio(0.8143167,0.22913766))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4523899",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((pow(y,externalVal)-externalVal))",
            "b": "sin((pow(0.1397163,x)-y))",
            "g": "sin((pow(y,externalVal)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.0)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow((externalVal*x),sin(x)),(mod(audio(0.33894297,0.20420736),y)/(y/audio(0.0,x))))",
            "b": "pow(pow((x*x),sin(externalVal)),(mod(audio(externalVal,externalVal),x)/(0.0/audio(externalVal,externalVal))))",
            "g": "pow(pow((externalVal*x),sin(y)),(mod(audio(x,0.61498016),externalVal)/(y/audio(0.8143167,0.0103366375))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(y,min(externalVal,externalVal))*externalVal)/y)",
            "b": "((mod(0.0224154,min(x,0.48492858))*y)/y)",
            "g": "((mod(y,min(y,0.5639895))*externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(mod((externalVal*x),sin(y)),(noise(audio(0.33894297,0.15500653),y)*(y/pow(0.0,x))))",
            "b": "audio(mod((x*x),sin(externalVal)),(noise(audio(externalVal,y),x)*(0.0/pow(externalVal,externalVal))))",
            "g": "audio(mod((externalVal*x),sin(y)),(noise(audio(x,0.84462595),externalVal)*(y/pow(0.8143167,0.3242944))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow((tan(y)/x),cos(y)),(noise(y,y)/(y-audio(0.16906813,x))))",
            "b": "pow(pow((tan(x)/0.7632097),cos(externalVal)),(noise(0.07518998,y)/(0.48087347-audio(externalVal,externalVal))))",
            "g": "pow(pow((tan(y)/x),cos(y)),(noise(x,y)/(externalVal-audio(x,0.3242944))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(cos(tan(min(sin(externalVal),sin(externalVal)))),externalVal)",
            "b": "mod(cos(tan(min(sin(0.7336245),sin(x)))),y)",
            "g": "mod(cos(tan(min(sin(externalVal),sin(y)))),externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4523899",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(tan((externalVal-y)),cos(pow(y,max(y,externalVal))))",
            "b": "pow(tan((0.44881532-0.4874102)),cos(pow(0.31050912,max(x,0.41638902))))",
            "g": "pow(tan((externalVal-x)),cos(pow(y,max(y,0.99585617))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),tan(externalVal)),cos(pow(y,max(externalVal,externalVal))))",
            "b": "mod(min((0.0+0.4455899),tan(x)),cos(pow(0.6065285,max(x,0.81285685))))",
            "g": "mod(min((externalVal+x),tan(y)),cos(pow(x,max(y,0.79486734))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.24191567",
            "g": "y"
          }
        }
      ],
      "timestamp": "0h:24m:58s"
    },
    {
      "generation": 25,
      "ascendantID": "nix7jyuq-4aza-194t-544v-ulx5zks80qo7",
      "id": "1elefdo9-61by-1eud-b4rk-na0e8e4v3pmx",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((externalVal-y),tan(externalVal)),cos(pow(y,max(externalVal,externalVal))))",
            "b": "pow(min((0.0-0.4455899),tan(x)),cos(pow(0.6065285,max(x,0.81285685))))",
            "g": "pow(min((externalVal-x),tan(y)),cos(pow(x,max(y,0.79486734))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),cos(externalVal)),cos(pow(y,max(externalVal,externalVal))))",
            "b": "mod(min((0.0+0.29963106),cos(x)),cos(pow(0.6065285,max(x,x))))",
            "g": "mod(min((externalVal+x),cos(y)),cos(pow(x,max(y,0.54357207))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((pow(y,externalVal)*externalVal))",
            "b": "sin((pow(0.0,x)*y))",
            "g": "sin((pow(y,externalVal)*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((pow(y,externalVal)+externalVal))",
            "b": "sin((pow(0.1397163,x)+y))",
            "g": "sin((pow(y,externalVal)+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,sin(x)),cos(pow(y,externalVal)))",
            "b": "audio(noise(x,sin(externalVal)),cos(pow(0.0,x)))",
            "g": "audio(noise(y,sin(y)),cos(pow(x,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(y,min(externalVal,externalVal))*externalVal)*y)",
            "b": "((mod(0.30302313,min(x,0.5614718))*y)*y)",
            "g": "((mod(x,min(y,0.5639895))*externalVal)*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.0)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((mod(x,externalVal)-externalVal))",
            "b": "cos((mod(0.62546045,x)-y))",
            "g": "cos((mod(y,externalVal)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((noise(y,noise(externalVal,externalVal))/externalVal)/y)",
            "b": "((noise(0.0,noise(x,0.48492858))/y)/y)",
            "g": "((noise(y,noise(y,0.6945125))/externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((externalVal-x),sin(externalVal)),sin(min(y,tan(externalVal))))",
            "b": "pow(min((0.16515034-0.4455899),sin(x)),sin(min(0.36041474,tan(x))))",
            "g": "pow(min((externalVal-x),sin(y)),sin(min(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((pow(y,externalVal)+externalVal))",
            "b": "sin((pow(0.43932456,x)+y))",
            "g": "sin((pow(y,externalVal)+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4523899",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(pow((externalVal*x),sin(x)),(mod(audio(0.33894297,0.20420736),y)/(y/audio(0.0,x))))",
            "b": "mod(pow((x*x),sin(externalVal)),(mod(audio(externalVal,y),y)/(0.0/audio(externalVal,externalVal))))",
            "g": "mod(pow((externalVal*x),sin(y)),(mod(audio(x,0.61498016),externalVal)/(y/audio(x,0.0103366375))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((0.0*externalVal))",
            "b": "sin((0.121329606*y))",
            "g": "sin((0.1642576*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),tan(externalVal)),cos(mod(y,tan(externalVal))))",
            "b": "mod(min((0.0+0.4455899),tan(x)),cos(mod(0.7571405,tan(x))))",
            "g": "mod(min((externalVal+x),tan(y)),cos(mod(x,tan(y))))"
          }
        }
      ],
      "timestamp": "0h:25m:0s"
    },
    {
      "generation": 26,
      "ascendantID": "1elefdo9-61by-1eud-b4rk-na0e8e4v3pmx",
      "id": "g9i9imxt-aqqc-xxxi-uf2i-m76gvx9atnhf",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((pow(y,externalVal)+externalVal))",
            "b": "sin((pow(0.43932456,x)+y))",
            "g": "sin((pow(x,externalVal)+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((mod(x,externalVal)-externalVal))",
            "b": "cos((mod(0.62546045,x)-y))",
            "g": "cos((mod(y,externalVal)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.0)",
            "b": "sin(externalVal)",
            "g": "sin(0.8143167)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((externalVal*y),cos(externalVal)),tan(pow(y,max(externalVal,externalVal))))",
            "b": "pow(min((0.0*0.4455899),cos(x)),tan(pow(0.6065285,max(x,0.81285685))))",
            "g": "pow(min((externalVal*x),cos(y)),tan(pow(x,max(y,0.79486734))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((min(y,noise(externalVal,externalVal))/externalVal))",
            "b": "sin((min(0.0,noise(x,0.48492858))/y))",
            "g": "sin((min(y,noise(y,0.6945125))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((externalVal*x),sin(externalVal)),sin(min(y,tan(externalVal))))",
            "b": "pow(min((0.16515034*0.4455899),sin(x)),sin(min(0.7306051,tan(x))))",
            "g": "pow(min((externalVal*x),sin(y)),sin(min(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(mod(externalVal,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(mod(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(mod(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((externalVal+x),cos(externalVal)),cos(noise(y,tan(externalVal))))",
            "b": "mod(noise((0.0+0.4455899),cos(x)),cos(noise(x,tan(x))))",
            "g": "mod(noise((externalVal+x),cos(y)),cos(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,sin(x)),sin(pow(y,externalVal)))",
            "b": "audio(noise(x,sin(externalVal)),sin(pow(0.0,x)))",
            "g": "audio(noise(y,sin(y)),sin(pow(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((mod(y,min(externalVal,externalVal))*x),cos(externalVal)),sin(min(y,tan(externalVal))))",
            "b": "mod(min((mod(0.6065285,min(x,x))*0.5207271),cos(x)),sin(min(0.36041474,tan(x))))",
            "g": "mod(min((mod(x,min(y,0.47822446))*x),cos(y)),sin(min(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((0.0/externalVal))",
            "b": "sin((0.121329606/y))",
            "g": "sin((0.1642576/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(y,x)*externalVal)/y)",
            "b": "((mod(0.30302313,0.5765525)*y)/y)",
            "g": "((mod(x,y)*externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),cos(externalVal)),tan(externalVal))",
            "b": "mod(min((0.0+0.29963106),cos(x)),tan(x))",
            "g": "mod(min((externalVal+x),cos(x)),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((externalVal+x),cos(externalVal)),cos(audio(y,tan(externalVal))))",
            "b": "mod(noise((0.0+0.35961962),cos(x)),cos(audio(0.64407283,tan(x))))",
            "g": "mod(noise((externalVal+x),cos(y)),cos(audio(x,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),sin(externalVal)),sin(noise(y,y)))",
            "b": "mod(min((0.16515034+0.7744684),sin(x)),sin(noise(0.36041474,0.0)))",
            "g": "mod(min((externalVal+x),sin(y)),sin(noise(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5765525",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((externalVal-x),cos(externalVal)),sin(noise(y,max(externalVal,externalVal))))",
            "b": "pow(min((0.0-0.4455899),cos(x)),sin(noise(0.36041474,max(x,0.81285685))))",
            "g": "pow(min((externalVal-x),cos(y)),sin(noise(y,max(y,0.611787))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(audio((externalVal*x),sin(y)),(pow(audio(0.33894297,0.20420736),y)/(y*audio(0.0,x))))",
            "b": "pow(audio((x*x),sin(externalVal)),(pow(audio(externalVal,y),y)/(0.0*audio(externalVal,externalVal))))",
            "g": "pow(audio((externalVal*x),sin(y)),(pow(audio(x,0.63238347),y)/(y*audio(x,0.0103366375))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,sin(x)),sin(pow(y,externalVal)))",
            "b": "audio(noise(x,sin(externalVal)),sin(pow(0.3166125,y)))",
            "g": "audio(noise(y,sin(y)),sin(pow(x,externalVal)))"
          }
        }
      ],
      "timestamp": "0h:25m:5s"
    },
    {
      "generation": 27,
      "ascendantID": "g9i9imxt-aqqc-xxxi-uf2i-m76gvx9atnhf",
      "id": "yu8ov16x-iyar-rdfp-t8hi-kphajklu0gaa",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(externalVal,cos(x)),sin(pow(y,externalVal)))",
            "b": "pow(noise(x,cos(externalVal)),sin(pow(0.0,x)))",
            "g": "pow(noise(y,cos(y)),sin(pow(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow((externalVal/y),sin(x)),(pow(pow(0.33894297,0.20420736),y)/(y*pow(0.0,x))))",
            "b": "pow(pow((x/x),sin(externalVal)),(pow(pow(externalVal,externalVal),y)/(0.08505353*pow(externalVal,externalVal))))",
            "g": "pow(pow((externalVal/0.76659214),sin(y)),(pow(pow(x,0.63238347),y)/(y*pow(x,0.0))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,sin(x)),sin(pow(y,externalVal)))",
            "b": "audio(noise(x,sin(externalVal)),sin(pow(0.3166125,y)))",
            "g": "audio(noise(y,sin(y)),sin(pow(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(externalVal,sin(x)),sin(pow(y,externalVal)))",
            "b": "audio(min(x,sin(externalVal)),sin(pow(0.3166125,y)))",
            "g": "audio(min(y,sin(y)),sin(pow(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((0.13094708/externalVal))",
            "b": "sin((0.38933715/y))",
            "g": "sin((0.1642576/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((mod(y,externalVal)+externalVal))",
            "b": "sin((mod(0.43932456,x)+y))",
            "g": "sin((mod(y,externalVal)+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(y))))",
            "b": "mod(min((0.0-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(x,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((externalVal*x),sin(externalVal)),(min(y,tan(externalVal))/(y-pow(0.0,0.29659164))))",
            "b": "pow(min((0.16515034*0.33211616),sin(x)),(min(0.7306051,tan(x))/(0.14934224-pow(externalVal,externalVal))))",
            "g": "pow(min((externalVal*y),sin(y)),(min(y,tan(y))/(externalVal-pow(0.42198446,0.23058635))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),sin(externalVal)),(noise(y,y)/(y+audio(cos(externalVal),0.27272636))))",
            "b": "mod(min((0.16515034+0.6161715),sin(x)),(noise(0.36041474,0.09007305)/(0.3111324+audio(cos(x),externalVal))))",
            "g": "mod(min((externalVal+y),sin(y)),(noise(x,y)/(externalVal+audio(cos(y),0.13508984))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.0/externalVal)/externalVal)",
            "b": "((0.121329606/y)/y)",
            "g": "((0.1642576/externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal+y),tan(externalVal)),cos(audio(y,cos(externalVal))))",
            "b": "mod(mod((0.0+0.35961962),tan(x)),cos(audio(0.64407283,cos(x))))",
            "g": "mod(mod((externalVal+x),tan(y)),cos(audio(x,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((externalVal-x),cos(externalVal)),sin(pow(y,max(externalVal,externalVal))))",
            "b": "pow(min((x-0.4455899),cos(x)),sin(pow(0.36041474,max(x,0.81285685))))",
            "g": "pow(min((externalVal-x),cos(y)),sin(pow(y,max(y,0.611787))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min((externalVal-x),cos(externalVal)),sin(x))",
            "b": "audio(min((0.040201128-0.4455899),cos(x)),sin(0.5765525))",
            "g": "audio(min((externalVal-x),cos(y)),sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.0*externalVal)/externalVal)",
            "b": "((0.121329606*y)/y)",
            "g": "((0.1642576*externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal-y),cos(externalVal)),max(pow(y,max(externalVal,externalVal)),(y-noise(0.0,0.48803267))))",
            "b": "pow(max((0.0-0.2123347),cos(x)),max(pow(0.6065285,max(x,x)),(0.61384594-noise(externalVal,externalVal))))",
            "g": "pow(max((externalVal-x),cos(y)),max(pow(x,max(y,0.79486734)),(y-noise(0.8143167,0.0))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(externalVal,cos(x)),sin(audio(y,externalVal)))",
            "b": "audio(noise(x,cos(externalVal)),sin(audio(0.0,x)))",
            "g": "audio(noise(y,cos(y)),sin(audio(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((mod(y,min(externalVal,externalVal))*x),cos(externalVal)),cos(min(y,max(externalVal,externalVal))))",
            "b": "mod(max((mod(0.6065285,min(x,x))*0.5207271),cos(x)),cos(min(0.36041474,max(x,0.81285685))))",
            "g": "mod(max((mod(x,min(y,0.47822446))*x),cos(y)),cos(min(y,max(y,x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((externalVal+x),cos(externalVal)),cos(externalVal))",
            "b": "pow(min((0.0+0.29963106),cos(x)),cos(x))",
            "g": "pow(min((externalVal+x),cos(x)),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((externalVal+x),cos(externalVal)),sin(noise(externalVal,tan(sin(min(y,tan(externalVal)))))))",
            "b": "noise(min((0.16515034+0.105151564),cos(x)),sin(noise(0.32645646,tan(sin(min(0.7306051,tan(x)))))))",
            "g": "noise(min((externalVal+x),cos(y)),sin(noise(y,tan(sin(min(y,tan(y)))))))"
          }
        }
      ],
      "timestamp": "0h:25m:26s"
    },
    {
      "generation": 28,
      "ascendantID": "yu8ov16x-iyar-rdfp-t8hi-kphajklu0gaa",
      "id": "kq33b6w3-9wnw-1phn-vb6n-qprak2cvflyk",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(min(y,0.0)))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(min(0.36041474,externalVal)))",
            "g": "mod(min((externalVal-x),cos(y)),sin(min(y,0.6417659)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal-y),sin(externalVal)),tan(pow(y,max(externalVal,externalVal))))",
            "b": "pow(max((0.0-0.2123347),sin(x)),tan(pow(0.6065285,max(x,x))))",
            "g": "pow(max((externalVal-x),sin(y)),tan(pow(x,max(y,0.79486734))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(externalVal,sin(x)),cos(pow(y,externalVal)))",
            "b": "audio(max(x,sin(externalVal)),cos(pow(0.3166125,y)))",
            "g": "audio(max(y,sin(y)),cos(pow(x,externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal+y),tan(externalVal)),cos(audio(y,cos(externalVal))))",
            "b": "mod(mod((0.0+0.35961962),tan(x)),cos(audio(0.64407283,cos(x))))",
            "g": "mod(mod((externalVal+x),tan(y)),cos(audio(x,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.0*externalVal)*externalVal)",
            "b": "((0.121329606*y)*y)",
            "g": "((0.1642576*externalVal)*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal+y),tan(externalVal)),tan(audio(y,tan(externalVal))))",
            "b": "mod(mod((0.0+0.35961962),tan(x)),tan(audio(0.64407283,tan(x))))",
            "g": "mod(mod((externalVal+x),tan(y)),tan(audio(x,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),sin(externalVal)),(noise(y,y)/(y+pow(cos(externalVal),0.27272636))))",
            "b": "mod(min((0.16515034+0.6161715),sin(x)),(noise(0.36041474,0.09007305)/(0.574933+pow(cos(x),y))))",
            "g": "mod(min((externalVal+y),sin(y)),(noise(x,y)/(externalVal+pow(cos(y),0.13508984))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise((externalVal-y),cos(externalVal)),min(pow(y,tan(externalVal)),(y*noise(0.0,0.48803267))))",
            "b": "pow(noise((0.0-0.2123347),cos(x)),min(pow(0.24656692,tan(x)),(0.61384594*noise(externalVal,externalVal))))",
            "g": "pow(noise((externalVal-x),cos(x)),min(pow(x,tan(y)),(y*noise(0.8143167,0.0))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(0.0)/externalVal)",
            "b": "(sin(0.121329606)/y)",
            "g": "(sin(0.1642576)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y-x),sin(externalVal)),sin(pow(y,max(externalVal,externalVal))))",
            "b": "mod(min((x-0.4455899),sin(x)),sin(pow(0.36041474,max(x,0.81285685))))",
            "g": "mod(min((externalVal-x),sin(y)),sin(pow(y,max(y,0.611787))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((externalVal+x),sin(externalVal)),(mod(externalVal,y)/(y+audio(cos(externalVal),0.27272636))))",
            "b": "noise(min((0.16515034+0.43653536),sin(x)),(mod(0.120597646,0.09007305)/(0.3111324+audio(cos(x),y))))",
            "g": "noise(min((externalVal+y),sin(y)),(mod(x,x)/(externalVal+audio(cos(y),0.22047508))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(max((externalVal-x),tan(externalVal)),sin(noise(externalVal,tan(sin(min(y,tan(externalVal)))))))",
            "b": "noise(max((0.16515034-0.105151564),tan(x)),sin(noise(0.32645646,tan(sin(min(0.94826853,tan(x)))))))",
            "g": "noise(max((externalVal-x),tan(y)),sin(noise(y,tan(sin(min(y,tan(y)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal*y),cos(externalVal)),max(pow(y,max(externalVal,externalVal)),(y-noise(0.0,0.48803267))))",
            "b": "pow(max((0.0*0.2123347),cos(x)),max(pow(0.9389961,max(x,x)),(0.61384594-noise(externalVal,externalVal))))",
            "g": "pow(max((externalVal*x),cos(y)),max(pow(x,max(y,0.79486734)),(y-noise(0.8143167,0.0))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((externalVal-x),sin(externalVal)),(max(y,cos(externalVal))/(y-pow(0.0,0.29659164))))",
            "b": "pow(min((0.16515034-0.19682491),sin(x)),(max(0.7306051,cos(x))/(0.14934224-pow(externalVal,externalVal))))",
            "g": "pow(min((externalVal-y),sin(y)),(max(y,cos(y))/(externalVal-pow(0.42198446,0.23058635))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.11897206+0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal+x),cos(y)),sin(noise(x,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),sin(externalVal)),(noise(y,y)*(y+mod((externalVal/externalVal),0.27272636))))",
            "b": "mod(min((0.34222338+0.6161715),sin(x)),(noise(0.36041474,0.09007305)*(0.3111324+mod((x/0.95090723),externalVal))))",
            "g": "mod(min((externalVal+y),sin(y)),(noise(x,y)*(externalVal+mod((y/x),0.13508984))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min((externalVal-x),cos(externalVal)),sin(x))",
            "b": "audio(min((0.040201128-0.4455899),cos(x)),sin(0.6889919))",
            "g": "audio(min((externalVal-x),cos(y)),sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((externalVal+x),cos(externalVal)),sin(noise(externalVal,max(sin(externalVal),externalVal))))",
            "b": "noise(min((0.16515034+0.105151564),cos(x)),sin(noise(0.17238422,max(sin(x),0.7682049))))",
            "g": "noise(min((externalVal+x),cos(y)),sin(noise(y,max(sin(externalVal),0.73401725))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((mod(y,externalVal)+externalVal))",
            "b": "sin((mod(0.60913587,x)+y))",
            "g": "sin((mod(y,externalVal)+externalVal))"
          }
        }
      ],
      "timestamp": "0h:25m:42s"
    },
    {
      "generation": 29,
      "ascendantID": "kq33b6w3-9wnw-1phn-vb6n-qprak2cvflyk",
      "id": "ms28mog3-26xz-1x3z-chqt-005uw3lscart",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal+y),tan(externalVal)),sin(audio(externalVal,cos(externalVal))))",
            "b": "mod(mod((0.0+0.35961962),tan(x)),sin(audio(x,cos(x))))",
            "g": "mod(mod((externalVal+x),tan(y)),sin(audio(y,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),sin(externalVal)),(noise(y,y)-(y+noise(sin(externalVal),0.266247))))",
            "b": "mod(min((0.34222338+0.6161715),sin(x)),(noise(0.36041474,0.09007305)-(0.3111324+noise(sin(x),externalVal))))",
            "g": "mod(min((externalVal+y),sin(y)),(noise(x,y)-(externalVal+noise(sin(y),0.13508984))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((pow(y,externalVal)-externalVal))",
            "b": "sin((pow(0.60913587,x)-y))",
            "g": "sin((pow(y,y)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),cos(min(externalVal,0.0)))",
            "b": "mod(min((0.21417001-0.4455899),cos(x)),cos(min(0.36041474,externalVal)))",
            "g": "mod(min((externalVal-x),cos(y)),cos(min(y,0.6417659)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((y*y),cos(externalVal)),max(pow(y,max(externalVal,externalVal)),(y-noise(0.0,0.48803267))))",
            "b": "pow(max((0.3111324*0.2123347),cos(x)),max(pow(0.70498747,max(x,x)),(0.61384594-noise(externalVal,externalVal))))",
            "g": "pow(max((externalVal*x),cos(y)),max(pow(x,max(y,0.79486734)),(y-noise(0.86392593,0.0))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+y),tan(externalVal)),cos(min(y,0.0)))",
            "b": "mod(min((0.16515034+0.4455899),tan(x)),cos(min(0.36041474,externalVal)))",
            "g": "mod(min((externalVal+x),tan(y)),cos(min(y,0.6417659)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((y*x),sin(externalVal)),(mod(y,max(externalVal,externalVal))/(y/pow(0.0,0.29659164))))",
            "b": "pow(min((x*0.6175107),sin(x)),(mod(0.36041474,max(x,0.81285685))/(0.12601212/pow(externalVal,externalVal))))",
            "g": "pow(min((externalVal*y),sin(y)),(mod(y,max(y,0.611787))/(externalVal/pow(0.56739306,0.23058635))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal-y),tan(externalVal)),tan(audio(y,tan(externalVal))))",
            "b": "mod(mod((0.0-0.039879978),tan(x)),tan(audio(0.64407283,tan(x))))",
            "g": "mod(mod((externalVal-x),tan(y)),tan(audio(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(0.0)/externalVal)",
            "b": "(sin(0.41722557)/y)",
            "g": "(sin(0.1642576)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal-x),cos(externalVal)),(min(y,y)-(y+pow(sin(externalVal),0.6624733))))",
            "b": "mod(max((0.34222338-0.70702523),cos(x)),(min(0.36041474,0.09007305)-(0.11961052+pow(sin(x),externalVal))))",
            "g": "mod(max((externalVal-y),cos(y)),(min(x,y)-(externalVal+pow(sin(y),0.0))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(max((externalVal-x),tan(externalVal)),sin(mod(externalVal,tan(sin(min(y,tan(externalVal)))))))",
            "b": "min(max((0.16515034-0.105151564),tan(x)),sin(mod(0.32645646,tan(sin(min(0.94826853,tan(0.94651556)))))))",
            "g": "min(max((externalVal-x),tan(y)),sin(mod(x,tan(sin(min(y,tan(y)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min((externalVal+x),cos(externalVal)),cos(mod(externalVal,tan((externalVal*(y+mod(0.0,0.46154687)))))))",
            "b": "min(min((0.50021124+0.105151564),cos(x)),cos(mod(0.17238422,tan((x*(0.14934224+mod(externalVal,externalVal)))))))",
            "g": "min(min((externalVal+x),cos(y)),cos(mod(y,tan((externalVal*(externalVal+mod(0.42198446,0.23058635)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(y,(y-noise(0.0,0.48803267)))-externalVal)/externalVal)",
            "b": "((mod(0.60913587,(0.61384594-noise(externalVal,externalVal)))-y)/y)",
            "g": "((mod(y,(y-noise(x,0.0)))-externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(sin(x))/externalVal)",
            "b": "(sin(sin(externalVal))/y)",
            "g": "(sin(sin(y))/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod((externalVal+y),tan(externalVal)),sin(audio(y,sin(externalVal))))",
            "b": "noise(mod((0.0+0.35961962),tan(x)),sin(audio(0.64407283,sin(x))))",
            "g": "noise(mod((externalVal+x),tan(y)),sin(audio(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),tan(externalVal)),(min(y,0.2892891)/(y-sin(0.0))))",
            "b": "mod(min((0.16515034-0.4455899),tan(x)),(min(0.36041474,externalVal)/(0.0-sin(0.121329606))))",
            "g": "mod(min((externalVal-x),tan(y)),(min(y,0.36891633)/(externalVal-sin(0.1642576))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal*x),cos(externalVal)),tan(externalVal))",
            "b": "pow(max((0.0*0.2123347),cos(x)),tan(x))",
            "g": "pow(max((externalVal*x),cos(y)),tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal+x),sin(externalVal)),(mod(externalVal,y)/(y-mod((externalVal/externalVal),0.15800801))))",
            "b": "pow(max((0.16515034+0.5869338),sin(x)),(mod(0.36041474,0.35926536)/(0.574933-mod((0.946275/0.9866495),externalVal))))",
            "g": "pow(max((externalVal+y),sin(y)),(mod(x,y)/(externalVal-mod((y/x),0.15447447))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal+x),cos(externalVal)),sin(min(y,y)))",
            "b": "mod(min((0.50730455+0.6161715),cos(x)),sin(min(0.36041474,0.25493595)))",
            "g": "mod(min((externalVal+y),cos(y)),sin(min(x,y)))"
          }
        }
      ],
      "timestamp": "0h:25m:45s"
    },
    {
      "generation": 30,
      "ascendantID": "ms28mog3-26xz-1x3z-chqt-005uw3lscart",
      "id": "zflq0q11-0wc4-jczg-aknf-1nmwterexbss",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal-x),cos(externalVal)),sin(noise(y,tan(externalVal))))",
            "b": "mod(min((0.16515034-0.4455899),cos(x)),sin(noise(0.36041474,tan(x))))",
            "g": "mod(min((externalVal-x),cos(y)),sin(noise(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(0.0)/externalVal)",
            "b": "(sin(0.41722557)/y)",
            "g": "(sin(0.1642576)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(pow((externalVal-y),tan(externalVal)),tan(audio(y,tan(externalVal))))",
            "b": "noise(pow((0.0-0.039879978),tan(x)),tan(audio(0.64407283,tan(x))))",
            "g": "noise(pow((externalVal-x),tan(y)),tan(audio(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal-x),cos(externalVal)),sin(audio(externalVal,cos(externalVal))))",
            "b": "mod(mod((0.0-0.002762705),cos(x)),sin(audio(x,cos(x))))",
            "g": "mod(mod((externalVal-x),cos(y)),sin(audio(y,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal+y),sin(externalVal)),(mod(externalVal,y)*(y-mod((externalVal/externalVal),0.15800801))))",
            "b": "pow(max((0.16515034+0.5869338),sin(x)),(mod(0.36041474,0.35926536)*(0.574933-mod((0.946275/0.9866495),externalVal))))",
            "g": "pow(max((externalVal+x),sin(y)),(mod(x,y)*(externalVal-mod((y/x),0.15447447))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((externalVal*x),tan(externalVal)),(min(y,0.2892891)*(y-sin(0.0))))",
            "b": "mod(min((0.12476629*0.4455899),tan(x)),(min(0.36041474,externalVal)*(0.0-sin(0.121329606))))",
            "g": "mod(min((externalVal*x),tan(y)),(min(y,0.36891633)*(externalVal-sin(0.1642576))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min((externalVal+x),sin(externalVal)),(noise(externalVal,y)/(y-mod((externalVal/externalVal),0.15800801))))",
            "b": "audio(min((0.16515034+0.5869338),sin(0.7739371)),(noise(0.36041474,0.35926536)/(0.574933-mod((0.946275/0.9866495),externalVal))))",
            "g": "audio(min((externalVal+y),sin(y)),(noise(x,y)/(externalVal-mod((y/x),0.15447447))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((y*x),sin(externalVal)),(mod(y,max(externalVal,externalVal))*(y-pow(0.0,0.29659164))))",
            "b": "pow(min((x*0.6175107),sin(x)),(mod(0.36041474,max(x,0.81285685))*(0.12601212-pow(externalVal,externalVal))))",
            "g": "pow(min((externalVal*y),sin(y)),(mod(y,max(y,0.611787))*(externalVal-pow(0.56739306,0.23058635))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(mod((externalVal+y),tan(externalVal)),sin(audio(externalVal,cos(externalVal))))",
            "b": "min(mod((0.0+0.35961962),tan(x)),sin(audio(x,cos(x))))",
            "g": "min(mod((externalVal+x),tan(y)),sin(audio(y,cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod((externalVal+y),cos(externalVal)),sin(audio(externalVal,sin(externalVal))))",
            "b": "noise(mod((0.0+0.35961962),cos(x)),sin(audio(x,sin(x))))",
            "g": "noise(mod((externalVal+x),cos(y)),sin(audio(y,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max((externalVal+x),sin(externalVal)),(mod(externalVal,y)*(y-pow(sin(y),0.15800801))))",
            "b": "pow(max((0.10095948+0.5869338),sin(x)),(mod(0.36041474,0.35926536)*(0.574933-pow(sin(0.04473722),externalVal))))",
            "g": "pow(max((externalVal+y),sin(y)),(mod(x,y)*(externalVal-pow(sin(externalVal),0.15447447))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal+x),tan(externalVal)),(min(y,0.2892891)*(y*sin(0.0))))",
            "b": "mod(max((0.16515034+0.4455899),tan(x)),(min(0.36041474,externalVal)*(0.17126682*sin(0.121329606))))",
            "g": "mod(max((externalVal+x),tan(y)),(min(y,0.36891633)*(externalVal*sin(0.1642576))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((externalVal-x),cos(externalVal)),sin(min(y,tan(y))))",
            "b": "mod(max((0.16515034-0.4455899),cos(x)),sin(min(0.5060674,tan(x))))",
            "g": "mod(max((externalVal-x),cos(y)),sin(min(y,tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min((y/x),sin(externalVal)),(mod(y,tan(externalVal))*(y/pow(0.0,0.29659164))))",
            "b": "pow(min((x/0.56234646),sin(x)),(mod(0.36041474,tan(x))*(0.12601212/pow(externalVal,externalVal))))",
            "g": "pow(min((externalVal/y),sin(y)),(mod(y,tan(y))*(externalVal/pow(0.61064357,0.23058635))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((externalVal+y),tan(externalVal)),cos(audio(y,sin(externalVal))))",
            "b": "noise(noise((0.0+0.35961962),tan(x)),cos(audio(0.64407283,sin(x))))",
            "g": "noise(noise((externalVal+x),tan(y)),cos(audio(x,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((externalVal-y),cos(externalVal)),tan(audio(y,sin(externalVal))))",
            "b": "mod(mod((0.0-0.0),cos(x)),tan(audio(0.64407283,sin(x))))",
            "g": "mod(mod((externalVal-x),cos(y)),tan(audio(y,sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((noise(y,(y*noise(0.0,0.48803267)))-externalVal)/externalVal)",
            "b": "((noise(0.60913587,(0.0*noise(externalVal,y)))-y)/y)",
            "g": "((noise(y,(externalVal*noise(x,0.19269374)))-externalVal)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(tan((externalVal-x)),(min(y,y)*(y+pow(sin(externalVal),0.88125694))))",
            "b": "mod(tan((0.34222338-0.70702523)),(min(0.36041474,0.2877477)*(0.11961052+pow(sin(x),externalVal))))",
            "g": "mod(tan((externalVal-y)),(min(x,x)*(externalVal+pow(sin(y),0.19361332))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise((externalVal+x),sin(externalVal)),(noise(externalVal,y)/(y-mod(sin(externalVal),0.15800801))))",
            "b": "pow(noise((0.23734516+0.5869338),sin(x)),(noise(0.7067307,0.35926536)/(0.574933-mod(sin(0.946275),externalVal))))",
            "g": "pow(noise((externalVal+y),sin(y)),(noise(x,y)/(externalVal-mod(sin(y),0.15447447))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(max((externalVal-x),cos(externalVal)),cos(mod(externalVal,max((externalVal/(externalVal+pow(0.18189994,0.09452492))),externalVal))))",
            "b": "max(max((0.50021124-0.105151564),cos(x)),cos(mod(0.17238422,max((x/(0.14934224+pow(externalVal,externalVal))),0.056847185))))",
            "g": "max(max((externalVal-x),cos(y)),cos(mod(y,max((externalVal/(externalVal+pow(0.060113013,0.23058635))),0.6574916))))"
          }
        }
      ],
      "timestamp": "0h:25m:50s"
    }
  ],
  "timestamp": "2024-03-19-00-23-25"
}
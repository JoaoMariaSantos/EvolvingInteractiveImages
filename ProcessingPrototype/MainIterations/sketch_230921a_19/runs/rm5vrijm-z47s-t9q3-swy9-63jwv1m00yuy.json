{
  "id": "rm5vrijm-z47s-t9q3-swy9-63jwv1m00yuy",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 1,
    "tournamentSize": 3,
    "mutationRate": 0.5,
    "populationSize": 20
  },
  "populations": [
    {
      "generation": 0,
      "id": "lylrzc8h-ptel-fhgp-5wkf-6oxmrmvtxgij",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6507859*mod(0.21898675,0.5950134))",
            "b": "(externalVal*mod(y,externalVal))",
            "g": "(y*mod(x,0.54121447))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(x*externalVal)",
            "g": "(x*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.5587449",
            "b": "externalVal",
            "g": "0.5601616"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.90121627",
            "b": "0.4280758",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6279857",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "externalVal",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.43885064",
            "b": "0.90055823",
            "g": "0.3455422"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,0.64578533)",
            "b": "audio(externalVal,x)",
            "g": "audio(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.50396967"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(mod(0.063446045,y),x)/(externalVal/0.29097223))",
            "b": "(noise(mod(externalVal,externalVal),externalVal)/(0.17634106/externalVal))",
            "g": "(noise(mod(x,0.95149374),y)/(y/0.1319437))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "cos(externalVal)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.4355588,0.39410758)",
            "b": "audio(0.7181096,externalVal)",
            "g": "audio(0.23436046,0.25756526)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise((sin(audio(audio(0.1259098,externalVal),externalVal))/y),x)",
            "b": "noise((sin(audio(audio(0.70677185,y),0.0053765774))/y),0.70781064)",
            "g": "noise((sin(audio(audio(x,externalVal),externalVal))/externalVal),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,y)",
            "b": "pow(externalVal,externalVal)",
            "g": "pow(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(x,0.673496)",
            "b": "min(x,externalVal)",
            "g": "min(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.45046473",
            "b": "x",
            "g": "x"
          }
        }
      ],
      "timestamp": "1h:29m:44s"
    },
    {
      "generation": 1,
      "ascendantID": "lylrzc8h-ptel-fhgp-5wkf-6oxmrmvtxgij",
      "id": "7yqumlnc-5fua-zfb4-n78u-5pqqheguuj23",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min((cos((0.118210316/y))-y),externalVal))",
            "b": "sin(min((cos((y/externalVal))-0.4532361),0.8105686))",
            "g": "sin(min((cos((externalVal/externalVal))-x),externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((sin(pow(pow(0.1259098,externalVal),externalVal))*y),y)",
            "b": "min((sin(pow(pow(0.70677185,y),0.0053765774))*y),0.70781064)",
            "g": "min((sin(pow(pow(x,externalVal),externalVal))*externalVal),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.4247857+x)",
            "b": "(x+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.56276387"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6507859/(x-externalVal))",
            "b": "(externalVal/(externalVal-y))",
            "g": "(y/(x-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.90121627",
            "b": "0.4280758",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(mod(externalVal,y),x)/(externalVal/0.29097223))",
            "b": "(noise(mod(externalVal,externalVal),externalVal)/(0.17634106/externalVal))",
            "g": "(noise(mod(x,x),y)/(y/0.1319437))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow((pow(externalVal,externalVal)+externalVal),y)",
            "b": "pow((pow(externalVal,externalVal)+0.3056159),externalVal)",
            "g": "pow((pow(y,0.23465657)+y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(noise(mod(0.29737303,y),x))",
            "b": "sin(noise(mod(externalVal,externalVal),externalVal))",
            "g": "sin(noise(mod(x,0.95149374),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.43885064",
            "b": "0.90055823",
            "g": "0.35578576"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,y)",
            "b": "pow(externalVal,externalVal)",
            "g": "pow(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6507859/mod(externalVal,0.5950134))",
            "b": "(externalVal/mod(x,externalVal))",
            "g": "(y/mod(y,0.54121447))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(x*externalVal)",
            "g": "(x*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(x*externalVal)",
            "g": "(x*externalVal)"
          }
        }
      ],
      "timestamp": "1h:29m:49s"
    },
    {
      "generation": 2,
      "ascendantID": "7yqumlnc-5fua-zfb4-n78u-5pqqheguuj23",
      "id": "vqxw0hfc-lu0p-zd4b-kgev-sjtlrr50ox0c",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min(mod(0.29737303,y),x))",
            "b": "sin(min(mod(externalVal,externalVal),externalVal))",
            "g": "sin(min(mod(x,0.95149374),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(x*externalVal)",
            "g": "(x*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(0.7474978,0.3108499)",
            "b": "pow(externalVal,0.0765512)",
            "g": "pow(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod(cos(max(0.7802756,externalVal)),x),y)",
            "b": "pow(mod(cos(max(externalVal,y)),0.2879007),externalVal)",
            "g": "pow(mod(cos(max(y,0.1561296)),externalVal),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(x*externalVal)",
            "g": "(x*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.90121627",
            "b": "0.4280758",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9959059",
            "b": "y",
            "g": "0.2916468"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(y,sin(cos((x-y))))/(x-externalVal))",
            "b": "(max(0.85977626,sin(cos((x-y))))/(externalVal-y))",
            "g": "(max(y,sin(cos((x-x))))/(x-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.50914145",
            "b": "0.4280758",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6033703+x)",
            "b": "(x+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6018491*x)",
            "b": "(x*externalVal)",
            "g": "(y*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise(mod(0.079398155,noise(pow(x,y),x)),0.93007314),((((tan(y)*externalVal)-0.8436358)+0.08551383)-(y/cos(0.0))))",
            "b": "min(noise(mod(x,noise(pow(0.5158725,externalVal),y)),externalVal),((((tan(externalVal)*externalVal)-externalVal)+externalVal)-(0.030382633/cos(x))))",
            "g": "min(noise(mod(x,noise(pow(y,externalVal),x)),y),((((tan(x)*x)-x)+externalVal)-(0.8952696/cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.5128199"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6507859/externalVal)",
            "b": "(externalVal/x)",
            "g": "(y/x)"
          }
        }
      ],
      "timestamp": "1h:29m:51s"
    },
    {
      "generation": 3,
      "ascendantID": "vqxw0hfc-lu0p-zd4b-kgev-sjtlrr50ox0c",
      "id": "rn8in5e5-3s04-2vwr-z0az-grbh0cjg3cks",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(noise(pow(0.29737303,y),x))",
            "b": "sin(noise(pow(externalVal,externalVal),externalVal))",
            "g": "sin(noise(pow(x,0.95149374),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.2927709,mod(pow(x,x),x)),0.55293083),((((cos(y)/externalVal)-0.61401665)*0.4490827)+(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,y),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)*externalVal)+(0.0*cos(0.92261195))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)*externalVal)+(x*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min(((noise(audio(externalVal,(externalVal/x)),sin(y))+(max(externalVal,x)/externalVal))+(externalVal-0.96578574)),x))",
            "b": "sin(min(((noise(audio(0.5655451,(y/x)),sin(0.742079))+(max(0.75104046,x)/externalVal))+(externalVal-0.49483943)),externalVal))",
            "g": "sin(min(((noise(audio(y,(externalVal/0.19218636)),sin(y))+(max(y,0.7537663)/y))+(externalVal-externalVal)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8974979*x)",
            "b": "(x*externalVal)",
            "g": "(y*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.50914145",
            "b": "0.4280758",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*x)",
            "b": "(x*externalVal)",
            "g": "(x*externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(y,sin(cos(0.6543001)))*(x-externalVal))",
            "b": "(max(0.85977626,sin(cos(externalVal)))*(externalVal-y))",
            "g": "(max(y,sin(cos(0.33979464)))*(x-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.7700174",
            "b": "y",
            "g": "0.2916468"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6149353/externalVal)",
            "b": "(externalVal/x)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6033703+x)",
            "b": "(x+externalVal)",
            "g": "(x+0.27938756)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min(mod(0.29737303,y),x))",
            "b": "sin(min(mod(externalVal,externalVal),externalVal))",
            "g": "sin(min(mod(x,0.95149374),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6507859*externalVal)",
            "b": "(externalVal*x)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.5128199"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.9883171/x)",
            "b": "(y/externalVal)",
            "g": "(0.0/externalVal)"
          }
        }
      ],
      "timestamp": "1h:29m:52s"
    },
    {
      "generation": 4,
      "ascendantID": "rn8in5e5-3s04-2vwr-z0az-grbh0cjg3cks",
      "id": "900i7s7e-oawo-dz2z-oy6f-qn9vddmscbs2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8974979/x)",
            "b": "(x/externalVal)",
            "g": "(y/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6149353/externalVal)",
            "b": "(externalVal/x)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772-x)",
            "b": "(y-externalVal)",
            "g": "(x-0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(0.120074034,x))",
            "b": "cos(min(x,externalVal))",
            "g": "cos(min(externalVal,0.019876719))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6507859*externalVal)",
            "b": "(externalVal*x)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.5128199"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6033703+x)",
            "b": "(x+externalVal)",
            "g": "(x+0.35092905)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(noise(mod(0.3977821,y),x))",
            "b": "sin(noise(mod(externalVal,externalVal),externalVal))",
            "g": "sin(noise(mod(x,0.85027087),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min(((noise(audio(externalVal,x),sin(y))+(max(externalVal,y)/externalVal))+(externalVal*x)),x))",
            "b": "sin(min(((noise(audio(0.3110649,y),sin(0.742079))+(max(0.75104046,x)/externalVal))+(externalVal*0.49483943)),externalVal))",
            "g": "sin(min(((noise(audio(y,y),sin(y))+(max(y,0.8184272)/y))+(externalVal*externalVal)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(noise(pow(0.29737303,y),x))",
            "b": "sin(noise(pow(externalVal,externalVal),externalVal))",
            "g": "sin(noise(pow(x,0.95149374),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(max(mod(0.8023772,y),x))",
            "b": "sin(max(mod(y,externalVal),externalVal))",
            "g": "sin(max(mod(x,x),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.2947424/externalVal)",
            "b": "(externalVal/x)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(max(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((tan(y)/externalVal)-0.8436358)*0.0)-(y*cos(0.24236465))))",
            "b": "min(max(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((tan(externalVal)/externalVal)-externalVal)*externalVal)-(0.100296974*cos(x))))",
            "g": "min(max(mod(x,mod(pow(y,externalVal),y)),y),((((tan(x)/x)-x)*externalVal)-(x*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.33979464"
          }
        }
      ],
      "timestamp": "1h:29m:53s"
    },
    {
      "generation": 5,
      "ascendantID": "900i7s7e-oawo-dz2z-oy6f-qn9vddmscbs2",
      "id": "yijvepch-gk64-lish-pi5o-mjudkiznzav4",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6507859/externalVal)",
            "b": "(externalVal/x)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6149353/externalVal)",
            "b": "(externalVal/0.9639011)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/externalVal)",
            "b": "(y/x)",
            "g": "(x/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min(((mod(pow(externalVal,x),sin(noise(x,0.2052207)))+(max(externalVal,y)/externalVal))+(externalVal/0.96954364)),x))",
            "b": "sin(min(((mod(pow(0.3110649,y),sin(noise(0.13675737,externalVal)))+(max(0.75104046,x)/externalVal))+(externalVal/0.49483943)),externalVal))",
            "g": "sin(min(((mod(pow(y,y),sin(noise(0.31534743,x)))+(max(y,0.8184272)/y))+(externalVal/externalVal)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.27631384)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.5128199"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6033703+x)",
            "b": "(x+externalVal)",
            "g": "(x+0.09878719)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(max(mod(0.079398155,pow(pow(x,y),x)),0.55293083),((((tan(x)*externalVal)-0.8436358)*0.32718626)+(y*cos(0.24236465))))",
            "b": "min(max(mod(x,pow(pow(0.5158725,externalVal),y)),externalVal),((((tan(y)*externalVal)-externalVal)*externalVal)+(0.100296974*cos(x))))",
            "g": "min(max(mod(x,pow(pow(y,externalVal),y)),y),((((tan(externalVal)*x)-x)*externalVal)+(x*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.25834396",
            "b": "y",
            "g": "0.96340513"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.88633835",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(noise(pow(0.3977821,y),x))",
            "b": "sin(noise(pow(externalVal,externalVal),externalVal))",
            "g": "sin(noise(pow(x,x),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(pow(0.45436576,x)))",
            "b": "sin(tan(pow(x,externalVal)))",
            "g": "sin(tan(pow(0.99605227,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(pow(0.29737303,y),x)/x)",
            "b": "(noise(pow(externalVal,externalVal),externalVal)/externalVal)",
            "g": "(noise(pow(x,0.8244215),y)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(noise(pow(0.0,y),x))",
            "b": "sin(noise(pow(externalVal,externalVal),externalVal))",
            "g": "sin(noise(pow(x,x),y))"
          }
        }
      ],
      "timestamp": "1h:29m:54s"
    },
    {
      "generation": 6,
      "ascendantID": "yijvepch-gk64-lish-pi5o-mjudkiznzav4",
      "id": "bk1rktix-vmtt-s1mu-0lj2-nnvs9iv8d0of",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(noise(pow(0.0,y),x))",
            "b": "sin(noise(pow(externalVal,y),externalVal))",
            "g": "sin(noise(pow(x,x),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(noise(mod(0.079398155,noise(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "max(noise(mod(x,noise(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "max(noise(mod(0.70336175,noise(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.49011728)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(pow(externalVal,y),x)/externalVal)",
            "b": "(noise(pow(y,externalVal),externalVal)/x)",
            "g": "(noise(pow(0.9324417,x),y)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.0",
            "b": "y",
            "g": "0.96340513"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.88633835",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.88633835",
            "b": "y",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(0.27631384)",
            "b": "cos(externalVal)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(noise(mod(0.3977821,y),x))",
            "b": "cos(noise(mod(externalVal,externalVal),externalVal))",
            "g": "cos(noise(mod(x,x),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(pow(x,y),x)/x)",
            "b": "(noise(pow(0.53830934,externalVal),externalVal)/externalVal)",
            "g": "(noise(pow(y,0.8244215),y)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+x)",
            "b": "(0.9639011+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.05439344,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)+0.08551383)-y))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)+externalVal)-x))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)+externalVal)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(pow(0.118463635,x)))",
            "b": "sin(tan(pow(x,externalVal)))",
            "g": "sin(tan(pow(x,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(mod(mod(0.29737303,y),x)/x)",
            "b": "(mod(mod(externalVal,externalVal),externalVal)/externalVal)",
            "g": "(mod(mod(x,0.5436363),y)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(((mod(pow(externalVal,x),cos(noise(x,0.0)))+(max(externalVal,y)/externalVal))+(externalVal*x)),x)/x)",
            "b": "(max(((mod(pow(0.3110649,y),cos(noise(0.13675737,externalVal)))+(max(0.75104046,x)/externalVal))+(externalVal*0.49483943)),externalVal)/externalVal)",
            "g": "(max(((mod(pow(y,y),cos(noise(0.31534743,x)))+(max(y,0.8184272)/y))+(externalVal*externalVal)),y)/externalVal)"
          }
        }
      ],
      "timestamp": "1h:29m:56s"
    },
    {
      "generation": 7,
      "ascendantID": "bk1rktix-vmtt-s1mu-0lj2-nnvs9iv8d0of",
      "id": "16ayjeql-r2mu-ajwd-rikj-41y31z7tsdh6",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan((mod(y,0.33357787)+0.2204392))+x)",
            "b": "(tan((mod(externalVal,externalVal)+y))+externalVal)",
            "g": "(tan((mod(y,y)+0.6795602))+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.5383401"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(audio(externalVal,y),x)/externalVal)",
            "b": "(min(audio(y,externalVal),externalVal)/0.8834764)",
            "g": "(min(audio(0.9324417,x),y)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.33979464"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.89522874+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(max(mod(0.079398155,mod(audio(x,x),x)),0.55293083),(externalVal*(y*sin(0.21464366))))",
            "b": "min(max(mod(x,mod(audio(0.5158725,externalVal),y)),externalVal),(externalVal*(0.0*sin(x))))",
            "g": "min(max(mod(x,mod(audio(y,externalVal),x)),y),(x*(x*sin(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(mod(mod(0.29737303,y),x)/y)",
            "b": "(mod(mod(externalVal,externalVal),externalVal)/externalVal)",
            "g": "(mod(mod(x,0.5436363),y)/0.6130409)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/0.80444795)",
            "b": "(externalVal/externalVal)",
            "g": "(externalVal/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.56182253)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(((noise(pow(externalVal,x),sin(mod(x,0.08713335)))+(max(externalVal,y)/externalVal))-(externalVal*0.86370766)),x)/x)",
            "b": "(max(((noise(pow(0.3110649,y),sin(mod(0.0,externalVal)))+(max(0.75104046,x)/externalVal))-(externalVal*0.49483943)),externalVal)/externalVal)",
            "g": "(max(((noise(pow(y,y),sin(mod(0.31534743,x)))+(max(y,0.8184272)/y))-(externalVal*externalVal)),y)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(mod(0.079398155,mod(pow(x,y),y)),0.55293083))",
            "b": "tan(noise(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal))",
            "g": "tan(noise(mod(0.70336175,mod(pow(y,externalVal),y)),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(mod(x,y),x)/x)",
            "b": "(min(mod(0.53830934,externalVal),y)/externalVal)",
            "g": "(min(mod(y,0.8244215),y)/externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(pow(0.3657743,y),x))",
            "b": "cos(min(pow(externalVal,externalVal),externalVal))",
            "g": "cos(min(pow(x,x),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.88633835",
            "b": "y",
            "g": "0.33979464"
          }
        }
      ],
      "timestamp": "1h:29m:57s"
    },
    {
      "generation": 8,
      "ascendantID": "16ayjeql-r2mu-ajwd-rikj-41y31z7tsdh6",
      "id": "mo38aaxf-qxe8-imfc-e8bq-v1ra50hk9vo8",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/0.56560326)",
            "b": "(y/y)",
            "g": "(0.0015084743/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(x)*externalVal)*0.8436358)-0.08256641)-(y/cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(x)*externalVal)*externalVal)-externalVal)-(0.22851482/cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(y)*x)*x)-externalVal)-(0.8998447/cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(pow(mod(0.29737303,y),x)/x)",
            "b": "(pow(mod(externalVal,externalVal),externalVal)/externalVal)",
            "g": "(pow(mod(x,0.84490764),y)/0.24476099)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6298328/y)",
            "b": "(externalVal/externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.24236465)+x)",
            "b": "(cos(x)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.89522874+y)",
            "b": "(y+externalVal)",
            "g": "(0.9063229+0.0040977597)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.56182253/0.12667274)",
            "b": "(externalVal/y)",
            "g": "(y/0.14188504)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6543001",
            "b": "externalVal",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.42521617",
            "b": "externalVal",
            "g": "0.2313165"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.0)"
          }
        }
      ],
      "timestamp": "1h:29m:59s"
    },
    {
      "generation": 9,
      "ascendantID": "mo38aaxf-qxe8-imfc-e8bq-v1ra50hk9vo8",
      "id": "5drud1bt-uoca-lljv-sa2z-ai7y53efg8ii",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(noise(mod((x-y),0.9112556),mod(pow(x,y),x)),0.55293083),((((cos(y)*externalVal)-0.8436358)-0.08551383)+(y/cos(0.24236465))))",
            "b": "noise(min(noise(mod((externalVal-externalVal),0.6638589),mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)*externalVal)-externalVal)-externalVal)+(0.030382633/cos(x))))",
            "g": "noise(min(noise(mod((x-externalVal),y),mod(pow(y,externalVal),y)),y),((((cos(x)*x)-x)-externalVal)+(x/cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(0.66979873+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(0.5487819)+x)",
            "b": "(sin(x)+externalVal)",
            "g": "(sin(externalVal)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.24236465)+x)",
            "b": "(cos(x)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(mod(0.079398155,noise(pow(x,y),x)),0.55293083),(((sin(mod(pow(cos(min(0.53144336,y)),tan(noise(max((externalVal+externalVal),(min(y,x)/min(noise(externalVal,externalVal),externalVal))),audio(y,externalVal)))),noise(mod(sin(externalVal),sin(externalVal)),x)))-0.7343962)-0.04845661)*(y*cos(0.24236465))))",
            "b": "noise(min(mod(x,noise(pow(0.5158725,externalVal),y)),externalVal),(((sin(mod(pow(cos(min(x,y)),tan(noise(max((x+externalVal),(min(x,x)/min(noise(externalVal,0.06162262),externalVal))),audio(y,y)))),noise(mod(sin(externalVal),sin(y)),y)))-externalVal)-externalVal)*(0.030382633*cos(x))))",
            "g": "noise(min(mod(x,noise(pow(y,externalVal),y)),y),(((sin(mod(pow(cos(min(y,0.9976702)),tan(noise(max((externalVal+x),(min(0.18595576,x)/min(noise(x,y),0.8185661))),audio(x,externalVal)))),noise(mod(sin(externalVal),sin(y)),0.015138626)))-x)-externalVal)*(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6298328)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(0.17309809,x)+x)",
            "b": "(noise(0.42005157,externalVal)+externalVal)",
            "g": "(noise(externalVal,x)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise(pow(0.0,pow(pow(x,y),x)),0.55293083),(((sin(tan(y))*x)-0.08551383)*(y*cos(0.24236465))))",
            "b": "min(noise(pow(x,pow(pow(0.5158725,externalVal),y)),externalVal),(((sin(tan(externalVal))*externalVal)-externalVal)*(0.030382633*cos(x))))",
            "g": "min(noise(pow(x,pow(pow(y,externalVal),y)),y),(((sin(tan(x))*x)-externalVal)*(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/0.59748304)",
            "b": "(y/y)",
            "g": "(0.0015084743/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/0.56560326)",
            "b": "(y/y)",
            "g": "(0.0015084743/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.07308799)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9967222",
            "b": "externalVal",
            "g": "0.7488681"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.94315046",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.42521617",
            "b": "externalVal",
            "g": "0.13761076"
          }
        }
      ],
      "timestamp": "1h:30m:0s"
    },
    {
      "generation": 10,
      "ascendantID": "5drud1bt-uoca-lljv-sa2z-ai7y53efg8ii",
      "id": "5ilddmod-ly6m-k2us-4aab-piyqr9dzmji1",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(x,0.08465862)+y)",
            "b": "(audio(x,externalVal)+externalVal)",
            "g": "(audio(externalVal,externalVal)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(noise(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)*externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(noise(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)*externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(noise(x,mod(pow(y,externalVal),y)),y),((((cos(x)*x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.7488681"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/0.59748304)",
            "b": "(y/y)",
            "g": "(0.0015084743/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+x)",
            "b": "(x+externalVal)",
            "g": "(x+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(y)",
            "g": "sin(0.0015084743)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(pow(mod(y,(0.44997072-y)),(x*(y/x))),x)+x)",
            "b": "(noise(pow(mod(y,(y-externalVal)),(x*(externalVal/x))),externalVal)+externalVal)",
            "g": "(noise(pow(mod(0.8875897,(x-0.014351606)),(y*(0.51821256/x))),x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8023772+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.21209589)+x)",
            "b": "(cos(0.86113226)+externalVal)",
            "g": "(cos(y)+0.13203281)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.7107005"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+x)",
            "b": "(y+externalVal)",
            "g": "(0.66979873+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(0.5487819)+x)",
            "b": "(sin(x)+externalVal)",
            "g": "(sin(externalVal)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+x)",
            "b": "(0.55891037+externalVal)",
            "g": "(y+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/0.8023772)",
            "b": "(y/y)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+y)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9967222",
            "b": "externalVal",
            "g": "0.7488681"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6298328)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(sin(0.5487819),0.7972948)+x)",
            "b": "(min(sin(x),externalVal)+externalVal)",
            "g": "(min(sin(y),x)+0.049308777)"
          }
        }
      ],
      "timestamp": "1h:30m:1s"
    },
    {
      "generation": 11,
      "ascendantID": "5ilddmod-ly6m-k2us-4aab-piyqr9dzmji1",
      "id": "y4efsgcr-2y0x-vmlp-7472-dhucrnz8pux6",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(0.48403472)+x)",
            "b": "(tan(0.5010357)+externalVal)",
            "g": "(tan(y)+0.034543306)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(y)+x)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(0.8520968)+0.4065254)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9967222",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)-y)",
            "b": "(cos(y)-externalVal)",
            "g": "(cos(y)-0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+x)",
            "b": "(externalVal+externalVal)",
            "g": "(0.24188638+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6298328)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(x,0.08465862)+x)",
            "b": "(audio(x,externalVal)+externalVal)",
            "g": "(audio(externalVal,externalVal)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.3796692+x)",
            "b": "(0.6251941+externalVal)",
            "g": "(y+0.10393074)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(x,externalVal)-y)",
            "b": "(audio(x,y)-externalVal)",
            "g": "(audio(externalVal,y)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6298328)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(x,externalVal)+x)",
            "b": "(noise(0.15413883,externalVal)+externalVal)",
            "g": "(noise(x,x)+0.13203281)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min(noise(0.079398155,mod(audio(x,y),x)),0.45229274),((((cos(y)/externalVal)-0.8436358)-0.08551383)+(y-cos(0.0))))",
            "b": "max(min(noise(x,mod(audio(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)+(0.030382633-cos(x))))",
            "g": "max(min(noise(x,mod(audio(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)+(0.9094732-cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(sin(0.059892416),0.7972948)+x)",
            "b": "(noise(sin(y),externalVal)+externalVal)",
            "g": "(noise(sin(externalVal),y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+x)",
            "b": "(0.64638084+externalVal)",
            "g": "(y+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(0.6298328)",
            "b": "cos(externalVal)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.7488681"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+y)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+x)",
            "b": "(y+externalVal)",
            "g": "(0.9326091+0.26166132)"
          }
        }
      ],
      "timestamp": "1h:30m:2s"
    },
    {
      "generation": 12,
      "ascendantID": "y4efsgcr-2y0x-vmlp-7472-dhucrnz8pux6",
      "id": "vo84rv7m-3wuq-6tpp-8pjd-mp3cc7rp7z78",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(0.6298328)",
            "b": "cos(externalVal)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.7488681"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(cos(0.059892416),0.74734515)+x)",
            "b": "(min(cos(externalVal),externalVal)+externalVal)",
            "g": "(min(cos(externalVal),y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(externalVal+externalVal)",
            "g": "(0.24188638+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(noise(0.079398155,pow(pow(x,y),x)),0.4669068),((((tan(y)/externalVal)-0.8436358)-x)+(y*cos(0.24236465))))",
            "b": "noise(min(noise(x,pow(pow(0.5158725,externalVal),y)),externalVal),((((tan(externalVal)/externalVal)-externalVal)-x)+(0.0*cos(x))))",
            "g": "noise(min(noise(x,pow(pow(y,externalVal),y)),y),((((tan(x)/x)-x)-externalVal)+(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(0.6298328)",
            "b": "cos(externalVal)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(y)+x)",
            "b": "(tan(y)+externalVal)",
            "g": "(tan(0.8520968)+0.4065254)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(x,externalVal)+x)",
            "b": "(audio(x,y)+externalVal)",
            "g": "(audio(externalVal,y)+0.26166132)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6298328)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+y)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9967222",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+y)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.07353988)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+x)",
            "b": "(0.64638084+externalVal)",
            "g": "(y+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.26166132)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6298328)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(x,pow(x,cos(audio(y,x))))-y)",
            "b": "(audio(x,pow(externalVal,cos(audio(x,externalVal))))-externalVal)",
            "g": "(audio(y,pow(x,cos(audio(x,x))))-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+y)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(0.9850161,externalVal)+y)",
            "b": "(audio(externalVal,y)+externalVal)",
            "g": "(audio(0.44298553,y)+0.0)"
          }
        }
      ],
      "timestamp": "1h:30m:3s"
    },
    {
      "generation": 13,
      "ascendantID": "vo84rv7m-3wuq-6tpp-8pjd-mp3cc7rp7z78",
      "id": "czwrknr3-jfsf-pufz-nnl7-8ftz87vsgjz0",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)-y)",
            "b": "(cos(x)-externalVal)",
            "g": "(cos(y)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+y)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(0.5994804)",
            "b": "cos(0.818269)",
            "g": "cos(0.8366914)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.26166132)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(max(mod(0.079398155,audio(audio(x,y),x)),0.4669068),(((sin(tan(y))-0.8436358)+y)+(y-(tan(0.9206009)/0.3643636))))",
            "b": "noise(max(mod(x,audio(audio(0.5158725,externalVal),y)),externalVal),(((sin(tan(externalVal))-externalVal)+x)+(0.0-(tan(x)/externalVal))))",
            "g": "noise(max(mod(x,audio(audio(y,externalVal),y)),y),(((sin(tan(x))-x)+externalVal)+(0.9094732-(tan(x)/0.63672626))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(cos(0.059892416),0.74734515)+x)",
            "b": "(min(cos(externalVal),externalVal)+externalVal)",
            "g": "(min(cos(externalVal),y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6298328)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+x)",
            "b": "(0.64638084+externalVal)",
            "g": "(y+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(externalVal)+y)",
            "b": "(tan(y)+externalVal)",
            "g": "(tan(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(x,mod(x,cos(audio(y,x))))-y)",
            "b": "(audio(x,mod(externalVal,cos(audio(x,externalVal))))-externalVal)",
            "g": "(audio(y,mod(x,cos(audio(x,x))))-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)-x)",
            "b": "(sin(externalVal)-externalVal)",
            "g": "(sin(y)-0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(y)+x)",
            "b": "(tan(y)+externalVal)",
            "g": "(tan(0.8520968)+0.4065254)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6298328)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-x)",
            "b": "(0.64638084-externalVal)",
            "g": "(y-0.066286325)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.68596244+x)",
            "b": "(externalVal+externalVal)",
            "g": "(0.35540867+0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(0.6298328)",
            "b": "cos(externalVal)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)-x)",
            "b": "(cos(y)-externalVal)",
            "g": "(cos(y)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+x)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        }
      ],
      "timestamp": "1h:30m:4s"
    },
    {
      "generation": 14,
      "ascendantID": "czwrknr3-jfsf-pufz-nnl7-8ftz87vsgjz0",
      "id": "okk2gtrj-vdxx-tdi6-1gov-eepc6igae1p5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(mod(0.079398155,mod(pow(x,y),x)),0.55293083),((((cos(y)/externalVal)-0.8436358)-0.08551383)-(y*cos(0.24236465))))",
            "b": "min(min(mod(x,mod(pow(0.5158725,externalVal),y)),externalVal),((((cos(externalVal)/externalVal)-externalVal)-externalVal)-(0.030382633*cos(x))))",
            "g": "min(min(mod(x,mod(pow(y,externalVal),y)),y),((((cos(x)/x)-x)-externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((0.9611831*x),x)+x)",
            "b": "(min((x*0.5070498),0.30065656)+externalVal)",
            "g": "(min((0.60660887*y),y)+0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6298328/cos(externalVal))",
            "b": "(externalVal/cos(x))",
            "g": "(y/cos(0.7848115))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos((externalVal/y))*y)",
            "b": "(cos((externalVal/x))*externalVal)",
            "g": "(cos((externalVal/0.22308564))*0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise(mod(0.0,pow(pow(x,y),x)),0.23650885),((((tan(y)*externalVal)-0.8436358)+0.08551383)-(y*cos(0.24236465))))",
            "b": "min(noise(mod(x,pow(pow(0.49794453,externalVal),y)),externalVal),((((tan(externalVal)*externalVal)-externalVal)+externalVal)-(0.018386781*cos(x))))",
            "g": "min(noise(mod(x,pow(pow(y,externalVal),y)),y),((((tan(x)*x)-x)+externalVal)-(0.8818711*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+x)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(externalVal)+x)",
            "b": "(tan(externalVal)+externalVal)",
            "g": "(tan(y)+0.4065254)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)*y)",
            "b": "(sin(x)*externalVal)",
            "g": "(sin(y)*0.1251755)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+y)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal/0.543221)+x)",
            "b": "((externalVal/externalVal)+externalVal)",
            "g": "((y/x)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(tan(0.30598393),0.74734515)+x)",
            "b": "(min(tan(externalVal),externalVal)+externalVal)",
            "g": "(min(tan(externalVal),y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)+y)",
            "b": "(sin(x)+externalVal)",
            "g": "(sin(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6298328)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(externalVal)-x)",
            "b": "(tan(y)-externalVal)",
            "g": "(tan(y)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.68596244-x)",
            "b": "(externalVal-externalVal)",
            "g": "(0.53811014-0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(0.5994804)",
            "b": "cos(0.818269)",
            "g": "cos(0.8366914)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.55293083),((((cos(y)/externalVal)-x)*0.0)-(y*cos(0.24236465))))",
            "b": "noise(min(cos(x),externalVal),((((cos(externalVal)/externalVal)-externalVal)*externalVal)-(0.030382633*cos(x))))",
            "g": "noise(min(cos(externalVal),y),((((cos(x)/x)-x)*externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.26166132)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+x)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(y)+0.0)"
          }
        }
      ],
      "timestamp": "1h:30m:6s"
    },
    {
      "generation": 15,
      "ascendantID": "okk2gtrj-vdxx-tdi6-1gov-eepc6igae1p5",
      "id": "kr49023n-r7qy-o5ej-k5kn-cnm6oe0ie9p8",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.55293083),((((cos(y)/externalVal)-x)*0.0)-(y*cos(0.24236465))))",
            "b": "noise(min(cos(x),externalVal),((((cos(externalVal)/externalVal)-externalVal)*externalVal)-(0.030382633*cos(x))))",
            "g": "noise(min(cos(externalVal),y),((((cos(x)/x)-x)*externalVal)-(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(externalVal)-x)",
            "b": "(tan(0.15624046)-externalVal)",
            "g": "(tan(0.8583064)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((0.9611831*x),x)+x)",
            "b": "(min((x*0.5070498),0.30065656)+externalVal)",
            "g": "(min((0.60660887*y),y)+0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(externalVal)+x)",
            "b": "(tan(externalVal)+externalVal)",
            "g": "(tan(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)-y)",
            "b": "(sin(x)-externalVal)",
            "g": "(sin(y)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos((externalVal/y))/y)",
            "b": "(cos((externalVal/x))/externalVal)",
            "g": "(cos((externalVal/0.22308564))/0.23637787)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)+y)",
            "b": "(sin(x)+externalVal)",
            "g": "(sin(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((x*x),x)+x)",
            "b": "(min((x*0.5070498),0.30065656)+externalVal)",
            "g": "(min((0.5981082*y),y)+0.32044703)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(cos(x),0.55293083),(((sin(cos(y))-x)*0.0)+(y*cos(0.24236465))))",
            "b": "min(min(cos(x),externalVal),(((sin(cos(externalVal))-externalVal)*externalVal)+(0.030382633*cos(x))))",
            "g": "min(min(cos(externalVal),y),(((sin(cos(x))-x)*externalVal)+(0.9094732*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.55293083),(((tan(max((sin(noise(y,x))+x),y))+0.8906864)*0.0)-(y*(0.24236465/0.543221))))",
            "b": "noise(min(cos(x),externalVal),(((tan(max((sin(noise(0.55953884,x))+externalVal),x))+externalVal)*externalVal)-(0.030382633*(x/externalVal))))",
            "g": "noise(min(cos(externalVal),y),(((tan(max((sin(noise(y,y))+x),x))+x)*externalVal)-(0.9094732*(y/0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((0.9611831*x),x)-x)",
            "b": "(min((x*0.5070498),0.30065656)-externalVal)",
            "g": "(min((0.6688503*y),y)-0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal/0.543221)+x)",
            "b": "((externalVal/externalVal)+externalVal)",
            "g": "((y/x)+0.049308777)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max((sin(sin(((externalVal+y)/audio(0.13354735,y))))/0.2857833),externalVal)+x)",
            "b": "(max((sin(sin(((x+externalVal)/audio(x,externalVal))))/y),x)+externalVal)",
            "g": "(max((sin(sin(((0.63950175+x)/audio(0.7808199,y))))/0.12628484),externalVal)+0.4085604)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+x)",
            "b": "(y+externalVal)",
            "g": "(x+0.78014123)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(pow(0.5953083,tan(min(max(externalVal,x),max(pow((y-externalVal),y),0.07987094))))*x)",
            "b": "(pow(externalVal,tan(min(max(y,y),max(pow((x-externalVal),0.3534658),0.22561264))))*externalVal)",
            "g": "(pow(externalVal,tan(min(max(y,x),max(pow((0.68360376-externalVal),0.5556247),0.49882197))))*0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((0.9611831/x),x)+x)",
            "b": "(min((x/0.17671943),0.12533355)+externalVal)",
            "g": "(min((0.60660887/y),y)+0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio((externalVal+0.46402264),y)+x)",
            "b": "(audio((x+externalVal),0.59024036)+externalVal)",
            "g": "(audio((y+x),0.3132789)+0.4065254)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+x)",
            "b": "(cos(y)+externalVal)",
            "g": "(cos(externalVal)+0.0)"
          }
        }
      ],
      "timestamp": "1h:30m:9s"
    },
    {
      "generation": 16,
      "ascendantID": "kr49023n-r7qy-o5ej-k5kn-cnm6oe0ie9p8",
      "id": "j9pqkwze-rzbv-krgn-7j85-sj5tcclybnju",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.55293083),(((tan(max((sin(noise(y,x))+x),y))+0.8906864)*0.0)-(y*(0.24236465/0.543221))))",
            "b": "noise(min(cos(x),externalVal),(((tan(max((sin(noise(0.55953884,x))+externalVal),x))+externalVal)*externalVal)-(0.030382633*(x/externalVal))))",
            "g": "noise(min(cos(externalVal),y),(((tan(max((sin(noise(y,y))+x),x))+x)*externalVal)-(0.9094732*(y/0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(externalVal)+x)",
            "b": "(tan(externalVal)+externalVal)",
            "g": "(tan(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(pow(0.5953083,tan(min(max(externalVal,x),min(externalVal,noise(min(noise(noise(0.2155621,externalVal),externalVal),x),externalVal)))))/x)",
            "b": "(pow(externalVal,tan(min(max(y,y),min(x,noise(min(noise(noise(0.5649793,x),y),y),externalVal)))))/externalVal)",
            "g": "(pow(externalVal,tan(min(max(y,x),min(externalVal,noise(min(noise(noise(externalVal,0.6428542),externalVal),0.28262758),y)))))/0.7360722)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.55293083),(((tan(max((sin(tan((sin(cos(y))/x)))+x),y))+0.8906864)*0.0)+(y*(0.6197475/0.543221))))",
            "b": "noise(min(cos(x),externalVal),(((tan(max((sin(tan((sin(cos(x))/x)))+externalVal),x))+externalVal)*externalVal)+(0.030382633*(x/externalVal))))",
            "g": "noise(min(cos(externalVal),y),(((tan(max((sin(tan((sin(cos(y))/externalVal)))+x),x))+x)*externalVal)+(0.9094732*(y/0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((0.9611831*x),x)+x)",
            "b": "(min((x*0.5070498),0.30065656)+externalVal)",
            "g": "(min((0.60660887*y),y)+0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(y,0.8520262),(((tan(cos((cos(mod(y,x))-x)))+0.8906864)*0.0)-(y/sin(0.24236465))))",
            "b": "noise(min(0.97262454,externalVal),(((tan(cos((cos(mod(0.55953884,y))-externalVal)))+externalVal)*externalVal)-(0.030382633/sin(x))))",
            "g": "noise(min(y,y),(((tan(cos((cos(mod(y,y))-x)))+x)*externalVal)-(0.9094732/sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(x)-y)",
            "b": "(sin(0.7762096)-y)",
            "g": "(sin(0.97140837)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)+y)",
            "b": "(sin(x)+externalVal)",
            "g": "(sin(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((tan((x*externalVal))-y),x)+x)",
            "b": "(min((tan((y*x))-x),0.30065656)+externalVal)",
            "g": "(min((tan((x*externalVal))-y),y)+0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((x+pow((noise(y,(y/x))+max(externalVal,externalVal)),0.7065158)),x)+x)",
            "b": "(min((externalVal+pow((noise(0.052001953,(0.7370446/externalVal))+max(y,0.44530725)),0.7116034)),0.30065656)+externalVal)",
            "g": "(min((externalVal+pow((noise(y,(y/0.8440659))+max(x,x)),externalVal)),y)+0.32044703)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)-y)",
            "b": "(sin(x)-externalVal)",
            "g": "(sin(y)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(mod(pow(x,y),y)+y)",
            "b": "(mod(pow(y,externalVal),0.5859966)+externalVal)",
            "g": "(mod(pow(x,externalVal),externalVal)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal/0.543221)+x)",
            "b": "((externalVal/externalVal)+externalVal)",
            "g": "((y/x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)+x)",
            "b": "(sin(x)+externalVal)",
            "g": "(sin(y)+0.24346891)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((min((0.9611831/x),x)+x)+y)",
            "b": "((min((x/0.17671943),0.12533355)+externalVal)+y)",
            "g": "((min((0.978655/y),y)+0.55805475)+0.32314387)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(externalVal)+x)",
            "b": "(tan(externalVal)+externalVal)",
            "g": "(tan(y)+0.0)"
          }
        }
      ],
      "timestamp": "1h:30m:22s"
    },
    {
      "generation": 17,
      "ascendantID": "j9pqkwze-rzbv-krgn-7j85-sj5tcclybnju",
      "id": "3w4zxz3e-ajn6-d8cx-ubaq-jps43qzpbvjf",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.55293083),(((tan(max((sin(noise(y,x))+x),y))+0.8906864)*0.0)-(y*(0.24236465/0.543221))))",
            "b": "noise(min(cos(x),externalVal),(((tan(max((sin(noise(0.55953884,x))+externalVal),x))+externalVal)*externalVal)-(0.030382633*(x/externalVal))))",
            "g": "noise(min(cos(externalVal),y),(((tan(max((sin(noise(y,y))+x),x))+x)*externalVal)-(0.9094732*(y/0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(tan(x),0.24195176),(((max(max(((tan((((x/(externalVal+x))/0.0)/x))/0.42806458)+x),y),x)-0.62681854)*0.05993405)+(y*(0.6197475*0.33537215))))",
            "b": "mod(noise(tan(x),externalVal),(((max(max(((tan((((y/(y+x))/externalVal)/x))/y)+externalVal),x),0.790113)-externalVal)*externalVal)+(0.030382633*(x*y))))",
            "g": "mod(noise(tan(externalVal),y),(((max(max(((tan((((y/(0.89901924+0.7809073))/y)/externalVal))/0.06768417)+x),x),externalVal)-x)*externalVal)+(0.99013966*(y*0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((x+pow((noise(y,(y/x))+max(externalVal,externalVal)),0.7065158)),x)+x)",
            "b": "(min((externalVal+pow((noise(0.052001953,(0.7370446/externalVal))+max(y,0.47824866)),0.7116034)),0.30065656)+externalVal)",
            "g": "(min((externalVal+pow((noise(y,(y/0.8440659))+max(x,x)),externalVal)),y)+0.279911)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(mod(x,y),y)+y)",
            "b": "(noise(mod(y,externalVal),0.5859966)+externalVal)",
            "g": "(noise(mod(x,externalVal),externalVal)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((pow(pow(externalVal,0.6200881),y)/0.543221)+x)",
            "b": "((pow(pow(externalVal,y),0.093601465)/externalVal)+externalVal)",
            "g": "((pow(pow(y,x),y)/x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)+y)",
            "b": "(sin(x)+externalVal)",
            "g": "(sin(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(max(tan(x),sin(x)),x)+x)",
            "b": "(noise(max(tan(y),sin(y)),0.14571762)+externalVal)",
            "g": "(noise(max(tan(0.5899651),sin(externalVal)),x)+0.32044703)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(x)*y)",
            "b": "(sin(0.7762096)*y)",
            "g": "(sin(0.97140837)*0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(tan(x),0.55293083),(((tan(tan((sin(max(sin(cos(cos(y))),0.74536484))+x)))+0.8906864)*0.0)+(y*(0.6197475*0.543221))))",
            "b": "noise(min(tan(x),externalVal),(((tan(tan((sin(max(sin(cos(cos(x))),externalVal))+externalVal)))+externalVal)*externalVal)+(0.030382633*(x*externalVal))))",
            "g": "noise(min(tan(externalVal),y),(((tan(tan((sin(max(sin(cos(cos(y))),y))+x)))+x)*externalVal)+(0.9094732*(externalVal*0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)-y)",
            "b": "(sin(x)-externalVal)",
            "g": "(sin(y)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.94407535"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((tan((x*externalVal))+y),x)+x)",
            "b": "(min((tan((y*x))+0.11985922),0.30065656)+externalVal)",
            "g": "(min((tan((x*externalVal))+x),y)+0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal/x)-y)",
            "b": "((x/y)-externalVal)",
            "g": "((y/x)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9145439",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(externalVal)+x)",
            "b": "(cos(x)+y)",
            "g": "(cos(y)+0.24346891)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.6462513),(((tan(tan((sin(noise(y,x))-x)))+0.9654154)*0.19639757)+(y*(0.24236465/0.543221))))",
            "b": "noise(min(cos(x),externalVal),(((tan(tan((sin(noise(0.55953884,x))-externalVal)))+externalVal)*externalVal)+(0.19034389*(x/externalVal))))",
            "g": "noise(min(cos(externalVal),y),(((tan(tan((sin(noise(y,y))-x)))+x)*externalVal)+(0.9094732*(y/0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(y,0.8520262),(((tan(0.9611831)+0.8906864)*0.0)-(y/sin(0.24236465))))",
            "b": "noise(min(0.97262454,externalVal),(((tan(x)+externalVal)*externalVal)-(0.030382633/sin(x))))",
            "g": "noise(min(y,y),(((tan(0.978655)+x)*externalVal)-(0.9094732/sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(0.5953083,tan(min(max(externalVal,x),max(externalVal,noise(min(noise(noise(0.0,externalVal),externalVal),x),externalVal)))))/x)",
            "b": "(audio(externalVal,tan(min(max(y,y),max(x,noise(min(noise(noise(0.5649793,x),y),y),externalVal)))))/externalVal)",
            "g": "(audio(externalVal,tan(min(max(y,y),max(externalVal,noise(min(noise(noise(externalVal,0.6428542),externalVal),0.28262758),y)))))/0.7360722)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(max(cos(x),0.55293083),(((tan(max(((max(sin(sin(sin(y))),x)/0.42806458)+x),y))-0.7195082)*0.0)+(y*tan(0.29533648))))",
            "b": "noise(max(cos(x),externalVal),(((tan(max(((max(sin(sin(sin(x))),externalVal)/y)+externalVal),x))-externalVal)*externalVal)+(0.030382633*tan(x))))",
            "g": "noise(max(cos(externalVal),x),(((tan(max(((max(sin(sin(sin(y))),y)/0.06768417)+x),x))-x)*externalVal)+(0.9094732*tan(y))))"
          }
        }
      ],
      "timestamp": "1h:30m:24s"
    },
    {
      "generation": 18,
      "ascendantID": "3w4zxz3e-ajn6-d8cx-ubaq-jps43qzpbvjf",
      "id": "pqy44rpu-jery-r702-pwwk-2pwd84ijrbm3",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.55293083),(((tan(max((sin(noise(y,x))+x),y))+0.8906864)*0.0)-(y*(0.24236465/0.543221))))",
            "b": "noise(min(cos(x),externalVal),(((tan(max((sin(noise(0.55953884,x))+externalVal),x))+externalVal)*externalVal)-(0.030382633*(x/externalVal))))",
            "g": "noise(min(cos(externalVal),y),(((tan(max((sin(noise(y,y))+x),x))+x)*externalVal)-(0.9094732*(y/0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)+y)",
            "b": "(sin(x)+y)",
            "g": "(sin(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.9328444/x)-y)",
            "b": "((x/y)-externalVal)",
            "g": "((y/x)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x/x)*y)",
            "b": "((y/y)*externalVal)",
            "g": "((0.94407535/x)*0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal/x)-y)",
            "b": "((x/y)-externalVal)",
            "g": "((y/x)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((x+audio((y-min(externalVal,externalVal)),0.46350032)),x)+x)",
            "b": "(min((externalVal+audio((externalVal-min(y,0.47824866)),0.7116034)),0.0)+externalVal)",
            "g": "(min((externalVal+audio((externalVal-min(x,x)),externalVal)),y)+0.279911)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min(x,0.50786674),((audio((min((noise(max(min(audio(max(min(y,min((cos(0.084347725)+0.85947585),y)),x),x),y),0.67278814),x)*x),min(0.72504425,x))*pow(tan(y),x)),sin(0.340034))*0.0)-(y/sin(0.24236465))))",
            "b": "mod(min(0.85739046,externalVal),((audio((min((noise(max(min(audio(max(min(externalVal,min((cos(y)+externalVal),y)),externalVal),0.19903421),x),x),externalVal)*0.61169577),min(y,y))*pow(tan(x),externalVal)),sin(externalVal))*externalVal)-(0.030382633/sin(x))))",
            "g": "mod(min(y,y),((audio((min((noise(max(min(audio(max(min(x,min((cos(x)+y),0.12828922)),externalVal),x),y),x),externalVal)*0.635344),min(y,y))*pow(tan(y),externalVal)),sin(0.25752497))*externalVal)-(0.9094732/sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((pow(mod(externalVal,0.9095061),y)*0.543221)+x)",
            "b": "((pow(mod(externalVal,y),0.093601465)*externalVal)+externalVal)",
            "g": "((pow(mod(y,x),y)*x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.9713987"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(mod(externalVal,0.6200881),y)/0.543221)+x)",
            "b": "((mod(mod(externalVal,y),0.0)/externalVal)+externalVal)",
            "g": "((mod(mod(y,x),y)/x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max((tan((x/externalVal))+y),x)+x)",
            "b": "(max((tan((y/x))+0.11985922),0.0)+externalVal)",
            "g": "(max((tan((x/externalVal))+x),y)+0.55805475)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)+y)",
            "b": "(sin(x)+y)",
            "g": "(sin(y)+0.24346891)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((pow(pow(externalVal,0.6200881),y)*0.543221)+x)",
            "b": "((pow(pow(externalVal,y),0.093601465)*externalVal)+externalVal)",
            "g": "((pow(pow(y,x),y)*x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)+y)",
            "b": "(sin(x)+externalVal)",
            "g": "(sin(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(tan(x),0.55293083),(((tan(cos((sin(noise(y,x))+x)))+0.8906864)*0.0)*(y*(0.24236465/0.543221))))",
            "b": "min(min(tan(x),externalVal),(((tan(cos((sin(noise(0.55953884,x))+externalVal)))+externalVal)*externalVal)*(0.030382633*(x/externalVal))))",
            "g": "min(min(tan(externalVal),y),(((tan(cos((sin(noise(y,y))+x)))+x)*externalVal)*(x*(y/0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(pow(audio((y/x),0.7416632),y))+x)",
            "b": "(sin(pow(audio((x/y),y),0.093601465))+externalVal)",
            "g": "(sin(pow(audio((y/x),x),y))+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(sin(x),0.6462513),(((tan(tan((sin(max(y,x))-x)))+0.9654154)*0.19639757)+(y*sin(0.6275401))))",
            "b": "noise(min(sin(x),externalVal),(((tan(tan((sin(max(0.55953884,x))-externalVal)))+externalVal)*externalVal)+(0.19034389*sin(x))))",
            "g": "noise(min(sin(externalVal),y),(((tan(tan((sin(max(y,y))-x)))+x)*externalVal)+(0.9094732*sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+x)",
            "b": "(0.09331775+y)",
            "g": "(externalVal+0.24346891)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(noise(pow(x,y),y)+y)",
            "b": "(noise(pow(y,externalVal),0.5859966)+externalVal)",
            "g": "(noise(pow(x,externalVal),externalVal)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)-y)",
            "b": "(sin(x)-externalVal)",
            "g": "(sin(y)-0.0)"
          }
        }
      ],
      "timestamp": "1h:30m:27s"
    },
    {
      "generation": 19,
      "ascendantID": "pqy44rpu-jery-r702-pwwk-2pwd84ijrbm3",
      "id": "trjikqhz-1w15-43u1-8j0u-38xbxviwap9n",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.55293083),(((tan(max((sin(noise(y,x))+x),y))+0.8906864)*0.0)-(y*(0.24236465/0.543221))))",
            "b": "noise(min(cos(x),externalVal),(((tan(max((sin(noise(0.55953884,x))+externalVal),x))+externalVal)*externalVal)-(0.030382633*(x/externalVal))))",
            "g": "noise(min(cos(externalVal),y),(((tan(max((sin(noise(y,y))+x),x))+x)*externalVal)-(0.9094732*(y/0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((pow(pow(externalVal,0.6200881),y)*0.543221)+x)",
            "b": "((pow(pow(externalVal,y),0.0)*externalVal)+externalVal)",
            "g": "((pow(pow(y,x),y)*x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(cos(y),0.30054912),(((tan(tan((externalVal-x)))-0.8906864)*0.0)-(y*(0.24236465/0.543221))))",
            "b": "mod(noise(cos(x),externalVal),(((tan(tan((x-externalVal)))-externalVal)*externalVal)-(0.030382633*(x/externalVal))))",
            "g": "mod(noise(cos(externalVal),y),(((tan(tan((y-x)))-x)*externalVal)-(0.9094732*(y/0.85495985))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal/x)-y)",
            "b": "((x/y)-externalVal)",
            "g": "((y/x)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.8847108*0.543221)+x)",
            "b": "((y*externalVal)+externalVal)",
            "g": "((y*x)+0.27854368)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)+y)",
            "b": "(sin(x)+y)",
            "g": "(sin(y)+0.51182)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.6462513),(((cos(tan((cos(min(y,x))-x)))+0.6599915)*mod(sin(sin(y)),audio((y/y),y)))+(y-sin(0.6275401))))",
            "b": "noise(min(cos(x),externalVal),(((cos(tan((cos(min(0.55953884,y))-externalVal)))+externalVal)*mod(sin(sin(externalVal)),audio((externalVal/x),x)))+(0.19034389-sin(x))))",
            "g": "noise(min(cos(externalVal),y),(((cos(tan((cos(min(y,y))-x)))+x)*mod(sin(sin(0.80817103)),audio((x/y),externalVal)))+(0.9094732-sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x/x)*y)",
            "b": "((y/y)*externalVal)",
            "g": "((x/x)*0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(audio(0.16157627,y))+x)",
            "b": "(sin(audio(x,0.093601465))+externalVal)",
            "g": "(sin(audio(externalVal,y))+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(pow(audio(0.2435062,0.7416632),y))+x)",
            "b": "(sin(pow(audio(externalVal,y),0.0))+externalVal)",
            "g": "(sin(pow(audio(x,x),y))+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(mod(min(externalVal,0.6462513),(((max(tan((sin(max(y,x))-x)),x)+0.6356727)*0.19639757)+(y*sin(0.935339)))))+x)",
            "b": "(sin(mod(min(0.8689463,externalVal),(((max(tan((sin(max(0.3199001,x))-externalVal)),0.3346311)+externalVal)*externalVal)+(0.4068935*sin(x)))))+externalVal)",
            "g": "(sin(mod(min(externalVal,y),(((max(tan((sin(max(y,y))-x)),externalVal)+x)*externalVal)+(0.9094732*sin(y)))))+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x/x)*y)",
            "b": "((y/y)*externalVal)",
            "g": "((0.94407535/x)*0.29964158)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((pow(pow(externalVal,0.9095061),y)*0.5155184)-x)",
            "b": "((pow(pow(externalVal,y),0.093601465)*externalVal)-externalVal)",
            "g": "((pow(pow(y,x),y)*x)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(y)+y)",
            "b": "(sin(x)+y)",
            "g": "(sin(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((x/x),0.6462513),(((tan(max((sin(max(y,x))*x),y))+0.9654154)*0.19639757)+(y*sin(0.6275401))))",
            "b": "noise(min((x/0.7968322),externalVal),(((tan(max((sin(max(0.55953884,x))*externalVal),y))+externalVal)*externalVal)+(0.19034389*sin(x))))",
            "g": "noise(min((externalVal/externalVal),y),(((tan(max((sin(max(y,y))*x),y))+x)*externalVal)+(0.9094732*sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.9328444/x)-y)",
            "b": "((x/y)-externalVal)",
            "g": "((y/x)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(max((externalVal-y),externalVal),x)+x)",
            "b": "(max(max((x-y),externalVal),0.0)+externalVal)",
            "g": "(max(max((y-y),0.83326125),y)+0.279911)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.78354716"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((y/x),0.6462513),(((cos(tan((cos(max(y,x))-x)))+0.9654154)*0.19639757)+(externalVal*sin(0.6275401))))",
            "b": "noise(min((y/0.48955795),externalVal),(((cos(tan((cos(max(0.55953884,x))-externalVal)))+externalVal)*externalVal)+(0.19034389*sin(x))))",
            "g": "noise(min((externalVal/externalVal),y),(((cos(tan((cos(max(y,y))-x)))+x)*externalVal)+(0.9094732*sin(y))))"
          }
        }
      ],
      "timestamp": "1h:30m:29s"
    },
    {
      "generation": 20,
      "ascendantID": "trjikqhz-1w15-43u1-8j0u-38xbxviwap9n",
      "id": "n000t2jo-aeay-vewt-mik5-ntc1nlbm4tsd",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal/x)-x)",
            "b": "((x/y)-externalVal)",
            "g": "((y/x)-0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*0.543221)+x)",
            "b": "((y*externalVal)+externalVal)",
            "g": "((y*x)+0.27854368)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(noise(y,x),externalVal),(((tan(max((cos(min(y,x))-x),y))-0.7949958)-0.0)*(y-sin(0.24236465))))",
            "b": "noise(noise(noise(externalVal,externalVal),y),(((tan(max((cos(min(0.22942382,x))-externalVal),x))-externalVal)-externalVal)*(0.030382633-sin(x))))",
            "g": "noise(noise(noise(x,x),y),(((tan(max((cos(min(y,y))-x),x))-x)-externalVal)*(0.9094732-sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min(cos(y),0.6462513),(((tan(tan((sin(max(y,x))-x)))+0.6599915)*mod(sin(cos(y)),pow((y/y),y)))+(externalVal+sin(0.6275401))))",
            "b": "mod(min(cos(y),externalVal),(((tan(tan((sin(max(0.55953884,y))-externalVal)))+externalVal)*mod(sin(cos(externalVal)),pow((externalVal/x),x)))+(0.19034389+sin(x))))",
            "g": "mod(min(cos(externalVal),y),(((tan(tan((sin(max(y,y))-x)))+x)*mod(sin(cos(0.80817103)),pow((x/y),externalVal)))+(0.9094732+sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-x)",
            "b": "(y-externalVal)",
            "g": "(externalVal-0.43436807)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min(sin(x),0.4288538),(((tan(tan(((noise(x,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.7802478))",
            "b": "mod(min(sin(y),externalVal),(((tan(tan(((noise(externalVal,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "mod(min(sin(externalVal),x),(((tan(tan(((noise(0.8192024,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "(externalVal*externalVal)",
            "g": "(0.8458035*0.008703619)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.8847108*0.8795936)+x)",
            "b": "((y*y)+externalVal)",
            "g": "((y*x)+0.27854368)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(y)+y)",
            "b": "(sin(x)+y)",
            "g": "(sin(y)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((pow(cos(min((y+x),y)),y)*0.543221)+x)",
            "b": "((pow(cos(min((externalVal+y),0.28024435)),0.0)*externalVal)+externalVal)",
            "g": "((pow(cos(min((0.88290405+x),x)),y)*x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((x/x),0.6462513),(((tan(max(((externalVal*min((externalVal-y),sin(x)))+x),y))+x)-0.21446884)+0.42125058))",
            "b": "noise(noise((x/0.7968322),externalVal),(((tan(max(((externalVal*min((0.030380487-externalVal),sin(x)))+externalVal),y))+externalVal)-externalVal)+y))",
            "g": "noise(noise((externalVal/externalVal),x),(((tan(max(((x*min((y-x),sin(x)))+x),y))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((externalVal-y)/x)*y)",
            "b": "(((x-y)/y)*externalVal)",
            "g": "(((y-0.01621738)/x)*0.29964158)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(sin(x),0.6462513),tan(externalVal))",
            "b": "mod(noise(sin(x),y),tan(x))",
            "g": "mod(noise(sin(externalVal),x),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(min(externalVal,0.6462513),(((min(tan((sin(min(y,x))+x)),x)+0.6356727)*0.48992383)+(y-sin(0.935339))))/0.6031637)+x)",
            "b": "((mod(min(x,externalVal),(((min(tan((sin(min(0.3199001,x))+externalVal)),0.16056769)+externalVal)*externalVal)+(0.5997938-sin(x))))/externalVal)+externalVal)",
            "g": "((mod(min(externalVal,y),(((min(tan((sin(min(y,y))+x)),externalVal)+x)*externalVal)+(0.9094732-sin(y))))/x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(cos(x),0.6462513),(((max(cos(((mod(y,y)/0.09376949)-x)),x)+0.9654154)-0.4869683)+0.42125058))",
            "b": "noise(min(cos(x),y),(((max(cos(((mod(0.31605935,x)/y)-externalVal)),0.16156876)+externalVal)-externalVal)+y))",
            "g": "noise(min(cos(externalVal),x),(((max(cos(((mod(x,y)/0.06768417)-x)),externalVal)+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.78354716"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((y*x),0.6462513),(((cos(cos((cos(max(y,x))-x)))+0.9654154)/0.024623558)+(y/sin(0.9820678))))",
            "b": "noise(min((y*0.48955795),externalVal),(((cos(cos((cos(max(0.55953884,x))-externalVal)))+externalVal)/externalVal)+(0.10359141/sin(y))))",
            "g": "noise(min((externalVal*externalVal),y),(((cos(cos((cos(max(y,y))-x)))+x)/externalVal)+(x/sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise(sin(x),0.6462513),(((x+0.9654154)-0.20739457)+0.33165532))",
            "b": "min(noise(sin(x),externalVal),(((x+externalVal)-externalVal)+externalVal))",
            "g": "min(noise(sin(externalVal),x),(((0.8766675+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x/x)-y)",
            "b": "((y/y)-externalVal)",
            "g": "((0.78354716/x)-0.0)"
          }
        }
      ],
      "timestamp": "1h:30m:40s"
    },
    {
      "generation": 21,
      "ascendantID": "n000t2jo-aeay-vewt-mik5-ntc1nlbm4tsd",
      "id": "f91jw1uq-g57x-sd1s-vtoi-s4lxzywhxbn7",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((y*x),0.6462513),(((cos(sin((cos(tan(y))+x)))+0.9654154)/0.024623558)+(y/sin(0.9820678))))",
            "b": "mod(noise((y*0.48955795),externalVal),(((cos(sin((cos(tan(0.55953884))+externalVal)))+externalVal)/externalVal)+(0.10359141/sin(y))))",
            "g": "mod(noise((externalVal*externalVal),y),(((cos(sin((cos(tan(y))+0.9106226)))+x)/externalVal)+(x/sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod(sin(x),0.5045645),cos(externalVal))",
            "b": "noise(mod(sin(x),externalVal),cos(externalVal))",
            "g": "noise(mod(sin(externalVal),x),cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(sin(x),0.6462513),tan(y))",
            "b": "mod(noise(sin(x),y),tan(x))",
            "g": "mod(noise(sin(externalVal),x),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((externalVal/0.09376949)-x)))-0.62732434)+0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((externalVal/y)-externalVal)))-externalVal)+externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((externalVal/0.06768417)-x)))-x)+externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*x)",
            "b": "(externalVal*externalVal)",
            "g": "(y*0.21244791)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((y/x),0.6462513),(((cos(cos((cos(tan(y))*x)))+0.9654154)/externalVal)+(((externalVal-0.543221)+x)/cos(0.9820678))))",
            "b": "noise(noise((y/0.48955795),externalVal),(((cos(cos((cos(tan(0.55953884))*externalVal)))+externalVal)/externalVal)+(((y-y)+externalVal)/cos(y))))",
            "g": "noise(noise((externalVal/externalVal),y),(((cos(cos((cos(tan(y))*0.7900839)))+x)/externalVal)+(((y-x)+0.27854368)/cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((y*x),0.6462513),(((max(cos((sin(max(y,x))+0.8699427)),x)-x)*0.024623558)+(y/sin(0.9820678))))",
            "b": "noise(min((y*0.48955795),externalVal),(((max(cos((sin(max(0.33923495,x))+externalVal)),0.46514052)-externalVal)*externalVal)+(0.0/sin(y))))",
            "g": "noise(min((externalVal*externalVal),y),(((max(cos((sin(max(y,y))+x)),externalVal)-x)*externalVal)+(x/sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod(externalVal,externalVal),(((tan(max((tan(max(y,x))-x),y))-0.6011785)+0.36448058)*(y*sin(0.24236465))))",
            "b": "noise(mod(0.49101448,y),(((tan(max((tan(max(0.055488214,x))-externalVal),x))-y)+externalVal)*(0.030382633*sin(x))))",
            "g": "noise(mod(x,y),(((tan(max((tan(max(y,y))-x),x))-x)+externalVal)*(x*sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal/x)/x)",
            "b": "((x/y)/externalVal)",
            "g": "((y/x)/0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y*x),0.6462513),(((cos(tan((cos(((externalVal-noise((externalVal-y),sin(x)))+x))-x)))+0.9654154)/y)+(y/sin(x))))",
            "b": "mod(min((y*0.48955795),externalVal),(((cos(tan((cos(((externalVal-noise((0.030380487-externalVal),sin(x)))+externalVal))-externalVal)))+externalVal)/externalVal)+(0.10359141/sin(y))))",
            "g": "mod(min((externalVal*externalVal),y),(((cos(tan((cos(((x-noise((y-x),sin(x)))+x))-x)))+x)/y)+(x/sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-x)",
            "b": "(y-externalVal)",
            "g": "(externalVal-0.43436807)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(cos(0.7650075)))-x)",
            "b": "(tan(sin(cos(externalVal)))-externalVal)",
            "g": "(tan(sin(cos(0.91778564)))-0.43436807)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((y*x),0.6462513),(((sin(cos((sin(max(y,x))+x)))+0.9654154)/0.024623558)-sin(noise(noise(cos(x),0.6462513),(((max(tan(0.52940345),x)+0.9241979)-0.49923006)-0.42125058)))))",
            "b": "noise(min((y*0.4770785),externalVal),(((sin(cos((sin(max(0.55953884,x))+externalVal)))+externalVal)/externalVal)-sin(noise(noise(cos(x),externalVal),(((max(tan(externalVal),0.3346311)+externalVal)-externalVal)-y)))))",
            "g": "noise(min((externalVal*externalVal),y),(((sin(cos((sin(max(y,y))+x)))+x)/externalVal)-sin(noise(noise(cos(externalVal),x),(((max(tan(externalVal),externalVal)+x)-externalVal)-y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((x/x),0.6462513),(((tan(max(((externalVal*min((externalVal-y),sin(x)))+x),y))+x)-y)+0.42125058))",
            "b": "mod(noise((x/0.7968322),externalVal),(((tan(max(((externalVal*min((0.030380487-externalVal),sin(x)))+externalVal),y))+externalVal)-x)+y))",
            "g": "mod(noise((externalVal/externalVal),x),(((tan(max(((x*min((y-x),sin(x)))+x),y))+x)-y)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x/x)/y)",
            "b": "((y/y)/externalVal)",
            "g": "((0.78354716/x)/0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(x,0.6462513),(((tan(tan((cos(max(noise(x,x),x))*x)))+0.9654154)/0.024623558)+sin(y)))",
            "b": "noise(min(y,externalVal),(((tan(tan((cos(max(noise(y,x),x))*externalVal)))+externalVal)/externalVal)+sin(0.047257245)))",
            "g": "noise(min(0.78354716,y),(((tan(tan((cos(max(noise(externalVal,x),y))*x)))+x)/externalVal)+sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*0.543221)+x)",
            "b": "((x*externalVal)+externalVal)",
            "g": "((externalVal*x)+0.16154471)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min(cos(y),0.6462513),(((tan(max((sin(min(y,x))+x),y))-0.6599915)*noise(sin(cos(y)),mod((y/externalVal),y)))+(externalVal+sin(0.8768159))))",
            "b": "mod(min(cos(y),externalVal),(((tan(max((sin(min(0.2917046,y))+externalVal),y))-externalVal)*noise(sin(cos(externalVal)),mod((externalVal/x),x)))+(0.19034389+sin(x))))",
            "g": "mod(min(cos(externalVal),y),(((tan(max((sin(min(x,y))+x),y))-x)*noise(sin(cos(0.80817103)),mod((x/y),externalVal)))+(0.9094732+sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.37479997-y)",
            "b": "(0.90882015-externalVal)",
            "g": "(x-0.29964158)"
          }
        }
      ],
      "timestamp": "1h:30m:46s"
    },
    {
      "generation": 22,
      "ascendantID": "f91jw1uq-g57x-sd1s-vtoi-s4lxzywhxbn7",
      "id": "to2q1qjm-gpnh-0uht-84le-3tda6f6hgein",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*0.543221)+x)",
            "b": "((x*externalVal)+externalVal)",
            "g": "((externalVal*x)+0.16154471)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((y*x),0.6462513),((((externalVal+x)+0.9654154)/0.024623558)+(y/sin(0.9820678))))",
            "b": "mod(noise((y*0.48955795),externalVal),((((externalVal+x)+externalVal)/externalVal)+(0.10359141/sin(y))))",
            "g": "mod(noise((externalVal*externalVal),y),((((y+x)+x)/externalVal)+(x/sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(x,0.9234773),(((max(tan((sin(min(0.6908753,x))-0.99213356)),y)+0.9654154)/0.024623558)+sin(y)))",
            "b": "noise(min(y,externalVal),(((max(tan((sin(min(externalVal,x))-externalVal)),0.1609474)+y)/externalVal)+sin(0.047257245)))",
            "g": "noise(min(0.78354716,y),(((max(tan((sin(min(0.74840856,y))-x)),externalVal)+x)/externalVal)+sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.37479997/y)",
            "b": "(0.90882015/externalVal)",
            "g": "(0.9295912/0.0032365024)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(externalVal)*x)",
            "b": "(sin(y)*externalVal)",
            "g": "(sin(y)*0.18980911)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(externalVal,externalVal),(((tan(max((tan(max(y,x))-x),y))-0.6011785)+0.36448058)/(y*sin(0.24236465))))",
            "b": "noise(noise(0.49101448,y),(((tan(max((tan(max(0.055488214,x))-externalVal),x))-y)+externalVal)/(0.36221084*sin(x))))",
            "g": "noise(noise(x,y),(((tan(max((tan(max(y,y))-x),x))-x)+externalVal)/(x*sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*x)",
            "b": "(externalVal*externalVal)",
            "g": "(y*0.32252312)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((x/x),0.6462513),(((tan(max(((externalVal-min((max(min(0.68497276,audio(pow(sin(pow((pow(0.46559358,x)/audio((x*0.58500504),y)),y)),x),0.539042)),(y-y))-y),(x/y)))+x),y))+x)-y)+0.42125058))",
            "b": "mod(noise((x/0.7968322),externalVal),(((tan(max(((externalVal-min((max(min(y,audio(pow(sin(pow((pow(externalVal,x)/audio((externalVal*x),0.52434826)),x)),y),externalVal)),(0.35953975-externalVal))-externalVal),(x/x)))+externalVal),y))+externalVal)-x)+y))",
            "g": "mod(noise((externalVal/externalVal),x),(((tan(max(((x-min((max(min(x,audio(pow(sin(pow((pow(y,0.418077)/audio((externalVal*externalVal),x)),externalVal)),0.9005642),externalVal)),(y-x))-x),(x/externalVal)))+x),y))+x)-y)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max(x,0.6462513),(((cos(tan((cos(max(min(x,x),x))/x)))+0.9654154)/0.024623558)+sin(y)))",
            "b": "mod(max(y,externalVal),(((cos(tan((cos(max(min(y,x),x))/externalVal)))+externalVal)/externalVal)+sin(0.047257245)))",
            "g": "mod(max(0.78354716,y),(((cos(tan((cos(max(min(externalVal,x),y))/x)))+x)/externalVal)+sin(0.75322276)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*0.543221)+x)",
            "b": "((x*externalVal)+externalVal)",
            "g": "((externalVal*x)+0.19842789)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(sin(x),0.6462513),0.6547694)",
            "b": "mod(noise(sin(y),y),x)",
            "g": "mod(noise(sin(externalVal),x),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y*x),0.41651756),(((cos(tan((cos(((externalVal-noise(0.5811291,sin(x)))+x))-x)))-0.62180626)/y)+(y/sin(x))))",
            "b": "mod(min((y*0.48955795),y),(((cos(tan((cos(((externalVal-noise(y,sin(0.9203236)))+externalVal))-externalVal)))-externalVal)/externalVal)+(0.10359141/sin(y))))",
            "g": "mod(min((externalVal*externalVal),y),(((cos(tan((cos(((x-noise(0.09763527,sin(x)))+x))-x)))-x)/y)+(x/sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((y*x),0.6462513),(((sin(cos(((max(y,x)/0.7334912)+x)))+0.9654154)/0.0)-sin(min(noise(cos(x),0.6462513),(((max(tan(0.52940345),x)+0.9241979)*0.49923006)-0.42125058)))))",
            "b": "noise(min((y*0.4770785),externalVal),(((sin(cos(((max(0.55953884,x)/x)+externalVal)))+externalVal)/externalVal)-sin(min(noise(cos(x),externalVal),(((max(tan(externalVal),0.3346311)+externalVal)*externalVal)-y)))))",
            "g": "noise(min((externalVal*externalVal),y),(((sin(cos(((max(y,y)/0.0)+x)))+x)/externalVal)-sin(min(noise(cos(externalVal),x),(((max(tan(externalVal),externalVal)+x)*externalVal)-y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod(sin(0.12843561),0.5045645),cos(externalVal))",
            "b": "noise(mod(sin(externalVal),externalVal),cos(externalVal))",
            "g": "noise(mod(sin(x),x),cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((y*x),0.9201777),(((cos(sin((cos(tan(y))+x)))-x)/0.32729262)+(externalVal/sin(0.9820678))))",
            "b": "mod(noise((y*0.48955795),externalVal),(((cos(sin((cos(tan(0.55953884))+externalVal)))-externalVal)/externalVal)+(0.10359141/sin(y))))",
            "g": "mod(noise((externalVal*externalVal),y),(((cos(sin((cos(tan(y))+0.9106226)))-x)/externalVal)+(x/sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max((y*x),0.6462513),(((sin(cos((cos(((externalVal-noise((externalVal-y),sin(x)))+x))-x)))+0.9654154)*y)+sin(y)))",
            "b": "mod(max((y*0.48955795),externalVal),(((sin(cos((cos(((externalVal-noise((0.030380487-externalVal),sin(x)))+externalVal))-externalVal)))+externalVal)*externalVal)+sin(0.10359141)))",
            "g": "mod(max((externalVal*externalVal),y),(((sin(cos((cos(((x-noise((y-x),sin(x)))+x))-x)))+x)*y)+sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod(audio(0.57217,y),0.5045645),cos(0.21446884))",
            "b": "noise(mod(audio(0.6552594,y),externalVal),cos(externalVal))",
            "g": "noise(mod(audio(0.8088076,externalVal),x),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*0.543221)+x)",
            "b": "((x*externalVal)+externalVal)",
            "g": "((externalVal*x)+0.16154471)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.010516912-y)",
            "b": "(0.90801126-externalVal)",
            "g": "(x-0.29964158)"
          }
        }
      ],
      "timestamp": "1h:30m:47s"
    },
    {
      "generation": 23,
      "ascendantID": "to2q1qjm-gpnh-0uht-84le-3tda6f6hgein",
      "id": "b41j6sbn-rkps-jpx4-3eyi-53wup4j4mep6",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.010516912-y)",
            "b": "(0.9499207-externalVal)",
            "g": "(x-0.29964158)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y*x),0.41651756),(((tan(tan((cos(((externalVal-noise(0.3542982,sin(x)))+x))-x)))-0.62180626)-y)-(y/sin(x))))",
            "b": "mod(min((y*0.62311935),y),(((tan(tan((cos(((y-noise(y,sin(0.9203236)))+externalVal))-externalVal)))-externalVal)-externalVal)-(0.10359141/sin(y))))",
            "g": "mod(min((externalVal*externalVal),y),(((tan(tan((cos(((x-noise(0.115796715,sin(x)))+x))-x)))-x)-y)-(x/sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*0.543221)+x)",
            "b": "((x*externalVal)+externalVal)",
            "g": "((externalVal*x)+0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise((x/x),0.6462513),(((tan(max(((externalVal-max((tan((sin((max(tan((cos(max(0.6890596,x))-0.99213356)),y)+0.9654154))+sin(y)))-y),(x/y)))+x),y))-x)-y)+0.42125058))",
            "b": "pow(noise((x/0.7968322),externalVal),(((tan(max(((externalVal-max((tan((sin((max(tan((cos(max(externalVal,y))-externalVal)),0.1609474)+y))+sin(0.0)))-externalVal),(x/x)))+externalVal),y))-externalVal)-x)+y))",
            "g": "pow(noise((externalVal/externalVal),x),(((tan(max(((x-max((tan((sin((max(tan((cos(max(0.37366074,y))-x)),externalVal)+x))+sin(x)))-x),(x/externalVal)))+x),y))-x)-y)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(max(x,0.6462513),(((cos(cos((cos(max(min(x,x),x))-x)))-x)/0.0)+sin(y)))",
            "b": "mod(max(y,externalVal),(((cos(cos((cos(max(min(x,x),x))-externalVal)))-externalVal)/externalVal)+sin(0.047257245)))",
            "g": "mod(max(0.78354716,y),(((cos(cos((cos(max(min(externalVal,x),y))-x)))-x)/externalVal)+sin(0.75322276)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*0.543221)+x)",
            "b": "((y*externalVal)+externalVal)",
            "g": "((externalVal*x)+0.16154471)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(x,0.9234773),(((max(tan((noise(x,0.1441729)/audio(min(tan((min(0.5062971,0.9465499)*min(externalVal,(y-0.03255868)))),externalVal),pow(mod(externalVal,y),x)))),y)+0.9654154)-0.024623558)+(y/(0.63398015/0.17460683))))",
            "b": "noise(noise(y,externalVal),(((max(tan((noise(externalVal,x)/audio(min(tan((min(externalVal,externalVal)*min(externalVal,(externalVal-externalVal)))),externalVal),pow(mod(y,externalVal),0.26389432)))),0.1609474)+y)-externalVal)+(0.047257245/(y/externalVal))))",
            "g": "noise(noise(0.78354716,y),(((max(tan((noise(y,0.746593)/audio(min(tan((min(y,0.23377943)*min(0.87037873,(externalVal-x)))),externalVal),pow(mod(x,externalVal),x)))),externalVal)+x)-externalVal)+(x/(x/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(x,cos(externalVal))",
            "b": "noise(0.5092163,cos(externalVal))",
            "g": "noise(0.2592144,cos(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.37479997/y)",
            "b": "(0.90882015/externalVal)",
            "g": "(0.9295912/0.0032365024)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise(externalVal,externalVal),(((tan(cos(externalVal))-0.6011785)+0.36448058)*(y*cos(0.24236465))))",
            "b": "min(noise(0.49101448,y),(((tan(cos(y))-y)+externalVal)*(0.6174473*cos(x))))",
            "g": "min(noise(x,y),(((tan(cos(x))-x)+externalVal)*(x*cos(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal-0.543221)+x)",
            "b": "((x-externalVal)+externalVal)",
            "g": "((externalVal-x)+0.16154471)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y*x),0.2799032),(((sin(cos(((max(y,x)/0.7334912)+x)))+0.9654154)-0.0)-cos(min(min(tan(x),0.7172959),(((max(tan(0.52940345),x)+0.9241979)*0.38135743)-0.42125058)))))",
            "b": "mod(min((y*0.4770785),externalVal),(((sin(cos(((max(0.55953884,x)/0.86651576)+externalVal)))+externalVal)-externalVal)-cos(min(min(tan(x),externalVal),(((max(tan(externalVal),0.3346311)+externalVal)*externalVal)-y)))))",
            "g": "mod(min((externalVal*externalVal),y),(((sin(cos(((max(y,y)/0.0)+x)))+x)-externalVal)-cos(min(min(tan(externalVal),x),(((max(tan(externalVal),externalVal)+x)*externalVal)-y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.264536/y)",
            "b": "(0.90882015/externalVal)",
            "g": "(0.9295912/0.0032365024)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(externalVal,externalVal),(((tan(max((0.5485375-x),y))-0.6011785)+0.36448058)/(y*sin(0.24236465))))",
            "b": "noise(noise(0.49101448,y),(((tan(max((externalVal-externalVal),y))-y)+externalVal)/(0.36221084*sin(x))))",
            "g": "noise(noise(x,y),(((tan(max((y-x),x))-x)+externalVal)/(x*sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((y*x),0.9201777),(((0.5166118-x)/0.32729262)+(y+y)))",
            "b": "noise(noise((y*0.48955795),externalVal),(((externalVal-externalVal)/externalVal)+(y+x)))",
            "g": "noise(noise((externalVal*externalVal),y),(((0.2080121-x)/externalVal)+(0.34023786+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(x,0.9234773),((max(noise(x,externalVal),0.8933735)*0.024623558)+(y/(0.40049273*0.26839063))))",
            "b": "pow(min(y,externalVal),((max(noise(x,x),0.41410756)*externalVal)+(0.0/(y*externalVal))))",
            "g": "pow(min(0.78354716,y),((max(noise(y,y),0.3774805)*externalVal)+(x/(x*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod(audio(min(mod(externalVal,externalVal),externalVal),y),0.5045645),cos(0.21446884))",
            "b": "noise(mod(audio(min(mod(0.667665,y),0.21655393),y),externalVal),cos(externalVal))",
            "g": "noise(mod(audio(min(mod(x,y),0.5586586),externalVal),x),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y*x),0.499146),(((cos(cos((sin(((externalVal-noise((externalVal-y),sin(x)))+x))-x)))+0.9654154)*y)+cos(y)))",
            "b": "mod(min((y*0.48955795),y),(((cos(cos((sin(((externalVal-noise((0.030380487-externalVal),sin(x)))+externalVal))-externalVal)))+externalVal)*externalVal)+cos(0.10359141)))",
            "g": "mod(min((externalVal*externalVal),y),(((cos(cos((sin(((x-noise((y-x),sin(x)))+x))-x)))+x)*y)+cos(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y*x),0.6462513),(((cos(sin((cos(((externalVal*noise((externalVal-y),sin(x)))+x))*x)))+0.9654154)*y)+(externalVal*sin(x))))",
            "b": "mod(min((y*0.48955795),externalVal),(((cos(sin((cos(((externalVal*noise((0.030380487-externalVal),sin(0.807871)))+externalVal))*externalVal)))+externalVal)*externalVal)+(0.10359141*sin(y))))",
            "g": "mod(min((externalVal*externalVal),y),(((cos(sin((cos(((x*noise((y-x),sin(x)))+x))*x)))+x)*y)+(0.6727541*sin(x))))"
          }
        }
      ],
      "timestamp": "1h:30m:52s"
    },
    {
      "generation": 24,
      "ascendantID": "b41j6sbn-rkps-jpx4-3eyi-53wup4j4mep6",
      "id": "fov5a3gn-lmsd-csy0-cjme-l8qiynm02lhd",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y-x),0.6462513),(((cos(sin((cos(((externalVal*noise((externalVal*y),cos(x)))+x))*x)))+0.9654154)*y)+(externalVal-(x/0.26839063))))",
            "b": "mod(min((y-0.778376),externalVal),(((cos(sin((cos(((externalVal*noise((0.030380487*externalVal),cos(0.93859136)))+externalVal))*externalVal)))+y)*externalVal)+(0.10359141-(y/y))))",
            "g": "mod(min((externalVal-externalVal),y),(((cos(sin((cos(((x*noise((y*x),cos(x)))+x))*x)))+x)*y)+(0.6727541-(x/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*0.48117)+x)",
            "b": "((0.040195227*externalVal)+externalVal)",
            "g": "((externalVal*x)+0.16154471)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((y*x),0.9201777),(sin((0.5166118*x))+(y+x)))",
            "b": "noise(noise((y*0.48955795),externalVal),(sin((externalVal*externalVal))+(y+0.72369355)))",
            "g": "noise(noise((externalVal*externalVal),y),(sin((0.2080121*x))+(0.34023786+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((min(max(y,externalVal),mod(y,y))*x),0.2799032),(((sin(cos(((min(y,x)/0.7334912)+x)))+0.9654154)-0.0)-cos(min(min(tan(x),0.7172959),(((min(tan(0.52940345),x)+0.9241979)*0.38815197)/0.42125058)))))",
            "b": "mod(min((min(max(externalVal,x),mod(externalVal,y))*0.4770785),externalVal),(((sin(cos(((min(0.55953884,y)/0.86651576)+externalVal)))+externalVal)-externalVal)-cos(min(min(tan(x),externalVal),(((min(tan(externalVal),0.3346311)+externalVal)*externalVal)/y)))))",
            "g": "mod(min((min(max(externalVal,y),mod(externalVal,y))*externalVal),y),(((sin(cos(((min(y,y)/0.0)+x)))+x)-externalVal)-cos(min(min(tan(externalVal),x),(((min(tan(externalVal),externalVal)+x)*externalVal)/y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min(sin(x),0.6462513),(((externalVal+0.9654154)+0.21446884)+0.6839495))",
            "b": "mod(min(sin(x),y),(((0.6423626+externalVal)+externalVal)+y))",
            "g": "mod(min(sin(externalVal),x),(((x+x)+externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,cos(externalVal))",
            "b": "mod(0.31568187,cos(externalVal))",
            "g": "mod(0.2592144,cos(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(x,0.9234773),((max(noise(x,externalVal),0.8933735)*0.024623558)+(y/(0.24176641*0.26839063))))",
            "b": "pow(noise(y,externalVal),((max(noise(x,x),0.41410756)*externalVal)+(0.0/(y*externalVal))))",
            "g": "pow(noise(0.78354716,y),((max(noise(y,y),0.3774805)*externalVal)+(x/(x*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(externalVal,externalVal),(((tan(max((0.5485375-x),y))+0.6011785)+0.25205556)/(y*sin(0.24236465))))",
            "b": "mod(mod(0.51055044,y),(((tan(max((externalVal-externalVal),y))+y)+externalVal)/(0.36221084*sin(x))))",
            "g": "mod(mod(x,y),(((tan(max((y-x),x))+x)+externalVal)/(x*sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal-0.543221)+x)",
            "b": "((x-externalVal)+externalVal)",
            "g": "((externalVal-x)+0.1100378)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(0.6748338,(((0.5166118-x)*0.32729262)+(y-y)))",
            "b": "noise(externalVal,(((externalVal-externalVal)*externalVal)+(y-x)))",
            "g": "noise(x,(((0.2080121-x)*externalVal)+(0.34023786-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((tan(min(((externalVal-max((tan((sin((tan(max((cos(max(0.017376423,x))*0.65164375),x))+0.9654154))+sin(y)))-y),(x/y)))+x),y))+x)-y)-0.41387886))",
            "b": "audio(y,(((tan(min(((externalVal-max((tan((sin((tan(max((cos(max(x,y))*externalVal),y))+y))+sin(0.0)))-externalVal),(x/x)))+externalVal),y))+externalVal)-x)-y))",
            "g": "audio(x,(((tan(min(((x-max((tan((sin((tan(max((cos(max(0.82466245,y))*x),x))+x))+sin(x)))-0.9337478),(x/externalVal)))+x),x))+x)-y)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(externalVal,externalVal),(((cos(cos(externalVal))-0.6011785)+0.36448058)*(y*cos(0.24236465))))",
            "b": "min(min(0.27595025,y),(((cos(cos(y))-y)+externalVal)*(0.6174473*cos(x))))",
            "g": "min(min(x,y),(((cos(cos(x))-x)+externalVal)*(x*cos(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min((y/x),0.41651756),(((tan(max((cos(((externalVal+y)+x))-x),y))+0.62180626)-y)-(y/cos(x))))",
            "b": "noise(min((y/0.62311935),y),(((tan(max((cos(((y+y)+externalVal))-externalVal),y))+externalVal)-externalVal)-(0.23482955/cos(y))))",
            "g": "noise(min((externalVal/externalVal),y),(((tan(max((cos(((x+externalVal)+x))-x),y))+x)-y)-(x/cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y-x),0.1369321),(((x-0.62180626)-y)+(y/sin(x))))",
            "b": "mod(min((y-0.52520907),y),(((y-externalVal)-externalVal)+(0.10359141/sin(y))))",
            "g": "mod(min((externalVal-externalVal),y),(((0.572521-x)-y)+(x/sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise((x/x),0.6462513),(((tan(max(((externalVal-tan((cos((((max(tan((cos(max(0.6890596,x))-0.99213356)),y)-0.8544783)/0.6025839)+sin(y)))*y)))-x),y))-x)-y)+0.42125058))",
            "b": "audio(noise((x/0.7968322),externalVal),(((tan(max(((externalVal-tan((cos((((max(tan((cos(max(externalVal,y))-externalVal)),0.5364161)-y)/externalVal)+sin(0.0)))*externalVal)))-externalVal),y))-externalVal)-x)+y))",
            "g": "audio(noise((externalVal/externalVal),x),(((tan(max(((x-tan((cos((((max(tan((cos(max(0.6989739,y))-x)),externalVal)-x)/externalVal)+sin(x)))*x)))-x),y))-x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal-0.6739509)+x)",
            "b": "((y-externalVal)+externalVal)",
            "g": "((externalVal-x)+0.16154471)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(x,0.9234773),((max(max(x,externalVal),0.8933735)-0.024623558)+(y/(0.46924722/0.5709798))))",
            "b": "pow(min(y,externalVal),((max(max(x,x),0.41410756)-externalVal)+(0.0/(y/y))))",
            "g": "pow(min(0.78354716,y),((max(max(y,y),0.3774805)-externalVal)+(x/(x/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(x,x),(((max(((min(noise(x,externalVal),x)-0.25245458)+(y/(0.52398825*0.26839063))),y)+x)-0.024623558)+(sin(externalVal)+0.040813923)))",
            "b": "noise(noise(y,externalVal),(((max(((min(noise(x,x),0.38252777)-externalVal)+(0.012617499/(y*externalVal))),0.1609474)+y)-externalVal)+(sin(0.014303446)+externalVal)))",
            "g": "noise(noise(0.78354716,y),(((max(((min(noise(y,y),0.47015733)-externalVal)+(x/(y*x))),externalVal)+x)-externalVal)+(sin(0.54033613)+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod((y-y),max(pow((externalVal+noise((x/x),0.92924356)),x),0.87462497)),externalVal)",
            "b": "noise(mod((externalVal-0.44925022),max(pow((0.7084515+noise((0.731035/0.9153428),y)),x),x)),externalVal)",
            "g": "noise(mod((y-externalVal),max(pow((y+noise((externalVal/y),y)),x),0.84988165)),x)"
          }
        }
      ],
      "timestamp": "1h:30m:56s"
    },
    {
      "generation": 25,
      "ascendantID": "fov5a3gn-lmsd-csy0-cjme-l8qiynm02lhd",
      "id": "rsom2hu3-ojqg-af2h-f889-155njoeq1olh",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(sin(x),0.6462513),(((tan(tan(((externalVal-tan((cos((((max(tan((cos(min(0.6890596,x))-0.99213356)),y)-0.8544783)/0.6025839)+sin(y)))-y)))*x)))-x)-y)+0.42125058))",
            "b": "pow(noise(sin(x),externalVal),(((tan(tan(((externalVal-tan((cos((((max(tan((cos(min(externalVal,y))-externalVal)),0.5364161)-y)/externalVal)+sin(0.0)))-externalVal)))*externalVal)))-externalVal)-x)+y))",
            "g": "pow(noise(sin(externalVal),x),(((tan(tan(((x-tan((cos((((max(tan((cos(min(0.6989739,y))-x)),externalVal)-x)/externalVal)+sin(x)))-x)))*x)))-x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise((y*x),x),(((0.5166118*x)/(((0.5166118+x)*0.32729262)+(x-y)))+(y+x)))",
            "b": "min(noise((y*0.48955795),externalVal),(((externalVal*externalVal)/(((externalVal+externalVal)*externalVal)+(externalVal-x)))+(y+0.72369355)))",
            "g": "min(noise((externalVal*externalVal),y),(((0.2080121*x)/(((0.46520385+x)*externalVal)+(0.08609623-x)))+(0.34023786+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(0.686398,(((0.5166118-x)-0.32729262)+(y-y)))",
            "b": "noise(externalVal,(((externalVal-externalVal)-externalVal)+(y-x)))",
            "g": "noise(x,(((0.2080121-x)-externalVal)+(0.06569466-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((tan(min(((externalVal-min((tan((sin((tan(max((tan(max(0.0,x))*0.65164375),x))-0.9654154))+sin(y)))-x),sin(x)))+x),y))-x)-y)-0.41387886))",
            "b": "audio(y,(((tan(min(((externalVal-min((tan((sin((tan(max((tan(max(x,x))*externalVal),y))-y))+sin(0.0)))-externalVal),sin(x)))+externalVal),y))-externalVal)-x)-y))",
            "g": "audio(x,(((tan(min(((x-min((tan((sin((tan(max((tan(max(0.5392685,y))*x),x))-x))+sin(x)))-0.9337478),sin(x)))+x),x))-x)-y)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal-0.543221)+x)",
            "b": "((x-externalVal)+externalVal)",
            "g": "((externalVal-x)+0.1100378)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(cos(y),(y/0.23253083))",
            "b": "min(cos(0.83604336),(0.61739874/0.750154))",
            "g": "min(cos(x),(0.62451863/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(cos(x),0.6462513),(0.08819246+0.4797151))",
            "b": "noise(noise(cos(y),externalVal),(x+y))",
            "g": "noise(noise(cos(externalVal),x),(y+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min((y-x),0.6462513),(((cos(sin((tan(((externalVal*min((((cos(x)-y)+0.29319358)/y),sin(x)))+x))-0.80294573)))+x)/y)+(externalVal-(0.83795923*0.3881439))))",
            "b": "mod(min((y-0.778376),externalVal),(((cos(sin((tan(((externalVal*min((((cos(externalVal)-externalVal)+0.6511035)/externalVal),sin(0.93859136)))+externalVal))-externalVal)))+y)/externalVal)+(0.0-(y*y))))",
            "g": "mod(min((externalVal-externalVal),y),(((cos(sin((tan(((x*min((((cos(x)-externalVal)+externalVal)/x),sin(x)))+x))-x)))+x)/y)+(x-(x*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(externalVal,externalVal),(((max(tan((0.5485375-y)),x)-0.6011785)-0.25205556)/(y*cos(0.24236465))))",
            "b": "pow(pow(0.51055044,y),(((max(tan((externalVal-externalVal)),0.3915553)-externalVal)-externalVal)/(0.36221084*cos(x))))",
            "g": "pow(pow(x,y),(((max(tan((y-x)),externalVal)-x)-externalVal)/(x*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,y)",
            "b": "mod(0.31568187,0.0)",
            "g": "mod(0.2592144,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(x,x),(((max(((max(externalVal,x)-0.25245458)+(y/(0.52398825*0.26839063))),y)+x)/0.024623558)+(sin(externalVal)+0.040813923)))",
            "b": "noise(noise(y,externalVal),(((max(((max(x,0.38252777)-externalVal)+(0.012617499/(y*externalVal))),0.1609474)+y)/externalVal)+(sin(0.2887614)+externalVal)))",
            "g": "noise(noise(0.78354716,y),(((max(((max(0.2625115,0.34265503)-externalVal)+(0.6679468/(y*x))),externalVal)+x)/externalVal)+(sin(0.54033613)+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(x,0.55725753),((max(noise(x,externalVal),0.8933735)*0.0)+(y/(0.24176641*0.26839063))))",
            "b": "pow(min(y,externalVal),((max(noise(x,x),0.41410756)*externalVal)+(0.0/(y*externalVal))))",
            "g": "pow(min(0.78354716,y),((max(noise(y,y),0.3774805)*externalVal)+(x/(x*x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(sin(x),0.6462513),(((externalVal+0.9654154)-0.21446884)+0.42125058))",
            "b": "mod(mod(sin(x),externalVal),(((x+externalVal)-externalVal)+y))",
            "g": "mod(mod(sin(externalVal),x),(((y+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((tan(min(((externalVal+max((max((sin((max(max((cos(max(0.017376423,0.972053))*0.65164375),x),y)+0.9654154))+sin(y)),(y+y))+x),(x/y)))+x),y))+x)-y)+0.41387886))",
            "b": "audio(y,(((tan(min(((externalVal+max((max((sin((max(max((cos(max(x,y))*externalVal),y),0.1609474)+y))+sin(0.0)),(0.6715719+externalVal))+externalVal),(x/x)))+externalVal),y))+externalVal)-x)+y))",
            "g": "audio(x,(((tan(min(((x+max((max((sin((max(max((cos(max(0.82466245,y))*x),x),externalVal)+x))+sin(x)),(y+x))+0.9337478),(x/externalVal)))+x),x))+x)-y)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(x,0.9234773),((max(x,0.8933735)+0.024623558)+(y*sin(0.46924722))))",
            "b": "noise(min(y,externalVal),((max(0.73752666,0.41410756)+externalVal)+(0.0*sin(y))))",
            "g": "noise(min(0.78354716,y),((max(externalVal,0.3774805)+externalVal)+(x*sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,min((x+x),(y-y)))",
            "b": "audio(y,min((y+0.5507715),(0.38685846-y)))",
            "g": "audio(x,min((0.119338274+x),(y-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(x,0.9234773),((sin(externalVal)/0.024623558)+(y*sin(0.24176641))))",
            "b": "pow(noise(y,externalVal),((sin(externalVal)/externalVal)+(0.0*sin(y))))",
            "g": "pow(noise(0.78354716,y),((sin(y)/externalVal)+(x*sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((max(min(((externalVal-max((max((sin((tan(tan((tan(max(0.017376423,x))-0.8805293)))-x))+sin(y)),(y+y))-y),(x/y)))+x),y),x)+x)*y)-0.41387886))",
            "b": "audio(y,(((max(min(((externalVal-max((max((sin((tan(tan((tan(max(x,y))-externalVal)))-y))+sin(0.0)),(x+externalVal))-externalVal),(x/x)))+externalVal),y),0.3346311)+externalVal)*x)-y))",
            "g": "audio(x,(((max(min(((x-max((max((sin((tan(tan((tan(max(0.82466245,y))-x)))-x))+sin(x)),(y+x))-0.9337478),(x/externalVal)))+x),x),externalVal)+x)*y)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(x,0.7192558),audio(0.27639794,y))",
            "b": "audio(min(y,externalVal),audio(y,0.112701654))",
            "g": "audio(min(0.44844446,y),audio(0.1937964,0.95744014))"
          }
        }
      ],
      "timestamp": "1h:30m:57s"
    },
    {
      "generation": 26,
      "ascendantID": "rsom2hu3-ojqg-af2h-f889-155njoeq1olh",
      "id": "o827n1nj-ub48-0h5g-xywv-hal3qffso8z5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,(sin((0.59302866*x))+(y+x)))",
            "b": "min(externalVal,(sin((externalVal*externalVal))+(y+0.72369355)))",
            "g": "min(0.27352476,(sin((0.60558*x))+(0.34023786+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((cos(min(((externalVal+max((max((sin((max(max((cos(max(0.017376423,0.972053))*0.65164375),x),y)+0.9654154))+sin(y)),(y+y))+x),(x/y)))+x),y))+x)-(mod(y,y)+x))+0.41387886))",
            "b": "audio(y,(((cos(min(((externalVal+max((max((sin((max(max((cos(max(y,y))*externalVal),y),0.091159984)+externalVal))+sin(0.0)),(0.6715719+externalVal))+externalVal),(x/x)))+externalVal),y))+externalVal)-(mod(externalVal,0.61432076)+y))+y))",
            "g": "audio(x,(((cos(min(((x+max((max((sin((max(max((cos(max(0.7906587,y))*x),x),externalVal)+x))+sin(x)),(y+x))+0.9337478),(x/externalVal)))+x),x))+x)-(mod(externalVal,0.535306)+y))+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(x,0.7192558),audio(0.47170863,y))",
            "b": "audio(min(y,externalVal),audio(y,0.112701654))",
            "g": "audio(min(0.44844446,y),audio(0.5451778,0.95744014))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((x/x),0.6462513),(((externalVal+0.9654154)+0.21446884)-0.42125058))",
            "b": "mod(mod((x/0.48524874),externalVal),(((x+externalVal)+externalVal)-y))",
            "g": "mod(mod((externalVal/externalVal),x),(((x+x)+externalVal)-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(x,y)",
            "b": "noise(0.31568187,0.0)",
            "g": "noise(0.2592144,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(x,0.7192558),pow(0.34479284,y))",
            "b": "audio(min(y,externalVal),pow(y,0.112701654))",
            "g": "audio(min(0.44844446,y),pow(0.1937964,0.95744014))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,min((x+x),(y-y)))",
            "b": "audio(y,min((y+0.5507715),(0.38685846-y)))",
            "g": "audio(x,min((0.119338274+x),(y-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(x,0.5410023),audio(0.27639794,y))",
            "b": "audio(max(y,externalVal),audio(y,0.0))",
            "g": "audio(max(0.44844446,y),audio(0.1937964,0.7011698))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((tan(noise(((externalVal+max((tan((sin((max(max((cos(max(0.0,0.972053))*0.65164375),x),y)+0.9654154))+sin(y)))+x),(x/y)))+x),y))+x)-y)+0.5478951))",
            "b": "audio(y,(((tan(noise(((externalVal+max((tan((sin((max(max((cos(max(x,y))*externalVal),y),0.1609474)+y))+sin(0.0)))+externalVal),(x/x)))+externalVal),y))+externalVal)-x)+externalVal))",
            "g": "audio(x,(((tan(noise(((x+max((tan((sin((max(max((cos(max(0.82466245,y))*x),x),externalVal)+x))+sin(x)))+0.9337478),(x/externalVal)))+x),x))+x)-y)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(max(externalVal,mod(externalVal,y)),0.64121115),((max(x,0.8933735)+0.024623558)+(y*cos(0.7041112))))",
            "b": "noise(min(max(externalVal,mod(y,y)),y),((max(0.73752666,0.41410756)+externalVal)+(0.0*cos(y))))",
            "g": "noise(min(max(x,mod(externalVal,externalVal)),x),((max(externalVal,0.3774805)+externalVal)+(x*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.9143754,(((tan(min(((externalVal+max((max((((max(tan((cos(max(0.09489173,0.972053))*0.65164375)),y)+0.9654154)/0.3972494)-min(y,x)),(y+y))-x),sin(x)))+x),y))+x)*y)+0.41387886))",
            "b": "audio(y,(((tan(min(((externalVal+max((max((((max(tan((cos(max(x,x))*externalVal)),0.1609474)+y)/externalVal)-min(0.31605935,x)),(0.6715719+externalVal))-externalVal),sin(x)))+externalVal),y))+externalVal)*x)+y))",
            "g": "audio(x,(((tan(min(((x+max((max((((max(tan((cos(max(0.82466245,y))*x)),externalVal)+x)/externalVal)-min(x,y)),(y+x))-0.7294801),sin(x)))+x),x))+x)*y)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(sin(x),0.6462513),(((y+0.9654154)-0.0)+0.42125058))",
            "b": "mod(noise(sin(y),externalVal),(((x+externalVal)-externalVal)+y))",
            "g": "mod(noise(sin(externalVal),x),(((externalVal+x)-externalVal)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod((y*x),0.71672773),(((0.5166118-x)/(((0.5166118+x)*0.32729262)+(x-y)))+(y+x)))",
            "b": "noise(mod((y*0.48955795),externalVal),(((externalVal-externalVal)/(((externalVal+externalVal)*externalVal)+(y-x)))+(y+0.72369355)))",
            "g": "noise(mod((externalVal*externalVal),y),(((0.2080121-x)/(((0.46520385+x)*externalVal)+(0.08609623-x)))+(0.34023786+y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(x,x),(((tan(((max(externalVal,x)*0.25245458)+(y/(0.7164284*0.47661138))))+x)*0.024623558)+(cos(externalVal)+0.040813923)))",
            "b": "noise(noise(y,externalVal),(((tan(((max(x,0.3199387)*externalVal)+(0.012617499/(y*externalVal))))+y)*externalVal)+(cos(0.2887614)+externalVal)))",
            "g": "noise(noise(0.78354716,y),(((tan(((max(0.2625115,0.34265503)*externalVal)+(0.6679468/(y*x))))+x)*externalVal)+(cos(0.54033613)+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((max(min(((externalVal-max((max((sin((tan(tan((tan(max(0.017376423,x))-0.8805293)))-x))+(y/(0.8069793*0.0))),(y+y))-y),(0.54867315*y)))+x),y),x)+x)/y)-0.41387886))",
            "b": "audio(y,(((max(min(((externalVal-max((max((sin((tan(tan((tan(max(x,y))-externalVal)))-y))+(0.26341876/(y*y))),(x+externalVal))-externalVal),(x*x)))+externalVal),y),0.3346311)+externalVal)/x)-y))",
            "g": "audio(x,(((max(min(((x-max((max((sin((tan(tan((tan(max(0.82466245,y))-x)))-x))+(x/(x*x))),(y+0.8442491))-0.9337478),(externalVal*externalVal)))+x),x),externalVal)+x)/y)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod(x,x),(((max(((max(externalVal,x)*0.022906408)+(x/(0.26749676*0.27013585))),y)+x)/0.024623558)+(sin(max((x+y),y))-0.28560546)))",
            "b": "noise(mod(y,externalVal),(((max(((max(x,0.38252777)*externalVal)+(0.0/(y*externalVal))),0.1609474)+y)/externalVal)+(sin(max((0.2672367+externalVal),x))-externalVal)))",
            "g": "noise(mod(0.43841943,y),(((max(((max(0.2625115,0.34265503)*externalVal)+(0.6679468/(y*0.90562063))),externalVal)+x)/externalVal)+(sin(max((externalVal+x),x))-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((max(min(((externalVal-tan((max((cos((max(tan((tan(min(0.0,0.97166896))-0.8805293)),y)+x))+(y*(0.8069793-0.0))),(y+y))-y)))+x),y),x)+x)-y)-0.41387886))",
            "b": "audio(y,(((max(min(((externalVal-tan((max((cos((max(tan((tan(min(x,y))-externalVal)),0.1609474)+externalVal))+(0.0*(y-y))),(x+externalVal))-externalVal)))+externalVal),y),0.3346311)+externalVal)-x)-y))",
            "g": "audio(x,(((max(min(((x-tan((max((cos((max(tan((tan(min(0.82466245,y))-x)),externalVal)+x))+(x*(x-x))),(y+x))-0.9337478)))+x),x),externalVal)+x)-y)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(x,0.55725753),((max(noise(x,externalVal),0.8933735)*0.0)+(x/(pow(x,x)*0.26839063))))",
            "b": "pow(min(y,externalVal),((max(noise(x,x),0.47943386)*externalVal)+(0.18544582/(pow(externalVal,y)*externalVal))))",
            "g": "pow(min(0.78354716,y),((max(noise(y,y),0.3774805)*externalVal)+(x/(pow(externalVal,externalVal)*0.7943439))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((tan(min(((externalVal+min((max((((tan(min((tan(min(0.0,x))*0.65164375),x))-0.9654154)/0.3972494)+sin(y)),(y+y))+x),(0.8269454/y)))+x),y))-x)-y)*0.41387886))",
            "b": "audio(y,(((tan(min(((externalVal+min((max((((tan(min((tan(min(x,x))*externalVal),y))-y)/externalVal)+sin(0.0)),(0.75141966+externalVal))+externalVal),(x/x)))+externalVal),y))-externalVal)-x)*y))",
            "g": "audio(x,(((tan(min(((x+min((max((((tan(min((tan(min(0.5392685,externalVal))*x),x))-x)/externalVal)+sin(x)),(y+x))+0.9337478),(x/externalVal)))+x),x))-x)-y)*x))"
          }
        }
      ],
      "timestamp": "1h:30m:59s"
    },
    {
      "generation": 27,
      "ascendantID": "o827n1nj-ub48-0h5g-xywv-hal3qffso8z5",
      "id": "jgm8wk8o-e4bu-56ri-nkl6-gkh2ywlmrnyo",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(cos(x),0.6462513),(y+0.74178123))",
            "b": "mod(noise(cos(y),externalVal),(0.14473486+y))",
            "g": "mod(noise(cos(externalVal),x),(y+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(x,x),(((tan(((max(externalVal,x)*0.25245458)+(y/(0.7164284*0.47661138))))+x)*0.024623558)+(pow(y,externalVal)-0.040813923)))",
            "b": "mod(noise(y,externalVal),(((tan(((max(x,0.3097734)*externalVal)+(0.012617499/(y*externalVal))))+y)*externalVal)+(pow(externalVal,x)-externalVal)))",
            "g": "mod(noise(0.78354716,y),(((tan(((max(0.2625115,0.040361434)*externalVal)+(0.6679468/(y*x))))+x)*externalVal)+(pow(y,0.16870236)-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(x,0.5954049),y)",
            "b": "pow(noise(y,externalVal),externalVal)",
            "g": "pow(noise(0.74162877,y),0.27352476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(x,0.7192558),pow(0.34479284,y))",
            "b": "audio(max(y,y),pow(y,0.112701654))",
            "g": "audio(max(0.30781406,x),pow(0.1937964,0.95744014))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((x/x),0.6462513),(((externalVal+0.9654154)+audio(min(x,0.5410023),audio(0.0,y)))*0.42125058))",
            "b": "mod(mod((x/0.48524874),externalVal),(((x+externalVal)+audio(min(y,externalVal),audio(y,0.0)))*y))",
            "g": "mod(mod((externalVal/externalVal),x),(((x+x)+audio(min(0.44844446,y),audio(0.1937964,0.7011698)))*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.77574426,(((max(min(((externalVal+min((max((((tan(x)-0.9654154)/0.3972494)+(y/(x-0.1724787))),(y+y))+x),(0.8269454/y)))+x),y),x)-x)-y)*0.41387886))",
            "b": "audio(y,(((max(min(((externalVal+min((max((((tan(0.22219348)-y)/externalVal)+(0.0/(y-externalVal))),(0.75141966+externalVal))+externalVal),(x/x)))+externalVal),y),0.19578913)-externalVal)-x)*y))",
            "g": "audio(y,(((max(min(((x+min((max((((tan(0.3244891)-x)/externalVal)+(x/(y-x))),(y+x))+0.9337478),(x/externalVal)))+x),x),externalVal)-x)-y)*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.9143754,(((tan(externalVal)+x)*y)+0.41387886))",
            "b": "audio(y,(((tan(externalVal)+externalVal)*x)+y))",
            "g": "audio(x,(((tan(x)+x)*y)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,(sin((0.59302866*x))+(y-x)))",
            "b": "max(externalVal,(sin((externalVal*externalVal))+(y-0.6318235)))",
            "g": "max(0.66112673,(sin((0.60558*x))+(0.1557434-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod(x,x),(((max(((max(externalVal,x)*0.022906408)+(x/(0.26749676*0.27013585))),y)+x)/0.024623558)+(sin(max((x-y),y))*0.066814646)))",
            "b": "noise(mod(y,externalVal),(((max(((max(x,0.5980264)*externalVal)+(0.12269059/(y*externalVal))),0.1609474)+y)/externalVal)+(sin(max((0.2672367-externalVal),x))*externalVal)))",
            "g": "noise(mod(0.43841943,y),(((max(((max(0.2625115,0.1888433)*externalVal)+(0.6679468/(x*0.90562063))),externalVal)+x)/externalVal)+(sin(max((externalVal-x),x))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max(x,0.5410023),audio(0.27639794,y))",
            "b": "pow(max(y,externalVal),audio(y,0.0))",
            "g": "pow(max(0.44844446,y),audio(0.1937964,0.7011698))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(x,0.7192558),x)",
            "b": "audio(max(y,externalVal),x)",
            "g": "audio(max(0.44844446,y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(x,0.7192558),pow(0.084997416,y))",
            "b": "audio(max(y,externalVal),pow(y,0.112701654))",
            "g": "audio(max(0.44844446,y),pow(0.1937964,0.95744014))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(min(max(externalVal,(x+0.5387628)),0.64121115),((max(x,0.8933735)+0.024623558)+(y*cos(0.91116595))))",
            "b": "noise(min(max(externalVal,(0.12448883+y)),y),((max(0.73752666,0.41410756)+externalVal)+(0.32639262*cos(y))))",
            "g": "noise(min(max(x,(externalVal+0.43463326)),x),((max(externalVal,0.3774805)+externalVal)+(0.71246046*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(x,y)",
            "b": "noise(0.31568187,0.0)",
            "g": "noise(0.2592144,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod(sin(x),0.6462513),(((externalVal+0.9654154)-0.21446884)-y))",
            "b": "pow(mod(sin(x),externalVal),(((x+externalVal)-externalVal)-x))",
            "g": "pow(mod(sin(externalVal),x),(((x+x)-externalVal)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((y*x),0.71672773),(((0.5166118-x)/(((0.5166118+x)*0.32729262)+(x-y)))-0.36907148))",
            "b": "noise(noise((y*0.48955795),y),(((externalVal-externalVal)/(((externalVal+externalVal)*externalVal)+(y-x)))-x))",
            "g": "noise(noise((externalVal*externalVal),y),(((0.2080121-x)/(((0.46520385+x)*externalVal)+(0.08609623-x)))-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max(x,0.5410023),audio(0.27639794,y))",
            "b": "pow(max(y,externalVal),audio(y,0.07374945))",
            "g": "pow(max(0.44844446,y),audio(0.30015424,0.7011698))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((cos(noise(((externalVal+max((tan((sin((min(max((max(min(0.0,0.75533533),0.96215725)*0.65164375),x),y)+0.9654154))+sin(y)))-x),(x/y)))+x),y))+x)-y)-0.44591266))",
            "b": "audio(y,(((cos(noise(((externalVal+max((tan((sin((min(max((max(min(x,y),x)*externalVal),y),0.1609474)+y))+sin(0.0)))-externalVal),(x/x)))+externalVal),y))+externalVal)-x)-externalVal))",
            "g": "audio(x,(((cos(noise(((x+max((tan((sin((min(max((max(min(0.82466245,y),0.50668246)*x),x),externalVal)+x))+sin(x)))-x),(x/externalVal)))+x),x))+x)-y)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.9143754,(((tan(noise(((externalVal+max((tan((((max(tan(0.19907403),y)+0.9654154)/0.3972494)*min(y,x)))-x),sin(x)))+x),y))+x)/y)-0.41387886))",
            "b": "audio(y,(((tan(noise(((externalVal+max((tan((((max(tan(x),0.1609474)+externalVal)/externalVal)*min(0.31605935,x)))-externalVal),sin(x)))+externalVal),y))+externalVal)/x)-y))",
            "g": "audio(x,(((tan(noise(((x+max((tan((((max(tan(x),externalVal)+x)/externalVal)*min(x,y)))-0.7294801),sin(x)))+x),x))+x)/y)-x))"
          }
        }
      ],
      "timestamp": "1h:31m:3s"
    },
    {
      "generation": 28,
      "ascendantID": "jgm8wk8o-e4bu-56ri-nkl6-gkh2ywlmrnyo",
      "id": "7o42zghf-o466-dr09-bjr3-8hwgfkjc7pld",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max(x,0.5410023),audio(0.27639794,y))",
            "b": "pow(max(y,externalVal),audio(y,0.0))",
            "g": "pow(max(0.44844446,y),audio(0.1937964,0.7011698))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((x/x),0.6462513),(((externalVal+0.9654154)+audio(min(x,0.5410023),audio(0.0,y)))*0.42125058))",
            "b": "mod(mod((x/0.48524874),externalVal),(((x+externalVal)+audio(min(y,externalVal),audio(y,0.0)))*y))",
            "g": "mod(mod((externalVal/externalVal),x),(((y+x)+audio(min(0.44844446,y),audio(0.1937964,0.7011698)))*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(((cos(noise(((externalVal-max((max((sin((min(max((max(min(0.0,0.75533533),0.96215725)*0.65164375),x),y)+0.9654154))+sin(y)),(y+y))-x),(x*y)))+x),y))+x)*y)-0.44591266))",
            "b": "audio(y,(((cos(noise(((externalVal-max((max((sin((min(max((max(min(x,y),x)*externalVal),y),0.1609474)+y))+sin(0.0)),(0.3309029+externalVal))-externalVal),(x*x)))+externalVal),y))+externalVal)*x)-externalVal))",
            "g": "audio(x,(((cos(noise(((x-max((max((sin((min(max((max(min(0.65282035,y),0.4172138)*x),x),externalVal)+x))+sin(x)),(externalVal+x))-x),(x*externalVal)))+x),x))+x)*y)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise(cos(x),0.6462513),(((tan(tan(((mod(y,x)/0.01210928)-x)))+0.9654154)+0.12742507)+0.37755045))",
            "b": "min(noise(cos(x),externalVal),(((tan(tan(((mod(0.31605935,x)/x)-externalVal)))+externalVal)+externalVal)+y))",
            "g": "min(noise(cos(externalVal),x),(((tan(tan(((mod(x,y)/0.118528426)-x)))+x)+externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(x,0.5410023),cos(min(((externalVal+max((max((sin((min(max((max(min(0.0,0.75533533),0.96215725)*0.65164375),x),y)+x))+sin(y)),(y+y))*x),(x/y)))+y),y)))",
            "b": "audio(max(y,externalVal),cos(min(((externalVal+max((max((sin((min(max((max(min(x,y),x)*externalVal),y),0.1609474)+y))+sin(0.0)),(0.3309029+externalVal))*externalVal),(x/x)))+externalVal),y)))",
            "g": "audio(max(0.44844446,y),cos(min(((x+max((max((sin((min(max((max(min(0.82466245,y),0.50668246)*x),x),externalVal)+x))+sin(x)),(externalVal+x))*x),(x/externalVal)))+x),x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(pow(x,x),(((max((sin(max(externalVal,x))+sin(x)),y)+x)/0.024623558)+(sin(max((x-y),y))*0.066814646)))",
            "b": "noise(pow(y,y),(((max((sin(max(x,0.5980264))+sin(0.12269059)),0.1609474)+y)/externalVal)+(sin(max((0.2672367-externalVal),x))*externalVal)))",
            "g": "noise(pow(0.43841943,y),(((max((sin(max(0.2625115,0.1888433))+sin(0.896404)),externalVal)+x)/externalVal)+(sin(max((externalVal-x),x))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise((y*x),0.71672773),(cos((0.5166118-x))-0.36907148))",
            "b": "mod(noise((y*0.48955795),y),(cos((externalVal-externalVal))-x))",
            "g": "mod(noise((externalVal*externalVal),y),(cos((0.2080121-x))-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(x,0.4847477),pow(0.4502282,(x*externalVal)))",
            "b": "audio(max(y,y),pow(y,(y*externalVal)))",
            "g": "audio(max(0.21693376,y),pow(0.9497509,(0.043718815*y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,(sin((0.59302866*x))+(y*x)))",
            "b": "max(externalVal,(sin((externalVal*externalVal))+(y*0.6318235)))",
            "g": "max(0.66112673,(sin((0.60558*x))+(0.1557434*y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.77574426,(((max(noise(((externalVal+min((max((((tan(x)-0.9654154)/0.3972494)+(y/(x*0.1724787))),(y+y))+x),(0.8269454/y)))+x),y),x)-x)-y)*0.41387886))",
            "b": "audio(y,(((max(noise(((externalVal+min((max((((tan(0.22219348)-y)/externalVal)+(0.0/(y*externalVal))),(0.41176596+externalVal))+externalVal),(x/x)))+externalVal),y),0.19578913)-externalVal)-x)*y))",
            "g": "audio(x,(((max(noise(((x+min((max((((tan(0.3244891)-x)/externalVal)+(x/(y*x))),(y+x))+0.9337478),(x/externalVal)))+x),x),externalVal)-x)-y)*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(cos(x),0.6462513),(((tan(tan(((min(y,x)*0.09376949)-x)))-0.64179814)-0.0)+0.42125058))",
            "b": "mod(noise(cos(x),externalVal),(((tan(tan(((min(0.31605935,x)*y)-externalVal)))-externalVal)-externalVal)+y))",
            "g": "mod(noise(cos(externalVal),x),(((tan(tan(((min(x,y)*0.0)-x)))-x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod(x,0.6973016),y)",
            "b": "pow(mod(y,y),externalVal)",
            "g": "pow(mod(0.74162877,y),0.27352476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(externalVal,y)",
            "b": "noise(x,0.0)",
            "g": "noise(0.09232497,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((0.38761282*x),0.71672773),(((0.5166118-x)/(((0.5166118-x)*0.6197071)+(y-y)))-0.36907148))",
            "b": "noise(noise((x*0.48955795),y),(((externalVal-externalVal)/(((externalVal-externalVal)*externalVal)+(y-x)))-x))",
            "g": "noise(noise((externalVal*externalVal),y),(((0.2080121-x)/(((0.46520385-x)*externalVal)+(0.08609623-x)))-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(max(externalVal,(noise(noise(externalVal,x),0.27335095)+0.5387628)),0.5960398),((max(x,0.8933735)+0.024623558)+(y*cos(0.91116595))))",
            "b": "noise(noise(max(externalVal,(noise(noise(y,y),y)+y)),y),((max(0.73752666,0.41410756)+externalVal)+(0.32639262*cos(y))))",
            "g": "noise(noise(max(x,(noise(noise(x,externalVal),y)+0.45652884)),x),((max(externalVal,0.7676729)+externalVal)+(0.3818078*cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(x,x),(((cos(((max(externalVal,x)*0.25245458)+(y*(x*0.19801688))))+x)*0.024623558)+(pow(y,externalVal)-0.43082142)))",
            "b": "noise(noise(y,externalVal),(((cos(((max(x,0.3109042)*y)+(0.012617499*(y*externalVal))))+y)*externalVal)+(pow(externalVal,x)-externalVal)))",
            "g": "noise(noise(x,y),(((cos(((max(0.0,0.040361434)*externalVal)+(0.6679468*(y*x))))+x)*externalVal)+(pow(y,0.14656559)-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.77574426,(((max(mod(((externalVal+min((max((sin((max(cos((0.49344492*audio(y,externalVal))),y)-0.9654154))+(y/(x/0.34627992))),(y+y))+x),(0.44951427/y)))+x),y),x)-x)*y)*0.41387886))",
            "b": "audio(y,(((max(mod(((externalVal+min((max((sin((max(cos((x*audio(y,y))),0.12243725)-y))+(0.0/(y/y))),(0.75141966+externalVal))+externalVal),(0.91274244/x)))+externalVal),y),0.19578913)-externalVal)*x)*y))",
            "g": "audio(y,(((max(mod(((x+min((max((sin((max(cos((0.017288685*audio(0.14017797,0.7510569))),externalVal)-x))+(0.90562713/(y/x))),(y+x))+x),(x/externalVal)))+x),y),externalVal)-x)*y)*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod(sin(x),0.6462513),((((x/externalVal)+0.9654154)-0.21446884)-y))",
            "b": "pow(mod(sin(x),externalVal),((((x/0.44162464)+externalVal)-externalVal)-x))",
            "g": "pow(mod(sin(externalVal),x),((((externalVal/y)+x)-externalVal)-externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(x,0.7192558),pow(0.34479284,y))",
            "b": "audio(max(y,y),pow(y,0.112701654))",
            "g": "audio(max(0.32379055,x),pow(0.46163562,0.95744014))"
          }
        }
      ],
      "timestamp": "1h:31m:5s"
    },
    {
      "generation": 29,
      "ascendantID": "7o42zghf-o466-dr09-bjr3-8hwgfkjc7pld",
      "id": "wy66wyxr-11se-hk46-rh4w-hkrardg4cu1m",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(x,0.7192558),mod(0.0,y))",
            "b": "audio(max(y,y),mod(y,0.112701654))",
            "g": "audio(max(0.2817139,x),mod(0.65567213,0.95744014))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(min(cos(x),0.6462513),(((tan(tan(((min(externalVal,x)*0.0)-x)))-0.64179814)-0.0)+0.42125058))",
            "b": "mod(min(cos(x),externalVal),(((tan(tan(((min(y,x)*y)-externalVal)))-externalVal)-externalVal)+y))",
            "g": "mod(min(cos(externalVal),y),(((tan(tan(((min(externalVal,y)*0.0)-x)))-x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(externalVal,y)",
            "b": "noise(x,0.0)",
            "g": "noise(0.09232497,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noise(sin(x),0.6462513),((0.76437926-pow(0.7225888,x))-0.81443524))",
            "b": "min(noise(sin(x),externalVal),((0.034600496-pow(externalVal,y))-y))",
            "g": "min(noise(sin(externalVal),x),((x-pow(externalVal,externalVal))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.9714768,(((tan(noise(((externalVal-min((max((sin((min(tan((min(max(0.0,0.75696015),x)*0.65164375)),y)+0.9654154))+sin(y)),(y+y))+x),(x*y)))+x),y))+x)-y)-0.44591266))",
            "b": "audio(y,(((tan(noise(((externalVal-min((max((sin((min(tan((min(max(x,y),x)*externalVal)),0.1609474)+y))+sin(0.0)),(0.40367326+externalVal))+externalVal),(x*x)))+externalVal),y))+externalVal)-x)-externalVal))",
            "g": "audio(y,(((tan(noise(((x-min((max((sin((min(tan((min(max(0.65282035,y),0.4172138)*x)),externalVal)+x))+sin(x)),(externalVal+x))+x),(x*externalVal)))+x),x))+x)-y)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((0.38761282-x),0.32299653),(((0.7311554-x)-((tan((noise(mod(max(tan(externalVal),0.062436104),0.37621236),x)-(x+(sin(noise(min((x*x),sin(externalVal)),y))/externalVal))))*0.6197071)+(y-y)))+0.54899895))",
            "b": "noise(noise((x-0.48554394),y),(((externalVal-externalVal)-((tan((noise(mod(max(tan(externalVal),0.9337733),externalVal),0.9270308)-(y+(sin(noise(min((0.5279548*y),sin(y)),y))/0.3789637))))*externalVal)+(externalVal-x)))+x))",
            "g": "noise(noise((externalVal-externalVal),y),(((0.04343261-x)-((tan((noise(mod(max(tan(0.49722695),y),0.41199064),0.24192)-(x+(sin(noise(min((0.69785285*x),sin(externalVal)),x))/0.70888066))))*externalVal)+(0.22233072-x)))+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.77574426,(((max(mod(((externalVal+min((max((sin((max(tan((0.49344492-audio(y,y))),y)-0.9654154))+(y/(x/0.34627992))),(y+y))+x),(0.44951427/y)))+x),y),x)-x)*externalVal)*0.41387886))",
            "b": "audio(y,(((max(mod(((externalVal+min((max((sin((max(tan((x-audio(y,y))),0.12243725)-y))+(0.0/(y/y))),(0.75141966+externalVal))+externalVal),(0.5366187/x)))+externalVal),y),0.19578913)-externalVal)*x)*y))",
            "g": "audio(y,(((max(mod(((x+min((max((sin((max(tan((0.3355216-audio(0.20594987,0.7510569))),externalVal)-x))+(0.90562713/(y/x))),(externalVal+x))+x),(x/externalVal)))+x),y),externalVal)-x)*y)*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(max(x,0.5410023),cos(min(((externalVal+max((tan((sin((min(max((max(min(0.0,0.75533533),0.96215725)-0.65164375),x),y)+x))+sin(y)))*x),(x/y)))+y),y)))",
            "b": "audio(max(y,externalVal),cos(min(((externalVal+max((tan((sin((min(max((max(min(x,y),x)-externalVal),y),0.45879215)+y))+sin(0.0)))*externalVal),(0.8734678/x)))+externalVal),y)))",
            "g": "audio(max(0.44844446,y),cos(min(((y+max((tan((sin((min(max((max(min(0.82466245,y),0.6863446)-x),x),externalVal)+x))+sin(x)))*x),(x/externalVal)))+x),x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,audio(0.27639794,y))",
            "b": "pow(x,audio(y,0.0))",
            "g": "pow(0.3120172,audio(0.1937964,0.7011698))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(externalVal,y)",
            "b": "noise(x,0.0)",
            "g": "noise(0.09232497,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod(x,0.6973016),y)",
            "b": "pow(mod(y,y),externalVal)",
            "g": "pow(mod(0.74162877,y),0.27352476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(x,0.6973016),x)",
            "b": "pow(noise(y,externalVal),y)",
            "g": "pow(noise(x,y),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(min(x,0.2902975),mod(0.4502282,(x-y)))",
            "b": "audio(min(y,y),mod(y,(y-externalVal)))",
            "g": "audio(min(0.21693376,y),mod(0.90426505,(0.043718815-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(x,0.6973016),y)",
            "b": "mod(mod(y,y),externalVal)",
            "g": "mod(mod(0.74162877,y),0.27352476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise((0.16861777/x),0.66669333),(((0.5166118-x)/(((0.5166118-x)*0.6197071)+(y*y)))*0.7597617))",
            "b": "noise(noise((x/0.48955795),y),(((externalVal-externalVal)/(((externalVal-externalVal)*externalVal)+(y*0.81659466)))*x))",
            "g": "noise(noise((externalVal/externalVal),y),(((0.2080121-x)/(((0.46520385-x)*externalVal)+(0.08609623*x)))*externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(pow(x,x),(((max(((min(externalVal,x)/0.0)+sin(x)),y)+x)/0.024623558)+((max((x-y),y)/x)+0.066814646)))",
            "b": "noise(pow(y,y),(((max(((min(x,0.22215697)/externalVal)+sin(0.13513494)),0.1609474)+y)/externalVal)+((max((0.2672367-externalVal),x)/x)+externalVal)))",
            "g": "noise(pow(0.43841943,y),(((max(((min(0.32416862,0.0)/externalVal)+sin(0.896404)),externalVal)+x)/externalVal)+((max((externalVal-x),x)/0.079879284)+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod((x/x),0.6462513),(((externalVal+0.9654154)+audio(min(x,0.5410023),audio(0.21972367,y)))*0.42125058))",
            "b": "mod(mod((x/0.48524874),externalVal),(((x+externalVal)+audio(min(y,externalVal),audio(y,0.0)))*y))",
            "g": "mod(mod((externalVal/externalVal),x),(((y+x)+audio(min(0.44844446,y),audio(0.0,0.7011698)))*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod(x,0.6973016),y)",
            "b": "pow(mod(y,y),externalVal)",
            "g": "pow(mod(x,y),0.27352476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(max(externalVal,(noise(noise(externalVal,x),0.27335095)+0.5387628)),0.5960398),((max(x,0.8933735)+0.024623558)+(y/cos(x))))",
            "b": "mod(noise(max(externalVal,(noise(noise(y,y),y)+y)),y),((max(0.73752666,0.41410756)+externalVal)+(0.32639262/cos(y))))",
            "g": "mod(noise(max(x,(noise(noise(x,externalVal),y)+0.45652884)),x),((max(externalVal,0.7676729)+externalVal)+(0.3818078/cos(x))))"
          }
        }
      ],
      "timestamp": "1h:31m:7s"
    },
    {
      "generation": 30,
      "ascendantID": "wy66wyxr-11se-hk46-rh4w-hkrardg4cu1m",
      "id": "12md2mo2-uzdy-hvkt-t2nm-1rkbswalcjxx",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(sin(x),0.6462513),(((tan(tan(((noise(y,x)/0.09376949)-x)))+0.9654154)-0.21446884)+0.42125058))",
            "b": "noise(noise(sin(x),externalVal),(((tan(tan(((noise(0.31605935,x)/y)-externalVal)))+externalVal)-externalVal)+y))",
            "g": "noise(noise(sin(externalVal),x),(((tan(tan(((noise(x,y)/0.06768417)-x)))+x)-externalVal)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(noise(tan(externalVal),0.5960398),((max(x,0.8933735)+0.0)+(y/cos(x))))",
            "b": "noise(noise(tan(y),y),((max(0.73752666,0.41410756)+externalVal)+(0.32639262/cos(y))))",
            "g": "noise(noise(tan(x),x),((max(externalVal,0.7676729)+externalVal)+(0.25621423/cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(noise(x,0.52653503),mod(0.4502282,x))",
            "b": "audio(noise(y,y),mod(y,y))",
            "g": "audio(noise(0.35953766,x),mod(0.90426505,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod((0.38761282-x),0.354978),(((0.7311554-x)-((tan((min(pow(max(cos(externalVal),0.062436104),0.37621236),x)+(x+(sin(max(min((x*x),sin(externalVal)),y))/externalVal))))*0.32030734)+(y+y)))+0.54899895))",
            "b": "noise(mod((x-0.48554394),y),(((externalVal-externalVal)-((tan((min(pow(max(cos(externalVal),0.9337733),externalVal),x)+(y+(sin(max(min((0.5279548*y),sin(y)),y))/0.3789637))))*externalVal)+(externalVal+x)))+x))",
            "g": "noise(mod((externalVal-externalVal),y),(((0.04343261-x)-((tan((min(pow(max(cos(0.49722695),y),0.50831926),0.24192)+(0.94620466+(sin(max(min((0.69785285*x),sin(externalVal)),x))/0.70888066))))*externalVal)+(0.22233072+x)))+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(0.66164064,(((tan(noise(((externalVal+noise((max((sin((min(min((min(max(0.0,0.75696015),x)-0.42225945),x),y)+0.9654154))+(y/(0.5428915*0.26090696))),(y-y))-y),(x-y)))+x),y))+x)*y)-0.44591266))",
            "b": "audio(y,(((tan(noise(((externalVal+noise((max((sin((min(min((min(max(x,y),x)-externalVal),externalVal),0.1609474)+y))+(0.23689285/(externalVal*externalVal))),(0.40367326-externalVal))-externalVal),(x-0.8768756)))+externalVal),y))+externalVal)*x)-externalVal))",
            "g": "audio(y,(((tan(noise(((x+noise((max((sin((min(min((min(max(0.65282035,y),0.4172138)-x),x),externalVal)+x))+(x/(x*x))),(externalVal-x))-x),(x-externalVal)))+x),x))+x)*y)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(0.47366214,((0.76437926-pow(0.7225888,x))-0.8473834))",
            "b": "min(0.94470763,((0.034600496-pow(externalVal,y))-y))",
            "g": "min(x,((x-pow(externalVal,externalVal))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(audio(min(0.90084934,y),(min(audio(noise(((audio(min(max(cos(sin(pow(y,(min(0.98092604,max(y,x))*0.8937409)))),0.7614546),y),y)+0.5543871)+externalVal),0.46676707),0.8186865),externalVal)*externalVal)),0.6973016),x)",
            "b": "pow(noise(audio(min(externalVal,x),(min(audio(noise(((audio(min(max(cos(sin(pow(0.7064276,(min(externalVal,max(x,y))*y)))),y),0.1094892),0.42469692)+x)+externalVal),y),y),y)*0.8355305)),externalVal),y)",
            "g": "pow(noise(audio(min(externalVal,x),(min(audio(noise(((audio(min(max(cos(sin(pow(externalVal,(min(x,max(externalVal,y))*externalVal)))),externalVal),x),externalVal)+0.07660031)+x),x),x),y)*0.5092313)),y),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(noise(x,x),(((max(((min(externalVal,x)/0.0)+sin(x)),y)*x)*0.0)+((max((x-y),y)/x)+0.066814646)))",
            "b": "mod(noise(y,y),(((max(((min(x,0.22215697)/externalVal)+sin(0.13513494)),0.1609474)*y)*externalVal)+((max((0.2672367-externalVal),x)/x)+externalVal)))",
            "g": "mod(noise(0.43841943,x),(((max(((min(0.27610672,0.25647882)/externalVal)+sin(0.66309386)),externalVal)*x)*externalVal)+((max((externalVal-x),x)/0.079879284)+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(x,0.3006709),x)",
            "b": "mod(mod(y,y),externalVal)",
            "g": "mod(mod(0.74162877,y),0.0625041)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(tan(x),mod(((noise(externalVal,x)/0.26572797)-x),y))",
            "b": "audio(tan(y),mod(((noise(0.31605935,x)/x)-externalVal),0.112701654))",
            "g": "audio(tan(0.2817139),mod(((noise(x,y)/0.06768417)-x),0.95744014))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(max(x,0.7192558),mod(0.0,y))",
            "b": "pow(max(y,y),mod(y,0.112701654))",
            "g": "pow(max(0.2817139,x),mod(0.65567213,0.95744014))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(sin(x),0.6462513),((0.5030093+pow(0.7225888,x))-0.45076612))",
            "b": "min(min(sin(x),externalVal),((y+pow(externalVal,y))-y))",
            "g": "min(min(sin(externalVal),x),((x+pow(externalVal,externalVal))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(x,0.69156945),y)",
            "b": "mod(mod(y,y),externalVal)",
            "g": "mod(mod(0.74162877,y),0.27352476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(noise(externalVal,0.6973016),y)",
            "b": "pow(noise(y,y),externalVal)",
            "g": "pow(noise(externalVal,y),0.27352476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod(x,0.6973016),y)",
            "b": "pow(mod(y,y),externalVal)",
            "g": "pow(mod(x,y),0.27352476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(x,0.6973016),y)",
            "b": "mod(mod(y,y),externalVal)",
            "g": "mod(mod(0.74162877,y),0.27352476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(externalVal,0.7090416)",
            "b": "noise(x,externalVal)",
            "g": "noise(0.09232497,0.12823987)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(x,0.2902975),mod(0.4502282,(x-y)))",
            "b": "pow(min(y,y),mod(y,(y-externalVal)))",
            "g": "pow(min(0.21693376,y),mod(0.90426505,(0.38806775-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod((0.38761282-x),0.32299653),(((0.7311554-x)-((tan((pow(noise(max(tan(externalVal),0.062436104),0.37621236),x)+(x+(sin(mod(max((x*x),sin(externalVal)),y))/externalVal))))*(y*externalVal))+(tan((sin(noise(y,x))-x))-y)))+0.54899895))",
            "b": "noise(mod((x-0.48554394),y),(((externalVal-y)-((tan((pow(noise(max(tan(externalVal),0.9337733),externalVal),0.9270308)+(y+(sin(mod(max((0.5279548*y),sin(y)),y))/0.3789637))))*(0.05836487*x))+(tan((sin(noise(0.31605935,x))-externalVal))-x)))+x))",
            "g": "noise(mod((externalVal-externalVal),y),(((0.04343261-x)-((tan((pow(noise(max(tan(0.7983892),y),0.41199064),0.24192)+(x+(sin(mod(max((0.69785285*x),sin(externalVal)),x))/0.70888066))))*(x*x))+(tan((sin(noise(x,y))-x))-x)))+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(mod(x,0.6973016),y)",
            "b": "noise(mod(y,y),externalVal)",
            "g": "noise(mod(0.74162877,y),0.13159913)"
          }
        }
      ],
      "timestamp": "1h:31m:9s"
    }
  ],
  "timestamp": "2024-03-19-01-29-42"
}
{
  "id": "q6x7ion1-uhs2-qhcq-146f-vwdk8olwwco9",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [{
    "generation": 0,
    "id": "vq0qz1dr-tkue-e8ge-2ow5-9lu88xtky0v2",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "((((((((((x-x)+((y+externalVal)/externalVal))-(externalVal+(((((x/((x-externalVal)/((((externalVal*(externalVal/y))+(y+((x+(externalVal/externalVal))-externalVal)))*(y-externalVal))*externalVal)))*x)-y)-(y+((externalVal-(((externalVal/(y*externalVal))-(((((externalVal-(x+(((((x-x)+((y-x)+(((y/x)-y)*x)))-y)*x)-x)))/x)/(y-x))-y)/x))*(((y*(((externalVal/x)+(((x/(y+(y+externalVal)))*((y+x)-x))/(externalVal-externalVal)))-y))-((x-((externalVal/(externalVal+y))*y))/externalVal))/((y/(externalVal+(x-(y+((((y/x)-externalVal)*((((y-(y+((externalVal/y)/(y-externalVal))))+externalVal)+externalVal)+x))+x)))))+(y/(((y+y)-x)*((x-((externalVal+((((x*(((y+externalVal)*y)+((externalVal/externalVal)-(x-y))))-externalVal)*x)-(externalVal-externalVal)))+(x*externalVal)))/(((externalVal*y)/(x*x))+x))))))))*(x+x))))+((x-y)*externalVal))))*y)*x)+x)-x)/(y-y))*externalVal)-y)",
          "b": "((x/(y/(x/externalVal)))*externalVal)",
          "g": "(((y+(x-((externalVal+(((x*y)*externalVal)+externalVal))+((y-y)+externalVal))))*(x*(externalVal+x)))*x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y*(x+(y+(x*(y/((externalVal*externalVal)/y))))))",
          "b": "(y*x)",
          "g": "(x/x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y-(x+y))",
          "b": "(externalVal*y)",
          "g": "((y/(y-(y*(((externalVal*(((y/(((y-(x*x))-y)*((y*((x-y)-externalVal))+((y/(y/x))+y))))-(externalVal*x))-(y*x)))*((x/(x*y))-(((x-(externalVal/(externalVal-((x/(externalVal*externalVal))/((((x-((y+externalVal)-(((externalVal-x)+(x/(y*(x/externalVal))))+x)))+externalVal)-((x*((y-(((y-externalVal)/x)+y))+x))/(x/externalVal)))+((externalVal-x)+(y/x)))))))*(y-y))/(((y+((externalVal/(((x-x)+((externalVal+y)*(externalVal-(y-y))))/(externalVal+y)))-x))+x)-x))))+y))))*x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal*((x/y)+(((x+x)+x)+externalVal)))",
          "b": "((externalVal+x)*(x-(x-((externalVal*externalVal)+externalVal))))",
          "g": "((x*y)/((y+y)/(y-x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x+(externalVal*((((externalVal*externalVal)+x)+((x/y)+y))+externalVal)))",
          "b": "((y/y)+(externalVal+y))",
          "g": "(y/x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((y/(y-x))+(y-externalVal))",
          "b": "(((y/x)-externalVal)+x)",
          "g": "(externalVal*x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(((((((((x/(externalVal*(((((((y-externalVal)-x)-externalVal)+(x*((y*((externalVal-((y-((((x+x)-(externalVal+externalVal))/x)/((y+x)+x)))/(x+y)))*((((y*x)+x)+x)-y)))/externalVal)))*(((externalVal-y)-y)/((y-externalVal)+y)))*externalVal)+((externalVal*externalVal)/(x*(y+((y-x)+((y*(x-x))*externalVal))))))))/((y*y)/((((y*x)/x)-(externalVal+((y*((x/((x*x)*((y-(y-(((y-externalVal)+y)+(x+(((((y+(externalVal-(x*(y+x))))*x)/(y+((((y+externalVal)+y)+(externalVal+y))+externalVal)))*(y/x))+externalVal)))))/x)))*((x/y)/y)))-((x/y)+y))))/((externalVal/(y/externalVal))/y))))/externalVal)+externalVal)+(((x-(externalVal+x))/x)+((x*x)+(externalVal+((((externalVal-(((x/externalVal)+((x+y)+y))-((((((((x*(y*x))-((y/x)-(x-(x*(externalVal-externalVal)))))/x)*(x+x))+x)/(y*(x+(y-(externalVal+((externalVal/(((externalVal+((y/x)/(x-((externalVal+(y+x))+(y-(x+x))))))-(y-x))/externalVal))-y))))))*externalVal)*(x-externalVal))))/(y+x))+(x*((((((y*x)-x)+((((y*((y/((((y*x)+((y-(((y*(y*y))+externalVal)+externalVal))*y))-x)+(x+y)))/externalVal))/(((y/externalVal)/((externalVal+((x+externalVal)*(((y*externalVal)*x)*(x*(externalVal+(((externalVal+(externalVal-externalVal))+y)*(x+x)))))))-externalVal))+(y+x)))+y)*(((x-(((x*externalVal)/externalVal)/externalVal))+x)+externalVal)))-y)-(externalVal*(y/(y+externalVal))))/(externalVal+externalVal))))-y)))))+externalVal)/(y-(x*((((y/(y*(x*externalVal)))*y)/externalVal)/externalVal))))/(((x+y)+externalVal)*externalVal))*externalVal)",
          "b": "((((externalVal+(externalVal+externalVal))/y)*(y*externalVal))/x)",
          "g": "(((y/externalVal)*(y/((x-(x+(externalVal-(externalVal*y))))*externalVal)))+(externalVal/x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x/(y-((x/(((((x-x)+(x/(externalVal-externalVal)))-x)/externalVal)/(x/(x+externalVal))))-((x+((y-((externalVal+((x*y)+externalVal))+y))+y))*(x+x)))))",
          "b": "((((y+externalVal)*y)+x)*(((((externalVal/y)+externalVal)/y)/x)*y))",
          "g": "(y/x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((externalVal+y)-y)",
          "b": "(y-(y+(y+((externalVal/x)*x))))",
          "g": "((y+(externalVal+(((externalVal+externalVal)/externalVal)+y)))+y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x+externalVal)",
          "b": "((((((x/y)*(x*x))-((((y/externalVal)*(x-x))*externalVal)/x))/(externalVal-x))+externalVal)*(((externalVal/externalVal)+(externalVal-x))+(x/((y-y)+x))))",
          "g": "(x/((((((((x*(y-x))+(y+(externalVal/externalVal)))/externalVal)*(x+x))-((x-(y/x))/y))+externalVal)*y)-((((x-(y-x))-x)*x)/(externalVal*x))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((x*x)+x)",
          "b": "(y-(externalVal+x))",
          "g": "(externalVal-x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((y*(x/((y/x)/((externalVal+(x+y))+((externalVal-x)-(y+(((((x-x)+(externalVal-((x+((y-(externalVal/(externalVal+y)))*((externalVal*x)*y)))*(x/(x-x)))))/(y/externalVal))*externalVal)/((externalVal*y)-(((y-(x-x))/((externalVal-externalVal)/externalVal))/externalVal)))))))))-(y*x))",
          "b": "(y/x)",
          "g": "(((((((((externalVal-((((y*(((((x/externalVal)+(((x/(externalVal+(((((((((externalVal+externalVal)*x)/(x-(y+y)))-y)*(x+y))-((externalVal-externalVal)+y))-externalVal)*x)+y)))*x)-y))+(((((((x-(x*((externalVal/(((externalVal*x)/(externalVal-y))-y))+(((((x+x)-x)*(x-(x-externalVal)))*(y-((y*x)-externalVal)))/y))))-((externalVal/(x/y))*externalVal))*(externalVal-(((((y*((y-x)-y))*(((y+externalVal)/((x*externalVal)+x))/(externalVal+y)))+externalVal)-(externalVal*externalVal))+(x*externalVal))))-x)/(externalVal/y))*(((x+(x+x))*(y+x))*externalVal))+((externalVal+externalVal)*y)))*x)*y))*(x+externalVal))+externalVal)-externalVal))*x)-externalVal)+((y+((((y-x)/y)*((externalVal/x)-x))-(x*((y+y)+(x/x)))))/x))*y)*externalVal)+(externalVal*externalVal))*y)/x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x*((externalVal-((((externalVal/x)/(y+((x+externalVal)*x)))*x)+externalVal))-x))",
          "b": "(x-(externalVal-(x/(((((externalVal*externalVal)*(y+x))-x)+y)*(externalVal+x)))))",
          "g": "((externalVal-x)/(y*(externalVal-y)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x+(externalVal/((y+y)-y)))",
          "b": "(y-((x/(y/((externalVal*(y/x))-x)))*(externalVal-y)))",
          "g": "((((((((y-(((externalVal*y)/y)*x))+((x-((externalVal-(((y-externalVal)-externalVal)+((x-externalVal)+(x/x))))/(externalVal*((((externalVal*((y+externalVal)/(externalVal*externalVal)))/(externalVal+(((y-y)/externalVal)+x)))+x)-((externalVal-y)+(externalVal+(x*(externalVal+externalVal))))))))+y))*externalVal)*externalVal)/externalVal)/((x*x)/x))*y)*(externalVal*((y/y)*externalVal)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal+((x-(externalVal*((x*externalVal)-((y/(x+x))-(externalVal/y)))))+(((externalVal*(externalVal*x))*((y-((x*(y-x))-externalVal))*(x/((y*y)+y))))/(y*x))))",
          "b": "(y+y)",
          "g": "((x/(x-x))+((externalVal+(y*x))/(((y-externalVal)/y)-externalVal)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal+(y+externalVal))",
          "b": "(externalVal*x)",
          "g": "(((((y*(((externalVal-x)*(y*y))/x))-(y+externalVal))*externalVal)+(externalVal*x))/x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((y*((externalVal+(((x/y)+(externalVal/y))/y))+(((((x/((x/y)*y))/y)/(y-externalVal))/externalVal)+(((externalVal-externalVal)*((x+y)/x))-(x+((externalVal+(externalVal*(((y+x)*x)+y)))*(((((y+(y/(x+y)))*(y/externalVal))-externalVal)+y)-externalVal)))))))+y)",
          "b": "(((externalVal/externalVal)*y)/((externalVal-x)+(((x-(((x+externalVal)+(((x/externalVal)-x)+(x/((externalVal/x)/y))))/y))*x)*((((((externalVal+(((x+externalVal)*(y/(externalVal-(((externalVal*(x/y))*((externalVal+x)/externalVal))*((externalVal+((externalVal/(y*x))-y))*(y/(((externalVal*((externalVal/externalVal)+(((y/((x+(((x-x)*((externalVal/externalVal)+(x*x)))*x))-(((y*((y-y)+((externalVal-x)+x)))-(externalVal-(x+y)))-externalVal)))-y)-externalVal)))*(y+(externalVal*x)))+x)))))))*(y+(((y-externalVal)-((y*y)*(((((((externalVal-(y*(((x/y)-(externalVal+externalVal))/x)))-((y*(y-((externalVal+externalVal)-externalVal)))/externalVal))*y)*((((externalVal*((y*x)/y))*x)-((((y+y)*(externalVal*(x-(((externalVal+x)/x)-((x/((y-y)*externalVal))-(externalVal*x))))))-((externalVal-y)+((x+(x-y))-y)))+(((x+(((((x-(externalVal*x))/externalVal)+externalVal)+(y-externalVal))*(y*x)))+((y-((x-x)+x))+externalVal))/(x*y))))+(x/externalVal)))*y)-(x/x))+x)))*(y+(x*externalVal))))))+((y/y)/x))+externalVal)+(((y*((((((x+((((externalVal/(x+y))/(x-((externalVal+y)-externalVal)))*x)/(((externalVal/x)-(y*y))-(y-(externalVal+externalVal)))))/(y-y))*(y*((externalVal-((y+externalVal)+((y*externalVal)/((y+(externalVal*((((externalVal+x)/(externalVal/x))/x)+(x-(x-y)))))*externalVal))))+(((((externalVal-((externalVal*((x-((((externalVal+((y/x)+y))+y)*(((x-y)+(x-y))*(y/y)))-externalVal))+y))*(externalVal-(x+externalVal))))/(externalVal/(((x-externalVal)*y)/externalVal)))-((y*x)+(externalVal/x)))/x)/(((x/x)*((((y-x)/((y+x)*((x+y)-externalVal)))/y)+((((y/y)+y)/externalVal)+externalVal)))+externalVal)))))/externalVal)-y)-(externalVal+x)))/externalVal)/x))+y)+((x*externalVal)-externalVal)))))",
          "g": "(x*externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y/(externalVal+(y/(((externalVal+externalVal)-x)-((x/y)/externalVal)))))",
          "b": "((y+x)*((externalVal*externalVal)+((((y-externalVal)*(((x+x)-y)-y))*y)-externalVal)))",
          "g": "(((((externalVal+x)-(((x/((y/(externalVal*((x*y)-((x+y)-y))))*(((y/(y+x))/((y/externalVal)/(y/((((((((x+x)+y)-(externalVal*(x/((y/x)*x))))+y)/(y-y))-(((externalVal+((((y-externalVal)/externalVal)*x)/y))/(((externalVal-x)-externalVal)-((x-y)*x)))/(((x-(x-externalVal))/((x*((externalVal-((externalVal-(((((externalVal/y)/y)+x)+y)-((y/externalVal)-(externalVal*((x+externalVal)-y)))))/x))+((x+externalVal)*((((x-x)*x)/(externalVal/x))*x))))*(((x+(x+(x*y)))/((x/y)-x))+y)))+(externalVal-(((externalVal+((((((((externalVal+x)+(x+(y/externalVal)))*x)+externalVal)/y)/((externalVal-((y*(externalVal*(externalVal-y)))/(externalVal+(y-(y*externalVal)))))+y))*(((x/externalVal)/externalVal)-y))+((externalVal+((y-x)-((externalVal*externalVal)/y)))/y)))*(externalVal*(((x-x)/x)-(externalVal/((x*((externalVal-x)*(externalVal/externalVal)))*y)))))*((x+x)-((x-((x-(((((y/(externalVal*y))+((externalVal/externalVal)+(x/externalVal)))-x)/(externalVal-externalVal))*(y*((((x*x)+(y/x))*externalVal)*x))))/y))*x)))))))/x)*((externalVal+((((y+y)+((y+(y*((x-y)+((externalVal+y)+externalVal))))+y))*(externalVal/y))+(((((externalVal/(externalVal*x))-((externalVal+x)*y))-((((externalVal+externalVal)/y)/externalVal)/x))-(externalVal+x))+(((((externalVal*externalVal)-(x*y))-y)/(externalVal+(x*(x-externalVal))))+((y+(y/externalVal))/((((x/x)/(externalVal/x))+y)+(y*(((y/externalVal)+((((externalVal*(y*((y/x)/externalVal)))+y)/y)+(externalVal+x)))/((y+((externalVal-((y-x)*(y+((x/y)*externalVal))))+externalVal))/(y/(x+externalVal)))))))))))-((externalVal*(x*(y/externalVal)))/externalVal))))))*x)))-(y/(((((externalVal+(((((((((y-externalVal)*x)/x)*y)+(externalVal-x))/externalVal)+((((y+x)/x)/externalVal)+externalVal))*(((y-(externalVal/x))*y)/(x*((x/((((x+x)/(x*(((externalVal-(y-externalVal))-externalVal)/((((((y+externalVal)+((x/y)*(externalVal/x)))*((y-(x/externalVal))+y))-(externalVal*y))-((y*y)-y))-(externalVal*x)))))-(x/((externalVal-y)*y)))+((((x/((y-y)-(externalVal+((y+x)+x))))-((((x*externalVal)-x)*x)/x))/(x/((x*(((externalVal*(y*(y/(y/externalVal))))-externalVal)+x))-externalVal)))*(externalVal*y))))+x))))/(x+x)))-(x-(x-y)))/((x-externalVal)*(x/((y*((y+((externalVal-x)-x))*y))-x))))-(((externalVal-(externalVal*y))+(((x*x)*(x*((externalVal/(externalVal-externalVal))/(x+x))))-y))+((x*externalVal)*(y+y))))-((((x*y)*x)-(y/externalVal))-(externalVal-(x+externalVal))))))-x))*((((y-externalVal)*((externalVal-x)+x))-(y+((x*(y-x))-externalVal)))+(y+externalVal)))+x)-y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((x+(externalVal/externalVal))/y)",
          "b": "((externalVal*y)+externalVal)",
          "g": "(((((((((((((externalVal-x)*(x*((y*(x/y))-x)))+(((x*x)*externalVal)/(x/((y/((externalVal/externalVal)*externalVal))/x))))*externalVal)-(((externalVal-(externalVal-(y+(externalVal/externalVal))))-x)+x))/x)-((y*y)*(y*x)))*((externalVal+y)-(externalVal/(y*(((((y-externalVal)/(externalVal*externalVal))-y)/externalVal)+externalVal)))))-x)*externalVal)*(externalVal-externalVal))*((y*((x/(((x-(externalVal+y))*(((((y*((externalVal/(externalVal*(((x-x)/externalVal)+((x*((x/((((externalVal/(y-(y+(y-(x/(externalVal+y))))))*x)/x)/(x*((x+y)/((x+externalVal)*(x/y))))))-((y+y)-(x+x))))+externalVal))))+y))+externalVal)/x)/(externalVal-x))*x))+y))/y))-externalVal))-x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal-externalVal)",
          "b": "(externalVal/(x*externalVal))",
          "g": "(x-(y+y))"
        }
      }
    ],
    "timestamp": "23h:57m:54s"
  }],
  "timestamp": "2023-11-16-23-57-53"
}
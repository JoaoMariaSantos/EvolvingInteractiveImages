{
  "id": "zlbwnom6-gvv0-u5rg-b0lc-b9ldwr6cnv9u",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [{
    "generation": 0,
    "id": "tvw55nlo-alnf-26mt-blbz-iayc5g7uf626",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "(((y+externalVal)*externalVal)-externalVal)",
          "b": "((externalVal+(externalVal+(x/x)))-x)",
          "g": "(x-y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(((externalVal+((x/y)*y))*externalVal)/y)",
          "b": "((y+((x/(x/((externalVal+y)+y)))*(y-y)))-x)",
          "g": "((y*((x-(((x*x)-externalVal)*((externalVal-x)/x)))*(externalVal-externalVal)))*y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal/(((externalVal*externalVal)*x)+y))",
          "b": "(y/x)",
          "g": "(y/(((x+externalVal)/externalVal)-externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((x+x)+x)",
          "b": "(externalVal-x)",
          "g": "(externalVal-x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x+x)",
          "b": "((externalVal/x)-(((y-x)*y)+(x-externalVal)))",
          "g": "(y*(((externalVal-externalVal)*(x*x))+x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x/x)",
          "b": "(x+x)",
          "g": "(((x/y)*((((externalVal/((y*(externalVal/(y+(((((x*(y+((((externalVal/(y-(y+externalVal)))*y)/(y-x))/externalVal)))+((((x/((externalVal+((x+y)-y))+(x-(x*(externalVal+externalVal)))))+((x*(x/((y+y)-y)))+(y+(((x*x)/externalVal)+(x+y)))))/((x+((((externalVal-(y*((((externalVal+(y+(externalVal*externalVal)))*externalVal)/x)+((x*x)*((y-(externalVal-externalVal))+externalVal)))))/(externalVal/(((((y+externalVal)*x)/(externalVal*(y*(((externalVal+x)-(externalVal/externalVal))+x))))/externalVal)+externalVal)))/x)/x))*externalVal))/(((x*((x*(y+((((((x+x)+x)/y)/y)*externalVal)+(((x*(x-(externalVal/y)))-y)/x))))*((x/x)-y)))-(externalVal-x))+(((y*externalVal)-(y/externalVal))/((x/((x/(((((externalVal/(externalVal/y))-(x/y))*externalVal)/((externalVal-externalVal)/externalVal))+y))-(y/y)))+x)))))-((((y*y)-(x-(x/x)))*(((x-externalVal)-(x/((((x*y)/(((((y/externalVal)-externalVal)*(((y*((x+externalVal)+(x*(externalVal+y))))-(((x-y)-y)*externalVal))/y))+(x/x))/((y+(y*(x*externalVal)))+(x/(((y/externalVal)-((externalVal+x)-y))*x)))))/((y-y)-x))-y)))*x))/(x-y)))*y)*(externalVal+((((((x*(x*(externalVal-(y/(((((x-((externalVal*(y-externalVal))+externalVal))+externalVal)-(((y-((externalVal-(y/y))*externalVal))*y)/x))*(y+(externalVal/(y*y))))-(((externalVal*x)*(x-((x*((externalVal-externalVal)*y))/externalVal)))/(externalVal*y)))))))/externalVal)-(externalVal/x))*y)-(y/y))-externalVal))))))-y))+y)*((externalVal+y)/externalVal))/y))+((externalVal/x)-externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y*((y+((externalVal+x)*x))+(x/((y*(x-y))+y))))",
          "b": "(externalVal*y)",
          "g": "(((externalVal*x)+y)*((y/y)+y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y*(y/externalVal))",
          "b": "((((y-(x+((externalVal*externalVal)/((((x-y)+((y-x)+(externalVal*y)))+(x-(x*x)))+x))))*(x/y))*((y*y)*externalVal))+externalVal)",
          "g": "(externalVal-(externalVal/(((((x+y)+((x-(externalVal+((externalVal-(((y*((y-externalVal)-(((y-y)+(externalVal-((externalVal-x)*((x-((x-(externalVal*(((x-externalVal)-x)+(x-(externalVal/(externalVal-x))))))/y))/(((y+(((y+externalVal)-(x+(x-((externalVal*x)*x))))/((externalVal-x)-(y*externalVal))))/(((externalVal+(x/((x/externalVal)*((x-(x-x))-(y+(y/y))))))*(y*y))*externalVal))+x)))))*((externalVal+(y+y))/x))))+y)+externalVal))*((externalVal*y)*(x+x)))))-externalVal))/x)+(y/(y+(externalVal*(y/externalVal)))))/((y*externalVal)/(externalVal/y)))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y+y)",
          "b": "((externalVal/externalVal)*externalVal)",
          "g": "((((y+(((externalVal+y)/y)*y))*externalVal)+((((y-((externalVal/(externalVal/x))-y))/externalVal)*(externalVal*x))/x))+x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y/y)",
          "b": "(y-((x-((((((y*x)*externalVal)-(y/x))/x)-((y+((externalVal*y)-x))-(externalVal+x)))-externalVal))*((x+y)-x)))",
          "g": "(externalVal*(externalVal-x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y*(externalVal/((((externalVal+((y*y)-(x/externalVal)))+(y-(x*((x*x)-externalVal))))/externalVal)*externalVal)))",
          "b": "(externalVal/externalVal)",
          "g": "((((y/externalVal)*x)/externalVal)-(y-x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((x-externalVal)+y)",
          "b": "((y+(x-(y+(((x*externalVal)-externalVal)+(y/y)))))-(x-(externalVal*x)))",
          "g": "(externalVal-(((externalVal*((x*(externalVal-(x-y)))/x))+externalVal)*(externalVal-x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal-y)",
          "b": "(externalVal-externalVal)",
          "g": "(((y*x)/(y+(((x-(externalVal*((((x/y)+(x/externalVal))*x)-x)))/y)/((((externalVal*y)/(y+(x+(y-x))))/y)+y))))+((x+(y-(y*externalVal)))-y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(((y+x)+y)/y)",
          "b": "(y-((externalVal*(externalVal-y))/(externalVal-externalVal)))",
          "g": "(x/(y+(externalVal*x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((externalVal*((externalVal-externalVal)/(y+x)))*(y+externalVal))",
          "b": "((((((x/externalVal)*externalVal)+externalVal)*y)/(x*((((y-y)/((x/(x/(y/((y+y)/((((y/((y/(((y/(x/externalVal))*(x/externalVal))+y))*(((y/x)+(y-externalVal))-(((((externalVal*y)/((y-y)/((y*y)+(x*((((x/externalVal)*x)*x)-(((y-y)*externalVal)/x))))))+(externalVal/(y*((y+x)-externalVal))))/x)+externalVal))))+y)+y)*y)))))*x))+(x/y))-(externalVal-x))))-(((externalVal+(externalVal+(((y/x)*(externalVal-y))+((x+(externalVal-y))+y))))-externalVal)*x))",
          "g": "(x*x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((x*y)-((((externalVal/y)*(externalVal*externalVal))-(externalVal+(x+(externalVal*x))))/externalVal))",
          "b": "((y/(externalVal-(((x+externalVal)*((x/((externalVal+((y-(((y*y)+externalVal)-(x*(externalVal-((((((((externalVal/((x/((externalVal/externalVal)-externalVal))-((y+x)+(x*((y*externalVal)+((((x/x)*(y*x))*((y*externalVal)-externalVal))*x))))))-x)*(x/(externalVal-(y*x))))+((externalVal/(y/(((((externalVal+x)*y)-((externalVal*((x*(x+externalVal))/((externalVal+y)/y)))+externalVal))/y)+(((externalVal/((y-(externalVal-(x*externalVal)))+(x*(y+(externalVal/externalVal)))))-y)+((((y-y)+(y/y))*x)/y)))))-(externalVal/((x/externalVal)*((externalVal*(x+externalVal))+((y*(((externalVal+((externalVal-y)/(externalVal*x)))*(((x*x)*(x+externalVal))/x))*(externalVal-(externalVal/((x-externalVal)/y)))))/((y-externalVal)-(y-y))))))))/y)+(x+(((externalVal*y)*(y+y))*externalVal)))-y)*x)))))-(externalVal*x)))-(externalVal-externalVal)))*x))+externalVal)))/((externalVal*y)/y))",
          "g": "(((x/externalVal)-(externalVal/(externalVal+(externalVal+externalVal))))+((y-((externalVal/y)*((x/((externalVal+((y+(((x/(x/((x+externalVal)*(((y*(y*x))/y)*y))))+(((externalVal+externalVal)/((externalVal*(externalVal-((y/((externalVal+(y+((y-(x-y))-externalVal)))*(((externalVal*x)/(x+x))*externalVal)))/externalVal)))-((x/y)+((((x-(y/((x*(externalVal*(((y*y)+externalVal)*externalVal)))/x)))*externalVal)/(x*((y-externalVal)/(x-(y*externalVal)))))-(x*x)))))-x))*y))*((y/x)*(x-x))))*(x/externalVal)))*(((x+x)/y)-((((x+x)*((y-externalVal)-x))+(y-y))+(x/x))))))+((externalVal/(((y*(x+x))-(x/((externalVal+(x+(x/x)))*((((externalVal/externalVal)-externalVal)+y)/x))))+y))+x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((y*x)/x)",
          "b": "(externalVal/x)",
          "g": "(y*((y/x)*externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal+externalVal)",
          "b": "(x-externalVal)",
          "g": "((y/y)*externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((y-externalVal)/(y+(x+(x+y))))",
          "b": "(y*(y-externalVal))",
          "g": "(externalVal-(y-externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(((externalVal+x)/externalVal)/y)",
          "b": "(x/y)",
          "g": "(y/x)"
        }
      }
    ],
    "timestamp": "23h:57m:19s"
  }],
  "timestamp": "2023-11-16-23-57-17"
}
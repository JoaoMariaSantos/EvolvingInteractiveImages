{
  "id": "es98hvk8-5v2w-clhg-wcuq-vzfj54hwhlgw",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [{
    "generation": 0,
    "id": "1tcy4g8k-n2xi-7dw1-2tgr-5krh8edn7vr0",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "(((externalVal/(((x-externalVal)-externalVal)-externalVal))*y)-(((externalVal*(x/((externalVal/x)*(y/x))))-externalVal)*(x/((x/(externalVal+(x/externalVal)))*x))))",
          "b": "(x/((externalVal*(((externalVal+y)/(((y/x)+x)-(x-externalVal)))/(y+y)))-(y*(y*externalVal))))",
          "g": "(((y-externalVal)/((externalVal/(x/(y/(externalVal*(y/x)))))*(x+y)))-x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((externalVal/((x*x)/x))/x)",
          "b": "((((x*x)+y)/y)/(externalVal+(x/externalVal)))",
          "g": "((((x/((x+externalVal)-y))*(externalVal/y))-externalVal)-x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(((((((x-(((((y+(externalVal+x))+externalVal)-((externalVal-(x-((((externalVal+(((y/y)/y)*y))/x)*x)+(x+(((x-(y+y))-(x/((((x+x)-(y-externalVal))/((((x+x)*x)*(y+externalVal))/y))+x)))-y)))))-((((externalVal+(externalVal-externalVal))-y)-(((y-(y-(externalVal+(externalVal+x))))+y)/(x/externalVal)))+((x/y)+externalVal))))*(y/(x/externalVal)))-x))+(((externalVal*(externalVal/(externalVal+(x/(externalVal/((externalVal+x)/(((externalVal/(y/y))+x)+y)))))))+y)/externalVal))/x)-externalVal)*(x/(x-x)))+(externalVal-(externalVal+((y*(externalVal+(((((externalVal/((externalVal/x)+y))-x)/((((x*y)+y)+(x+((x-((externalVal*(((externalVal+(x/(((x-(x+(x-((((x/y)/x)+externalVal)/(x+((y/x)/(x/x)))))))-(((((((y+x)-(externalVal-y))*((y*externalVal)/externalVal))*x)-y)+externalVal)*y))-((((((externalVal+((y+y)*(x/y)))*(((x/externalVal)+externalVal)*y))-y)/(((x+y)-(x*(externalVal-y)))+((x*((externalVal/x)*(x-externalVal)))+(externalVal*((y/x)/x)))))*((x/y)+(((y-(y/y))*externalVal)-y)))/y))))*((externalVal-x)*y))+(y*(y-externalVal))))+((((((x*externalVal)+y)+(((((((y/(x+externalVal))*((externalVal*((x-externalVal)*(x/externalVal)))+(y/(x*(y-y)))))/x)+externalVal)/(externalVal-((y*externalVal)/externalVal)))-y)-y))*y)/((((externalVal/x)/externalVal)+x)*(externalVal/(((externalVal-x)+((((y/y)/(y*((externalVal/((y-x)-y))/(externalVal*(y-externalVal)))))*externalVal)-(externalVal/(x*(externalVal-externalVal)))))+x))))+externalVal)))-((externalVal+externalVal)*((y+externalVal)/((y*(x*y))+(y*y)))))))+x))-((y-((y+(externalVal-y))/((((externalVal-y)*(externalVal+(externalVal-x)))/((y+(((x+x)*(externalVal-(y+(y-(externalVal-(x*y))))))+(x+externalVal)))*x))+((y-(externalVal+(x-y)))+(((y/externalVal)-externalVal)-((y-((x-x)-(externalVal/y)))/y))))))*(x+x)))*x)))-externalVal))))/(y/externalVal))",
          "b": "(y-(externalVal*externalVal))",
          "g": "((y-x)*(y-((externalVal*((y+x)/x))*(externalVal*((((externalVal+y)-y)/((x/(externalVal/(x*y)))-((((x+(((y+x)/(x-y))/externalVal))/externalVal)-y)/y)))-(y-y))))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x+x)",
          "b": "((((y-externalVal)-(externalVal/y))-((externalVal/(((((x/externalVal)+y)/y)+((((((((y*x)*x)/y)+externalVal)+y)/x)+((((x*y)*x)-y)/externalVal))-externalVal))/externalVal))*externalVal))-y)",
          "g": "(y-externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(((externalVal-((x-x)+((x/x)+(((((x*(externalVal/((x+externalVal)+x)))/(externalVal+((x-externalVal)*((((y*((y*x)/(x/(((y-((externalVal*(((y-externalVal)+(x-(x-(y/y))))*x))+((x/(y*y))*(externalVal*(externalVal-((x/x)*(x*(((externalVal-externalVal)/externalVal)-x))))))))/((y-x)*x))/(((externalVal+x)/((x/((y-y)+y))-(((x+(((y/x)*x)*((y*externalVal)*(((x*(x+externalVal))-y)+x))))*x)+y)))-externalVal)))))-x)/x)+x))))*y)*((x+((y/y)/y))+(x/y)))-(((((externalVal/((((externalVal+((x+externalVal)-externalVal))*((y+((x-(y-((((externalVal*x)+externalVal)/(((y*y)-x)-(externalVal*y)))*(externalVal*(y/(y-(y*externalVal)))))))-y))/((y-(y*(((externalVal/externalVal)*x)*(y*x))))-x)))*(externalVal*((y*y)-((externalVal+y)/externalVal))))+x))+(x+((y-(((externalVal*y)*((((x/((((x-(((y+(((y-(x*x))*externalVal)-x))-externalVal)-x))*((y-(externalVal*(externalVal-externalVal)))/externalVal))-y)+((((externalVal/x)+y)+y)*(x+(y/x)))))*x)/((externalVal/x)-((y+y)/x)))-externalVal))+((externalVal*(x*(((y+((x-(((x/(externalVal/externalVal))*(externalVal-(externalVal*((externalVal*((externalVal-x)*(x*x)))-x))))/y))/y))/(y*(y/(externalVal/((((((((x*x)+(x-y))*externalVal)/y)*((((x+x)/(externalVal*externalVal))+(x+externalVal))/y))+((y+(((externalVal+x)-x)*(y-externalVal)))+y))/x)/(x*(x+(externalVal+(externalVal/(y-(y+(y-externalVal))))))))))))-externalVal)))/y)))*(x-x))))-y)/y)/y)))))+(externalVal+(x-externalVal)))+(((y*((((y/externalVal)*((externalVal*x)*(y/externalVal)))+y)+(y+y)))+externalVal)/((((y*externalVal)-y)-(((externalVal*(x-(x*y)))/(y/x))*x))/y)))",
          "b": "(x/y)",
          "g": "(((x/((y/externalVal)*externalVal))-externalVal)/(x+(((((y+externalVal)+externalVal)-externalVal)-(x+externalVal))*((((((y+((((externalVal*y)*externalVal)/x)/((y+externalVal)+externalVal)))+(x+((externalVal/(externalVal*(externalVal*x)))-x)))-x)+(y-((x-(((((externalVal/externalVal)*x)-externalVal)*((externalVal*((x+((externalVal*(((x/((((y+(x+(((((y-y)/(y/x))-(y-(y*y)))+(y+externalVal))*x)))-(((externalVal-externalVal)-externalVal)-((x+x)-x)))*(y-y))*((x*(((((x/x)-externalVal)/x)*(((externalVal*((x+x)+externalVal))+((y+x)/x))+x))-y))/x)))+(y*(((((externalVal+y)+y)+externalVal)*y)*y)))*(y-((((x*((externalVal/x)/x))/y)+y)-x))))+(((externalVal/(externalVal/x))*(x+(((y/x)+(externalVal*((externalVal+y)-(y-(externalVal*(x/x))))))-externalVal)))/x)))-externalVal))+externalVal))*externalVal))/((((((((x+((y/y)*x))+(x+y))-(x+x))-y)/(x/((externalVal+((y+externalVal)-(x+externalVal)))/(externalVal/y))))+externalVal)*externalVal)/x))))*((externalVal+x)*y))/x))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((y+((externalVal-(x+(externalVal*(externalVal+externalVal))))+externalVal))*externalVal)",
          "b": "(y-(externalVal*((x-y)*y)))",
          "g": "(y*y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((y-y)+((x+externalVal)+y))",
          "b": "(externalVal/(y-(x-externalVal)))",
          "g": "((externalVal+x)-(externalVal-(externalVal+((externalVal+(x*(((externalVal-y)/x)+x)))*(y/(externalVal+((y+(((y-(x/externalVal))-externalVal)+x))+x)))))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal-x)",
          "b": "(y*y)",
          "g": "(y+((((y*externalVal)+(x+(externalVal/((((y-x)/(((x/externalVal)-x)*y))-((x*((((((y-y)-x)/(((x-((x-(externalVal*y))+externalVal))+((x/(y*x))+(((((externalVal+(y/((((externalVal+y)/externalVal)+((y-externalVal)/y))-externalVal)))/y)+y)/externalVal)/y)))*y))*y)/(x+x))/externalVal))/((y+y)+x)))-externalVal))))+((((externalVal-((externalVal/externalVal)-(y/(y+(x/x)))))/(x/y))-((y+(x-((externalVal/(x+(y/y)))-y)))/y))+x))/(y-(((((externalVal*y)*externalVal)-y)-x)*externalVal))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((y+(((y/((externalVal/y)+(externalVal/y)))+x)+y))/(externalVal*((((((x/((externalVal*((externalVal*(y-(x-y)))+(((externalVal+y)*(externalVal*externalVal))+y)))+x))*((externalVal-(y*(externalVal+(x+(x/(externalVal*y))))))/(((y/y)-x)+(externalVal*y))))-(((x*(((x/((x+((externalVal-(x+externalVal))-externalVal))/(((x-(((((x-y)*y)/x)/(((x-y)-((externalVal+(externalVal+x))/x))/((((x+(x/(x-(((x*((externalVal*x)/externalVal))+y)+externalVal))))+(x-(((x/y)*((externalVal*(x*(externalVal+(y+x))))*x))-(x-x))))*x)*y)))*y))/externalVal)+x)))-x)*externalVal))-y)-y))+((((x+(y+externalVal))-y)-((x-y)-externalVal))+x))*externalVal)*externalVal)))",
          "b": "((((((((x-((x/externalVal)-x))*(((externalVal-x)*externalVal)*((y-(externalVal-x))-(externalVal-(((x*(y+(y/(externalVal-((x*(x-externalVal))*y)))))*((externalVal-((((((y+(x*(x*externalVal)))-(y+(((y*y)+(externalVal*(externalVal-(y*(((x*y)+((externalVal+externalVal)+(externalVal+(externalVal-externalVal))))*((((x/y)*(y/externalVal))-(y/externalVal))-((y-externalVal)+((externalVal-x)*x))))))))-y)))-(x*x))-y)-(y*x))/y))/(externalVal+(externalVal-externalVal))))+y)))))*((externalVal/externalVal)*x))*x)/(externalVal/y))*x)/externalVal)/externalVal)",
          "g": "(externalVal*externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x+(externalVal-x))",
          "b": "(y+(y*(externalVal-y)))",
          "g": "(((((x*x)*(y+y))*(((y*(externalVal-x))/externalVal)*y))+(x+x))-externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal/(x/y))",
          "b": "(x+(externalVal-externalVal))",
          "g": "(externalVal-externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((y+externalVal)-y)",
          "b": "(y+y)",
          "g": "((externalVal/y)+x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x*externalVal)",
          "b": "(x/(x*externalVal))",
          "g": "((y-(((((((x/((y*(externalVal/y))/(externalVal-externalVal)))-x)+(y*y))/x)-((((x*x)/(externalVal-y))/(x+((((y/((y*y)-((((externalVal+y)/(y-x))*(externalVal*((x/x)-externalVal)))/externalVal)))/externalVal)*externalVal)-(externalVal*(y+(y-((x*(y/(((y-(externalVal*((((x-externalVal)*externalVal)+(externalVal*(externalVal*((externalVal/externalVal)+((((externalVal/externalVal)/(x+y))-((((externalVal/x)/(y-x))*x)-(((externalVal/y)*(externalVal/y))+((y+externalVal)*(externalVal-y)))))+x)))))/(x/x))))/x)*(((((((y*externalVal)+x)/(((((x/(y-y))/externalVal)*y)/externalVal)+y))*externalVal)/x)*((x*y)/((x*y)-x)))+(externalVal+(externalVal/x))))))/x)))))))*(externalVal*((externalVal+((externalVal+externalVal)-externalVal))+(y-(y+x))))))*((externalVal-x)/(externalVal/(x/((y-x)*externalVal)))))-externalVal))/(y-externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(((y-y)-((((x+y)*x)-y)*(((((externalVal-y)/((y+((x/x)/y))-((externalVal*externalVal)/((x/(((y/externalVal)*externalVal)-y))+externalVal))))*y)/((y*externalVal)+(x+externalVal)))/externalVal)))/((x-externalVal)-x))",
          "b": "((((((y-x)-externalVal)+externalVal)*y)+(y+((x-x)+externalVal)))*((((((externalVal-x)/(((externalVal/(x+((y/(y-externalVal))*(x+y))))-externalVal)+y))-x)/((x*(externalVal+((x*((((externalVal*externalVal)/y)+(x*externalVal))*(externalVal-externalVal)))*x)))/x))/x)/((externalVal+(x*(y+(y-x))))+externalVal)))",
          "g": "((externalVal*(((y/x)*externalVal)-((x/(x*((y/x)+(x*(externalVal*((((y/((y/x)/y))+(y-x))/externalVal)/((x+x)-((y/x)+x))))))))-y)))*(externalVal-externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y+x)",
          "b": "(y+(((x/y)*y)/externalVal))",
          "g": "((externalVal/(((x-y)+y)-externalVal))/((externalVal+(externalVal+y))*(y-externalVal)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y*((((((y*((x/((externalVal-(x/((externalVal*(y+(externalVal+(y*((y-x)*(x*(((x*y)+y)*(y-x))))))))*externalVal)))/x))/x))+y)+externalVal)*x)*(((y+externalVal)-y)*externalVal))+((externalVal/(x*(((((((externalVal+y)/((x+x)-externalVal))-((externalVal*((externalVal/y)-((externalVal*externalVal)-(y/((x*x)-(((((x-y)+y)*(y+y))/(((((((x+x)-externalVal)/(y+y))-externalVal)-((y*(x*((x-externalVal)+(y*x))))-(x/externalVal)))/externalVal)-((x+externalVal)*y)))-x))))))+(y*(((x*((externalVal+(((y*(((((y/x)-(y-y))/((y+(x-externalVal))+x))+(y*(((x*y)/(externalVal-y))+x)))+(x-y)))/((y-externalVal)-(externalVal+(y+x))))-((((x/((y*y)-externalVal))*y)-(x+x))/(y*y))))/(((((x/((externalVal+externalVal)/(externalVal*x)))/y)/y)-(y+y))-((x-((y-(externalVal-x))*externalVal))*((y-externalVal)/y)))))/externalVal)*y))))-((y+(externalVal/x))+externalVal))-x)+y)-y)))/externalVal)))",
          "b": "(x-y)",
          "g": "(y+y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x+((x+(externalVal-externalVal))+(externalVal/(externalVal-((((x+(y*(externalVal-x)))/y)-(x+(y-(y/y))))+x)))))",
          "b": "(y-externalVal)",
          "g": "(y*(externalVal-y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(((y-((y/externalVal)+(x+(y+(y/(((((externalVal-((externalVal+(y*((((x*y)*(externalVal/x))*x)/(x*x))))*x))-((y/x)/x))*externalVal)+(externalVal+externalVal))/y))))))/x)*((y/externalVal)/x))",
          "b": "(externalVal*(y-externalVal))",
          "g": "(y*x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x/(externalVal*y))",
          "b": "(x*(x-x))",
          "g": "(y-y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((x/externalVal)/(((x-externalVal)+(externalVal*(((y-externalVal)/((y/(externalVal*(y-x)))+((x-x)-((y*((((externalVal*(externalVal-((((y+externalVal)-(y*externalVal))-x)/(((((((y+externalVal)-x)+(((y/(((y/y)/(y-externalVal))*(((((externalVal-y)+x)-x)*(((externalVal/x)-(externalVal/x))/externalVal))*externalVal)))*y)*(externalVal-y)))/(externalVal+y))+externalVal)/x)*(x*((y-x)-externalVal))))))-y)/((((y+(y/((x-y)/((((x+(y-y))+(y+x))/(((externalVal+y)-(externalVal/externalVal))-externalVal))+x))))*(y/externalVal))/externalVal)*x))+y))+externalVal))))/externalVal)))*(((y*(x*externalVal))*externalVal)*(x-(((y+externalVal)+(((x*x)+x)*externalVal))/((x-externalVal)/externalVal))))))",
          "b": "((((((externalVal/externalVal)-externalVal)-externalVal)-(externalVal+(x+y)))-(externalVal/((externalVal*x)+(externalVal*y))))*externalVal)",
          "g": "(x+y)"
        }
      }
    ],
    "timestamp": "23h:56m:47s"
  }],
  "timestamp": "2023-11-16-23-56-45"
}
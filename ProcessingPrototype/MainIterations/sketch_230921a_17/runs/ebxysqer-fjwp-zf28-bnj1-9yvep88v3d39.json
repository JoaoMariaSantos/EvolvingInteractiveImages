{
  "id": "ebxysqer-fjwp-zf28-bnj1-9yvep88v3d39",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 12
  },
  "populations": [
    {
      "generation": 10,
      "ascendantID": "7m8h2wqf-i6er-0wlw-x6yw-2qgkmez5v9av",
      "id": "484d6qtz-pg4w-6zd3-t4a9-13xovsnyzpzv",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,(x+(tan(max(externalVal,mod(mod(y,max(externalVal,mod(pow((externalVal-(y+externalVal)),externalVal),y))),noise(max(x,((min(((max(min(noise(externalVal,((max(min((x*(x*externalVal)),tan(externalVal)),min(externalVal,cos(max((y/x),max(x,x)))))+(externalVal+y))*y)),((cos(x)-(mod((pow(y,tan(externalVal))*tan(y)),y)*(tan(y)+mod(x,x))))+sin(y))),min(mod(mod((y/x),mod(y,(cos(x)+x))),externalVal),(cos(x)/x)))+x)-(x+externalVal)),y)*max((x+(x/externalVal)),x))/externalVal)),x))))-externalVal)))",
            "b": "((((externalVal*pow((externalVal-(noise(y,(externalVal+sin(externalVal)))-(max((max(((sin(x)/y)-externalVal),max((pow(cos((y+min(x,y))),mod(x,externalVal))*(x-noise(y,x))),min(mod(externalVal,y),y)))*externalVal),x)+((min(externalVal,(y+noise(externalVal,y)))-externalVal)/externalVal)))),externalVal))-x)+x)*y)",
            "g": "noise(y,sin((mod(min(pow(pow(externalVal,(externalVal/externalVal)),pow(mod(noise(externalVal,cos(tan(sin(x)))),externalVal),y)),mod(x,y)),x)*sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(noise(externalVal,pow(pow(x,max(externalVal,tan(x))),noise(min(x,((noise(((max(min(mod(y,((cos(max((x-(x-externalVal)),cos(externalVal)))*(externalVal+y))/y)),((cos(x)*(pow((pow(y,tan(y))*cos(y)),externalVal)/externalVal))+(externalVal*mod(x,pow(((externalVal+(pow(y,sin(mod(mod(pow(pow(tan(y),mod(cos(externalVal),min(externalVal,x))),externalVal),pow(noise(x,y),noise(noise(pow(y,y),y),cos((x-externalVal))))),y)))+x))-mod(externalVal,(externalVal-y))),externalVal))))),min(min(noise((y/x),mod(y,(max(x,externalVal)+x))),y),(sin(x)*(x+x))))+x)+(x+externalVal)),x)*max((x+cos(y)),x))*externalVal)),y))),externalVal)*externalVal)))",
            "b": "((((externalVal/y)+x)+x)-x)",
            "g": "noise(y,cos((pow(noise(pow(noise(externalVal,(externalVal*(externalVal/x))),pow(min(mod((min((y*y),y)+max(externalVal,mod(((sin(tan(x))+cos(pow(externalVal,pow((x+(max((cos(mod(max((sin(y)-externalVal),(x/externalVal)),sin((externalVal*sin(((tan(y)+y)-min(x,x)))))))+x),noise((externalVal/externalVal),tan(y)))*x)),mod((pow(cos((x*mod(x,noise((tan(min(x,tan(x)))/y),(((x/y)+min((externalVal+tan(y)),externalVal))*x))))),((y-x)+(mod(sin(max(x,pow(y,y))),externalVal)/x)))*max(externalVal,(y+(max(x,y)*externalVal)))),max(externalVal,max(y,(externalVal/x))))))))+y),(x/externalVal)))),x),externalVal),y)),pow(x,y)),x)*cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x-(max(noise(externalVal,pow(pow(x,max(externalVal,tan(y))),noise(noise(x,((noise(((max(max(mod(y,((cos(noise((x*(x-externalVal)),cos(externalVal)))*(y+x))/externalVal)),(sin(tan(x))+(externalVal/y))),max(min(mod((y/y),noise(y,(tan(x)+x))),x),(sin(x)/externalVal)))+x)+(x+externalVal)),x)/x)/x)),x))),externalVal)*externalVal)))",
            "b": "((((externalVal/y)*x)+x)-x)",
            "g": "noise(y,cos((pow(mod(pow(noise(externalVal,(externalVal*(externalVal/externalVal))),pow(max(mod((max((y/externalVal),y)+tan(externalVal)),x),y),y)),audio(x,x)),x)/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x-(max(noise(externalVal,audio(pow(x,max(externalVal,tan(x))),min(min(x,((noise(((min(min(mod(y,(sin(cos(min((x*(x+externalVal)),cos(externalVal))))/x)),(((x/externalVal)*(pow((audio(x,max(y,sin(tan(y))))*tan(y)),externalVal)/x))-(externalVal/pow(x,mod(((externalVal+(pow(y,(noise(mod(pow(pow(tan(x),noise(cos(y),min(y,x))),externalVal),pow(noise(x,y),mod(noise(pow(y,y),y),cos((x*externalVal))))),y)/externalVal))+x))+pow(externalVal,(externalVal*y))),externalVal))))),min(mod(noise((y/x),mod(x,(max(x,externalVal)-x))),x),(cos(x)/(x+x))))+x)+(x+y)),x)*max((x-max(x,(noise(((externalVal*externalVal)+(mod((x+x),y)-externalVal)),audio(noise(mod(x,min(y,(pow(externalVal,pow(tan(y),externalVal))*x))),(y-max(pow(x,x),(externalVal/x)))),min(x,y)))-pow(x,min(x,sin(pow(y,y))))))),x))*externalVal)),y))),y)*externalVal)))",
            "b": "(((sin(externalVal)-x)+x)-x)",
            "g": "noise(y,((pow(mod(audio(mod(externalVal,(externalVal*(externalVal*sin((x*(x*externalVal)))))),pow(min(mod((min((x/x),y)+max(externalVal,mod(((sin(tan(x))+sin(pow(externalVal,pow((x+(max((sin(mod(min((sin(y)*externalVal),sin(x)),sin((y/externalVal))))+x),noise((y*y),tan(y)))-y)),mod((pow(cos((x*pow(x,noise((cos(min(x,max(x,x)))/externalVal),sin(((x/y)+noise((externalVal+tan(y)),externalVal))))))),((y-x)+(mod(sin(min(x,mod(y,y))),externalVal)*externalVal)))*max(externalVal,(x+(max(x,y)*externalVal)))),max(externalVal,max(y,(externalVal/externalVal))))))))+y),(x*x)))),x),externalVal),y)),audio(x,y)),x)*tan(x))/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x-(tan(mod(externalVal,pow(pow(x,max(externalVal,max(x,audio(sin(max(y,x)),externalVal)))),min(min(x,((noise(((min(mod(noise(y,((cos(max((x*(x+externalVal)),cos(externalVal)))/externalVal)/x)),(sin(sin(x))-(externalVal/audio(x,pow(((externalVal+(pow(y,sin(noise(mod(audio(audio(cos(y),noise(cos(externalVal),min(externalVal,x))),externalVal),pow(noise(x,y),mod(noise(pow(y,y),x),tan((x*externalVal))))),y)))+x))-pow(externalVal,(externalVal*y))),externalVal))))),min(noise(mod((y/x),min(x,(min(x,y)+x))),y),(cos(x)/(x+x))))+x)+(x+externalVal)),x)*tan((x-tan(x))))-y)),y))))/externalVal)))",
            "b": "(((sin(externalVal)+x)+x)-x)",
            "g": "noise(y,((pow(noise(mod(pow(y,(externalVal*(externalVal*((x-(x/externalVal))/externalVal)))),pow(min(mod((noise((y*y),x)+max(externalVal,mod((((tan(x)/externalVal)+sin(pow(externalVal,audio((x+(min((cos(mod(min((sin(y)-externalVal),sin(x)),((externalVal/externalVal)/x)))+x),mod((externalVal*y),tan(y)))-y)),pow((pow(cos((x*pow(x,noise((tan(max(x,min(x,x)))/externalVal),(((x/y)+noise((externalVal+max(y,externalVal)),externalVal))*x))))),((x*x)+(mod(sin(min(x,noise(x,y))),y)/externalVal)))/max(externalVal,(y+(max(x,y)*externalVal)))),tan(externalVal))))))+y),(x/x)))),x),externalVal),x)),pow(x,y)),x)*tan(x))/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,(x+(tan(min(y,mod(noise(x,noise(y,mod(pow((externalVal*(y+externalVal)),externalVal),y))),min(tan(x),x))))*externalVal)))",
            "b": "((((externalVal*pow((y*(noise(y,(externalVal+(externalVal/externalVal)))*(max(cos(min((((sin(externalVal)+x)+x)-externalVal),max((pow(cos((y+noise(x,y))),audio(x,externalVal))-(x+noise(y,x))),min(mod(externalVal,x),y)))),x)-((min(externalVal,(x-pow(externalVal,x)))+externalVal)/externalVal)))),externalVal))*x)+x)-x)",
            "g": "noise(y,sin((audio(noise((y*sin(externalVal)),mod(x,x)),x)-(x/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(pow(externalVal,pow(pow(x,max(externalVal,tan(x))),noise(min(x,((noise(((max(min(mod(y,((cos(max((x-(x-y)),cos(externalVal)))/(y-y))/externalVal)),((tan(x)*sin(pow((audio(y,tan(y))/cos(x)),externalVal)))+(externalVal*pow(x,audio(((y+(pow(y,(noise(min(mod(pow(cos(y),pow(tan(externalVal),min(externalVal,x))),y),pow(mod(x,x),min(noise(noise(y,y),y),cos((x-externalVal))))),x)/externalVal))+x))*mod(externalVal,(externalVal/y))),y))))),min(min(noise(sin(y),mod(x,(max(x,externalVal)+x))),y),(sin(x)/x)))+x)+(x+externalVal)),x)/max((x+max(x,(tan(((externalVal-externalVal)+(audio((x+x),x)-externalVal)))-pow(x,min(x,cos(min(x,x))))))),x))*externalVal)),y))),y)*externalVal)))",
            "b": "((((y/externalVal)+x)-x)-x)",
            "g": "noise(y,sin((pow(mod(pow(mod(y,(externalVal*(externalVal/x))),pow(min(pow((min((x-y),y)+max(externalVal,pow(((sin(tan(x))-sin(pow(externalVal,audio((x+(tan((cos(mod(max(((y/y)-externalVal),(x*externalVal)),cos((externalVal*sin(((tan(x)-y)-min(x,x)))))))+x))/x)),mod((pow(cos((x/externalVal)),((y-x)+tan(pow((max(x,mod(y,y))/x),externalVal))))*noise(externalVal,(y+sin(tan(x))))),max(externalVal,max(y,(externalVal/y))))))))+y),(x/y)))),x),externalVal),y)),pow(x,y)),x)/externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,(x+(max(noise(externalVal,audio(audio(x,min(y,tan(x))),noise(min(x,((mod(((max(min(mod(y,((cos(max((x+(x-externalVal)),cos(externalVal)))*(externalVal+y))/externalVal)),(sin(tan(x))+(externalVal*pow(x,pow(((externalVal+(pow(y,(noise(noise(audio(audio(tan(y),mod(cos(externalVal),noise(externalVal,x))),externalVal),pow(noise(x,y),max(noise(noise(y,x),y),cos((x-externalVal))))),y)/externalVal))+x))-mod(externalVal,(externalVal*y))),externalVal))))),min(min(noise((x/externalVal),mod(y,(min(x,externalVal)+x))),y),(sin(x)/x)))+x)+(x+y)),x)-max((x+max(x,(tan(((externalVal-externalVal)+(pow((x-x),y)-externalVal)))-pow(x,noise(x,cos(noise(y,y))))))),x))*externalVal)),y))),y)*y)))",
            "b": "((((externalVal/externalVal)+x)+x)-x)",
            "g": "noise(y,sin((pow(noise(audio(mod(y,(externalVal*(externalVal/x))),pow(min(noise((min((y/y),y)+max(externalVal,pow(((sin(tan(x))+sin(pow(externalVal,pow((x+sin(max((tan(mod(max(((y/y)-externalVal),(x*y)),cos((externalVal*sin(((max(x,x)-y)-min(x,x)))))))+x),mod(sin(externalVal),tan(y))))),mod((mod(cos((x/externalVal)),((y-x)+sin(pow((min(x,mod(y,y))/x),externalVal))))*min(externalVal,(y+(min(x,y)/externalVal)))),max(externalVal,max(y,(externalVal/y))))))))+y),(x/y)))),x),externalVal),y)),audio(x,x)),x)/externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(tan(externalVal),externalVal)-externalVal)))",
            "b": "((((externalVal-pow((externalVal*(min(x,(externalVal+sin(externalVal)))+(max((min(((sin(x)/y)-externalVal),tan((audio(cos((y+noise(x,x))),pow(x,externalVal))*(x+noise(y,x)))))*externalVal),x)-sin((min(externalVal,(max((max(((cos(x)/y)-y),max((pow(cos((y+min(x,y))),pow(x,externalVal))/(x+noise(y,x))),min(pow(externalVal,x),externalVal)))*externalVal),x)+sin((min(externalVal,(y+noise(externalVal,y)))-y))))+externalVal))))),externalVal))-x)+x)+y)",
            "g": "mod(x,((x+x)-(mod(min((externalVal*externalVal),max((externalVal*externalVal),externalVal)),y)/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x-(max(min(externalVal,pow(pow(x,max(externalVal,tan(x))),noise(min(x,((mod(((noise(max(mod(y,((cos(max((x-(x-y)),cos(externalVal)))*(externalVal+y))/externalVal)),((max(x,noise(sin(x),x))*(pow((pow(y,tan(y))/tan(x)),externalVal)/y))+(externalVal/audio(x,pow(((externalVal+(pow(y,(noise(noise(pow(pow(tan(y),mod(cos(externalVal),noise(externalVal,x))),y),audio(noise(x,x),(mod((pow(x,max(externalVal,sin(cos(externalVal))))-tan(y)),y)*(max(y,cos(x))+pow(x,x))))),x)/externalVal))+x))*mod(externalVal,(externalVal*y))),externalVal))))),min(min(noise(sin(y),pow(y,(max(x,externalVal)+x))),y),(sin(x)/x)))+x)+(x+externalVal)),x)-tan((x+tan(x))))/y)),y))),y)*externalVal)))",
            "b": "((((y-min(x,y))+x)+x)*x)",
            "g": "mod(x,sin((audio(noise(pow(pow(x,(externalVal*(externalVal/x))),mod(min(audio((min((y*y),y)+max(externalVal,audio(((sin(tan(x))+cos(audio(externalVal,audio((x-(max((cos(mod(min(((y/y)-externalVal),(x*externalVal)),max((externalVal*sin(((tan(y)-y)-min(x,x)))),externalVal)))-x),mod(cos(externalVal),tan(y)))*x)),mod((pow(cos((x/externalVal)),((y-x)+sin(pow((max(x,audio(x,x))/x),externalVal))))*mod(externalVal,(y+(max(x,y)/externalVal)))),tan(externalVal))))))+y),(x/y)))),x),externalVal),x)),pow(x,y)),x)/externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(tan(externalVal),externalVal)-externalVal)))",
            "b": "((((externalVal-pow((y-(mod(x,(y+tan(externalVal)))-(max((max(((sin(x)/y)-externalVal),min((pow(cos((y+noise(x,x))),mod(x,externalVal))*(x+min(x,x))),min(pow(externalVal,x),externalVal)))*externalVal),x)+cos((min(externalVal,(y+pow(y,y)))+externalVal))))),y))-x)+x)+y)",
            "g": "min(y,((x+x)*sin(mod(min((y/externalVal),max((x+y),externalVal)),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(noise(externalVal,pow(pow(x,cos(y)),noise(max(x,((noise(((tan(max(pow(y,((tan(max((x-(x*externalVal)),cos(externalVal)))*(y-x))/externalVal)),((sin(x)*(noise((pow(y,cos(y))*cos(y)),y)*externalVal))+(y/noise(x,pow(((externalVal+(audio(x,(mod(mod(pow(pow(tan(y),mod(tan(externalVal),noise(externalVal,y))),externalVal),pow(mod(x,x),min(mod(mod(x,x),y),cos((x*externalVal))))),x)/y))+x))-pow(y,(externalVal-y))),externalVal))))))+x)+(x+externalVal)),x)/y)/externalVal)),y))),externalVal)*externalVal)))",
            "b": "(((sin(externalVal)-x)+x)+x)",
            "g": "noise(y,tan((pow(pow(pow(mod(externalVal,(externalVal*(externalVal/externalVal))),pow(min(mod((noise((y/x),x)+tan(externalVal)),x),y),y)),pow(x,y)),x)/y)))"
          }
        }
      ],
      "timestamp": "22h:33m:17s"
    },
    {
      "generation": 11,
      "ascendantID": "484d6qtz-pg4w-6zd3-t4a9-13xovsnyzpzv",
      "id": "69l8rzu4-2oy3-3cyr-t3d2-1l4kfxoucut2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,(x+(tan(max(externalVal,mod(mod(y,max(externalVal,mod(pow((externalVal-(y+externalVal)),externalVal),y))),noise(max(x,((min(((max(min(noise(externalVal,((max(min((x*(x*externalVal)),tan(externalVal)),min(externalVal,cos(max((y/x),max(x,x)))))+(externalVal+y))*y)),((cos(x)-(mod((pow(y,tan(externalVal))*tan(y)),y)*(tan(y)+mod(x,x))))+sin(y))),min(mod(mod((y/x),mod(y,(cos(x)+x))),externalVal),(cos(x)/x)))+x)-(x+externalVal)),y)*max((x+(x/externalVal)),x))/externalVal)),x))))-externalVal)))",
            "b": "((((externalVal*pow((externalVal-(noise(y,(externalVal+sin(externalVal)))-(max((max(((sin(x)/y)-externalVal),max((pow(cos((y+min(x,y))),mod(x,externalVal))*(x-noise(y,x))),min(mod(externalVal,y),y)))*externalVal),x)+((min(externalVal,(y+noise(externalVal,y)))-externalVal)/externalVal)))),externalVal))-x)+x)*y)",
            "g": "noise(y,sin((mod(min(pow(pow(externalVal,(externalVal/externalVal)),pow(mod(noise(externalVal,cos(tan(sin(x)))),externalVal),y)),mod(x,y)),x)*sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(noise(externalVal,pow(pow(x,max(externalVal,tan(x))),noise(min(x,((noise(((max(min(mod(y,((cos(max((x-(x-externalVal)),cos(externalVal)))*(externalVal+y))/y)),((cos(x)*(pow((pow(y,tan(y))*cos(y)),externalVal)/externalVal))+(externalVal*mod(x,pow(((externalVal+(pow(y,sin(mod(mod(pow(pow(tan(y),mod(cos(externalVal),min(externalVal,x))),externalVal),pow(noise(x,y),noise(noise(pow(y,y),y),cos((x-externalVal))))),y)))+x))-mod(externalVal,(externalVal-y))),externalVal))))),min(min(noise((y/x),mod(y,(max(x,externalVal)+x))),y),(sin(x)*(x+x))))+x)+(x+externalVal)),x)*max((x+cos(y)),x))*externalVal)),y))),externalVal)*externalVal)))",
            "b": "((((externalVal/y)+x)+x)-x)",
            "g": "noise(y,cos((pow(noise(pow(noise(externalVal,(externalVal*(externalVal/x))),pow(min(mod((min((y*y),y)+max(externalVal,mod(((sin(tan(x))+cos(pow(externalVal,pow((x+(max((cos(mod(max((sin(y)-externalVal),(x/externalVal)),sin((externalVal*sin(((tan(y)+y)-min(x,x)))))))+x),noise((externalVal/externalVal),tan(y)))*x)),mod((pow(cos((x*mod(x,noise((tan(min(x,tan(x)))/y),(((x/y)+min((externalVal+tan(y)),externalVal))*x))))),((y-x)+(mod(sin(max(x,pow(y,y))),externalVal)/x)))*max(externalVal,(y+(max(x,y)*externalVal)))),max(externalVal,max(y,(externalVal/x))))))))+y),(x/externalVal)))),x),externalVal),y)),pow(x,y)),x)*cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(tan(externalVal),y)*y)))",
            "b": "((((sin(externalVal)*x)+x)-x)-x)",
            "g": "mod(x,pow(externalVal,pow((x+sin(max((tan(noise(tan((sin(x)-x)),max((externalVal*cos(((cos(y)+y)+min(x,y)))),y)))-x),mod((externalVal/y),max(x,pow((y+y),tan(noise(x,noise(max(min(x,externalVal),mod(sin((x+x)),y)),(pow((max(externalVal,x)+y),sin(externalVal))-x)))))))))),mod(cos(pow(cos((x-pow(x,noise((tan(max(x,tan(x)))/y),(sin(x)/x))))),((x*x)-(noise(sin(min(x,audio(x,y))),externalVal)/((y+externalVal)+externalVal))))),min(externalVal,tan(x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(max(externalVal,pow(mod(y,max(externalVal,noise(pow(audio(max(y,audio(x,y)),noise(cos(externalVal),mod(y,x))),externalVal),y))),mod(tan(x),x))),externalVal)*externalVal)))",
            "b": "((((externalVal-audio((y*(noise(x,(y+tan(externalVal)))-(max((max(((sin(x)/y)-externalVal),min((pow(cos((sin(externalVal)+x)),mod(x,externalVal))*(x+min(x,x))),min(pow(externalVal,x),externalVal)))*externalVal),x)-cos((noise(externalVal,(y+mod(y,y)))+externalVal))))),externalVal))-x)+x)+y)",
            "g": "min(y,((x+x)-sin(mod(pow(externalVal,audio((x+(min((cos(pow(min((sin(y)-externalVal),(x/x)),((externalVal/externalVal)/x)))+x),pow((y/y),tan(y)))-y)),audio((pow(cos((x*pow(x,noise(sin(tan(min(x,min(x,x)))),sin(((x/y)+noise((externalVal+max(y,externalVal)),y))))))),((x-x)-(mod(sin(noise(x,min(x,y))),externalVal)/externalVal)))/max(externalVal,(y+(max(x,y)*externalVal)))),max(externalVal,max(y,sin(y)))))),externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(noise(externalVal,pow(pow(x,min(y,tan(x))),noise(min(x,((mod(((min(min(mod(y,((tan(min((x*(x+externalVal)),tan(externalVal)))*(externalVal+y))/y)),((cos(x)*(pow((pow(y,tan(y))*cos(y)),externalVal)/externalVal))+(externalVal*mod(x,audio(((y+(pow(y,sin(pow(mod(cos(externalVal),min(y,x)),y)))-x))-mod(externalVal,(externalVal*x))),externalVal))))),min(min(noise((y/x),pow(y,(max(x,externalVal)+x))),y),(sin(x)/(x+x))))+x)+(x+externalVal)),x)/tan((x+tan(y))))*externalVal)),y))),externalVal)*externalVal)))",
            "b": "((((externalVal*y)+x)+x)-x)",
            "g": "mod(y,cos((pow(noise(pow(noise(externalVal,(externalVal*(externalVal/x))),pow(min(pow((min((y*y),y)+max(externalVal,mod(((sin(tan(x))+cos(pow(externalVal,pow((x+(max((cos(noise(min((sin(x)-externalVal),sin(x)),sin((externalVal-cos(((max(x,y)+x)*min(x,x)))))))+x),noise((externalVal/externalVal),tan(y)))*x)),mod((pow(cos((x*mod(x,noise(sin(tan(min(x,tan(x)))),(((x/y)+noise((externalVal+max(x,externalVal)),y))*x))))),((y/x)+sin(mod(sin(max(x,mod(y,y))),externalVal))))*max(y,(y+(max(x,y)*externalVal)))),max(externalVal,max(y,(cos(y)-y))))))))+y),(x/externalVal)))),x),externalVal),x)),audio(x,y)),x)*tan(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,(x-(tan(max(externalVal,mod(mod(y,min(y,noise(pow((externalVal-(y+externalVal)),externalVal),x))),mod(max(x,((min(((max(min(noise(y,((max(min((x/(x*externalVal)),tan(externalVal)),min(externalVal,cos(max((y/x),max(x,x)))))+(externalVal+y))*y)),((cos(x)-(pow((pow(y,cos(externalVal))/tan(y)),y)*(tan(x)+mod(x,x))))+sin(y))),min(sin(max(externalVal,x)),(cos(x)/x)))+x)-(x+externalVal)),y)*max((x+(x/externalVal)),x))/externalVal)),x))))*y)))",
            "b": "((y/externalVal)*y)",
            "g": "noise(y,sin((audio(noise(audio(cos((externalVal/sin(((tan(x)-y)-noise(x,x))))),pow(noise(noise(externalVal,cos(tan(sin(x)))),y),y)),mod(x,y)),x)*sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,(x+(tan(max(externalVal,pow(mod(x,max(externalVal,mod(pow((externalVal-(y+externalVal)),externalVal),y))),min(min(x,((min(((max(min(noise(externalVal,((max(min((x*(x/y)),max(y,(x/x))),min(externalVal,cos(min((y/x),max(x,x)))))+(externalVal+y))*y)),((cos(x)-sin(mod((pow(y,tan(externalVal))*tan(y)),y)))-(tan(mod(externalVal,pow(pow(x,max(externalVal,min(x,audio((max(y,x)/y),externalVal)))),min(min(x,((noise(((noise(mod(noise(y,((cos(max((x/(x+externalVal)),cos(externalVal)))/externalVal)/x)),(sin(sin(x))*(externalVal/audio(x,pow(((externalVal+(pow(y,sin(noise(mod(pow(audio(tan(y),noise(cos(externalVal),min(externalVal,x))),externalVal),pow(noise(x,y),mod(noise(pow(y,y),x),tan((x*y))))),y)))+x))/audio(externalVal,(externalVal*y))),externalVal))))),max(noise(mod((y/x),noise(x,(max(x,y)+x))),y),(sin(x)/(x+x))))+x)+(x+y)),x)*tan((x+tan(x))))-y)),y))))/externalVal))),min(mod(mod((y/x),mod(y,(cos(x)+x))),externalVal),sin(cos(x))))+x)-(x+externalVal)),y)*max((x+(x*externalVal)),x))/externalVal)),x))))-externalVal)))",
            "b": "((((externalVal*audio((externalVal-(noise(y,(y-sin(externalVal)))+(noise((max((((sin(externalVal)-x)+x)-externalVal),max((pow(cos((x+noise(x,x))),mod(x,externalVal))/(x-mod(y,x))),noise(mod(externalVal,y),y)))/externalVal),x)+((max(externalVal,(y+mod(externalVal,x)))-externalVal)/externalVal)))),y))*x)+x)*y)",
            "g": "noise(y,sin((mod(min((externalVal*sin((x-(x/externalVal)))),mod(x,y)),x)*sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,(x+(tan(max(y,mod(mod(y,max(externalVal,mod(audio((externalVal-(y-externalVal)),externalVal),y))),noise(max(x,((noise(((tan(noise(noise(externalVal,((max(mod((x-(x*externalVal)),max(y,(y*x))),min(externalVal,cos(max((x*x),max(x,x)))))+(y-x))*y)),((cos(x)-(mod((pow(y,max(y,sin(cos(externalVal))))/tan(y)),y)*(tan(y)+pow(x,x))))+sin(y))))+x)-(x+externalVal)),y)*max((x+(x/externalVal)),x))/externalVal)),x))))-externalVal)))",
            "b": "((((externalVal*mod((externalVal-(mod(y,(externalVal+sin(externalVal)))*(max((max((sin(sin(x))*externalVal),max((pow(cos((y+noise(x,x))),mod(x,y))*(x*mod(y,x))),min(pow(externalVal,y),y)))*externalVal),x)-((min(externalVal,(y+noise(externalVal,x)))-externalVal)/externalVal)))),externalVal))+x)-x)*y)",
            "g": "noise(y,sin((mod(min(audio(pow(externalVal,(externalVal/externalVal)),audio(mod(min(externalVal,cos(tan(tan(x)))),externalVal),y)),mod(x,x)),x)*sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,(x-(tan(mod(externalVal,pow(pow(x,max(externalVal,max(x,audio(sin(max(y,x)),externalVal)))),min(noise(x,((noise(((min(mod(noise(y,((cos(max(sin(x),cos(externalVal)))/externalVal)/x)),(sin(cos(x))+(externalVal/audio(x,audio(((externalVal+(pow(y,sin(min(mod(audio(audio(cos(y),noise(cos(externalVal),min(y,x))),externalVal),audio(noise(x,y),mod(mod(pow(y,y),x),tan((x*externalVal))))),y)))+x))-pow(externalVal,(externalVal/y))),y))))),min(pow(mod((y/x),min(x,(min(x,y)+x))),y),(tan(x)/(x+x))))+x)+(x+y)),x)*tan((x-tan(x))))-y)),y))))/externalVal)))",
            "b": "(((cos(externalVal)+x)+x)-x)",
            "g": "mod(y,((pow(noise(mod(pow(y,(externalVal/(externalVal-sin((x*(x*externalVal)))))),pow(min(mod((noise((y*y),x)+max(externalVal,mod((((tan(x)/externalVal)-sin(pow(externalVal,audio((x+(min((cos(mod(min((sin(y)-y),sin(x)),((externalVal/externalVal)/x)))+x),noise((externalVal/y),tan(x)))-y)),pow((pow(cos((x-mod(x,noise(sin(tan(max(x,min(x,x)))),(((x/y)+noise((externalVal+min(y,externalVal)),externalVal))*x))))),((x*x)+(pow(tan(min(x,noise(x,y))),y)/externalVal)))/max(externalVal,(y+(max(x,y)-y)))),tan(externalVal))))))-y),(x/x)))),x),y),x)),audio(x,x)),x)/tan(x))/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x-(max(pow(y,audio(pow(x,max(externalVal,tan(x))),min(min(x,((noise(((noise(min(noise(x,(sin(cos(min((x/(x+externalVal)),tan(externalVal))))/x)),((sin(x)*sin(pow((audio(x,max(y,sin(tan(y))))*max(x,externalVal)),externalVal)))-(y/pow(x,mod(((externalVal+(pow(y,(sin(tan((x/tan(mod(externalVal,(noise((y+mod((x+x),sin(x))),externalVal)*min((externalVal*externalVal),pow(externalVal,x))))))))/externalVal))+x))-pow(externalVal,(externalVal*y))),externalVal))))),min(mod(noise((y/x),mod(x,(max(x,externalVal)-x))),x),(cos(x)/(x+x))))+x)+(x+y)),x)*max((x-max(x,(noise(((externalVal*externalVal)+(mod((x+x),y)-externalVal)),mod(noise(mod(x,min(y,(mod(y,pow(max(y,x),externalVal))/x))),(y+max(pow(x,x),(externalVal/x)))),min(x,y)))-pow(x,mod(x,sin(pow(y,y))))))),x))/externalVal)),y))),y)*y)))",
            "b": "(((cos(y)-x)*x)-x)",
            "g": "noise(y,((pow(mod(audio(mod(y,(externalVal*sin(y))),audio(min(noise((min(sin(y),y)+max(y,pow((((min(x,x)/y)+sin(pow(externalVal,mod((x-(min((sin(audio(noise((sin(y)-externalVal),sin(x)),sin((y/externalVal))))+x),noise((y*y),tan(x)))-y)),mod((pow(cos((x*pow(x,noise((cos(min(x,max(x,x)))*externalVal),sin(((x/y)+noise((externalVal+cos(x)),externalVal))))))),((y-x)+(mod(sin(min(x,pow(x,x))),externalVal)*externalVal)))*noise(max(max(x,externalVal),pow(sin((x-x)),y)),(pow((max(externalVal,x)+y),sin(externalVal))+y))),max(externalVal,max(y,(externalVal/externalVal))))))))+y),(x*x)))),x),externalVal),x)),audio(x,y)),x)/tan(x))/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(x,(x-(max(min(externalVal,pow(pow(x,max(externalVal,tan(x))),noise(min(x,((mod(((noise(max(mod(y,((cos(max((x-(x-y)),cos(externalVal)))/(externalVal+y))/externalVal)),((max(x,noise(sin(x),x))*(pow((audio(x,tan(y))/tan(x)),externalVal)/y))+(externalVal/audio(x,pow(((y+(pow(y,(noise(noise(pow(audio(max(x,noise(externalVal,externalVal)),mod(max(externalVal,y),noise(externalVal,x))),y),audio(noise(x,x),(mod((mod(y,max(externalVal,sin(cos(externalVal))))-max(y,x)),y)*(max(x,tan(x))+pow(x,x))))),x)/externalVal))+x))*pow(externalVal,(externalVal*y))),externalVal))))),min(min(noise(sin(y),pow(y,(max(x,externalVal)-x))),y),(sin(x)/x)))+x)+(x+y)),x)*tan((x+tan(x))))/y)),y))),y)*externalVal)))",
            "b": "((((y-noise(x,y))+x)+x)*x)",
            "g": "mod(x,tan((audio(noise(pow(mod(y,(externalVal*(externalVal/x))),mod(noise(audio((min((x/x),y)+max(externalVal,audio((((tan(x)/y)+cos(audio(externalVal,audio((x-(max((cos(pow(min(((y/y)-externalVal),(x*externalVal)),min((externalVal*sin(((tan(x)*x)-min(x,x)))),externalVal)))-x),mod(cos(externalVal),tan(y)))*x)),mod((mod(tan((x/externalVal)),((y-x)+sin(pow((max(x,audio(x,x))/x),externalVal))))*mod(externalVal,(y+(max(x,y)/externalVal)))),tan(externalVal))))))+y),(x/y)))),x),y),x)),pow(x,y)),x)/externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(y,(x+(max(noise(externalVal,pow(pow(x,noise(externalVal,max(x,audio(sin(min(externalVal,x)),y)))),mod(noise(x,((noise(((max(min(mod(y,((cos(max((x-(x-externalVal)),cos(externalVal)))*(y+x))*y)),((cos(x)*(pow((pow(y,tan(y))*cos(y)),externalVal)/externalVal))+(externalVal*mod(x,mod(((externalVal+(pow(x,sin(mod(mod(pow(audio(max(y,min(y,externalVal)),mod(cos(externalVal),max(y,x))),externalVal),pow(mod(x,x),noise(noise(pow(y,y),x),cos((x-externalVal))))),y)))-x))*mod(externalVal,(externalVal+x))),y))))),min(min(noise((y/x),mod(y,(max(x,externalVal)+x))),x),(sin(x)*(x+x))))+x)-(x+externalVal)),x)/max((x+cos(y)),x))/y)),x))),externalVal)*externalVal)))",
            "b": "((((externalVal/y)+x)+x)-x)",
            "g": "noise(x,cos((pow(noise(audio(noise(externalVal,(externalVal*(externalVal/x))),pow(min(mod((min((y*y),y)+max(externalVal,mod(((cos(tan(x))+cos(audio(externalVal,pow((x+(max((cos(mod(max((sin(y)-externalVal),(x*externalVal)),sin((externalVal*sin(((tan(y)+y)*min(x,x)))))))+x),noise((externalVal/externalVal),max(x,pow((x+externalVal),tan(noise(x,max(cos(min(x,externalVal)),(pow((tan(externalVal)+y),sin(externalVal))+y))))))))*x)),mod((audio(tan((x*mod(x,noise((tan(noise(x,tan(x)))/y),(((x/y)+min((externalVal+tan(y)),externalVal))*x))))),((y*x)+(mod(sin(max(x,pow(y,y))),externalVal)/x)))*max(externalVal,(y+(tan(x)/y)))),max(externalVal,max(y,(externalVal/x))))))))+y),(x/externalVal)))),x),externalVal),y)),pow(x,y)),x)*cos(x))))"
          }
        }
      ],
      "timestamp": "22h:33m:21s"
    }
  ],
  "timestamp": "2023-11-05-19-21-06"
}
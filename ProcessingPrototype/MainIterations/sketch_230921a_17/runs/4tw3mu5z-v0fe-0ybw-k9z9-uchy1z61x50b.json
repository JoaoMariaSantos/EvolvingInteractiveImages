{
  "id": "4tw3mu5z-v0fe-0ybw-k9z9-uchy1z61x50b",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [{
    "generation": 0,
    "id": "gqxbtrb8-wx75-w6xy-7903-lv96ns4hp5dx",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(max(pow(sin(min(x,(mod((max((min(y,externalVal)-x),y)*y),mod(pow(sin(tan(sin(y))),((externalVal/(sin((x+y))/mod(mod(sin((y*((y+(x-x))+max(noise((y+cos(noise(externalVal,min(x,y)))),x),externalVal)))),externalVal),max(y,externalVal))))/sin(y))),tan(audio(y,y))))*max(cos(tan(audio(y,max(y,x)))),x)))),externalVal),externalVal),(externalVal*y))",
          "b": "pow((externalVal/min(x,externalVal)),((sin(externalVal)+externalVal)+x))",
          "g": "audio((x-(y-min((x-pow(noise(externalVal,externalVal),x)),externalVal))),y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y-(tan(max(x,x))*y))",
          "b": "max((max(x,(mod(mod(y,x),externalVal)/pow(sin(externalVal),(externalVal+sin((x+externalVal))))))+x),externalVal)",
          "g": "min(cos(y),x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal-sin(y))",
          "b": "((x*y)+(pow(mod(sin(y),max(y,y)),mod(externalVal,x))-cos(y)))",
          "g": "pow(audio(externalVal,externalVal),pow(y,externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(x)",
          "b": "(x-((externalVal*x)-externalVal))",
          "g": "(audio(tan(cos(min(externalVal,x))),y)*(sin(x)/pow((tan((x+externalVal))/y),externalVal)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y*(cos(y)-pow(x,x)))",
          "b": "max((x/(sin(noise(pow((y-x),x),externalVal))+pow((y+tan(sin(y))),y))),audio(audio(y,(y/(pow(externalVal,(externalVal+max(x,x)))*sin(noise(externalVal,noise(pow(externalVal,(externalVal-(cos(x)/externalVal))),y)))))),min(x,y)))",
          "g": "max(externalVal,((mod(externalVal,(audio(x,y)/mod(tan((((y+cos((max(y,x)/tan((x-max(x,min(noise(externalVal,y),y)))))))/y)+y)),(max(x,max((mod(y,externalVal)*externalVal),pow(tan(y),(y*y))))*externalVal))))+(externalVal+noise(x,y)))/tan(externalVal)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod(audio((((externalVal-externalVal)+y)-(externalVal+y)),(audio(y,externalVal)/pow(x,x))),y)",
          "b": "audio((pow((noise(externalVal,x)+cos(y)),y)/tan(mod(tan(y),x))),x)",
          "g": "sin((externalVal*pow(cos(y),(audio(y,externalVal)-x))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(externalVal)",
          "b": "(x+sin((max(y,max(externalVal,y))-pow(y,noise(x,y)))))",
          "g": "noise(min(x,x),externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(min(externalVal,externalVal))",
          "b": "(sin(noise(tan(x),(y+noise(sin(y),y))))+max(y,audio((y-y),pow(x,(externalVal*externalVal)))))",
          "g": "max(pow(externalVal,externalVal),(externalVal+y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin(audio(tan(y),externalVal))",
          "b": "min((x+cos(pow(externalVal,y))),noise(pow(y,mod(noise(sin(x),x),mod(min(x,externalVal),(x+pow(tan(max(cos(externalVal),y)),x))))),externalVal))",
          "g": "pow((pow(noise(externalVal,(externalVal-audio(externalVal,x))),x)+sin(max(x,y))),audio(x,pow(pow(externalVal,y),x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "min(y,y)",
          "b": "(sin(tan(y))*x)",
          "g": "pow(pow(sin(externalVal),(sin(audio(y,(y+externalVal)))-sin(externalVal))),(y*min(noise(noise((sin(externalVal)/x),y),y),externalVal)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(y,min(noise(externalVal,x),externalVal))",
          "b": "(x/tan(x))",
          "g": "sin(externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(audio((externalVal*x),(externalVal-max(y,externalVal)))/x)",
          "b": "cos(noise((y/(audio(y,(min(externalVal,(mod(x,x)+cos(externalVal)))+externalVal))*x)),x))",
          "g": "audio(y,(min(y,y)/tan(sin(y))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "audio(y,(y*min(y,externalVal)))",
          "b": "mod(audio(x,(externalVal+sin((sin(y)+x)))),noise(((y+externalVal)-mod(x,y)),(x-y)))",
          "g": "((audio(externalVal,min(max(pow(min((y*x),externalVal),(y+cos(tan(y)))),y),externalVal))-mod(max(pow(((x-audio(audio(cos(min((x+max((audio(mod(externalVal,(y+externalVal)),mod((pow(x,tan(y))/x),max(x,externalVal)))/externalVal),y)),externalVal)),y),y))+(mod(y,externalVal)/externalVal)),y),x),(x*externalVal)))*y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((audio(y,pow(mod(x,cos(externalVal)),x))*y)+x)",
          "b": "tan(tan(audio(externalVal,externalVal)))",
          "g": "max(x,externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "audio(audio(mod(sin(sin(x)),pow(sin(max(externalVal,mod(sin(x),(max(y,externalVal)+(y+cos(y)))))),y)),(min(x,y)+y)),(((externalVal-y)-(externalVal-mod(tan(externalVal),y)))-y))",
          "b": "max((externalVal*y),externalVal)",
          "g": "sin(noise(sin(cos((cos((y*externalVal))/x))),y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(x)",
          "b": "audio(pow(externalVal,x),(min((externalVal*y),(externalVal-x))*externalVal))",
          "g": "(sin(pow(sin(pow(externalVal,y)),(sin((mod(externalVal,(x/x))*x))*audio(audio(externalVal,externalVal),noise(externalVal,pow(externalVal,y))))))/x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod((y*y),cos(x))",
          "b": "(x+tan(x))",
          "g": "sin(y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(y,externalVal)",
          "b": "(externalVal/y)",
          "g": "pow(audio(externalVal,x),sin(externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal-noise((x*cos(audio(y,audio(max(externalVal,tan(y)),tan(externalVal))))),y))",
          "b": "((audio(((x+x)+externalVal),tan(y))*(x*y))/(y*y))",
          "g": "audio(y,pow(x,x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin(x)",
          "b": "pow(x,x)",
          "g": "audio(tan((y*mod(noise(externalVal,mod(externalVal,sin(x))),(externalVal-externalVal)))),y)"
        }
      }
    ],
    "timestamp": "19h:57m:45s"
  }],
  "timestamp": "2023-11-16-19-57-40"
}
{
  "id": "bc6loqrs-c0r3-eji4-odkc-k2zce36h9kdz",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [{
    "generation": 0,
    "id": "hpf7r4hw-17gs-ce3w-0scd-rxvlveeebs9d",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(bri(y,(min(externalVal,pow(sin(x),(cos(bri(x,y))*y)))+y)),(externalVal*x))",
          "b": "(tan(min(tan(((tan(externalVal)*y)/x)),mod(externalVal,externalVal)))*bri(mod(x,externalVal),pow(x,y)))",
          "g": "(y-y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod(((externalVal/y)*x),mod(y,pow(bri(y,(mod(mod(externalVal,tan(y)),x)/(y/y))),pow(x,y))))",
          "b": "audio(x,y)",
          "g": "pow(x,x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(externalVal)",
          "b": "mod(y,audio(x,x))",
          "g": "audio(mod((x+externalVal),y),x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(externalVal,externalVal)",
          "b": "audio(((sin(y)-y)+pow(min(noise((min(externalVal,audio(x,noise(x,(cos(y)-tan(externalVal)))))*(x-bri(x,(tan((externalVal+(y-max(pow(pow(y,externalVal),tan(x)),sin(bri(audio(tan(y),((externalVal-y)+y)),sin((y-(y+(min(y,(bri(x,externalVal)/(x*x)))+(x+pow(max(x,x),x))))))))))))*externalVal)))),y),x),bri(externalVal,(x-y)))),(x/x))",
          "g": "bri(pow(audio(externalVal,max(min(y,x),pow(externalVal,y))),tan(max(x,externalVal))),tan(y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(x)",
          "b": "((externalVal-x)+audio(x,min(externalVal,audio(x,(tan(x)*max(((cos(max(externalVal,x))+x)*min(externalVal,tan((y*audio(pow(x,(x-tan(x))),y))))),noise(tan(pow(noise(tan(sin(x)),y),sin(x))),(cos(x)/y))))))))",
          "g": "max(externalVal,externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin(tan(externalVal))",
          "b": "noise(externalVal,x)",
          "g": "audio(y,cos(y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "max(externalVal,min(externalVal,externalVal))",
          "b": "(bri(((mod(audio((externalVal*mod(externalVal,externalVal)),x),x)*(x/y))-(y/mod(cos(sin(y)),externalVal))),externalVal)*y)",
          "g": "pow(tan(y),audio(y,mod(x,min(max(externalVal,externalVal),tan(x)))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y-max(externalVal,externalVal))",
          "b": "cos(externalVal)",
          "g": "mod(cos(x),externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(externalVal)",
          "b": "bri(x,y)",
          "g": "(x*x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(bri(x,x))",
          "b": "max(bri(y,x),x)",
          "g": "(sin(y)/y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(x)",
          "b": "min(x,y)",
          "g": "audio(y,bri(tan(x),noise(cos(noise((x-x),((x+pow(externalVal,(audio(externalVal,tan(bri(externalVal,externalVal)))*x)))*(sin((noise((x*bri(pow(pow(x,bri(min((externalVal-x),externalVal),tan(externalVal))),x),max(y,x))),externalVal)+y))*x)))),x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(x)",
          "b": "cos(((x-externalVal)*y))",
          "g": "(x-externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x/(x+externalVal))",
          "b": "cos(bri(x,externalVal))",
          "g": "noise(audio(x,cos(externalVal)),y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(min(audio(x,y),mod(externalVal,max(mod(tan(x),x),(x/((bri(y,externalVal)-y)*sin((externalVal*(y/(externalVal/externalVal))))))))))",
          "b": "max(max(y,externalVal),x)",
          "g": "min(externalVal,(y/max((x-externalVal),(x*y))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod(min(sin(noise(externalVal,externalVal)),(max(externalVal,sin((min(y,(min(((max(y,mod(tan(x),externalVal))/x)/max(min(audio(x,noise(noise(y,(tan(externalVal)-((x*mod((externalVal*noise((x+max(externalVal,x)),cos(y))),tan(max(x,noise(min(cos(min((sin(pow((y-sin(externalVal)),audio((externalVal-externalVal),y)))-tan(y)),sin(x))),y),x)))))-x))),audio(externalVal,bri(tan((mod(y,pow(externalVal,pow(externalVal,(min(tan(x),cos(x))*externalVal))))+pow(mod(y,cos(x)),noise(externalVal,y)))),pow(externalVal,x))))),externalVal),x)),mod(tan(x),x))*y))-externalVal)))/(audio(y,externalVal)-noise((y*x),tan(y))))),bri(y,x))",
          "b": "bri(max(x,externalVal),y)",
          "g": "((tan(max(y,y))/externalVal)+(x+((x+(noise(y,audio(cos(y),x))/pow((y*externalVal),x)))+(y/y))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal+externalVal)",
          "b": "tan((y+x))",
          "g": "tan(externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((x/x)-x)",
          "b": "(pow(audio(sin(mod(x,externalVal)),((tan(y)/y)-(externalVal+y))),x)/y)",
          "g": "sin((externalVal+externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal*bri(y,max(y,sin((noise(externalVal,x)/y)))))",
          "b": "tan((x-tan((y-externalVal))))",
          "g": "min(sin(externalVal),max((cos(x)-bri(x,externalVal)),externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod(bri(x,y),sin(pow(cos(x),(sin(tan(mod(externalVal,cos(y))))/x))))",
          "b": "bri(externalVal,y)",
          "g": "min((y*x),audio(y,externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin(x)",
          "b": "(sin(externalVal)/y)",
          "g": "audio(cos(((x-noise((externalVal*externalVal),bri((externalVal*min(y,bri(y,externalVal))),min(externalVal,min(((x-externalVal)-cos(noise(pow(y,max(y,sin(x))),y))),tan(pow(tan((y/x)),x)))))))/noise((noise(max((max(x,pow(cos(min(pow(externalVal,audio(externalVal,max(bri(externalVal,x),y))),bri(y,sin(externalVal)))),(x/x)))/y),externalVal),sin(x))*audio((pow(externalVal,externalVal)+x),(x+((noise(externalVal,tan(audio(x,y)))/externalVal)+(x+x))))),(audio(externalVal,(((mod(cos(min(y,externalVal)),(pow(externalVal,(externalVal*min(max(noise(externalVal,y),externalVal),y)))*x))+cos(cos(mod(y,externalVal))))-x)/externalVal))+y)))),(mod(externalVal,externalVal)+(externalVal/mod(min(min(y,audio(y,(y*(x+y)))),y),externalVal))))"
        }
      }
    ],
    "timestamp": "21h:45m:55s"
  }],
  "timestamp": "2023-11-16-21-45-54"
}
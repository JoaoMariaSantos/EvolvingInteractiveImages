{
  "id": "10o1cak4-4ls5-joui-0jcd-ucyq5bhlw3ln",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.20000000298023224,
    "populationSize": 10
  },
  "populations": [{
    "generation": 0,
    "id": "lwmlvtb3-qvkg-n007-6vti-p6rtj0e15i7o",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(y)",
          "b": "pow(cos((externalVal+noise(y,x))),y)",
          "g": "audio(audio(externalVal,(y+y)),mod((sin(noise(externalVal,y))-((cos(y)+y)-x)),x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(pow((cos(pow(externalVal,audio(pow(sin((sin((y*(noise(tan(externalVal),audio(mod(x,x),x))*pow(sin((audio(noise(externalVal,externalVal),min(noise(noise(cos(((externalVal-min(noise(audio(externalVal,audio(sin(y),(max(min(externalVal,(y+y)),x)*x))),max((externalVal/mod(x,x)),noise(externalVal,min(noise(max((y/y),x),noise(externalVal,cos(y))),cos(min((y*externalVal),sin(y))))))),x))*y)),externalVal),noise(x,min(x,y))),sin(y)))*y)),max(max(x,y),x)))))-y)),pow(x,y)),cos(max((y*mod((x+((min(externalVal,y)*externalVal)+externalVal)),cos((max(((pow(y,y)/(externalVal/externalVal))*externalVal),(((x+x)-x)/externalVal))*y)))),(x/x))))))/(sin(externalVal)+y)),sin((y*externalVal)))/noise((y+sin(x)),y))",
          "b": "(audio(x,x)+(cos(audio(mod(sin(x),tan(x)),externalVal))*((externalVal/x)*y)))",
          "g": "mod(audio(max(y,y),externalVal),tan(y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin(max(x,pow(noise(pow(x,y),x),cos((y+(max(tan(x),y)/(x/x)))))))",
          "b": "(cos(x)*(externalVal+y))",
          "g": "mod((externalVal-sin(mod(x,externalVal))),(y*sin(((min(tan(sin(y)),audio(x,(externalVal-x)))*audio(noise(externalVal,externalVal),sin((cos(sin(tan(y)))-externalVal))))/y))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "min(min(cos(x),pow(externalVal,sin((pow(mod(externalVal,pow((y*x),y)),x)*y)))),(externalVal*x))",
          "b": "(x/noise(max(cos(((externalVal+tan(externalVal))-noise(x,x))),sin(((max((noise(x,(noise(sin((x*min(externalVal,externalVal))),(externalVal+max((externalVal*x),max((externalVal/noise(x,sin(externalVal))),externalVal))))*sin((externalVal*(externalVal-y)))))+externalVal),audio(y,x))/noise(min(x,x),max((((y+x)+cos(mod(y,max(pow((y-y),tan((x+(y*externalVal)))),sin(max(cos(externalVal),min((y-(noise(x,y)-externalVal)),y)))))))*audio(y,y)),x)))+mod(audio((y*(y-y)),externalVal),y)))),y))",
          "g": "(y-(x-tan(mod(x,noise(y,externalVal)))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(((x+externalVal)+pow(externalVal,externalVal)),cos(sin(x)))",
          "b": "sin(pow(externalVal,max(y,y)))",
          "g": "(tan(x)*y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "audio(audio((externalVal+x),x),(pow(externalVal,externalVal)*cos(noise(audio(x,pow(tan(x),audio(min(x,(y-(y*max(externalVal,y)))),(audio(y,(cos(x)-(sin(sin(x))-(min(sin(audio((tan((y/((externalVal*x)*max(y,x))))-mod((x*x),tan(tan(mod(mod(y,max(noise((max(y,y)/max(y,sin((audio(x,externalVal)-externalVal)))),x),min(externalVal,(y/mod(x,cos(externalVal)))))),y))))),externalVal)),externalVal)-y))))+sin(externalVal))))),y))))",
          "b": "pow(externalVal,(pow(externalVal,x)/x))",
          "g": "tan(y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal-cos(noise(x,externalVal)))",
          "b": "(noise(x,externalVal)*x)",
          "g": "noise(max(y,tan(y)),y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "audio(mod(x,(x+(min(externalVal,externalVal)*mod(audio(x,sin(sin(mod((x*externalVal),y)))),externalVal)))),(externalVal-x))",
          "b": "min(y,y)",
          "g": "max(x,noise(x,x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(externalVal)",
          "b": "tan(y)",
          "g": "pow((x-(externalVal/max(x,min((y*((((y/pow(((y/x)-(mod(externalVal,min((y*externalVal),externalVal))*min(tan(x),sin(pow(externalVal,mod(tan(externalVal),y)))))),x))-sin(y))-y)*externalVal)),(max(y,y)/y))))),y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod(x,x)",
          "b": "sin(max(min(externalVal,y),noise(y,mod(min(y,x),externalVal))))",
          "g": "max(((externalVal-pow((y+y),externalVal))*noise((y*min(max((externalVal+x),noise((x*sin(sin(y))),tan(tan((externalVal+(audio(y,y)-audio(externalVal,y))))))),x)),(y/mod(x,cos((pow(pow(externalVal,x),y)+externalVal)))))),(pow(x,y)+(x+x)))"
        }
      }
    ],
    "timestamp": "17h:3m:43s"
  }],
  "timestamp": "2023-11-4-17-3-42"
}
{
  "id": "ykwjmu88-uobr-ic9w-4b18-6wmrvb2wa6n6",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [
    {
      "generation": 0,
      "id": "8ykg6lf9-3glt-pbmm-tniy-9w1syp96sm05",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(bri(max(((y/audio(tan(tan(cos(x))),y))*min(x,x)),sin(min(min(x,y),x))),cos(y)))",
            "b": "bri(cos(max(cos(x),y)),x)",
            "g": "sin(pow(x,max(pow(x,x),pow(x,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal+sin(x))",
            "b": "pow(externalVal,cos(audio(y,((y*x)/(y*(x+((cos(pow(x,y))/cos(min(x,y)))-y)))))))",
            "g": "bri(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(externalVal)",
            "b": "sin((y-pow(x,externalVal)))",
            "g": "min(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(tan(min(x,y))/y))",
            "b": "tan((((x*max(y,tan((externalVal+x))))*externalVal)/x))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(bri(cos((x*min(audio(max(x,cos(y)),externalVal),(y*x)))),tan((bri(min(cos(externalVal),y),x)*externalVal))),(externalVal+y))",
            "b": "cos(min(externalVal,x))",
            "g": "max(cos(y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,y)",
            "b": "audio(externalVal,(x*(x*bri(y,x))))",
            "g": "(x-((sin(min(min(externalVal,x),y))-y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,sin((cos(max(externalVal,(y-x)))-min(cos(externalVal),pow(bri(y,audio(max(externalVal,(externalVal+externalVal)),x)),x)))))",
            "b": "bri(cos(tan(cos(y))),y)",
            "g": "(tan(y)*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "tan(min(y,y))",
            "g": "max(bri(cos(cos(max(y,externalVal))),(bri(x,externalVal)+pow(y,y))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(externalVal,x)",
            "b": "(x/audio(externalVal,externalVal))",
            "g": "(y*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(bri(externalVal,y)-externalVal)",
            "b": "audio(sin(x),sin(externalVal))",
            "g": "cos(audio((pow(audio(cos(audio((cos(max(externalVal,externalVal))/audio(x,externalVal)),max(externalVal,x))),externalVal),x)-x),max((externalVal-(audio(cos((y*y)),x)-y)),x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(x)+((externalVal/externalVal)/(cos(externalVal)/cos(bri(x,x)))))",
            "b": "((bri(x,(externalVal*externalVal))*y)+y)",
            "g": "cos(audio((pow(externalVal,tan(pow((audio(y,(bri(x,(x/(((sin(y)-min((externalVal*tan(min(x,((audio(x,audio(min(externalVal,tan(bri(cos(audio(((tan(y)*bri(x,externalVal))-sin(x)),pow(externalVal,y))),(min((externalVal*externalVal),(cos(y)*externalVal))-audio(x,pow(y,(min(y,externalVal)*(y+x)))))))),y))/externalVal)*max(y,x))))),y))+(min(sin(tan(y)),y)/y))/x)))/(x-min(x,(audio(externalVal,audio(sin((externalVal+(externalVal-externalVal))),audio(pow(bri(min(pow(x,pow(x,sin(externalVal))),sin(y)),max((bri(y,externalVal)+externalVal),tan(max(tan(((x*externalVal)/externalVal)),externalVal)))),(cos(x)/y)),(externalVal/y))))+cos(externalVal))))))/(y-(y-max(min(y,x),y)))),externalVal)))-x),pow(externalVal,pow(sin(tan(y)),(y+(max(tan(x),externalVal)/y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "max(x,y)",
            "g": "(bri(y,(externalVal/y))+externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(externalVal)",
            "b": "tan(y)",
            "g": "max(x,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri((x-externalVal),y)",
            "b": "(externalVal-y)",
            "g": "pow((externalVal/((x+x)/x)),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,audio(y,externalVal))",
            "b": "bri(sin((x+externalVal)),cos(max(externalVal,x)))",
            "g": "(y*tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((externalVal-externalVal)+y)+y)",
            "b": "(x*x)",
            "g": "(cos(y)/(x/(sin(x)-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(tan(externalVal))",
            "b": "max(externalVal,audio(externalVal,cos(pow(externalVal,externalVal))))",
            "g": "(tan(pow(externalVal,x))+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio((sin(x)+y),x))",
            "b": "min(x,x)",
            "g": "(externalVal+externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(y)*x)",
            "b": "cos(((x-x)+x))",
            "g": "((pow(max(externalVal,pow(externalVal,tan(((bri(externalVal,sin(bri(externalVal,x)))+((pow(externalVal,externalVal)+y)*cos(externalVal)))-max(pow(cos(externalVal),bri(externalVal,x)),x))))),externalVal)-y)*(externalVal-(externalVal+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(audio(audio(x,min(x,externalVal)),externalVal))",
            "b": "(tan(y)/x)",
            "g": "((cos(y)*pow((y-externalVal),tan(pow(((externalVal+externalVal)+y),externalVal))))-x)"
          }
        }
      ],
      "timestamp": "18h:4m:41s"
    },
    {
      "generation": 1,
      "ascendantID": "8ykg6lf9-3glt-pbmm-tniy-9w1syp96sm05",
      "id": "9udbeqn4-pl8a-jsf8-pizd-3ll7usc9kne1",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "bri((x-externalVal),y)",
            "b": "(externalVal-y)",
            "g": "pow((externalVal/((x+x)/x)),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(bri(max(((y/audio(tan(tan(cos(x))),y))*min(x,x)),sin(min(min(x,y),x))),cos(y)))",
            "b": "bri(cos(max(cos(x),y)),x)",
            "g": "sin(pow(x,max(pow(x,x),pow(x,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "tan(min(y,y))",
            "g": "max(bri(cos(cos(max(y,externalVal))),(bri(x,externalVal)-pow(y,y))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x/externalVal)*x)",
            "b": "cos(((x-x)-x))",
            "g": "((min(max(externalVal,min(externalVal,tan(((bri(externalVal,sin(bri(y,x)))+((pow(externalVal,externalVal)-y)*cos(externalVal)))-max(pow(cos(externalVal),bri(y,x)),x))))),externalVal)-y)*(externalVal-(externalVal+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(externalVal,x)",
            "b": "(x*bri(sin((x+externalVal)),sin(tan(externalVal))))",
            "g": "(y/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "max(x,y)",
            "g": "(bri(y,(externalVal/y))+externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,tan(externalVal))",
            "b": "tan(pow(externalVal,externalVal))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(bri(cos((x*min(pow(max(x,cos(y)),externalVal),(x*x)))),tan((audio(min(cos(externalVal),y),x)*externalVal))),(externalVal+externalVal))",
            "b": "sin(min(externalVal,x))",
            "g": "max(cos(y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio(tan(((y*audio(tan(cos(cos(x))),y))*min(x,x))),cos(x)))",
            "b": "bri(sin(max(cos(x),y)),x)",
            "g": "sin(pow(x,max(pow(x,x),min(y,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(bri(externalVal,y)-externalVal)",
            "b": "audio(sin(x),sin(externalVal))",
            "g": "cos(bri((pow(audio(tan(audio((cos(max(externalVal,externalVal))/audio(x,externalVal)),max(externalVal,x))),externalVal),x)+x),max((externalVal-(audio(sin((y*y)),x)-y)),x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "cos(min(y,y))",
            "g": "max(bri(sin(sin(max(y,externalVal))),(bri(x,y)+min(y,y))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,((externalVal*externalVal)+(y+externalVal)))",
            "b": "bri(sin((x+externalVal)),cos(max(externalVal,x)))",
            "g": "(y*tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(bri(sin((x*min(audio(max(x,cos(y)),externalVal),(y*x)))),cos(y)),(externalVal+y))",
            "b": "cos(min(externalVal,x))",
            "g": "max(tan(y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(y,y)+y)",
            "b": "(x*x)",
            "g": "(cos(y)*sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(externalVal)",
            "b": "((externalVal+pow(x,externalVal))/max(y,min(externalVal,max(x,externalVal))))",
            "g": "min(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(bri(externalVal,y)-externalVal)",
            "b": "audio(sin(x),sin(externalVal))",
            "g": "cos(audio((min(audio(cos(audio((cos(max(externalVal,externalVal))/audio(x,externalVal)),tan(externalVal))),externalVal),x)-x),max((externalVal-(audio(sin((externalVal*y)),x)*y)),x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(externalVal,pow(y,externalVal))",
            "b": "bri(sin(pow(x,externalVal)),cos(max(externalVal,x)))",
            "g": "(y*min(externalVal,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(bri(cos((x*min(audio(max(x,sin(y)),externalVal),(y*x)))),tan((bri(min(cos(externalVal),y),x)-externalVal))),(externalVal+y))",
            "b": "cos(min(externalVal,x))",
            "g": "min(cos(y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(x,(tan(min(x,externalVal))/y))",
            "b": "tan((((x*max(y,tan((externalVal+x))))*externalVal)/x))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio((bri(externalVal,x)+y),x))",
            "b": "min(x,x)",
            "g": "(externalVal+externalVal)"
          }
        }
      ],
      "timestamp": "18h:4m:58s"
    },
    {
      "generation": 2,
      "ascendantID": "9udbeqn4-pl8a-jsf8-pizd-3ll7usc9kne1",
      "id": "40ku6ikl-cn7w-osii-9ra0-9bwm26b5eyxd",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "bri((x-externalVal),y)",
            "b": "(externalVal-y)",
            "g": "pow((externalVal/((x+x)/x)),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(bri(max(((y/audio(tan(tan(cos(x))),y))*min(x,x)),sin(min(min(x,y),x))),cos(y)))",
            "b": "bri(cos(max(cos(x),y)),x)",
            "g": "sin(pow(x,max(pow(x,x),pow(x,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri((x-externalVal),y)",
            "b": "(externalVal-y)",
            "g": "max((externalVal/(externalVal*(y-y))),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(externalVal,x)",
            "b": "(x*bri(sin((x+externalVal)),sin(cos(externalVal))))",
            "g": "(y/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(audio((bri(externalVal,x)+y),x))",
            "b": "max(x,x)",
            "g": "(externalVal+externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(bri(max((sin(y)*min(x,x)),cos(max(max(x,y),x))),cos(x)))",
            "b": "bri(cos(max(sin(x),y)),x)",
            "g": "sin(pow(x,min(pow(x,x),pow(x,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(y,y)+y)",
            "b": "(x-x)",
            "g": "(cos(y)*(x/(sin(x)-externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "tan(pow(y,y))",
            "g": "min(audio(cos(sin(max(y,externalVal))),(bri(x,y)-pow(y,y))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(x,(tan(min(x,externalVal))/y))",
            "b": "tan(sin(((x*max(y,tan((externalVal+x))))*externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "max(min(y,y),pow(audio(externalVal,cos(pow(audio(bri(y,x),sin(max(cos(y),y))),pow(max(externalVal,cos(pow(y,y))),(cos((sin(externalVal)*x))*pow((y-externalVal),max(sin(audio(bri((bri(externalVal,(externalVal*max(externalVal,(y+audio(y,bri(y,min((externalVal/x),(y+externalVal))))))))/externalVal),audio(externalVal,y)),pow(y,audio(tan(y),min(y,x))))),bri((externalVal-x),externalVal)))))))),y))",
            "g": "min(bri(cos(cos(max(y,externalVal))),(bri(x,externalVal)-audio(y,y))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "tan(min(y,y))",
            "g": "max(audio(cos(cos(max(y,externalVal))),(bri(x,externalVal)-pow(y,y))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(bri(max((sin(y)*min(x,x)),cos(min(min(x,y),x))),cos(y)))",
            "b": "bri(cos(max(cos(x),y)),x)",
            "g": "sin(pow(x,max(pow(x,x),pow(x,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(externalVal)",
            "b": "((externalVal+pow(x,externalVal))*(externalVal/bri(externalVal,max(x,(audio(bri(externalVal,y),x)+sin(y))))))",
            "g": "min(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(x,max(y,x))",
            "b": "tan(audio(y,externalVal))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(externalVal))",
            "b": "min(x,x)",
            "g": "(externalVal+externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((y-externalVal))",
            "b": "min(x,x)",
            "g": "(externalVal+externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(bri(max(((y/pow(max(tan(cos(x)),(externalVal-max(x,y))),y))-min(x,x)),cos(min(min(x,y),x))),sin(x)))",
            "b": "bri(sin(max(cos(x),y)),x)",
            "g": "sin(pow(x,max(audio(x,x),pow(x,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri((x-externalVal),y)",
            "b": "(externalVal-y)",
            "g": "pow((externalVal/((externalVal/((x+x)/x))*x)),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(externalVal)",
            "b": "((y+audio(x,externalVal))/max(y,sin(pow(audio(pow(y,x),(min(cos(y),y)/y)),pow(tan(externalVal),(cos(((externalVal*cos(sin(x)))/x))-audio((y+externalVal),max(sin(pow(bri(sin(bri(externalVal,(externalVal/max(externalVal,(externalVal-bri(y,audio(y,tan(sin(externalVal))))))))),bri(externalVal,x)),bri(y,bri(tan(y),min(y,x))))),bri((externalVal/x),externalVal)))))))))",
            "g": "min(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "max(x,y)",
            "g": "(bri(y,(externalVal/externalVal))+externalVal)"
          }
        }
      ],
      "timestamp": "18h:5m:3s"
    }
  ],
  "timestamp": "2023-12-10-18-04-40"
}
{
  "id": "2bvfl9h1-bjyq-9rb6-8ug6-sgo2irxsgtkr",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [
    {
      "generation": 0,
      "id": "333vo74l-f7h5-w1y7-umq0-evfs5sywht8s",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x+sin(y))-y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*x)",
            "b": "(y*y)",
            "g": "(externalVal*audio(cos(y),externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,tan(externalVal))",
            "b": "(audio(y,(y+x))-y)",
            "g": "audio((cos(audio(externalVal,sin(externalVal)))+cos(y)),cos((y+cos(tan(sin(sin(externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x-externalVal)",
            "b": "sin(y)",
            "g": "cos(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "audio(sin(y),externalVal)",
            "g": "(externalVal/(externalVal-(externalVal*sin(tan(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,(tan((((x*x)*externalVal)+externalVal))+y))",
            "b": "(externalVal+y)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "sin(x)",
            "g": "cos((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(audio(audio(y,(externalVal-externalVal)),audio(externalVal,sin((y-(y*cos((x*sin((x-externalVal)))))))))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y-(externalVal+sin((y/audio(x,externalVal))))),(y-(x/audio(externalVal,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((y/tan(y)))",
            "b": "sin(((cos(sin((x*(y*y))))/y)/y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "sin(x)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "(((x-y)/externalVal)*sin(audio(y,((cos(y)+y)+y))))",
            "g": "tan((audio(x,(x+(externalVal+(y/(sin(y)-externalVal)))))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin((externalVal*audio(y,cos((externalVal+tan(y))))))*((externalVal/sin(cos(x)))/audio(y,((x+y)-(cos(y)+y)))))",
            "b": "(cos(externalVal)*x)",
            "g": "(y+cos(cos(sin(sin((tan(externalVal)-tan(x)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(sin((y-sin(y)))))",
            "b": "(externalVal-sin((x-(externalVal-audio((x+x),tan((((externalVal/y)/x)/sin(x))))))))",
            "g": "sin((cos(cos(((((((audio(y,sin(sin(tan(externalVal))))-y)+externalVal)+x)+externalVal)*x)-externalVal)))+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))*externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin((cos(externalVal)-x)))",
            "b": "sin((sin(externalVal)-((tan(x)-externalVal)+externalVal)))",
            "g": "tan(((tan(externalVal)*(((x-(externalVal-(y+x)))+(tan(sin(sin((y-y))))+sin(externalVal)))/externalVal))-audio(audio(y,x),(x-((externalVal+cos(x))+x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(tan((tan(externalVal)/externalVal))*y)",
            "g": "((cos(y)*((audio(y,(externalVal-((externalVal+y)+externalVal)))*(x/(y/(audio((tan(externalVal)*externalVal),(externalVal+sin(externalVal)))*(((((tan((externalVal/cos(y)))/x)+tan(x))+externalVal)/y)+externalVal)))))-sin((x+sin(y)))))/(externalVal/(x+externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*externalVal)",
            "b": "sin((x-y))",
            "g": "sin((externalVal+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(audio((tan(x)-externalVal),(externalVal*externalVal))))",
            "b": "cos(tan(y))",
            "g": "tan(((x/audio((audio(y,audio(sin(audio(cos((externalVal*sin(((y*(externalVal*externalVal))-y)))),audio(x,externalVal))),y))-y),(audio((x/externalVal),audio(x,(externalVal/y)))+(x-sin((x/tan(externalVal)))))))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((audio((x/cos(((externalVal*x)+externalVal))),y)-(x/(y-cos(y))))*(((tan((((y-y)*y)+tan(x)))-audio(externalVal,cos(x)))*audio(externalVal,x))*audio(sin(x),externalVal)))/tan(y))",
            "b": "cos(x)",
            "g": "sin(y)"
          }
        }
      ],
      "timestamp": "23h:49m:39s"
    },
    {
      "generation": 1,
      "ascendantID": "333vo74l-f7h5-w1y7-umq0-evfs5sywht8s",
      "id": "y42ykkpe-t5k2-mjc1-5t30-zua8exn4vqh1",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(audio((tan(x)-externalVal),(externalVal*externalVal))))",
            "b": "cos(tan(y))",
            "g": "tan(((x/audio((audio(y,audio(sin(audio(cos((externalVal*sin(((y*(externalVal*externalVal))-y)))),audio(x,externalVal))),y))-y),(audio((x/externalVal),audio(x,(externalVal/y)))+(x-sin((x/tan(externalVal)))))))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,tan(externalVal))",
            "b": "(audio(y,((y+(cos(audio(audio(y,externalVal),externalVal))+(audio(externalVal,sin(externalVal))-y)))-sin((y-x))))-y)",
            "g": "audio((cos(audio(externalVal,sin(externalVal)))+sin(y)),sin((y+cos(tan(sin(sin(externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,tan(externalVal))",
            "b": "(audio(y,sin(x))+y)",
            "g": "audio((cos(audio(externalVal,sin(externalVal)))+cos(y)),cos((y+cos(audio(sin(sin(externalVal)),y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*x)",
            "b": "(externalVal*y)",
            "g": "(externalVal*audio(cos(externalVal),externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "(((x-y)/externalVal)*sin(externalVal))",
            "g": "tan(((audio(x,(x+(y+(y/(sin(y)-externalVal)))))-y)-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(audio((tan(y)-externalVal),(externalVal*externalVal))))",
            "b": "cos(tan(y))",
            "g": "tan((sin(x)-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x+sin(y))-y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(sin((y-sin(y)))))",
            "b": "(externalVal-sin((x-(y+audio(((x*(y*y))/y),cos((((externalVal/y)/x)/sin(x))))))))",
            "g": "sin((tan(sin(((((((audio(x,sin(sin(cos(externalVal))))-y)+externalVal)+x)+externalVal)*x)-externalVal)))+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(sin(y))",
            "b": "sin(((cos(sin(x))/y)/y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(sin(audio(audio(y,(externalVal-externalVal)),audio(externalVal,sin((y-(y*cos((x*sin((x-externalVal)))))))))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y-(externalVal+sin((y/audio(x,externalVal))))),(y-sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(audio(audio(y,(externalVal-externalVal)),tan(externalVal))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y-(externalVal+sin((y/audio(x,y))))),(y*(x/audio(externalVal,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)+y))*sin((x+cos(x)))))",
            "b": "((tan((cos(externalVal)*externalVal))+y)+externalVal)",
            "g": "audio((sin(cos(externalVal))-y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-externalVal)",
            "b": "sin(cos(x))",
            "g": "((externalVal+externalVal)/(externalVal-((externalVal+y)+externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "sin(x)",
            "g": "cos((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((externalVal+y)*externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin((cos(externalVal)-x)))",
            "b": "sin((sin(externalVal)-((tan(x)-externalVal)+externalVal)))",
            "g": "tan(((tan(externalVal)*(((x-(externalVal-(y+x)))+(tan(cos(sin((y-y))))+sin(externalVal)))/externalVal))-audio(tan(y),(x-((externalVal+cos(x))+x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(audio((tan(x)-y),(externalVal*externalVal))))",
            "b": "cos(tan(y))",
            "g": "tan(((x/audio((audio(y,audio(sin(audio(cos((externalVal*sin(((y*(externalVal*externalVal))-y)))),audio(x,externalVal))),y))-y),(audio((x/externalVal),audio(x,(externalVal/y)))-(x-sin((x/tan(externalVal)))))))+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x-sin(audio(x,externalVal)))*x))*externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,tan(externalVal))",
            "b": "(tan(y)-y)",
            "g": "audio((cos(audio(externalVal,sin(externalVal)))+cos(y)),cos((y+cos(tan(cos(sin(externalVal)))))))"
          }
        }
      ],
      "timestamp": "23h:50m:2s"
    },
    {
      "generation": 2,
      "ascendantID": "y42ykkpe-t5k2-mjc1-5t30-zua8exn4vqh1",
      "id": "pangkmue-z00q-7tgx-dp9e-5eu9h6abfwos",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(audio((tan(x)-externalVal),(externalVal*externalVal))))",
            "b": "cos(tan(y))",
            "g": "tan(((x/audio((audio(y,audio(sin(audio(cos((externalVal*sin(((y*(externalVal*externalVal))-y)))),audio(x,externalVal))),y))-y),(audio((x/externalVal),audio(x,(externalVal/y)))+(x-sin((x/tan(externalVal)))))))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x+cos(y))-y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(audio(audio(y,(externalVal+externalVal)),audio(externalVal,sin((y-(y/cos((x-sin((y-externalVal)))))))))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y-(externalVal-sin((y/audio(x,y))))),(y*(x/audio(externalVal,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(audio((tan(y)-externalVal),(externalVal*externalVal))))",
            "b": "cos(cos(y))",
            "g": "tan((sin(x)-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "(((x-y)/externalVal)*sin(x))",
            "g": "tan(((x*y)-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,tan(externalVal))",
            "b": "(audio(y,((y+((x+sin(y))-y))-sin((y-y))))-y)",
            "g": "audio((cos(audio(externalVal,sin(externalVal)))+sin(y)),cos((y+cos(tan(cos(sin(externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "(externalVal/((x+(externalVal/externalVal))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio((x/y),x)+((cos(externalVal)/(audio(tan(externalVal),x)+y))*cos((x+sin(x)))))",
            "b": "((tan((cos(externalVal)*externalVal))+y)+externalVal)",
            "g": "audio((sin(sin(externalVal))*y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "sin(x)",
            "g": "tan((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,y)",
            "b": "sin(x)",
            "g": "cos((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))*externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "(audio(y,audio(audio(sin(audio(audio(y,(externalVal-externalVal)),audio(externalVal,cos((y-(y*sin((x*sin((x*externalVal)))))))))),externalVal),(externalVal-(externalVal/y))))-y)",
            "g": "audio((cos(audio(externalVal,cos(externalVal)))+cos(y)),sin((y+cos(tan(sin(sin(externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x+sin(externalVal))-y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(y)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(y-externalVal))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*x)",
            "b": "(externalVal*y)",
            "g": "(externalVal*audio(cos(externalVal),externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((y/tan(y)))",
            "b": "sin((((y*y)/y)/y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x/audio(audio(sin(audio(audio(y,(externalVal-externalVal)),tan(externalVal))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y-(externalVal-sin((y/audio(x,y))))),(y*(x/audio(externalVal,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "(tan(y)+y)",
            "g": "audio((cos(audio(externalVal,sin(externalVal)))+cos(y)),sin((y+cos(audio(sin(sin(externalVal)),y)))))"
          }
        }
      ],
      "timestamp": "23h:50m:16s"
    },
    {
      "generation": 3,
      "ascendantID": "pangkmue-z00q-7tgx-dp9e-5eu9h6abfwos",
      "id": "aeomme46-b990-wo7p-6y3c-ud9a7oal5zlk",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(audio((tan(x)-externalVal),(externalVal*externalVal))))",
            "b": "cos(tan(y))",
            "g": "tan(((x/audio((audio(y,audio(sin(audio(cos((externalVal*sin(((y*(externalVal*externalVal))-y)))),audio(x,externalVal))),y))-y),(audio((x/externalVal),audio(x,(externalVal/y)))+(x-sin((x/tan(externalVal)))))))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,y)",
            "b": "sin(x)",
            "g": "tan((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,tan(externalVal))",
            "b": "(audio(y,audio(audio(sin(audio(tan(y),audio(externalVal,sin((y-(y/((x*sin((x-externalVal)))/x))))))),externalVal),(externalVal-sin(externalVal))))-y)",
            "g": "audio((tan(audio(externalVal,cos(externalVal)))+cos(y)),sin((y+cos(audio(sin((externalVal/y)),externalVal)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "sin(x)",
            "g": "tan((y+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "(externalVal/((x+(externalVal/externalVal))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "(externalVal/((x+cos((((y*y)/y)/y)))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((x+sin(tan(x)))*x))*externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y-(externalVal-sin((y/audio(x,y))))),(y*(x/audio(externalVal,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(x))+((cos(y)/(audio(audio(externalVal,externalVal),x)-x))*sin((x+sin((y/audio(x,(y-externalVal))))))))",
            "b": "((tan(((x-externalVal)/externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(tan((tan(x)-externalVal))))",
            "b": "cos(tan(y))",
            "g": "tan(((x/audio((audio(y,audio(sin(audio(sin(externalVal),audio(x,externalVal))),y))-y),(audio((x/externalVal),audio(x,(externalVal/y)))+(x-sin(sin(x))))))+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "sin(x)",
            "g": "tan((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "(((x-y)/externalVal)*sin(x))",
            "g": "cos((sin(externalVal)-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((x-sin(audio(x,externalVal)))*x))*externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x-cos(y))-y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))-externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,tan(externalVal))",
            "b": "(audio(y,audio(audio(sin(audio(tan(x),audio(externalVal,cos((y-(y*sin((x*sin((x*externalVal)))))))))),externalVal),(externalVal-(externalVal/y))))-y)",
            "g": "audio((cos(audio(externalVal,cos(externalVal)))+cos(y)),sin((y+cos(tan(sin(sin(externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((y/tan(y)))",
            "b": "cos((((y-y)/y)/y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x+cos(y))*y))",
            "g": "sin(externalVal)"
          }
        }
      ],
      "timestamp": "23h:50m:18s"
    },
    {
      "generation": 4,
      "ascendantID": "aeomme46-b990-wo7p-6y3c-ud9a7oal5zlk",
      "id": "4mguueqz-4jju-i0sh-4cxs-1rj3zklpam0l",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(audio((tan(x)-externalVal),(externalVal*externalVal))))",
            "b": "cos(tan(y))",
            "g": "tan(((x/audio((audio(y,audio(sin(audio(cos((externalVal*sin(((y*(externalVal*externalVal))-y)))),audio(x,externalVal))),y))-y),(audio((x/externalVal),audio(x,(externalVal/y)))+(x-sin((x/tan(externalVal)))))))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(tan((tan(x)-externalVal))))",
            "b": "cos(tan(y))",
            "g": "audio(((x/audio((audio(y,audio(sin(audio(cos((externalVal*sin(((y*audio((audio(sin(externalVal),y)-cos((externalVal*y))),cos((externalVal+x))))-y)))),audio(x,externalVal))),y))+y),(audio((x/externalVal),audio(x,(externalVal/y)))+(x-sin((x/tan(externalVal)))))))+y),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,audio(externalVal,y))",
            "b": "(audio(y,audio(audio(sin(audio(tan(x),audio(externalVal,sin((y-(y*((x*sin((x*externalVal)))/x))))))),externalVal),(externalVal-sin(externalVal))))-y)",
            "g": "audio((sin(audio(externalVal,cos(externalVal)))+cos(y)),sin((y+cos(tan(sin(sin(externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(audio((tan(x)+externalVal),(externalVal-externalVal))))",
            "b": "cos(tan(y))",
            "g": "tan(((x/audio((audio(y,audio(sin(audio(sin(externalVal),audio(x,externalVal))),y))-y),(audio((x/externalVal),audio(x,(externalVal/y)))-(x-cos((x/tan(externalVal)))))))+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))-externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/(cos(tan(y))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,audio(externalVal,y))",
            "b": "(audio(y,audio(audio(cos(audio(tan(x),tan(externalVal))),externalVal),(externalVal-sin(externalVal))))-y)",
            "g": "audio((sin(audio(externalVal,cos(y)))+cos(y)),sin((y+cos(tan(cos(sin(externalVal)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "(externalVal/((y-(y*sin((x*sin((x*externalVal))))))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal*((x-cos(y))-y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "(externalVal/(((x+sin(audio(x,externalVal)))*x)*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+((y/audio(x,cos(x)))/externalVal)))))",
            "b": "((tan(((x-externalVal)-externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,y)",
            "b": "sin(x)",
            "g": "tan((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((x-sin(audio(x,externalVal)))*x))-externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,audio(x,tan(externalVal)))",
            "b": "(tan(y)-y)",
            "g": "audio((tan(audio(externalVal,cos(externalVal)))+cos(y)),sin((y+sin(audio(sin((externalVal/y)),externalVal)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x+(externalVal/externalVal))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(x))+audio(x,cos(externalVal)))",
            "b": "((audio(((x-externalVal)/externalVal),((y+(sin(audio(audio(y,externalVal),externalVal))+cos(x)))+((y+y)/x)))+y)-externalVal)",
            "g": "audio((sin((cos(x)/y))*y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x-sin(y))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,y)",
            "b": "sin(x)",
            "g": "tan((y+externalVal))"
          }
        }
      ],
      "timestamp": "23h:50m:26s"
    },
    {
      "generation": 5,
      "ascendantID": "4mguueqz-4jju-i0sh-4cxs-1rj3zklpam0l",
      "id": "u9lbddu0-yflf-c93e-ogl2-lmmypeowz5ue",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x-sin(y))/x))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x+(externalVal/externalVal))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(cos(x))+tan(y))",
            "b": "((audio(((x-externalVal)/externalVal),((y+(cos(audio(tan(y),externalVal))+cos(x)))+((y+x)/x)))+y)-externalVal)",
            "g": "audio((sin((cos(x)/y))/y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/(cos(tan(y))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))-externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/(cos(tan(y))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(audio((tan(x)-externalVal),(externalVal*externalVal))))",
            "b": "cos(audio(y,x))",
            "g": "tan(((x*audio((tan(y)-y),(audio((x/externalVal),tan(x))+(x-sin((x/tan(externalVal)))))))-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal*externalVal))))",
            "g": "audio((y-(externalVal*sin((y/audio(x,y))))),(y/(x/cos(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "sin(x)",
            "g": "tan((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y*(externalVal*sin((y/audio(x,y))))),(y/(x/cos(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(cos(audio(y,(externalVal-y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((externalVal*(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(sin(y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(y-sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "audio((y-(externalVal-sin((y/audio(x,y))))),(y/(x/sin(audio(externalVal,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,y)",
            "b": "sin(y)",
            "g": "tan((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(x))+audio(x,cos(externalVal)))",
            "b": "((tan(((x-externalVal)/externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/y))*y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,y)",
            "b": "(x/((y-y)/y))",
            "g": "audio((y+externalVal),(externalVal+(cos(externalVal)/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,y)",
            "b": "sin(x)",
            "g": "tan((y+y))"
          }
        }
      ],
      "timestamp": "23h:50m:41s"
    },
    {
      "generation": 6,
      "ascendantID": "u9lbddu0-yflf-c93e-ogl2-lmmypeowz5ue",
      "id": "niyvxs39-3jvz-oox8-23uy-g5cdyvvkna8z",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal-y)))),externalVal),(externalVal-(externalVal*externalVal))))",
            "g": "tan((y*(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "sin(x)",
            "g": "tan((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(tan(y))+audio(x,cos(externalVal)))",
            "b": "((tan(((y+externalVal)/externalVal))+y)-externalVal)",
            "g": "tan((((tan(x)/y)/y)*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))-x))-externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))-externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(sin(x)),externalVal),(externalVal-(externalVal*y))))",
            "g": "audio((y-(externalVal-sin((y/audio(x,y))))),(y*sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(cos(((x+(externalVal/externalVal))-y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((externalVal*(y*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x*audio(audio(cos(cos(tan(x))),y),(externalVal+(externalVal/y))))",
            "g": "tan((externalVal*(y*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(x,(externalVal-y)))),externalVal),(externalVal*(externalVal*externalVal))))",
            "g": "audio((y-(externalVal*sin(sin(y)))),(y/(x/cos(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(x))+audio(x,cos(externalVal)))",
            "b": "((tan(sin((x-externalVal)))+y)-externalVal)",
            "g": "audio((sin(sin(sin(x)))*y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/((x-(externalVal/externalVal))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(sin(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y*(externalVal-sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(externalVal)",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))-externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio(sin(cos(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y*(externalVal*sin(externalVal))),(y/(x/cos(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "sin(x)",
            "g": "tan((y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "(externalVal/(cos(tan(y))/y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y*(externalVal*cos((y/audio(x,y))))),(y/(x/cos(audio(y,y)))))"
          }
        }
      ],
      "timestamp": "23h:50m:46s"
    },
    {
      "generation": 7,
      "ascendantID": "niyvxs39-3jvz-oox8-23uy-g5cdyvvkna8z",
      "id": "rx6iyck5-pnsi-q735-7tpd-lk9x6zuyodav",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x*audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal*externalVal))))",
            "g": "tan((y*(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(externalVal)",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(y)/(audio(tan(externalVal),x)+y))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin((sin(externalVal)/x)))))*x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(tan(y))+audio(x,cos(externalVal)))",
            "b": "((cos(((y+externalVal)/externalVal))+y)-externalVal)",
            "g": "tan((((tan(x)/y)/y)*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(tan(cos((y-(x/tan(y))))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((externalVal*(y*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x*audio(audio(sin(sin(tan(x))),y),(externalVal-(externalVal/y))))",
            "g": "tan((externalVal*(y*(y/x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos((externalVal*sin(x))),externalVal),(externalVal-(externalVal*y))))",
            "g": "tan((y-(externalVal-sin((y/audio(x,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal/((x-(externalVal*y))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio(tan(cos(((x+(externalVal/externalVal))-y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((externalVal-(y*sin((y/audio(x,externalVal))))),(y/(x/cos(audio(x,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x/audio(audio(cos(tan(tan(y))),externalVal),(externalVal+(externalVal/y))))",
            "g": "audio((externalVal*(externalVal*sin((y/audio(x,externalVal))))),(y/(x/tan(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(((x+(externalVal/externalVal))-y))),externalVal),(externalVal+(externalVal/y))))",
            "g": "tan((externalVal*(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))*x))-externalVal)",
            "g": "(y/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(sin(x)),externalVal),(externalVal-(externalVal*y))))",
            "g": "audio((y-(externalVal*sin((y/audio(x,y))))),(y*sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x*audio(audio(tan(cos(audio(x,(externalVal-externalVal)))),y),(externalVal+(externalVal/y))))",
            "g": "audio((externalVal/(y*sin((y/audio(x,y))))),(y/(x/cos(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/x)",
            "b": "(y-audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "audio((y*(y*sin(sin(y)))),(y/(x/cos(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(tan(cos(((x+(externalVal/externalVal))-y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((externalVal-(y*sin((y/audio(x,externalVal))))))"
          }
        }
      ],
      "timestamp": "23h:50m:47s"
    },
    {
      "generation": 8,
      "ascendantID": "rx6iyck5-pnsi-q735-7tpd-lk9x6zuyodav",
      "id": "6bf3brnj-y2k7-zawj-lua1-pn5xgii4xpkg",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio(cos(tan(tan(y))),externalVal),(externalVal+(externalVal*externalVal))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x*audio(audio(cos(tan(tan(y))),externalVal),(externalVal+(externalVal*externalVal))))",
            "g": "tan((y*(externalVal-sin(sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(sin((externalVal/y)),externalVal),(externalVal+(externalVal/y))))",
            "g": "tan((externalVal-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x/audio(audio(cos(tan(((x+(externalVal/externalVal))-y))),externalVal),(externalVal+(externalVal/y))))",
            "g": "tan((externalVal*(externalVal*(x-sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin((sin(externalVal)/x)))))-x))-externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x*audio(audio(tan(sin(audio(x,(externalVal-externalVal)))),y),(externalVal+(externalVal/y))))",
            "g": "audio((externalVal*(externalVal*sin((y/audio(x,externalVal))))),(y/(x/cos(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(tan(x)))-x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "tan((y-(externalVal-sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(x))+((sin(externalVal)/(audio(tan(externalVal),x)+y))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)/externalVal))+y)-externalVal)",
            "g": "tan((sin((tan(x)/externalVal))/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin((sin(externalVal)/x)))))*x))*externalVal)",
            "g": "(externalVal*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal*((x-(externalVal*y))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin((sin(externalVal)/x)))))*x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*tan(audio(cos(sin(x)),externalVal)))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(tan(y))-audio(x,cos(externalVal)))",
            "b": "((cos(y)-x)+externalVal)",
            "g": "tan(((sin(tan(x))/y)*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(y*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(y*audio(audio(cos(sin(x)),externalVal),(externalVal-(externalVal+externalVal))))",
            "g": "audio((y-(externalVal*((y/audio(x,y))/(((x-tan(tan(externalVal)))/(x/(y*(y*(y/x)))))+audio(externalVal,externalVal))))),(y*sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y*(externalVal*sin(sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(cos(x),x)+((cos(y)/(audio((externalVal/y),x)-x))*cos((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)*externalVal))*y),cos(externalVal))"
          }
        }
      ],
      "timestamp": "23h:50m:51s"
    },
    {
      "generation": 9,
      "ascendantID": "6bf3brnj-y2k7-zawj-lua1-pn5xgii4xpkg",
      "id": "5xxx1jvt-x52r-zx94-hgyf-fxgmqv7rbj4g",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(y*tan(audio(cos(sin(x)),externalVal)))",
            "g": "audio((y-(externalVal*((y/audio(x,y))/(((x-tan(tan(externalVal)))/(x/(y/(y*(y/x)))))+audio(externalVal,externalVal))))),(y*sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin((sin(externalVal)/x)))))-x))-externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal*((x+(externalVal*y))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+(externalVal/y))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(audio(tan(sin(audio(x,(externalVal-externalVal)))),y),(externalVal+(externalVal/y))))",
            "g": "audio((externalVal*(externalVal-cos((y/audio(x,externalVal))))),(y/(x*tan(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin(sin(sin(externalVal))))))-x))-externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio(tan(tan(tan(y))),externalVal),(externalVal+(externalVal*externalVal))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(y*audio(audio(cos(cos(y)),externalVal),(externalVal-(externalVal+externalVal))))",
            "g": "audio((y-(y/sin(sin(y)))),(y*(x/cos(audio(sin(sin(externalVal)),x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-y)",
            "b": "(x*audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y*(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "audio((y-(y/sin((y/audio(x,y))))),(y/(x/sin(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x/audio(audio(cos(tan(((x-externalVal)-y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((externalVal*(externalVal*(x-sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin(((externalVal/tan(audio((x*y),sin(x))))/x)))))*x))-externalVal)",
            "g": "(externalVal*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*tan(audio(cos(sin(x)),externalVal)))",
            "g": "tan((y*(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal*((x*audio(audio(cos(tan(audio(y,(externalVal+y)))),y),(externalVal-(externalVal/y))))-y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)+x))*sin((x-sin((y*audio(x,(externalVal/y))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-tan(sin(audio(x,(externalVal-externalVal)))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*(x/audio(y,externalVal)))",
            "g": "tan((y-(externalVal-sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin((sin(externalVal)/x)))))*x))-externalVal)",
            "g": "(y*x)"
          }
        }
      ],
      "timestamp": "23h:50m:54s"
    },
    {
      "generation": 10,
      "ascendantID": "5xxx1jvt-x52r-zx94-hgyf-fxgmqv7rbj4g",
      "id": "h7sp0h4m-wp3t-km8j-ptk4-cpzgomjz0j2f",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(audio(tan(sin(tan(x))),y),(externalVal+(externalVal/y))))",
            "g": "audio((externalVal/(externalVal-cos((y/tan(x))))),(y*(x*tan(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(x))+(externalVal/y))",
            "b": "((audio(((x-externalVal)*externalVal),((y+(cos((x-tan(audio(tan(audio(tan(y),audio(y,externalVal))),externalVal))))+(audio(audio(cos(cos(cos(y))),externalVal),(externalVal+(externalVal*externalVal)))-y)))+((y+x)/x)))+y)-externalVal)",
            "g": "audio((sin((sin(x)*externalVal))/y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin((cos(externalVal)/x)))))-x))-externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "(x-audio(audio(tan(tan(tan(y))),externalVal),(externalVal+(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio((audio(((x-externalVal)*externalVal),((y+(cos(audio(audio(y,externalVal),externalVal))+(tan(externalVal)-y)))+sin((y+y))))+y),externalVal),(externalVal+(externalVal-externalVal))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio((x/y),x)+(sin(tan(y))*sin((x-sin((y*audio(y,sin(externalVal))))))))",
            "b": "((tan((((x+((x+(audio(x,externalVal)/sin(cos(sin(cos(externalVal))))))-x))-externalVal)/externalVal))+y)-externalVal)",
            "g": "audio((sin((sin(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((y+(audio(x,externalVal)/sin(sin(sin(sin(externalVal))))))-x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(audio(cos(tan(((x-externalVal)-y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((externalVal*(externalVal-(x-sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-tan(sin(tan(y))))",
            "g": "tan((y-(externalVal*((y/audio(x,y))/(((x*cos(tan(externalVal)))/(x/sin(externalVal)))+audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x-((x+(audio(x,externalVal)/sin(sin((cos(externalVal)/x)))))*x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+(audio(x,externalVal)/sin(sin((sin(externalVal)/x)))))-x))-externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((x+sin(audio(x,externalVal)))+x))-externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*tan(audio(cos(sin(x)),externalVal)))",
            "g": "audio((y*(externalVal*sin((externalVal/audio(x,y))))),(externalVal/sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*tan(cos(audio(x,(externalVal-externalVal)))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(cos(x),x)+((cos(y)/(audio(y,externalVal)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((audio(((x-externalVal)*externalVal),(externalVal*(x/audio(y,externalVal))))+y)-externalVal)",
            "g": "audio((((cos(x)*externalVal)/y)*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(y*audio(audio(sin(sin(x)),externalVal),(externalVal*(externalVal-externalVal))))",
            "g": "audio((y*(y*((y*audio(x,y))/(((x-tan(audio(externalVal,x)))/(x/sin(y)))+audio(externalVal,externalVal))))),(y/sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal*((x*audio(audio(cos(tan(tan(y))),y),(externalVal*(externalVal/y))))-y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal*((x*audio(audio(cos(tan(audio(y,(externalVal-(externalVal+externalVal))))),y),(externalVal-(externalVal/y))))*y))",
            "g": "sin(externalVal)"
          }
        }
      ],
      "timestamp": "23h:51m:1s"
    },
    {
      "generation": 11,
      "ascendantID": "h7sp0h4m-wp3t-km8j-ptk4-cpzgomjz0j2f",
      "id": "xurojqbr-wei3-m926-8w2u-8y7pdh89lxre",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal-((x*audio(audio(cos(tan(audio(y,(externalVal-(externalVal+externalVal))))),y),(externalVal-(externalVal/y))))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal*((x/audio(audio(cos(tan(tan(y))),y),(externalVal-(externalVal/y))))*y))",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio((audio(((x-externalVal)*externalVal),((y+(cos(audio(audio(y,externalVal),externalVal))+(tan(externalVal)-y)))-sin((y+y))))+y),externalVal),(externalVal+(externalVal-externalVal))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal-(x-sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(y-tan(cos(audio(x,(externalVal-externalVal)))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(y*audio(audio(cos(cos(y)),externalVal),(externalVal-(externalVal-externalVal))))",
            "g": "audio((y*(y*((y*audio(x,y))/(((x+tan(audio(externalVal,x)))/(x/sin(y)))-audio(externalVal,externalVal))))),(y-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(sin(cos(x)),externalVal))",
            "g": "tan((externalVal*(externalVal-(x-sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((y+(y-(externalVal+externalVal)))-x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal-y)",
            "b": "(x*cos(y))",
            "g": "audio((y*(externalVal*sin(sin(externalVal)))),(externalVal/sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x-((x+(audio(x,externalVal)/sin(sin(sin(cos(externalVal))))))-x))*externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(audio(cos(audio(audio(sin(tan(((x-externalVal)-y))),externalVal),audio(externalVal,((externalVal+(externalVal/y))/externalVal)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((externalVal*(externalVal-(x-sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(audio(cos(tan(((x-externalVal)-y))),externalVal),(externalVal-(externalVal*y))))",
            "g": "audio((externalVal*(externalVal-(x-sin(y)))),sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "(x*audio(audio(tan(tan(tan(y))),externalVal),(externalVal+(externalVal/y))))",
            "g": "tan((y-(y*sin((externalVal/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(audio(tan(sin(tan(x))),y),(externalVal+(externalVal/y))))",
            "g": "audio((y-x),(y-(x*tan(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+(sin(tan(y))*sin((x-cos((y*audio(y,cos(externalVal))))))))",
            "b": "((tan((((x+((x+(audio(x,externalVal)/sin((externalVal+y))))-x))-externalVal)/externalVal))+y)-externalVal)",
            "g": "audio((sin((sin(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*tan(sin(audio(x,(externalVal-externalVal)))))",
            "g": "tan((y*(externalVal*((y/audio(x,y))/(((x*tan(tan(externalVal)))/(y/sin(externalVal)))+audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((x+((audio(((x+externalVal)*externalVal),(externalVal*(x/audio(y,externalVal))))+y)/sin(sin((cos(externalVal)/x)))))*x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(x))+(externalVal/y))",
            "b": "((audio(((x-externalVal)*externalVal),((y+(cos((x-tan(audio(tan(audio(tan(y),audio(y,externalVal))),externalVal))))+(audio(audio(cos(cos(cos(y))),externalVal),(externalVal+(externalVal*externalVal)))*y)))-sin((y+x))))+y)*externalVal)",
            "g": "audio((sin((sin(x)*externalVal))/y),tan(externalVal))"
          }
        }
      ],
      "timestamp": "23h:51m:4s"
    },
    {
      "generation": 12,
      "ascendantID": "xurojqbr-wei3-m926-8w2u-8y7pdh89lxre",
      "id": "hwzutdyj-ec7c-fzxs-319c-lf5cukzwdqay",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(audio(tan(sin(tan(x))),y),(externalVal+(externalVal/y))))",
            "g": "audio((y-x),(y-(x/tan(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((y+(y-(externalVal+externalVal)))-x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(((y-(sin(audio(audio(externalVal,externalVal),externalVal))+(cos(externalVal)-y)))+((x+y)/x)),(externalVal-(externalVal*externalVal))))",
            "g": "tan((y+(externalVal*(x-sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "(x-tan(audio((audio(((x-externalVal)/externalVal),((y+(cos(audio(audio(y,externalVal),externalVal))+(tan(externalVal)-y)))-sin((y+y))))+y),externalVal)))",
            "g": "tan((y+(externalVal/((y/audio(x,y))/(((x+tan(cos(externalVal)))/(x/cos(externalVal)))+audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(externalVal)",
            "b": "(x*audio(audio(tan(tan(tan(y))),externalVal),(externalVal+(externalVal/y))))",
            "g": "audio((y-(y*sin((externalVal/audio(x,y))))),(y*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal-tan(cos(audio(x,(externalVal-externalVal)))))",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*tan(sin(audio(y,sin((cos(externalVal)/x))))))",
            "g": "cos((y*(externalVal-((externalVal/audio(x,y))/(((x*tan(tan(externalVal)))/(y/sin(externalVal)))+audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal/y)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)+externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(sin(tan(audio(y,(externalVal+y)))),y),(externalVal-(externalVal/y))))",
            "g": "audio((y-(externalVal-(x-sin(externalVal)))),(y/(x/cos(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)+x))*sin((x+sin((externalVal*audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))-y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "(x*audio(audio(tan(y),externalVal),(externalVal+(externalVal/y))))",
            "g": "tan((y-(y*sin((externalVal/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(audio(cos(tan(((x-externalVal)-y))),externalVal),(externalVal-(externalVal*y))))",
            "g": "audio((externalVal*(externalVal-(x+sin(y)))),sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(y*audio(audio(cos(cos(y)),externalVal),(y+(externalVal-externalVal))))",
            "g": "audio((y*(y*(x/cos(audio(y,y))))),(y-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "((x+((y+(y-(externalVal+externalVal)))-x))*externalVal)",
            "g": "(externalVal-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio((audio(((x-externalVal)*externalVal),sin((y-y)))+y),externalVal),(externalVal+(externalVal-externalVal))))",
            "g": "audio((y-(externalVal*sin((y/audio(x,y))))),(y*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+(y-tan(cos(audio(x,(externalVal-externalVal))))))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(cos(cos(x)),y))",
            "g": "audio((externalVal*(externalVal*(x-sin(y)))),(y/sin((sin(x)*externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(cos(x),x)-((cos(externalVal)/(audio(tan(externalVal),x)-x))*cos((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)*y))*x),cos(externalVal))"
          }
        }
      ],
      "timestamp": "23h:51m:7s"
    },
    {
      "generation": 13,
      "ascendantID": "hwzutdyj-ec7c-fzxs-319c-lf5cukzwdqay",
      "id": "50g1dtjq-wv55-bzq7-rm0s-3oiy3dyt1xvj",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((y+(y-((externalVal+(externalVal/externalVal))/externalVal)))-x))/externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "(x*audio(audio((audio(((x-externalVal)/externalVal),((y+(cos(audio(audio(y,externalVal),externalVal))+(cos(externalVal)-y)))*((y+y)/x)))+y),externalVal),(externalVal+(externalVal-externalVal))))",
            "g": "tan((y+(externalVal/((y/audio(x,y))/(((x+tan(cos(externalVal)))/sin(x))-audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal*externalVal))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x/audio(cos(sin(x)),externalVal))",
            "g": "audio((externalVal*(externalVal*(x-sin(y)))),sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((tan(externalVal)*(audio(tan(externalVal),x)-x))*cos((x+sin(externalVal)))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((sin(x)*y))*x),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((y+(y-sin(x)))-x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(((y-(sin(audio(audio(externalVal,externalVal),externalVal))+(sin(externalVal)-y)))+((x+y)*x)),(externalVal+(externalVal*externalVal))))",
            "g": "tan((y+(externalVal*(x-sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio((audio(((x-externalVal)*externalVal),sin((y+y)))+y),externalVal),(externalVal+(externalVal-externalVal))))",
            "g": "audio((y-(externalVal*cos((y*audio(x,y))))),(x/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(((x*(sin(audio(audio(externalVal,externalVal),externalVal))+(cos(externalVal)-y)))+((x+y)/x)),(externalVal-(externalVal*externalVal))))",
            "g": "tan((y+(externalVal-(x-sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(externalVal*tan(cos(((externalVal+sin(externalVal))/externalVal))))",
            "g": "(externalVal/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(((y-(sin(audio(audio(externalVal,externalVal),externalVal))+(cos(externalVal)-y)))+((x+y)/x)),tan(sin(audio(y,sin((cos(externalVal)/x)))))))",
            "g": "tan((y-(externalVal*tan(tan(externalVal)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x-(y-tan(cos(audio(x,(externalVal-externalVal))))))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(externalVal)",
            "b": "(x*audio(audio(cos(tan(tan(y))),externalVal),(externalVal+(externalVal/externalVal))))",
            "g": "audio((y-(y*sin(sin(externalVal)))),(y-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((y+(externalVal-(externalVal+externalVal)))+x))*externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio((audio(((x-externalVal)*externalVal),sin((y-y)))+y),externalVal),(externalVal-(externalVal*externalVal))))",
            "g": "audio((y+(externalVal*sin((y*audio(x,y))))),(y*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+(y-tan(cos(audio(x,(externalVal-externalVal))))))*externalVal)",
            "g": "(externalVal-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "(x*audio(sin(tan(audio(y,(externalVal+y)))),y))",
            "g": "tan((y-(y*sin((externalVal/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*tan(sin(audio(y,sin((cos(externalVal)/x))))))",
            "g": "cos((y*(externalVal-((externalVal/audio(x,y))/(((x*tan(tan(externalVal)))/(y/sin(externalVal)))+audio(externalVal,externalVal))))))"
          }
        }
      ],
      "timestamp": "23h:51m:9s"
    },
    {
      "generation": 14,
      "ascendantID": "50g1dtjq-wv55-bzq7-rm0s-3oiy3dyt1xvj",
      "id": "vc4cdcx5-7gys-8lbr-4n6b-4vqt1e6ztoll",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((y-(y+tan(cos(audio(x,(externalVal-externalVal))))))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(cos(x),x)+((tan(externalVal)/((externalVal*y)-y))*cos((x+sin(externalVal)))))",
            "b": "((audio(((externalVal-externalVal)-y),(externalVal+(externalVal/externalVal)))+y)-externalVal)",
            "g": "audio((sin((sin(x)*y))*x),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x-audio(audio((audio((externalVal-(externalVal*externalVal)),sin((y-y)))+y),externalVal),(externalVal-(externalVal-externalVal))))",
            "g": "audio((externalVal/y),(y/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio(tan(tan(cos(y))),externalVal),(externalVal-(externalVal*externalVal))))",
            "g": "tan((y*(y*cos((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(x))+((cos(externalVal)/(tan(tan(externalVal))-x))/sin((x+sin((externalVal/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x*externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/y))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "(x*audio(sin(tan(tan(x))),y))",
            "g": "tan((externalVal-(y*sin(sin(externalVal)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((y+(y-((externalVal+cos(tan(tan(y))))*externalVal)))-x))/externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(((y-(sin(audio(audio(externalVal,externalVal),externalVal))+(cos(externalVal)-y)))+((x+y)/x)),(externalVal-(externalVal*y))))",
            "g": "tan((y+(externalVal-(x+sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-tan(tan((audio(((x*externalVal)/externalVal),sin((y+y)))+y))))",
            "g": "tan((y-(externalVal*sin((y*audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "((x+((x+(y-((externalVal+(externalVal/externalVal))/externalVal)))+x))/externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(tan((audio((audio(y,externalVal)*externalVal),cos((y-y)))+y)),(externalVal-(externalVal-externalVal))))",
            "g": "audio((y+(externalVal*((y*audio(x,y))/(sin(audio((((cos(x)/externalVal)/y)*y),cos(externalVal)))+audio(externalVal,externalVal))))),(y*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio((audio(audio(y,externalVal),sin((y+y)))+y),externalVal),(externalVal+(externalVal*externalVal))))",
            "g": "audio((y-(externalVal*cos((y*audio(x,y))))),(y/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(((y-(sin(audio(audio(externalVal,externalVal),externalVal))+(sin(externalVal)-y)))-((y+y)*x)),(externalVal+(externalVal*externalVal))))",
            "g": "tan((y*(externalVal*cos((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "((x+((y+(y-sin(x)))-x))*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+(sin(cos(externalVal))*sin((x+sin(sin(externalVal))))))",
            "b": "(((cos(audio(audio(y,externalVal),externalVal))+(cos(externalVal)-y))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "(x-audio(tan((audio(((x-externalVal)*externalVal),((y-(cos(cos(y))+(cos(externalVal)-x)))*((y+y)/x)))+y)),(externalVal-(externalVal-externalVal))))",
            "g": "tan((y+(externalVal/sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,externalVal))))))"
          }
        }
      ],
      "timestamp": "23h:51m:13s"
    },
    {
      "generation": 15,
      "ascendantID": "vc4cdcx5-7gys-8lbr-4n6b-4vqt1e6ztoll",
      "id": "izj4yw8p-f0ma-3r1d-t4y3-f71vm61jmafd",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x-audio(audio((audio((externalVal-(externalVal+externalVal)),sin((y-y)))+y),externalVal),(externalVal*(externalVal-externalVal))))",
            "g": "audio((externalVal/y),sin((x/cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(x))+((cos(externalVal)/(tan(cos(externalVal))-x))/sin((x+sin((externalVal/audio(y,(externalVal/x))))))))",
            "b": "((audio(((x*externalVal)*externalVal),((x+(sin(audio(audio(y,externalVal),externalVal))+(audio(externalVal,(y/externalVal))-y)))+((y+y)/x)))+y)-externalVal)",
            "g": "audio((sin((tan(x)/y))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(cos(audio(x,(externalVal+y)))),externalVal),(externalVal-(externalVal*y))))",
            "g": "tan((y*(externalVal*cos((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-tan(tan((audio(((x*externalVal)/externalVal),sin((y-y)))+y))))",
            "g": "audio((x/cos(y)),(x/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*tan(tan(cos(audio(x,(externalVal-externalVal))))))",
            "g": "tan((y-(externalVal-sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(((y-(sin(audio(audio(y,externalVal),externalVal))+(sin(externalVal)-y)))+((x+y)/x)),(externalVal-(externalVal*y))))",
            "g": "tan((y+(externalVal-(x+sin(externalVal)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(((y-(sin(audio(audio(externalVal,externalVal),externalVal))+(sin(externalVal)*y)))-(externalVal+(externalVal/externalVal))),(externalVal+(externalVal*externalVal))))",
            "g": "tan((y*(externalVal*cos((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((externalVal*y)+((cos(externalVal)/(tan(tan(externalVal))-y))/sin((x+sin((y/audio(x,(externalVal*x))))))))",
            "b": "((tan(((x-tan(audio((audio(((x*externalVal)*externalVal),((y+y)/y))+y),externalVal)))*externalVal))+y)+externalVal)",
            "g": "audio((sin((cos(x)/y))-x),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-tan(audio(audio(externalVal,sin(y)),externalVal)))",
            "g": "tan((y-(externalVal*cos((y*audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio(tan(tan(cos(y))),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "tan((y*(y*cos((y/audio(x,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(((audio(((externalVal-externalVal)-y),(externalVal+(externalVal/externalVal)))+y)-externalVal),externalVal),(externalVal-(externalVal*y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio(cos(cos(audio(y,(externalVal-y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y*(externalVal-((y/audio(x,y))/(sin((x-audio(cos(externalVal),x)))+audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-tan(audio((audio(((x*externalVal)/externalVal),sin((x-tan(tan((audio(((x*externalVal)/externalVal),sin((y+y)))+y))))))+y),externalVal)))",
            "g": "tan((y*(externalVal*cos((y*(y/x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "(x-audio(tan((audio(y,externalVal)+y)),(externalVal-(externalVal-externalVal))))",
            "g": "tan((y+(y/sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x-audio(audio((audio((externalVal-audio(y,externalVal)),((y-y)/x))+y),externalVal),(externalVal-(externalVal-externalVal))))",
            "g": "audio(audio(y,y),(y*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x*audio(audio((audio(((y+y)/x),sin((y-y)))+y),externalVal),(externalVal-(externalVal-externalVal))))",
            "g": "audio((externalVal/y),(x/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "(((externalVal+(externalVal/externalVal))/externalVal)*externalVal)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-tan(tan((audio(((x-externalVal)/externalVal),((y+x)/x))+externalVal))))",
            "g": "tan((y*(externalVal*sin((y/audio(x,y))))))"
          }
        }
      ],
      "timestamp": "23h:51m:19s"
    },
    {
      "generation": 16,
      "ascendantID": "izj4yw8p-f0ma-3r1d-t4y3-f71vm61jmafd",
      "id": "0fufxbb9-79pf-gjgc-y7hj-dj5zbjr716rf",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x-audio(tan((audio((externalVal-audio(y,externalVal)),((y-y)/x))+y)),(externalVal+(externalVal-externalVal))))",
            "g": "audio(audio(y,y),(y*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio(cos(cos(audio(y,(externalVal-y)))),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "tan((y*(externalVal-((y/audio(x,y))/(sin((x+tan(tan(externalVal))))+audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(cos(externalVal),x)-x))*sin((x+sin((y*audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)/externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))-x),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(y-audio(audio(cos(cos(audio(y,(externalVal*y)))),externalVal),(externalVal+(externalVal/y))))",
            "g": "tan((y*(externalVal-sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio(tan(cos(cos(y))),externalVal),(externalVal+(externalVal/externalVal))))",
            "g": "tan((y-(y-cos(sin(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(cos(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x+externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((tan(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "(((externalVal+(externalVal/externalVal))/externalVal)*externalVal)",
            "g": "(y-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(tan(y))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x-audio(audio((audio((externalVal-(externalVal+externalVal)),sin((y-y)))+y),externalVal),(externalVal-(externalVal-externalVal))))",
            "g": "audio((externalVal/externalVal),sin((x/cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)+externalVal)",
            "g": "audio((sin((cos(x)*y))*y),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio(cos(cos(tan(y))),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "tan((y*(externalVal-((y/audio(x,y))/(sin((x-audio(cos(externalVal),x)))+audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio(cos(cos(audio(y,(externalVal-y)))),externalVal),(externalVal-(externalVal*y))))",
            "g": "tan((y*(externalVal-((y/audio(x,y))/(((x-audio(cos(externalVal),x))/(x/cos(externalVal)))+audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x-audio(audio((audio((externalVal-(externalVal+externalVal)),sin((y-y)))+y),externalVal),(externalVal*(externalVal-externalVal))))",
            "g": "audio((externalVal/y),((x/cos(y))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(cos(x))-((cos(y)/(tan(cos(externalVal))-x))*((x+sin((externalVal/tan(y))))/audio(y,y))))",
            "b": "((tan(((x*externalVal)*externalVal))+y)*externalVal)",
            "g": "audio((sin((tan(x)/y))*y),sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-tan(audio((audio(((externalVal+(externalVal/externalVal))/externalVal),((y-y)/x))+y),externalVal)))",
            "g": "audio((externalVal*y),(x/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio((tan(externalVal)-externalVal),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "tan((y*(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x/audio(audio(sin(tan(audio(y,(externalVal+y)))),externalVal),(externalVal+(externalVal/y))))",
            "g": "audio((y-(externalVal*sin((y/audio(x,y))))),(y/(x*cos(audio(y,y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-tan(audio((audio(((x*externalVal)/externalVal),sin((x-tan(tan((audio(((x*externalVal)*externalVal),sin((y+y)))+y))))))+y),externalVal)))",
            "g": "audio((y-(externalVal*cos((y*(y/x))))),(x/x))"
          }
        }
      ],
      "timestamp": "23h:51m:47s"
    },
    {
      "generation": 17,
      "ascendantID": "0fufxbb9-79pf-gjgc-y7hj-dj5zbjr716rf",
      "id": "k3th0c15-iy0d-pfhe-sh5f-6jurfec96iie",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x*audio(audio(cos(tan(audio(y,(externalVal+y)))),externalVal),(externalVal-(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x-audio(tan((audio((externalVal-audio(y,externalVal)),sin((y-y)))+y)),(externalVal+(externalVal-externalVal))))",
            "g": "audio(audio(y,y),(y*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x-audio((audio((externalVal*(externalVal+externalVal)),sin((y+y)))+y),(externalVal*(externalVal-externalVal))))",
            "g": "audio((externalVal/y),((x/audio((externalVal*externalVal),sin((x/cos(y)))))/externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(cos(x))*((cos(y)/(tan(cos(externalVal))-y))*((x+sin((externalVal/tan(y))))/audio(y,y))))",
            "b": "((tan(((x*externalVal)*externalVal))+y)*externalVal)",
            "g": "audio((sin((cos(x)/y))*x),sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(cos(x))-((cos(y)/(tan((audio(sin(x),x)+((cos(externalVal)*(audio(tan(externalVal),x)+x))*sin((x+sin((y/audio(x,(externalVal/x)))))))))-x))*((x+sin((externalVal/tan(y))))/audio(y,y))))",
            "b": "((audio(((x*externalVal)*externalVal),((x+(sin(audio(((y+y)/x),externalVal))+(tan(externalVal)-y)))+sin((y-y))))+y)*externalVal)",
            "g": "audio((sin((cos(x)/y))/y),sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio(cos(cos(tan(y))),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "tan((y-(externalVal-((y/audio(x,y))/(sin((x-audio(cos(externalVal),x)))+audio(externalVal,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x+tan(audio((audio(((externalVal+(externalVal*externalVal))/externalVal),((y+(externalVal*((externalVal+cos(tan(audio(audio(externalVal,externalVal),externalVal))))/externalVal)))-x))+y),externalVal)))",
            "g": "audio((externalVal+x),(x/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((cos(externalVal)/(audio(cos(externalVal),x)-x))/sin((x+((y*audio(x,(externalVal*x)))/externalVal)))))",
            "b": "((tan(((x-externalVal)/externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))-x),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/y)",
            "b": "(x-audio(audio(cos(cos(audio(y,(externalVal-y)))),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "tan((y*(y-((y/audio(x,externalVal))/(sin((x+tan(tan(externalVal))))+audio(y,externalVal))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal/externalVal)",
            "b": "(x-audio(cos((audio((externalVal+audio(y,externalVal)),((y-y)/x))+y)),(externalVal+audio(tan((audio((externalVal-audio(y,externalVal)),sin((y-y)))+y)),(externalVal-(externalVal+externalVal))))))",
            "g": "audio(audio(y,y),(y*x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-audio(audio((audio(externalVal,sin(y))+externalVal),externalVal),(externalVal-(externalVal/externalVal))))",
            "g": "audio((y*(externalVal*sin((y/audio(x,y))))),(y/(x*cos(audio(y,x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(cos(x),x)+(audio(cos(x),x)-sin((x+((y/tan(x))/externalVal)))))",
            "b": "((tan(((x+externalVal)*y))-y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+(externalVal*y))",
            "b": "((tan(((x+(externalVal*((externalVal+cos(tan(audio(audio(externalVal,externalVal),externalVal))))/externalVal)))*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))-x),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(sin(x),x)+((tan(y)/(audio(cos(externalVal),x)-x))*sin((x+sin((y*sin(externalVal)))))))",
            "b": "((tan(((x+externalVal)/externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/externalVal))-x),tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x/audio(audio(sin(tan(tan(y))),externalVal),(externalVal+(externalVal/y))))",
            "g": "tan((y-(externalVal*sin((y/audio(x,y))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(cos(x),x)+((cos(externalVal)/(audio(tan(externalVal),x)-x))*sin((x+sin((y/audio(x,(externalVal/x))))))))",
            "b": "((tan(((x+externalVal)-externalVal))+y)-externalVal)",
            "g": "audio((cos((tan(x)/externalVal))*y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(cos(x))+((tan(externalVal)/(tan(cos(externalVal))*x))*((x+sin((externalVal*tan(y))))/audio(y,y))))",
            "b": "((tan(((x-externalVal)*externalVal))+y)*externalVal)",
            "g": "audio((sin((tan(x)/y))-y),sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(audio(cos(x),x)+(sin(cos(externalVal))*sin((x+sin((externalVal*audio(y,(externalVal/x))))))))",
            "b": "((tan(((x+externalVal)*externalVal))+y)-externalVal)",
            "g": "audio((sin((cos(x)/y))/y),cos(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(externalVal*y)",
            "b": "(x-(audio((externalVal*audio(y,externalVal)),((y*y)/x))+y))",
            "g": "tan((y-(y-cos((y/audio(x,externalVal))))))"
          }
        }
      ],
      "timestamp": "23h:51m:49s"
    }
  ],
  "timestamp": "2024-01-20-23-49-37"
}
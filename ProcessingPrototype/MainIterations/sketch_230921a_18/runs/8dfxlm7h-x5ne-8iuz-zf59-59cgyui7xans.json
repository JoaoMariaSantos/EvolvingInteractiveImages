{
  "id": "8dfxlm7h-x5ne-8iuz-zf59-59cgyui7xans",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [{
    "generation": 0,
    "id": "2ocm3emi-5z2r-0lxl-sc9a-mfmxcyhgdh71",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "min(x,noise(x,min(pow((tan(min(y,y))+max(y,(y*audio(y,pow(externalVal,x))))),sin(((bri(tan(cos(externalVal)),max(pow(externalVal,externalVal),mod(audio(y,externalVal),sin(noise(tan(y),((x/max(sin(externalVal),mod(min(x,externalVal),max(externalVal,y))))-(externalVal-x)))))))-x)-externalVal))),mod(y,max((min(x,x)/(min(tan(y),externalVal)-cos((max(audio(y,audio(audio(x,x),(tan((y*(x/externalVal)))/x))),sin(x))-min(sin(y),bri(max(pow(((externalVal/y)*(y-y)),externalVal),max(y,y)),min(x,x))))))),y)))))",
          "b": "bri((externalVal-audio(y,x)),bri(externalVal,externalVal))",
          "g": "tan(tan(tan((tan(x)-y))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(externalVal)",
          "b": "(y/externalVal)",
          "g": "(y/y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(min(cos(externalVal),externalVal))",
          "b": "pow(mod(externalVal,x),pow((y/sin(max((((noise((externalVal/(externalVal+min(cos(sin((tan(x)*audio(y,x)))),y))),y)*(bri((y+externalVal),externalVal)+cos(cos(noise(noise(externalVal,mod(y,externalVal)),y)))))+((y-externalVal)/x))*externalVal),mod(min((sin(externalVal)*(((x+externalVal)*externalVal)+externalVal)),y),externalVal)))),externalVal))",
          "g": "cos(externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(noise(externalVal,x))",
          "b": "pow((y/x),max(y,((externalVal-x)+x)))",
          "g": "cos(y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(pow(y,x),(y+pow(x,max(externalVal,pow(x,externalVal)))))",
          "b": "(externalVal+y)",
          "g": "bri(noise(y,x),(externalVal-max(y,max(y,x))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(audio(min(x,y),min((externalVal+externalVal),(externalVal-(audio(y,y)/externalVal)))),y)",
          "b": "cos(externalVal)",
          "g": "tan((x*y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "bri(y,audio(externalVal,y))",
          "b": "mod(x,audio(max((externalVal+externalVal),noise(x,x)),y))",
          "g": "pow(externalVal,mod(max(min(sin(externalVal),externalVal),x),x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "audio(y,bri((cos(externalVal)/bri(y,x)),externalVal))",
          "b": "pow((x+x),externalVal)",
          "g": "pow(externalVal,externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(audio(externalVal,x),(bri(((x-externalVal)-min(min(audio(x,(x*tan(externalVal))),x),(x+min(audio(y,bri(mod(y,(tan((cos(externalVal)/mod(((y-((externalVal/externalVal)*x))-audio(max(y,externalVal),x)),externalVal)))+y)),bri(audio(externalVal,y),externalVal))),audio(pow(mod(externalVal,y),(y-max(externalVal,externalVal))),tan((externalVal*max(cos((tan(externalVal)-noise(cos(y),noise(x,externalVal)))),y)))))))),(x-(x-mod(x,externalVal))))*min(tan(audio(x,cos(pow(x,externalVal)))),x)))",
          "b": "(x-(y-(y+y)))",
          "g": "sin(x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod(bri(max(noise(y,(externalVal*y)),x),externalVal),x)",
          "b": "(y/y)",
          "g": "sin(pow((y/y),x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal*max(y,y))",
          "b": "(x/y)",
          "g": "bri(x,y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(((externalVal/cos((pow(y,y)+y)))-(tan((max(cos(tan((audio(max((externalVal/(mod(pow(x,y),externalVal)*x)),x),bri(mod(max((x/y),noise(x,y)),audio((x/pow((pow(mod(tan(max(x,(y-pow((sin(y)*externalVal),noise(((externalVal-externalVal)-sin(x)),(cos(sin(externalVal))+mod((x-y),y))))))),bri(externalVal,noise(x,y))),(noise(pow(x,externalVal),externalVal)+bri(y,x)))+y),(bri(y,x)*max(externalVal,y)))),y)),audio(externalVal,sin(x))))+externalVal))),(sin(externalVal)-min(externalVal,externalVal)))*x))+max(y,x))))",
          "b": "audio(x,x)",
          "g": "((externalVal+externalVal)/sin(mod(externalVal,y)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(externalVal)",
          "b": "(x+min(externalVal,externalVal))",
          "g": "max(externalVal,x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(x-externalVal)",
          "b": "audio(externalVal,externalVal)",
          "g": "bri(y,audio(audio(mod(max(mod(externalVal,y),x),((((y-noise(cos(sin(mod(cos(audio(externalVal,externalVal)),(externalVal*(externalVal-x))))),externalVal))-noise(externalVal,x))-x)-externalVal)),max(x,min(externalVal,externalVal))),externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "min(x,y)",
          "b": "tan(audio(externalVal,y))",
          "g": "((y*min(externalVal,max(x,cos((max(bri((externalVal*x),tan(audio(x,audio((tan(bri(externalVal,(externalVal+(cos(tan(y))-sin(y)))))-(x/tan((sin(pow((y+y),externalVal))+cos(sin(cos(y))))))),sin(max(x,cos(x))))))),cos(sin(noise((pow(x,(x*x))*bri(noise((x+y),externalVal),max(externalVal,max((externalVal+y),y)))),noise(externalVal,x)))))-x)))))*y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(mod(externalVal,y),y)",
          "b": "(pow(x,x)-x)",
          "g": "noise(min(min(y,x),x),sin(min((((externalVal/mod(sin(cos(max(tan(noise(x,max(x,x))),x))),pow(mod(sin(x),pow(x,externalVal)),y)))*y)-(externalVal-y)),x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "min((mod((bri(x,(tan(((max(y,x)+pow(y,externalVal))+externalVal))-externalVal))+externalVal),bri(noise((x*(externalVal+min((y-x),x))),min((tan((x*externalVal))+(audio(sin(y),max(bri((audio(y,externalVal)+(max(y,(x/x))+x)),x),sin(audio(externalVal,externalVal))))+externalVal)),sin(bri(x,externalVal)))),noise(x,tan(x))))-x),y)",
          "b": "(min(x,max(externalVal,y))*(x-externalVal))",
          "g": "noise(x,externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(bri(y,cos(x))+x)",
          "b": "tan(externalVal)",
          "g": "(externalVal*min(externalVal,tan((tan(mod(x,min(y,mod((x/y),min(x,min(y,mod(tan(externalVal),x)))))))+x))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal/y)",
          "b": "(y/externalVal)",
          "g": "audio((noise(x,externalVal)+y),tan(cos(x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "audio(pow(externalVal,max(cos(x),tan(externalVal))),y)",
          "b": "max(y,sin(audio(externalVal,externalVal)))",
          "g": "tan((x-externalVal))"
        }
      }
    ],
    "timestamp": "22h:26m:59s"
  }],
  "timestamp": "2024-01-08-22-26-57"
}
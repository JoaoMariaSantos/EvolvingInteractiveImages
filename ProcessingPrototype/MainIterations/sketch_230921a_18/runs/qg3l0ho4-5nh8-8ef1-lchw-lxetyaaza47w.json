{
  "id": "qg3l0ho4-5nh8-8ef1-lchw-lxetyaaza47w",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [{
    "generation": 0,
    "id": "kzkxcf6w-ly9q-cwak-jl85-h1m3hvoeepgc",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "(cos(pow(y,bri(y,externalVal)))/y)",
          "b": "audio(((y*x)+pow(bri(externalVal,externalVal),bri(y,x))),min(y,cos(y)))",
          "g": "tan(max((externalVal/(y-(externalVal-(tan(max((externalVal/externalVal),x))*(x*(cos(min(y,y))*audio((x+externalVal),y))))))),x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "max(max((externalVal/max((x-(bri(audio(x,externalVal),sin(max(externalVal,y)))*x)),externalVal)),sin(x)),(y/max(audio(x,bri(cos(x),((min(externalVal,x)+pow(y,y))-externalVal))),externalVal)))",
          "b": "(externalVal*(externalVal*sin(externalVal)))",
          "g": "(max(externalVal,x)-y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(y,max(externalVal,(y*x)))",
          "b": "cos(externalVal)",
          "g": "pow(min(x,audio(x,min(externalVal,externalVal))),audio((cos(x)-(audio(sin(max(externalVal,y)),externalVal)*cos(x))),externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(externalVal)",
          "b": "min(y,cos(externalVal))",
          "g": "(externalVal+externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "min(x,max((audio((x/(cos(pow(y,min(y,y)))/(externalVal+y))),externalVal)/(externalVal/y)),x))",
          "b": "(x+x)",
          "g": "audio((x*sin((x-x))),tan(x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(tan(x)+sin((x-max(x,externalVal))))",
          "b": "pow(max(y,((audio(bri(externalVal,pow(x,externalVal)),x)+y)+max(y,x))),x)",
          "g": "audio(externalVal,sin(externalVal))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y-externalVal)",
          "b": "(externalVal-y)",
          "g": "audio((max(externalVal,y)/sin(audio(sin(y),max(x,cos(x))))),bri(sin(min((pow(x,tan(max(externalVal,externalVal)))*y),(pow((pow(cos(externalVal),sin((tan(x)-((x/x)*cos(x)))))-sin(sin(y))),externalVal)-x))),x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin(y)",
          "b": "(y*y)",
          "g": "min(y,pow(externalVal,min((externalVal*(externalVal+x)),sin((x-externalVal)))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "pow((y+y),y)",
          "b": "min(tan(x),x)",
          "g": "((bri(y,x)-externalVal)+externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(sin(externalVal)+x)",
          "b": "pow((cos(min((x+x),min(pow(y,y),(y*externalVal))))/sin(min(tan(min((tan(x)-pow(((x+(((x-externalVal)*(sin(audio((y+y),(y-tan(audio(y,y)))))-tan(y)))-bri(y,x)))/x),bri(audio(max((x-externalVal),(x*externalVal)),y),(pow(externalVal,externalVal)+x)))),x)),x))),externalVal)",
          "g": "min(tan(min(audio(pow(sin(y),x),y),x)),(bri(x,sin(audio((cos(x)-y),((min(x,x)-min(audio(min(x,(audio(pow(externalVal,y),bri(x,(externalVal*(x+(y+externalVal)))))/y)),x),max((max(externalVal,externalVal)+sin((externalVal+audio(y,max(externalVal,y))))),max(y,x))))/x))))/x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(cos(bri(min((min(y,x)+((y*externalVal)/((x+y)/x))),x),y)),x)",
          "b": "(y+max(externalVal,bri(y,cos(min((min(externalVal,sin(y))/externalVal),min((x+(pow(y,x)+tan(y))),y))))))",
          "g": "cos(sin(min(externalVal,bri(x,audio(max(externalVal,tan((externalVal-cos(min(y,externalVal))))),audio(tan(tan(x)),sin(y)))))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos((bri(x,externalVal)+x))",
          "b": "sin(sin(externalVal))",
          "g": "audio((cos(x)+bri(bri(x,(max(x,x)/externalVal)),externalVal)),bri(sin(audio((externalVal/y),(externalVal/((cos(x)*externalVal)*externalVal)))),(cos(min(min(x,audio(x,x)),max(externalVal,externalVal)))-(sin(x)-((((externalVal*(x/x))+externalVal)/audio(externalVal,(min(externalVal,externalVal)*externalVal)))/(max(x,(sin(y)*max(x,pow(audio(max((y+sin(cos(pow(x,sin(min((externalVal/min(((pow(externalVal,pow(y,externalVal))+x)/externalVal),y)),pow(x,sin(x)))))))),y),tan(min(x,tan(y)))),y))))/externalVal))))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(y)",
          "b": "tan(cos((externalVal/x)))",
          "g": "bri(y,x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(tan(((y-bri(x,externalVal))*y))-y)",
          "b": "pow(externalVal,tan(x))",
          "g": "sin(externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(min(max((((cos(x)/pow(tan(max(x,externalVal)),audio(y,(cos((bri(tan(bri(x,externalVal)),x)*min(min(y,tan(tan(externalVal))),sin((y/x)))))+(externalVal-((x-y)/x))))))-x)+y),y),pow(bri(cos((tan(y)-min(y,(externalVal+(x+(x-y)))))),y),(externalVal-y)))*x)",
          "b": "(x*(sin(externalVal)+(y*y)))",
          "g": "audio((pow(((externalVal/externalVal)-x),(x/tan(cos(externalVal))))/cos(x)),min(y,(externalVal/(bri(y,x)*(y-(audio(audio(y,y),(externalVal*sin((externalVal+audio((x-x),y)))))*min(y,((externalVal*(audio(y,audio((externalVal*x),x))/x))+externalVal))))))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "bri(y,sin((x/tan(x))))",
          "b": "tan(x)",
          "g": "(sin((cos(pow(y,y))*x))-externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(sin(x))",
          "b": "max(tan(cos(bri((x*x),bri(audio(x,externalVal),audio(x,x))))),externalVal)",
          "g": "sin(x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "max(x,min(min(externalVal,y),y))",
          "b": "min(pow(externalVal,(x+y)),max(externalVal,(x+tan(cos((min(externalVal,sin(externalVal))*x))))))",
          "g": "min((externalVal-cos(cos(x))),externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin((y-(y*externalVal)))",
          "b": "(externalVal*(audio((y-externalVal),x)+externalVal))",
          "g": "cos((y+tan(y)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y+externalVal)",
          "b": "(y*tan(min(externalVal,x)))",
          "g": "min((y/y),x)"
        }
      }
    ],
    "timestamp": "18h:14m:33s"
  }],
  "timestamp": "2023-12-10-18-14-10"
}
{
  "id": "8n6dj2up-zdp0-98bc-e8pl-7xxxx51704bv",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [
    {
      "generation": 0,
      "id": "q2up59kl-3vqt-4poe-3pg5-rztrdubmik1b",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(externalVal))",
            "b": "tan(audio(x,cos(audio(sin(y),y))))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(sin(externalVal))",
            "b": "tan(y)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio(audio(externalVal,externalVal),y))",
            "b": "audio(y,externalVal)",
            "g": "sin(cos(sin(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,externalVal)",
            "b": "sin(x)",
            "g": "sin(audio(y,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "cos(externalVal)",
            "g": "tan(cos(cos(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(externalVal)",
            "b": "audio(y,sin(y))",
            "g": "audio(externalVal,audio(externalVal,externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,x)",
            "b": "audio(sin(externalVal),tan(x))",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(sin(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,externalVal)",
            "b": "audio(externalVal,y)",
            "g": "tan(sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,sin(x))",
            "b": "cos(cos(x))",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "audio(x,x)",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "tan(y)",
            "g": "tan(sin(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "tan(y)",
            "g": "tan(audio(cos(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(cos(tan(y))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(y))",
            "b": "sin(x)",
            "g": "tan(sin(sin(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(x,sin(externalVal))",
            "b": "sin(x)",
            "g": "audio(y,audio(externalVal,sin(tan(externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(sin(sin(x)),sin(sin(externalVal)))",
            "b": "sin(cos(tan(audio(y,y))))",
            "g": "audio(audio(y,sin(tan(x))),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "cos(externalVal)",
            "g": "sin(audio(audio(y,tan(externalVal)),externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,sin(audio(audio(audio(y,audio(audio(y,sin(sin(cos(cos(cos(cos(externalVal))))))),tan(cos(x)))),audio(tan(x),audio(x,sin(x)))),tan(audio(externalVal,tan(cos(tan(cos(x)))))))))"
          }
        }
      ],
      "timestamp": "23h:54m:57s"
    },
    {
      "generation": 1,
      "ascendantID": "q2up59kl-3vqt-4poe-3pg5-rztrdubmik1b",
      "id": "56oo4qya-3pa0-4w9p-vse6-zxcwcfj93sft",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(externalVal))",
            "b": "tan(audio(x,cos(audio(sin(y),y))))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(sin(y),y))),audio(tan(y),tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio(audio(externalVal,externalVal),y))",
            "b": "audio(x,externalVal)",
            "g": "sin(cos(sin(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio(audio(externalVal,externalVal),y))",
            "b": "audio(y,externalVal)",
            "g": "sin(cos(sin(audio(externalVal,externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio(audio(externalVal,externalVal),y))",
            "b": "audio(y,externalVal)",
            "g": "sin(cos(sin(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,sin(sin(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "tan(y)",
            "g": "tan(audio(cos(sin(audio(externalVal,audio(tan(sin(y)),audio(tan(cos(tan(y))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(audio(y,y))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(externalVal))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(externalVal,sin(x))",
            "b": "tan(cos(x))",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(cos(externalVal),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "tan(y)",
            "g": "tan(audio(cos(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(cos(tan(y))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(externalVal))",
            "b": "tan(audio(x,cos(cos(externalVal))))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "audio(x,x)",
            "g": "sin(externalVal)"
          }
        }
      ],
      "timestamp": "23h:55m:7s"
    },
    {
      "generation": 2,
      "ascendantID": "56oo4qya-3pa0-4w9p-vse6-zxcwcfj93sft",
      "id": "2gk5jgt0-utky-zjz6-lbj1-9022fxl0hpdk",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "audio(x,x)",
            "g": "sin(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(externalVal))",
            "b": "tan(cos(x))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(audio(audio(audio(externalVal,externalVal),y),y))",
            "b": "audio(y,externalVal)",
            "g": "sin(cos(sin(audio(externalVal,externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(externalVal))",
            "b": "tan(audio(x,tan(cos(externalVal))))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,sin(sin(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(sin(y),y))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(x)),tan(cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(cos(audio(sin(y),y)))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(sin(y),y))),audio(tan(tan(y)),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "tan(y)",
            "g": "tan(audio(cos(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(cos(audio(y,cos(sin(cos(y)))))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(tan(externalVal),cos(y)))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio(audio(externalVal,externalVal),x))",
            "b": "audio(y,externalVal)",
            "g": "sin(cos(sin(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        }
      ],
      "timestamp": "23h:55m:10s"
    },
    {
      "generation": 3,
      "ascendantID": "2gk5jgt0-utky-zjz6-lbj1-9022fxl0hpdk",
      "id": "cq63uytw-p0pd-lg0b-prky-ob5u6g4u69dc",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(externalVal))",
            "b": "tan(audio(x,tan(cos(y))))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,cos(cos(externalVal)))",
            "g": "tan(audio(tan(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(sin(audio(x,cos(sin(cos(y)))))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(sin(y),y))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "audio(audio(x,sin(audio(tan(externalVal),cos(y)))),audio(tan(audio(x,tan(cos(externalVal)))),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(y,x))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(cos(audio(sin(y),y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(audio(externalVal,x),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(sin(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(audio(y,externalVal))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,tan(audio(sin(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        }
      ],
      "timestamp": "23h:55m:11s"
    },
    {
      "generation": 4,
      "ascendantID": "cq63uytw-p0pd-lg0b-prky-ob5u6g4u69dc",
      "id": "woo7ijhc-dmf4-gqtf-8k3c-6b7fy1mzmxd6",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "audio(audio(x,cos(audio(sin(y),y))),audio(cos(externalVal),cos(y)))",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(cos(audio(sin(y),y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,cos(cos(x)))",
            "g": "tan(audio(tan(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(sin(audio(x,cos(sin(cos(y)))))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(externalVal),cos(x)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(externalVal))",
            "b": "tan(audio(y,externalVal))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(y,x))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(sin(y)))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(y)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(cos(y),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,tan(audio(sin(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(y,x))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),tan(tan(y)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),tan(tan(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(y)))",
            "b": "sin(x)",
            "g": "tan(cos(sin(x)))"
          }
        }
      ],
      "timestamp": "23h:55m:13s"
    },
    {
      "generation": 5,
      "ascendantID": "woo7ijhc-dmf4-gqtf-8k3c-6b7fy1mzmxd6",
      "id": "s5bborv1-txm2-yk6v-9j5u-k7cxx7s5hnj0",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(externalVal))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(tan(y),tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(cos(audio(sin(y),y)))",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,cos(cos(x)))",
            "g": "tan(audio(tan(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(sin(audio(x,cos(sin(cos(y)))))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(y)))",
            "b": "sin(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(audio(x,sin(tan(y))),cos(x)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,sin(y))",
            "b": "sin(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),sin(x))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(externalVal))",
            "b": "tan(audio(y,externalVal))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(y,x))),audio(tan(externalVal),sin(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "audio(y,audio(y,externalVal))",
            "g": "tan(audio(tan(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(cos(audio(x,cos(sin(cos(y)))))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(sin(tan(y)))),audio(tan(externalVal),cos(x)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),tan(tan(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(x)))",
            "b": "sin(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(y,x))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(externalVal))",
            "b": "tan(cos(audio(sin(y),y)))",
            "g": "tan(x)"
          }
        }
      ],
      "timestamp": "23h:55m:16s"
    },
    {
      "generation": 6,
      "ascendantID": "s5bborv1-txm2-yk6v-9j5u-k7cxx7s5hnj0",
      "id": "oy5rplrg-yrp1-is2l-vkcs-zg0cxgtrxic2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,cos(cos(x)))",
            "g": "tan(audio(tan(sin(audio(externalVal,tan(tan(sin(y)))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,y))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(cos(audio(sin(y),y)))",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "audio(y,cos(cos(x)))",
            "g": "tan(audio(cos(sin(audio(externalVal,tan(tan(sin(y)))))),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(tan(x)))",
            "b": "cos(x)",
            "g": "tan(cos(cos(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,cos(cos(x)))",
            "g": "tan(audio(tan(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(sin(audio(x,cos(sin(cos(y)))))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,cos(cos(x)))",
            "g": "tan(audio(tan(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(sin(audio(x,cos(sin(cos(y)))))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(sin(externalVal))),tan(tan(y)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(y,x))),audio(audio(externalVal,cos(externalVal)),sin(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(y,x))),audio(tan(externalVal),sin(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(x)))",
            "b": "cos(x)",
            "g": "tan(tan(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(x)))",
            "b": "sin(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(tan(x)))",
            "b": "sin(x)",
            "g": "tan(cos(cos(x)))"
          }
        }
      ],
      "timestamp": "23h:55m:24s"
    },
    {
      "generation": 7,
      "ascendantID": "oy5rplrg-yrp1-is2l-vkcs-zg0cxgtrxic2",
      "id": "retbh6do-b6vm-ccq9-y8eg-w5qdf42mxt96",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,cos(cos(x)))",
            "g": "tan(audio(tan(sin(audio(externalVal,tan(audio(sin(y),y))))),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,tan(cos(externalVal)))",
            "g": "tan(audio(tan(sin(audio(externalVal,audio(audio(sin(y),y),audio(cos(sin(audio(x,cos(sin(sin(y)))))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(audio(cos(y),y)))",
            "b": "sin(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(x,cos(sin(x)))",
            "g": "audio(audio(cos(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(sin(audio(x,cos(sin(cos(y)))))),externalVal))))),y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(sin(externalVal))),tan(tan(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(cos(sin(externalVal)))),tan(tan(y)))",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(cos(x)))",
            "b": "sin(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(cos(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "audio(y,cos(cos(x)))",
            "g": "tan(audio(tan(sin(audio(externalVal,audio(tan(sin(y)),audio(tan(sin(tan(x))),externalVal))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(x,tan(y))",
            "g": "tan(audio(tan(sin(audio(externalVal,tan(tan(sin(y)))))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y))))",
            "g": "tan(cos(audio(externalVal,x)))"
          }
        }
      ],
      "timestamp": "23h:55m:26s"
    },
    {
      "generation": 8,
      "ascendantID": "retbh6do-b6vm-ccq9-y8eg-w5qdf42mxt96",
      "id": "vtdpklqm-1v1q-w00y-6n12-fr5pve866ifi",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(audio(x,cos(sin(x))))",
            "g": "audio(cos(cos(x)),audio(audio(y,y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(cos(sin(externalVal)))),tan(tan(y)))",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(cos(externalVal))),tan(tan(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(audio(y,tan(cos(x)))))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(cos(cos(externalVal)))),tan(tan(y)))",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "audio(y,cos(cos(x)))",
            "g": "tan(audio(tan(sin(audio(externalVal,tan(audio(sin(y),y))))),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(externalVal))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(y)),audio(tan(y),tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(audio(x,sin(audio(y,x))),audio(cos(y),cos(externalVal))))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),tan(x)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "tan(x)",
            "g": "tan(audio(tan(sin(audio(externalVal,audio(audio(sin(y),y),audio(tan(sin(audio(x,cos(sin(cos(y)))))),externalVal))))),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(sin(externalVal))",
            "g": "audio(cos(cos(x)),audio(tan(y),audio(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        }
      ],
      "timestamp": "23h:55m:27s"
    },
    {
      "generation": 9,
      "ascendantID": "vtdpklqm-1v1q-w00y-6n12-fr5pve866ifi",
      "id": "aszwlu5s-y0wd-fhlh-q84f-w0s50ctufo3w",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,tan(externalVal)),audio(audio(x,sin(audio(y,x))),audio(cos(y),tan(externalVal))))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(audio(x,audio(x,sin(audio(y,x)))),audio(cos(y),cos(y))))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(cos(externalVal))),tan(tan(y)))",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(y))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(y))",
            "b": "tan(tan(cos(externalVal)))",
            "g": "audio(tan(cos(x)),audio(tan(y),tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(audio(x,sin(audio(y,x))),audio(cos(y),tan(externalVal))))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(cos(externalVal))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),tan(tan(y)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(cos(cos(externalVal)))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,cos(y))",
            "b": "cos(x)",
            "g": "audio(cos(sin(x)),externalVal)"
          }
        }
      ],
      "timestamp": "23h:55m:27s"
    },
    {
      "generation": 10,
      "ascendantID": "aszwlu5s-y0wd-fhlh-q84f-w0s50ctufo3w",
      "id": "ucgs9oq7-kg1y-5jsv-ebo0-1340izd1yoz9",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(tan(y))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(cos(tan(externalVal)))),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(tan(y))),audio(audio(x,audio(x,sin(audio(y,x)))),tan(cos(y))))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(y))",
            "b": "cos(x)",
            "g": "tan(cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(sin(externalVal),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(externalVal))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),tan(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(audio(x,audio(x,sin(audio(y,x)))),tan(cos(y))))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),sin(externalVal))",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(audio(y,y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(cos(externalVal))),tan(tan(y)))",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(audio(x,audio(x,sin(audio(y,x)))),audio(tan(y),cos(y))))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(audio(externalVal,x),audio(tan(y),cos(externalVal)))"
          }
        }
      ],
      "timestamp": "23h:55m:27s"
    },
    {
      "generation": 11,
      "ascendantID": "ucgs9oq7-kg1y-5jsv-ebo0-1340izd1yoz9",
      "id": "h6tjoegc-hyfc-poc3-l2m0-w36c5uhzgwe3",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(audio(y,y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(audio(y,y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(tan(y))),audio(sin(externalVal),cos(y)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(cos(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(audio(externalVal,x),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),tan(cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(tan(y))),audio(audio(x,audio(x,cos(audio(y,x)))),tan(cos(y))))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(sin(tan(externalVal)))),tan(tan(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(audio(x,audio(x,sin(audio(externalVal,y)))),tan(cos(y))))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),sin(externalVal))",
            "g": "cos(y)"
          }
        }
      ],
      "timestamp": "23h:55m:27s"
    },
    {
      "generation": 12,
      "ascendantID": "h6tjoegc-hyfc-poc3-l2m0-w36c5uhzgwe3",
      "id": "49qj9mdu-54p9-aqlm-rybw-tjej41uaett4",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(x,sin(tan(y))))),sin(externalVal))",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(tan(y))),audio(sin(externalVal),tan(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(tan(y))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,y))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(tan(y))",
            "g": "audio(tan(sin(x)),audio(audio(y,y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(sin(x),y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(audio(y,y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,tan(externalVal)),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(tan(y))),audio(audio(x,audio(x,sin(audio(externalVal,y)))),tan(cos(y))))",
            "g": "tan(externalVal)"
          }
        }
      ],
      "timestamp": "23h:55m:27s"
    },
    {
      "generation": 13,
      "ascendantID": "49qj9mdu-54p9-aqlm-rybw-tjej41uaett4",
      "id": "di6zhywa-miwz-pp24-jpw6-gsca3psnvwo2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(tan(y))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(x,sin(tan(y))))),sin(y))",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(audio(y,y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(tan(y))",
            "g": "tan(tan(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,y))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(audio(x,sin(audio(externalVal,x))))",
            "g": "audio(tan(sin(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,y))),audio(cos(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(externalVal))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,y))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(externalVal))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),cos(cos(audio(y,audio(externalVal,x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "audio(y,tan(y))",
            "b": "audio(audio(x,sin(audio(y,y))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(tan(y))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        }
      ],
      "timestamp": "23h:55m:28s"
    },
    {
      "generation": 14,
      "ascendantID": "di6zhywa-miwz-pp24-jpw6-gsca3psnvwo2",
      "id": "gdb8s962-hjft-bz9a-1hs5-ichgrzhzj7h8",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,audio(audio(x,sin(audio(y,y))),audio(cos(externalVal),cos(externalVal)))),audio(cos(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(tan(y))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(tan(y))),audio(tan(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,y))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(sin(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(tan(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(tan(y))),audio(cos(externalVal),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio(y,cos(cos(externalVal))))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(tan(cos(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,y))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(y))",
            "b": "tan(sin(externalVal))",
            "g": "tan(cos(cos(x)))"
          }
        }
      ],
      "timestamp": "23h:55m:28s"
    },
    {
      "generation": 15,
      "ascendantID": "gdb8s962-hjft-bz9a-1hs5-ichgrzhzj7h8",
      "id": "t1s8zrmw-49jn-t9ch-nycf-tdeo1uukgba5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,audio(audio(x,sin(tan(y))),audio(sin(externalVal),cos(externalVal)))),audio(cos(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(tan(y))",
            "g": "audio(tan(tan(x)),tan(audio(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(cos(externalVal))",
            "g": "tan(cos(cos(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "audio(audio(x,audio(audio(x,sin(audio(y,y))),audio(audio(cos(externalVal),cos(externalVal)),sin(externalVal)))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(externalVal))",
            "b": "tan(cos(y))",
            "g": "audio(tan(tan(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,y))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(sin(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(audio(y,sin(externalVal)))),audio(tan(y),cos(externalVal)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(externalVal)),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        }
      ],
      "timestamp": "23h:55m:28s"
    },
    {
      "generation": 16,
      "ascendantID": "t1s8zrmw-49jn-t9ch-nycf-tdeo1uukgba5",
      "id": "y0s3xxnv-pv1w-qzqh-to40-jwcfrcaret34",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(tan(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,audio(audio(x,sin(audio(y,y))),audio(audio(cos(externalVal),cos(externalVal)),sin(externalVal)))),audio(sin(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(y))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(tan(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,sin(audio(y,x))),audio(cos(y),cos(y)))",
            "g": "tan(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,audio(audio(x,sin(tan(y))),audio(sin(externalVal),cos(externalVal)))),audio(cos(externalVal),cos(externalVal)))",
            "g": "cos(externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(externalVal))",
            "b": "tan(cos(y))",
            "g": "audio(audio(y,tan(cos(audio(externalVal,x)))),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(cos(externalVal))",
            "g": "audio(cos(cos(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(tan(y))",
            "g": "audio(tan(tan(x)),tan(audio(externalVal,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(y))",
            "b": "tan(cos(externalVal))",
            "g": "tan(cos(cos(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "cos(externalVal)",
            "g": "audio(x,cos(tan(sin(x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(y))",
            "b": "tan(externalVal)",
            "g": "audio(x,tan(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(x))",
            "b": "tan(externalVal)",
            "g": "audio(x,cos(audio(cos(x),externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(externalVal))",
            "b": "tan(cos(y))",
            "g": "audio(tan(tan(x)),audio(tan(y),cos(externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "audio(audio(x,cos(externalVal)),tan(tan(y)))",
            "g": "tan(externalVal)"
          }
        }
      ],
      "timestamp": "23h:55m:28s"
    }
  ],
  "timestamp": "2024-01-20-23-54-54"
}
{
  "id": "p4v5wgkc-6npn-pjru-visy-u8rn5x6ujm3r",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [
    {
      "generation": 0,
      "id": "rif1nq16-6mb3-bji7-dceg-68c8fng676o1",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/(audio(x,y)+min(tan(y),cos(y))))",
            "b": "(externalVal/(audio(y,0.877872)+min(tan(x),cos(y))))",
            "g": "(0.7596226/(audio(x,x)+min(tan(y),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,0.6890557)",
            "b": "max(x,externalVal)",
            "g": "max(x,0.15097499)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(externalVal,0.8892307)",
            "b": "min(x,externalVal)",
            "g": "min(externalVal,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(externalVal,externalVal)",
            "b": "min(0.51296234,x)",
            "g": "min(0.4647994,externalVal)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "externalVal",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(0.5745506))",
            "b": "cos(sin(externalVal))",
            "g": "cos(sin(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "0.3715651"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(((cos(externalVal)/(x-externalVal))/y))",
            "b": "cos(((cos(x)/(0.12498331-y))/x))",
            "g": "cos(((cos(x)/(y-y))/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(mod(x,y),y)",
            "b": "pow(mod(x,externalVal),x)",
            "g": "pow(mod(y,0.533273),0.8012748)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.0434072-0.25345325)",
            "b": "(0.03876233-externalVal)",
            "g": "(0.5572357-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(x,pow(noise(min(y,x),tan(cos((audio(x,(max((x/externalVal),mod(y,pow(0.33163285,0.6599455)))*y))/y)))),(0.9932542/externalVal)))",
            "b": "noise(x,pow(noise(min(0.093792915,y),tan(cos((audio(externalVal,(max((0.9154382/x),mod(y,pow(x,0.6649904)))*0.4976549))/x)))),(externalVal/externalVal)))",
            "g": "noise(externalVal,pow(noise(min(externalVal,0.850564),tan(cos((audio(y,(max((x/x),mod(y,pow(externalVal,x)))*x))/0.55267215)))),(x/externalVal)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/externalVal)),y)",
            "b": "mod(sin((y/0.27996325)),x)",
            "g": "mod(sin((x/y)),0.489038)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(x)/(min(y,externalVal)+y))",
            "b": "(cos(0.7972348)/(min(0.82760906,externalVal)+y))",
            "g": "(cos(x)/(min(0.27888465,y)+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos((y/y))*x)",
            "b": "(cos((y/externalVal))*y)",
            "g": "(cos((x/externalVal))*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((min(pow(min(externalVal,mod(audio(((x*pow(x,x))+y),x),x)),externalVal),externalVal)+sin(y)))",
            "b": "sin((min(pow(min(x,mod(audio(((x*pow(x,y))+x),0.2990296),externalVal)),externalVal),0.47430015)+sin(x)))",
            "g": "sin((min(pow(min(x,mod(audio(((x*pow(externalVal,0.60462046))+x),y),externalVal)),externalVal),externalVal)+sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(tan(0.47474074))",
            "b": "tan(tan(0.7420347))",
            "g": "tan(tan(externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,0.45158505)",
            "b": "pow(externalVal,y)",
            "g": "pow(externalVal,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.07187438",
            "b": "0.59469175",
            "g": "0.46987653"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(sin(0.13026881),((y*x)+x))*externalVal)/0.07803178)",
            "b": "((mod(sin(x),((x*x)+0.5498271))*externalVal)/0.3458984)",
            "g": "((mod(sin(0.18325758),((y*externalVal)+x))*y)/y)"
          }
        }
      ],
      "timestamp": "23h:20m:34s"
    },
    {
      "generation": 1,
      "ascendantID": "rif1nq16-6mb3-bji7-dceg-68c8fng676o1",
      "id": "rmg0keof-5esr-c4tu-kfwp-13zk6f2k0wcw",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/externalVal)),externalVal)",
            "b": "mod(sin((y/0.6498573)),x)",
            "g": "mod(sin((0.40838075/y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/(audio(x,y)+min(tan(y),cos(y))))",
            "b": "(externalVal/(audio(y,0.877872)+min(tan(x),cos(y))))",
            "g": "(0.7596226/(audio(x,x)+min(tan(y),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,0.6890557)",
            "b": "max(x,externalVal)",
            "g": "max(x,0.15097499)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((min(pow(max(externalVal,externalVal),y),externalVal)+sin(x)))",
            "b": "sin((min(pow(max(x,y),externalVal),0.4006954)+sin(x)))",
            "g": "sin((min(pow(max(x,0.40838075),externalVal),externalVal)+sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.24334195-0.25345325)",
            "b": "(0.50152487-externalVal)",
            "g": "(0.5371889-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(externalVal)",
            "b": "tan(0.51296234)",
            "g": "tan(0.4647994)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((cos(x)/(max(y,externalVal)+y)),externalVal)",
            "b": "mod((cos(0.9933964)/(max(0.82760906,externalVal)+y)),x)",
            "g": "mod((cos(x)/(max(0.27888465,externalVal)+x)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((cos(externalVal)/externalVal),y)",
            "b": "mod((cos(y)/externalVal),y)",
            "g": "mod((cos(0.40838075)/externalVal),0.14269222)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/externalVal)),externalVal)",
            "b": "mod(sin((y/0.6498573)),x)",
            "g": "mod(sin((0.40838075/y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.24334195-0.25345325)",
            "b": "(0.50152487-externalVal)",
            "g": "(0.5371889-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.07187438",
            "b": "0.59469175",
            "g": "0.46987653"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,0.6890557)",
            "b": "max(x,externalVal)",
            "g": "max(x,0.15097499)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(0.27137056,externalVal)",
            "b": "mod(externalVal,x)",
            "g": "mod(externalVal,0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x-0.25345325)",
            "b": "(0.4873383-externalVal)",
            "g": "(x-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((min(mod(min(externalVal,mod(audio(((x*pow(mod(x,x),y))+y),x),x)),y),externalVal)+sin(x)))",
            "b": "sin((min(mod(min(x,mod(audio(((x*pow(mod(y,externalVal),x))+x),0.68258905),externalVal)),externalVal),0.4006954)+sin(x)))",
            "g": "sin((min(mod(min(x,mod(audio(((x*pow(mod(y,0.36921746),x))+0.98330307),x),externalVal)),externalVal),externalVal)+sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.24334195-0.25345325)",
            "b": "(0.50152487-externalVal)",
            "g": "(0.5371889-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/externalVal)),externalVal)",
            "b": "mod(sin((y/0.6498573)),x)",
            "g": "mod(sin((0.40838075/y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(sin(0.13026881),((externalVal/x)+x))/externalVal)/0.07803178)",
            "b": "((mod(sin(x),((x/x)+0.5498271))/externalVal)/0.3458984)",
            "g": "((mod(sin(0.18325758),((y/externalVal)+x))/y)/y)"
          }
        }
      ],
      "timestamp": "23h:20m:41s"
    },
    {
      "generation": 2,
      "ascendantID": "rmg0keof-5esr-c4tu-kfwp-13zk6f2k0wcw",
      "id": "1e4gp260-facu-nl5w-63pw-k0ddptiwwanm",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/externalVal)),externalVal)",
            "b": "mod(sin((y/0.86449385)),x)",
            "g": "mod(sin((0.08429313/y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/(audio(x,y)+min(tan(y),cos(y))))",
            "b": "(externalVal/(audio(y,0.877872)+min(tan(x),cos(y))))",
            "g": "(0.7596226/(audio(x,x)+min(tan(y),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((cos(x)/(max(y,0.0)+y)),externalVal)",
            "b": "mod((cos(0.7594445)/(max(0.6488376,externalVal)+y)),x)",
            "g": "mod((cos(x)/(max(0.1261291,y)+x)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.22044915-0.0)",
            "b": "(0.3256926-externalVal)",
            "g": "(0.6329862-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.13263783",
            "b": "0.70198536",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal/externalVal)),externalVal)",
            "b": "pow(cos((y/0.86449385)),x)",
            "g": "pow(cos((0.08429313/y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(sin(0.10633087),((externalVal/y)+x))/externalVal)/0.4521282)",
            "b": "((mod(sin(x),((y/x)+0.5498271))/externalVal)/0.2586597)",
            "g": "((mod(sin(0.26635852),((y/externalVal)+x))/y)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((noise(sin(0.10633087),((externalVal/y)+x))/externalVal)/0.4521282)",
            "b": "((noise(sin(x),((y/x)+0.5498271))/externalVal)/0.2586597)",
            "g": "((noise(sin(0.26635852),((y/externalVal)+x))/y)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.13263783",
            "b": "0.70198536",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos(sin(externalVal)),externalVal)",
            "b": "pow(cos(sin(y)),x)",
            "g": "pow(cos(sin(0.08429313)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x-0.0)",
            "b": "(x-externalVal)",
            "g": "(y-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((max(mod(max(externalVal,externalVal),y),externalVal)-cos(x)))",
            "b": "sin((max(mod(max(x,y),externalVal),0.7999972)-cos(x)))",
            "g": "sin((max(mod(max(x,0.08429313),externalVal),externalVal)-cos(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.22044915+0.0)",
            "b": "(0.3256926+externalVal)",
            "g": "(0.6329862+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((min(pow(min(externalVal,externalVal),y),externalVal)-(x/y)))",
            "b": "sin((min(pow(min(x,y),externalVal),0.7999972)-(x/externalVal)))",
            "g": "sin((min(pow(min(x,0.08429313),externalVal),externalVal)-(x/0.25161147)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/externalVal)),externalVal)",
            "b": "mod(sin((y/0.86449385)),x)",
            "g": "mod(sin((0.08429313/y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.22044915-0.0)",
            "b": "(0.3256926-externalVal)",
            "g": "(0.6329862-y)"
          }
        }
      ],
      "timestamp": "23h:20m:43s"
    },
    {
      "generation": 3,
      "ascendantID": "1e4gp260-facu-nl5w-63pw-k0ddptiwwanm",
      "id": "9vh49m04-8sbf-qwh1-zbm2-64hjkcddj477",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/externalVal)),externalVal)",
            "b": "mod(sin((y/0.74171793)),x)",
            "g": "mod(sin((x/y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/(audio(x,y)+min(tan(y),cos(y))))",
            "b": "(externalVal/(audio(y,0.877872)+min(tan(x),cos(y))))",
            "g": "(0.7596226/(audio(x,x)+min(tan(y),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.18392658+0.019315302)",
            "b": "(0.404976+externalVal)",
            "g": "(x+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((min(pow(max(externalVal,externalVal),y),externalVal)-sin(externalVal)))",
            "b": "sin((min(pow(max(x,y),externalVal),0.7999972)-sin(y)))",
            "g": "sin((min(pow(max(x,x),y),externalVal)-sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(((externalVal/externalVal)/externalVal))",
            "b": "sin(((y/0.74171793)/externalVal))",
            "g": "sin(((x/y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.13263783",
            "b": "0.70198536",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.18392658-0.019315302)",
            "b": "(0.404976-externalVal)",
            "g": "(x-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((cos(x)*(max(y,0.019315302)-y)),externalVal)",
            "b": "mod((cos(0.7594445)*(max(0.6488376,externalVal)-x)),x)",
            "g": "mod((cos(x)*(max(0.1261291,y)-x)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.18392658-0.019315302)",
            "b": "(0.404976-externalVal)",
            "g": "(x-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(mod(sin(0.08032416),((externalVal/x)+x)))*0.6907623)",
            "b": "(sin(mod(sin(x),((y/x)+0.75118065)))*x)",
            "g": "(sin(mod(sin(0.0),((y/externalVal)+x)))*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(cos((externalVal/externalVal)),externalVal)",
            "b": "mod(cos((y/0.74171793)),x)",
            "g": "mod(cos((x/y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod((0.08032416/y),((externalVal*0.13263783)+x))/externalVal)/0.6907623)",
            "b": "((mod((x/y),((y*0.70198536)+0.75118065))/externalVal)/x)",
            "g": "((mod((0.0/0.31502286),((y*x)+x))/y)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(noise(sin(0.08032416),((externalVal/x)+x)))/0.6907623)",
            "b": "(sin(noise(sin(x),((y/x)+0.75118065)))/x)",
            "g": "(sin(noise(sin(0.0),((y/externalVal)+x)))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((min(pow(min(externalVal,externalVal),y),externalVal)*(x*y))/y)",
            "b": "((min(pow(min(x,y),externalVal),0.7999972)*(x*y))/externalVal)",
            "g": "((min(pow(min(x,x),y),externalVal)*(x*0.0))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(noise(sin(0.08032416),(x+x))))",
            "b": "sin(sin(noise(sin(x),(x+0.75118065))))",
            "g": "sin(sin(noise(sin(0.0),(x+x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin((externalVal/externalVal)),externalVal)",
            "b": "pow(sin((y/0.74171793)),x)",
            "g": "pow(sin((x/y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal*externalVal)),externalVal)",
            "b": "mod(sin((y*0.74171793)),x)",
            "g": "mod(sin((x*y)),0.42322454)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.13263783",
            "b": "0.70198536",
            "g": "x"
          }
        }
      ],
      "timestamp": "23h:20m:44s"
    },
    {
      "generation": 4,
      "ascendantID": "9vh49m04-8sbf-qwh1-zbm2-64hjkcddj477",
      "id": "wvdh1pwz-yjxv-wr4g-fme2-w7sj01b0r4z4",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/externalVal)),externalVal)",
            "b": "mod(sin((y/0.9286858)),x)",
            "g": "mod(sin((x/y)),0.94428635)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/(audio(x,y)+min(tan(y),cos(y))))",
            "b": "(externalVal/(audio(y,0.877872)+min(tan(x),cos(x))))",
            "g": "(0.46077314/(audio(x,x)+min(tan(y),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal*externalVal)),externalVal)",
            "b": "mod(sin((y*0.9286858)),x)",
            "g": "mod(sin((x*y)),0.94428635)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(3.6415458E-4-0.14094195)",
            "b": "(0.6134578-externalVal)",
            "g": "(x-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((noise(mod(tan(y),y),externalVal)-sin(externalVal)))",
            "b": "sin((noise(mod(tan(y),externalVal),0.40150476)-sin(y)))",
            "g": "sin((noise(mod(tan(x),y),externalVal)-sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((min(pow(max(y,externalVal),y),externalVal)-sin(externalVal)))",
            "b": "sin((min(pow(max(y,y),externalVal),0.40150476)-sin(y)))",
            "g": "sin((min(pow(max(x,x),y),externalVal)-sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.0",
            "b": "0.51338226",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((tan(x)/(min(y,0.14094195)-y)),externalVal)",
            "b": "mod((tan(0.7594445)/(min(0.6488376,externalVal)-x)),x)",
            "g": "mod((tan(x)/(min(0.1261291,y)-x)),0.94428635)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.0",
            "b": "0.51338226",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(mod(cos((externalVal/externalVal)),externalVal)))",
            "b": "sin(sin(mod(cos((y/0.9286858)),x)))",
            "g": "sin(sin(mod(cos((x/y)),0.94428635)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((externalVal/externalVal)/externalVal)/0.60278004)",
            "b": "(((y/0.9286858)/externalVal)/x)",
            "g": "(((x/y)/y)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.14094195)",
            "b": "sin(externalVal)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin(0.0),externalVal)",
            "b": "mod(sin(0.51338226),x)",
            "g": "mod(sin(x),0.94428635)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod((0.1305394*y),((externalVal*0.0)+x))/externalVal)/0.60278004)",
            "b": "((mod((y*x),((y*0.51338226)+0.7426501))/externalVal)/x)",
            "g": "((mod((0.0*0.075769335),((y*x)+x))/y)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(sin(0.1305394),(sin(externalVal)+x))/externalVal)-0.60278004)",
            "b": "((mod(sin(y),(sin(y)+0.7426501))/externalVal)-x)",
            "g": "((mod(sin(0.0),(sin(y)+x))/y)-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/(audio(x,y)+min(max(y,externalVal),cos(y))))",
            "b": "(externalVal/(audio(y,0.877872)+min(max(x,0.27978683),cos(x))))",
            "g": "(0.46077314/(audio(x,x)+min(max(y,x),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos((externalVal*externalVal)),externalVal)",
            "b": "pow(cos((y*0.9286858)),x)",
            "g": "pow(cos((x*y)),0.94428635)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((cos(x)*(min(y,0.14094195)-y)),externalVal)",
            "b": "mod((cos(0.7594445)*(min(0.6488376,externalVal)-x)),x)",
            "g": "mod((cos(x)*(min(0.1261291,y)-x)),0.94428635)"
          }
        }
      ],
      "timestamp": "23h:20m:45s"
    },
    {
      "generation": 5,
      "ascendantID": "wvdh1pwz-yjxv-wr4g-fme2-w7sj01b0r4z4",
      "id": "xpiwug1x-ywv6-8lz2-dr5s-mb25v70qzrgl",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/y)),externalVal)",
            "b": "mod(sin((y/0.3999717)),y)",
            "g": "mod(sin((x/y)),0.1627825)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(audio(x,y)+min(tan(y),cos(x))))",
            "b": "(externalVal/(audio(y,x)+min(tan(x),cos(x))))",
            "g": "(0.45530662/(audio(x,0.57429415)+min(tan(externalVal),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(audio(x,y)+min(tan(y),cos(x))))",
            "b": "(externalVal/(audio(x,x)+min(tan(x),cos(x))))",
            "g": "(0.45530662/(audio(y,0.57429415)+min(tan(externalVal),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((tan(0.99585825)/(0.0-y)),externalVal)",
            "b": "mod((tan(0.67688525)/(0.51338226-x)),y)",
            "g": "mod((tan(x)/(x-x)),0.1627825)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((noise(mod(audio(x,y),y),externalVal)*sin(externalVal)))",
            "b": "cos((noise(mod(audio(y,x),externalVal),x)*sin(y)))",
            "g": "cos((noise(mod(audio(x,0.57429415),y),y)*sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos(((noise(mod(tan(externalVal),y),externalVal)-sin(externalVal))*y)),externalVal)",
            "b": "pow(cos(((noise(mod(tan(y),externalVal),x)-sin(y))*0.3999717)),y)",
            "g": "pow(cos(((noise(mod(tan(x),y),y)-sin(x))*y)),0.1627825)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((noise(pow(max(externalVal,externalVal),y),externalVal)-sin(externalVal)))",
            "b": "sin((noise(pow(max(y,y),externalVal),x)-sin(y)))",
            "g": "sin((noise(pow(max(x,x),y),y)-sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise((cos(0.99585825)/(min(y,0.037014335)-y)),externalVal)",
            "b": "noise((cos(0.67688525)/(min(0.72045565,externalVal)-x)),y)",
            "g": "noise((cos(x)/(min(0.38900518,x)-x)),0.1627825)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.0",
            "b": "0.51338226",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((noise(mod(tan(externalVal),y),externalVal)-y))",
            "b": "sin((noise(mod(tan(y),externalVal),x)-externalVal))",
            "g": "sin((noise(mod(tan(x),y),y)-0.45530662))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((mod(sin(0.1305394),0.0)/externalVal)-0.60278004)",
            "b": "((mod(sin(y),0.51338226)/externalVal)-x)",
            "g": "((mod(sin(0.0),x)/y)-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.0",
            "b": "0.51338226",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(0.45530662)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(0.45530662)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((mod(mod(max(externalVal,externalVal),y),externalVal)-(externalVal/y)))",
            "b": "sin((mod(mod(max(y,y),externalVal),x)-(y/0.3999717)))",
            "g": "sin((mod(mod(max(x,x),y),y)-(x/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.0",
            "b": "0.51338226",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(pow(x,y)+min(max(y,externalVal),cos(x))))",
            "b": "(externalVal/(pow(y,x)+min(max(x,0.27978683),cos(x))))",
            "g": "(0.45530662/(pow(x,0.57429415)+min(max(externalVal,x),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(audio(x,y)+noise(max(y,externalVal),tan(x))))",
            "b": "(externalVal/(audio(y,x)+noise(max(x,0.27978683),tan(x))))",
            "g": "(0.45530662/(audio(x,0.57429415)+noise(max(externalVal,x),tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((noise(sin((externalVal*y)),externalVal)*(min(y,0.037014335)-y)),externalVal)",
            "b": "mod((noise(sin((y*0.3999717)),y)*(min(0.72045565,externalVal)-x)),y)",
            "g": "mod((noise(sin((x*y)),0.1627825)*(min(0.38900518,x)-x)),0.1627825)"
          }
        }
      ],
      "timestamp": "23h:20m:46s"
    },
    {
      "generation": 6,
      "ascendantID": "xpiwug1x-ywv6-8lz2-dr5s-mb25v70qzrgl",
      "id": "l816khai-24pk-ysxj-gtbp-9l8gslpal0hj",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(sin((externalVal/y)),externalVal)",
            "b": "mod(sin((y/0.29907233)),y)",
            "g": "mod(sin((x/x)),0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(audio(x,y)+min(tan(y),cos(x))))",
            "b": "(externalVal/(audio(y,0.6270764)+min(tan(0.84103924),cos(y))))",
            "g": "(0.6308522/(audio(x,0.36592156)+min(tan(y),cos(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(pow(x,y)+max(max(y,externalVal),tan(x))))",
            "b": "(externalVal/(pow(y,0.6270764)+max(max(0.84103924,0.27978683),tan(y))))",
            "g": "(0.6308522/(pow(x,0.36592156)+max(max(y,x),tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(externalVal)",
            "g": "sin(0.6308522)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(cos((sin(y)/y)),externalVal)",
            "b": "noise(cos((sin(externalVal)/0.29907233)),y)",
            "g": "noise(cos((sin(0.6308522)/x)),0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.09925589",
            "b": "0.6295209",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((mod(pow(max(externalVal,externalVal),y),externalVal)-sin(externalVal)))",
            "b": "sin((mod(pow(max(y,y),externalVal),0.8693832)-sin(y)))",
            "g": "sin((mod(pow(max(0.72436684,x),y),externalVal)-sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((noise(((externalVal*y)/externalVal),externalVal)*(max(y,0.0)-y)),externalVal)",
            "b": "mod((noise(((y*0.29907233)/externalVal),y)*(max(0.54409677,externalVal)-x)),y)",
            "g": "mod((noise(((x*x)/externalVal),0.0)*(max(0.32025808,y)-x)),0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin(y),externalVal)",
            "b": "pow(sin(externalVal),y)",
            "g": "pow(sin(y),0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(pow(x,y)-min(tan(y),sin(0.09925589))))",
            "b": "(externalVal/(pow(y,0.6270764)-min(tan(0.84103924),sin(0.6295209))))",
            "g": "(0.6308522/(pow(x,0.36592156)-min(tan(y),sin(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(pow(x,y)+noise(max(y,externalVal),tan(x))))",
            "b": "(externalVal/(pow(y,0.6270764)+noise(max(0.84103924,0.27978683),tan(y))))",
            "g": "(0.6308522/(pow(x,0.36592156)+noise(max(y,x),tan(y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x-y))",
            "b": "sin((x-externalVal))",
            "g": "sin((x-0.6308522))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((noise(cos(0.09925589),externalVal)*(noise(y,0.0)-y)),externalVal)",
            "b": "mod((noise(cos(0.6295209),y)*(noise(0.54409677,externalVal)-x)),y)",
            "g": "mod((noise(cos(y),0.0)*(noise(0.32025808,y)-x)),0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos(((noise(mod(tan(externalVal),y),externalVal)-sin(externalVal))*y)),externalVal)",
            "b": "pow(cos(((noise(mod(tan(y),externalVal),0.8693832)-sin(y))*0.29907233)),y)",
            "g": "pow(cos(((noise(mod(tan(0.72436684),y),externalVal)-sin(x))*x)),0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.09925589",
            "b": "0.6295209",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((tan(x)/(0.09925589-y)),externalVal)",
            "b": "mod((tan(0.7085746)/(0.6295209-x)),y)",
            "g": "mod((tan(x)/(y-x)),0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(sin(externalVal),externalVal)",
            "b": "pow(sin(y),y)",
            "g": "pow(sin(0.0),0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/(audio(x,y)+min(tan(y),sin(x))))",
            "b": "(externalVal/(audio(x,0.6270764)+min(tan(0.84103924),sin(y))))",
            "g": "(0.6308522/(audio(x,0.36592156)+min(tan(y),sin(y))))"
          }
        }
      ],
      "timestamp": "23h:20m:49s"
    }
  ],
  "timestamp": "2024-03-18-23-20-32"
}
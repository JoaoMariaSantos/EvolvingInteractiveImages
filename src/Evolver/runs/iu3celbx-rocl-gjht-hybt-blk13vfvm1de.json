{
  "id": "iu3celbx-rocl-gjht-hybt-blk13vfvm1de",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "bbsop0ns-ioqi-syvd-m4vk-6v8gb67r94zg",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "0.4067613"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(0.3329653)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.76314926",
            "b": "0.259753",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.5915283",
            "b": "0.043943524",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var((0.33608294*min(y,x)))",
            "b": "var((y*min(x,0.2251398)))",
            "g": "var((x*min(0.05302334,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(bri(mod(0.89520246,x),0.44859624),x)",
            "b": "max(bri(mod(0.9904298,x),0.6642092),y)",
            "g": "max(bri(mod(y,0.70398957),y),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.23705828",
            "b": "0.90271443",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.4899119"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(noi(0.9794567,0.41835344),x),y)",
            "b": "pow(pow(noi(x,x),y),0.07896048)",
            "g": "pow(pow(noi(x,0.6247462),0.4223308),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(aud((y-y),max(0.029773057,x)),0.67465264)",
            "b": "pow(aud((0.5973138-y),max(x,0.8935477)),0.7840803)",
            "g": "pow(aud((0.059018612-y),max(y,0.44382387)),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6075234",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.29700547",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noi(0.19049549,0.84489226))",
            "b": "tan(noi(x,0.31151515))",
            "g": "tan(noi(y,0.3535577))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(noi(0.35381377,(x/0.4692911)),var(x))",
            "b": "min(noi(x,(0.9394371/y)),var(x))",
            "g": "min(noi(0.50582993,(x/x)),var(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(pow(cos(0.82064384),(x*0.63123983)))",
            "b": "var(pow(cos(y),(y*y)))",
            "g": "var(pow(cos(y),(0.6867258*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noi(x,x)",
            "b": "noi(0.13477135,0.3288617)",
            "g": "noi(y,0.58612865)"
          }
        }
      ],
      "timestamp": "19h:44m:58s"
    },
    {
      "generation": 0,
      "ascendantID": "bbsop0ns-ioqi-syvd-m4vk-6v8gb67r94zg",
      "id": "117t4d0b-fxsb-bppv-4w9o-onhlaa94lg3w",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*((x-0.9529402)/y))",
            "b": "(0.28353238*((x-y)/y))",
            "g": "(y*((0.90164673-y)/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.07134497",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "aud(((x-0.6370302)+x),max(0.50967604,y))",
            "b": "aud(((x-0.7795045)+0.6337813),max(x,y))",
            "g": "aud(((y-0.8975344)+x),max(y,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((cos(y)-x))",
            "b": "tan((cos(y)-y))",
            "g": "tan((cos(0.18663722)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(((x-x)/0.981362))",
            "b": "tan(((x-y)/y))",
            "g": "tan(((x-x)/0.80109876))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(min(tan(y),0.4461617))",
            "b": "var(min(tan(x),y))",
            "g": "var(min(tan(0.588006),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "aud((cos(0.9654468)*0.88863534),x)",
            "b": "aud((cos(x)*0.3414951),x)",
            "g": "aud((cos(0.87994534)*x),0.02787906)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(bri((y*0.01365906),sin(y)),sin(x))",
            "b": "bri(bri((x*0.43031752),sin(x)),sin(y))",
            "g": "bri(bri((x*x),sin(0.5431568)),sin(0.7738298))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(0.62799436)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.3962978",
            "b": "y",
            "g": "0.6445268"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/0.758695)",
            "b": "(y/0.71340877)",
            "g": "(0.999373/0.21137506)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9074655",
            "g": "0.2652347"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(max(y,(0.9342229-y)))",
            "b": "sin(max(y,(x-0.0724318)))",
            "g": "sin(max(x,(0.3875656-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "0.045863986"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.84330153",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.6920641)",
            "b": "sin(y)",
            "g": "sin(0.77579194)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.016624331",
            "g": "0.97604513"
          }
        }
      ],
      "timestamp": "19h:45m:29s"
    },
    {
      "generation": 0,
      "ascendantID": "117t4d0b-fxsb-bppv-4w9o-onhlaa94lg3w",
      "id": "jspcyyd2-cj3v-2lnk-lott-rhlc6ashzg71",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "var(var(y))",
            "b": "var(var(x))",
            "g": "var(var(0.522136))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(tan(x),(0.31188476+0.28439087))",
            "b": "min(tan(y),(0.3534565+x))",
            "g": "min(tan(x),(x+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/0.88775504)",
            "b": "(x/0.978126)",
            "g": "(0.19799048/0.63450927)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(aud((x*x),(0.92970425-y)))",
            "b": "var(aud((x*0.7772357),(y-0.5618895)))",
            "g": "var(aud((x*y),(x-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "aud(x,y)",
            "b": "aud(y,x)",
            "g": "aud(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "cos(x)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/0.27664322)",
            "b": "(x/y)",
            "g": "(0.64873785/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(x,x)",
            "b": "bri(0.31790864,0.19933462)",
            "g": "bri(x,0.7747321)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(cos(0.23441738),x)*aud((x+x),max(y,y)))",
            "b": "(max(cos(y),x)*aud((x+y),max(x,y)))",
            "g": "(max(cos(0.4055645),y)*aud((x+y),max(x,0.5850865)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.12988383",
            "b": "0.95758617",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(0.9980144)*((x*y)*cos(x)))",
            "b": "(tan(x)*((0.6674965*0.44228142)*cos(0.41677022)))",
            "g": "(tan(y)*((x*0.87059444)*cos(0.70475525)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.45813632",
            "b": "0.89060104",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(tan(0.63991123)))",
            "b": "cos(cos(tan(x)))",
            "g": "cos(cos(tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.0010181665",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "aud(bri(var(x),var(0.45107085)),y)",
            "b": "aud(bri(var(0.41912377),var(x)),y)",
            "g": "aud(bri(var(y),var(y)),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.24841815",
            "g": "0.7408299"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(x)",
            "g": "var(x)"
          }
        }
      ],
      "timestamp": "19h:45m:35s"
    },
    {
      "generation": 0,
      "ascendantID": "jspcyyd2-cj3v-2lnk-lott-rhlc6ashzg71",
      "id": "ivwayjo3-gokj-xzt6-jicx-g6yb4t4zrax5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x/y)*x)-y)",
            "b": "(((y/x)*0.9557285)-y)",
            "g": "(((y/x)*y)-0.009849966)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x-0.48240173)+x)",
            "b": "((y-y)+x)",
            "g": "((x-y)+0.668382)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.49728942+0.36382663)*(sin(y)/(0.76274693*y)))",
            "b": "((0.15143555+x)*(sin(y)/(0.55098295*x)))",
            "g": "((x+y)*(sin(y)/(x*y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.44392723",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x/x)-y)+((x*x)+x))",
            "b": "(((y/0.12521589)-0.0243271)+((0.48451406*y)+y))",
            "g": "(((x/x)-x)+((y*x)+0.026629329))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin((0.9091555/0.39202434))*y)",
            "b": "(sin((0.8149561/y))*x)",
            "g": "(sin((x/x))*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((y*y)/0.97290015)",
            "b": "((y*0.27511185)/x)",
            "g": "((y*y)/0.93396306)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.98695886+0.09714246)/0.6093505)-0.38940918)",
            "b": "(((x+y)/y)-x)",
            "g": "(((0.4678924+0.92590284)/x)-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "0.6793969"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((y/(x-0.8281297))+((y+x)/(y/x)))",
            "b": "((x/(x-0.33949846))+((y+y)/(0.92323977/0.9901639)))",
            "g": "((y/(x-y))+((x+x)/(0.35712308/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((y*x)/sin(x))-sin((0.15820974*x)))",
            "b": "(((y*0.29840595)/sin(x))-sin((0.546769*x)))",
            "g": "(((0.71008873*y)/sin(y))-sin((0.21888828*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((y+(0.35812175-0.46995252)))",
            "b": "sin((x+(x-0.24731201)))",
            "g": "sin((x+(0.044324398-0.4950986)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x/x)+(x*0.9662669))/((y*y)-x))",
            "b": "(((y/y)+(y*y))/((x*x)-x))",
            "g": "(((x/y)+(x*y))/((0.8705043*x)-0.6907618))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x/0.76041394)*y)*(sin(0.9522371)/(y/x)))",
            "b": "(((0.9147915/0.19848937)*0.25194848)*(sin(0.96868426)/(y/x)))",
            "g": "(((x/x)*x)*(sin(x)/(x/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((y-0.33603358)*x)*(0.9662515-(x-0.17268902)))",
            "b": "(((0.5131368-x)*y)*(y-(x-y)))",
            "g": "(((0.65332085-0.4246112)*y)*(x-(x-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "x"
          }
        }
      ],
      "timestamp": "19h:46m:44s"
    },
    {
      "generation": 0,
      "ascendantID": "ivwayjo3-gokj-xzt6-jicx-g6yb4t4zrax5",
      "id": "rlvbur8r-35ca-sfm7-t4r2-jzgof3fdryz0",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(0.24213248+x)",
            "g": "(x+0.88353574)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.28146207",
            "b": "x",
            "g": "0.62370837"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x/x)-0.8130793)/x)",
            "b": "(((y/y)-y)/x)",
            "g": "(((y/x)-y)/0.85771465)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.511545",
            "b": "0.5602117",
            "g": "0.9633411"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.4727803",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.4120853+sin(x))",
            "b": "(y+sin(x))",
            "g": "(y+sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((sin(x)-x))",
            "b": "sin((sin(x)-0.7852369))",
            "g": "sin((sin(x)-y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x+0.2005772)-y)",
            "b": "((0.45997024+x)-y)",
            "g": "((0.029263258+y)-0.97101474)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.7113374+0.8977901)+0.35431695)+0.17327482)",
            "b": "(((0.0717718+x)+0.41340888)+0.73036695)",
            "g": "(((x+y)+x)+0.40201324)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6321339",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*x)",
            "b": "(y*x)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((sin(y)*(y*y)))",
            "b": "sin((sin(0.1025337)*(y*0.8601483)))",
            "g": "sin((sin(0.6956066)*(0.9380892*y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(0.27244592)*(sin(y)*(x/x)))",
            "b": "(sin(y)*(sin(0.23447889)*(x/y)))",
            "g": "(sin(0.85695827)*(sin(0.26263386)*(0.5268291/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.8459392*y)",
            "b": "(y*y)",
            "g": "(0.40420246*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.22091138",
            "b": "x",
            "g": "0.5085148"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(0.15040058)*x)*(sin(y)*x))",
            "b": "((sin(x)*0.74600065)*(sin(x)*x))",
            "g": "((sin(0.87840164)*y)*(sin(y)*0.89645344))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.23012227"
          }
        }
      ],
      "timestamp": "19h:47m:39s"
    },
    {
      "generation": 1,
      "ascendantID": "rlvbur8r-35ca-sfm7-t4r2-jzgof3fdryz0",
      "id": "16kq3iq7-ppj7-qgew-5kyx-t8srw9rw5i1j",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(0.24213248+x)",
            "g": "(x+0.88353574)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.28146207",
            "b": "x",
            "g": "0.62370837"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x+0.10707052)-y)",
            "b": "((0.22148417+x)-y)",
            "g": "((0.029263258+x)-0.97101474)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6321339",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(y)+0.26941824)+0.17327482)",
            "b": "((sin(y)+0.2432212)+0.73036695)",
            "g": "((sin(y)+x)+0.40201324)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x+0.2005772)*y)",
            "b": "((0.4204108+x)*y)",
            "g": "((0.0+y)*0.97101474)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.23012227"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((sin(y)+0.8977901)+0.35431695)+0.17327482)",
            "b": "(((sin(0.1025337)+x)+0.41340888)+0.71688676)",
            "g": "(((sin(0.5780505)+y)+x)+0.40201324)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.36540723",
            "b": "x",
            "g": "0.7661574"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.28146207",
            "b": "x",
            "g": "0.62370837"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(((sin(y)/0.4280643)*(sin(x)/x)))",
            "b": "sin(((sin(y)/y)*(sin(x)/0.4832182)))",
            "g": "sin(((sin(x)/y)*(sin(y)/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(0.27244592)*(sin(y)*((((y-x)/(x-x))+y)/x)))",
            "b": "(sin(y)*(sin(0.27849078)*((((x-0.95126474)/(y-x))+y)/y)))",
            "g": "(sin(0.949255)*(sin(0.26263386)*((((x-x)/(0.08736098-y))+y)/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(((x*x)+x))+0.35431695)+0.0)",
            "b": "((sin(((x*x)+0.6170572))+0.41340888)+x)",
            "g": "((sin(((0.31317097*y)+y))+x)+0.23071857)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*x)",
            "b": "(y*x)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*x)",
            "b": "(y*x)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.22091138)",
            "b": "sin(x)",
            "g": "sin(0.74397016)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.28146207",
            "b": "x",
            "g": "0.62370837"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.6200754-0.35431695)+0.17327482)",
            "b": "((y-0.41340888)+0.73036695)",
            "g": "((0.91185737-x)+0.40201324)"
          }
        }
      ],
      "timestamp": "19h:47m:52s"
    },
    {
      "generation": 2,
      "ascendantID": "16kq3iq7-ppj7-qgew-5kyx-t8srw9rw5i1j",
      "id": "48xv0rv3-3ct2-l8zm-32n9-v19ph3akleoh",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(0.24213248+x)",
            "g": "(x+0.88353574)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.28146207",
            "b": "x",
            "g": "0.62370837"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.27244592/x)*(sin(y)*((((y+x)/(0.8102299-x))+y)/x)))",
            "b": "((y/x)*(sin(0.27849078)*((((x+0.7038423)/(0.6053145-x))+y)/y)))",
            "g": "((0.949255/y)*(sin(0.41319716)*((((x+x)/(x-y))+y)/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*x)",
            "b": "(x*x)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((((y/x)+(0.25834447*((y/0.511481)+sin(x))))+0.35431695)+0.17327482)",
            "b": "((((0.1025337/0.13634706)+(0.985791*((x/x)+sin(0.1609751))))+0.41340888)+0.71688676)",
            "g": "((((0.5780505/0.0)+(x*((x/0.015850961)+sin(x))))+x)+0.40201324)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.39436698",
            "b": "x",
            "g": "0.5367859"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.6200754+0.35431695)+0.14846462)",
            "b": "((y+0.41340888)+0.76515865)",
            "g": "((0.91185737+y)+0.103573255)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.11321619"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.28146207",
            "b": "x",
            "g": "0.62370837"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.23012227"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((((sin(((x*x)+x))-0.35431695)+0.0)+0.12871563)-y)",
            "b": "((((sin(((x*x)+0.6170572))-0.41340888)+x)+x)-y)",
            "g": "((((sin(((0.22691672*y)+y))-y)+0.23071857)+y)-0.97101474)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.36540723",
            "b": "x",
            "g": "0.7661574"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.14243981",
            "b": "x",
            "g": "0.7979096"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(((x*x)+x))+0.35431695)+0.0)",
            "b": "((sin(((x*x)+0.8187722))+0.41340888)+x)",
            "g": "((sin(((0.31317097*y)+y))+x)+0.23071857)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(0.24213248+x)",
            "g": "(x+0.88353574)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(sin(0.548766))+0.2005772)-y)",
            "b": "((sin(sin(x))+x)-y)",
            "g": "((sin(sin(x))+y)-0.7908999)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(0.24213248+x)",
            "g": "(x+0.7954081)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x-0.35431695)+0.17327482)",
            "b": "((x-0.41340888)+0.73036695)",
            "g": "((y-x)+0.40201324)"
          }
        }
      ],
      "timestamp": "19h:48m:15s"
    },
    {
      "generation": 0,
      "ascendantID": "48xv0rv3-3ct2-l8zm-32n9-v19ph3akleoh",
      "id": "frzpltdy-fwon-o13h-iopb-mtwxhjsk1qzj",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.010194719"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "+(+(+(y)))",
            "b": "+(+(+(x)))",
            "g": "+(+(+(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5299199",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "+(+(+(x)))",
            "b": "+(+(+(x)))",
            "g": "+(+(+(0.96161467)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "+(x)",
            "b": "+(x)",
            "g": "+(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.20128155",
            "b": "y",
            "g": "0.70235735"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.19739342",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6548787",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "+(+(+(x)))",
            "b": "+(+(+(y)))",
            "g": "+(+(+(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.002868712",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "+(+(+(y)))",
            "b": "+(+(+(y)))",
            "g": "+(+(+(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "+(x)",
            "b": "+(y)",
            "g": "+(0.47235507)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "+(+(0.6952892))",
            "b": "+(+(x))",
            "g": "+(+(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "+(y)",
            "b": "+(x)",
            "g": "+(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9021383",
            "b": "0.34517652",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "+(+(0.18143052))",
            "b": "+(+(x))",
            "g": "+(+(y))"
          }
        }
      ],
      "timestamp": "19h:48m:27s"
    }
  ],
  "timestamp": "2024-05-04-19-44-55"
}
{
  "id": "e1vxbf0x-5ys4-azo2-fhiz-wsd282omm1x5",
  "parameters": {
    "crossoverRate": 0.5,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.4000000059604645,
    "populationSize": 20
  },
  "populations": [{
    "generation": 0,
    "id": "wz3b1yjd-kki0-bb91-vnmq-lftk9werjowc",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(audio(cos(externalVal),pow(x,x)),x)",
          "b": "pow(audio(cos(x),pow(0.025539875,0.025539875)),x)",
          "g": "pow(audio(cos(0.3888111),pow(x,x)),0.5047014)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod(externalVal,externalVal)",
          "b": "mod(externalVal,externalVal)",
          "g": "mod(x,x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(x,bri((noise(audio(externalVal,externalVal),0.0021178722)+y),y))",
          "b": "pow(x,bri((noise(audio(y,y),y)+externalVal),externalVal))",
          "g": "pow(x,bri((noise(audio(externalVal,externalVal),y)+externalVal),x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(0.3416257)",
          "b": "cos(externalVal)",
          "g": "cos(x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "audio(0.045870304,0.045870304)",
          "b": "audio(y,y)",
          "g": "audio(externalVal,externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod((0.8823323+min(bri(audio(audio(tan(sin(y)),cos(pow(bri((0.9037826-bri(externalVal,sin(externalVal))),x),tan((mod(0.026936293,tan(x))*mod(x,x)))))),externalVal),externalVal),x)),min(externalVal,externalVal))",
          "b": "mod((y+min(bri(audio(audio(tan(sin(y)),cos(pow(bri((y-bri(x,sin(y))),x),tan((mod(externalVal,tan(externalVal))*mod(y,y)))))),x),x),0.70761514)),min(x,x))",
          "g": "mod((0.5197754+min(bri(audio(audio(tan(sin(x)),cos(pow(bri((externalVal-bri(0.5726204,sin(0.8363991))),externalVal),tan((mod(y,tan(x))*mod(x,x)))))),x),externalVal),x)),min(x,x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(y-max(max((y+cos((max((0.999583-cos(0.66453457)),audio(noise(max(x,tan(pow((min((noise(cos(min(sin(mod(bri(bri((x*cos(x)),audio((externalVal/externalVal),audio(min(y,y),pow(0.82073784,pow(0.8260009,0.8260009))))),max(x,bri(0.47471166,cos((0.8386829/0.8386829))))),x)),min((min(x,x)+noise((externalVal/audio((y+y),y)),0.7412541)),y))),min(x,min(x,x)))+min((externalVal-noise(audio((y/pow(externalVal,externalVal)),audio(tan(y),bri(x,x))),0.036569357)),max(externalVal,externalVal))),max(tan(0.37425518),(0.45004725-0.45004725)))/tan(externalVal)),mod((((mod(0.19189787,(x/x))/externalVal)+0.33788705)+y),y)))),externalVal),noise(tan(y),y)))-cos(x)))),sin(y)),bri(sin(x),pow(((pow(y,y)+pow(max(x,x),max(y,y)))*x),y))))",
          "b": "(x-max(max((externalVal+cos((max((externalVal-cos(externalVal)),audio(noise(max(x,tan(pow((min((noise(cos(min(sin(mod(bri(bri((0.6869066*cos(0.20143652)),audio((0.8218329/0.8218329),audio(min(x,x),pow(externalVal,pow(x,x))))),max(0.110440016,bri(0.86329174,cos((externalVal/externalVal))))),x)),min((min(y,y)+noise((0.6617451/audio((x+x),x)),x)),0.70191836))),min(0.22648406,min(0.13084912,0.13084912)))+min((externalVal-noise(audio((externalVal/pow(x,x)),audio(tan(0.51073647),bri(0.27131367,0.27131367))),externalVal)),max(externalVal,externalVal))),max(tan(x),(externalVal-externalVal)))/tan(x)),mod((((mod(0.86723065,(x/x))/0.7727027)+y)+0.65882206),y)))),x),noise(tan(x),0.53789234)))-cos(externalVal)))),sin(x)),bri(sin(0.90325475),pow(((pow(0.11341858,0.11341858)+pow(max(x,x),max(0.5066421,0.5066421)))*x),y))))",
          "g": "(0.7179463-max(max((externalVal+cos((max((0.9913688-cos(0.21325707)),audio(noise(max(0.9912381,tan(pow((min((noise(cos(min(sin(mod(bri(bri((x*cos(y)),audio((externalVal/externalVal),audio(min(externalVal,externalVal),pow(0.9680457,pow(y,y))))),max(externalVal,bri(y,cos((y/y))))),x)),min((min(0.5644069,0.5644069)+noise((0.7230327/audio((0.31335378+0.31335378),externalVal)),y)),0.9523816))),min(y,min(y,y)))+min((x-noise(audio((x/pow(0.16439915,0.16439915)),audio(tan(0.38257122),bri(externalVal,externalVal))),0.2090087)),max(externalVal,externalVal))),max(tan(x),(y-y)))/tan(0.35462546)),mod((((mod(externalVal,(y/y))/0.5175743)+y)+externalVal),y)))),externalVal),noise(tan(x),externalVal)))-cos(0.035027504)))),sin(x)),bri(sin(externalVal),pow(((pow(externalVal,externalVal)+pow(max(y,y),max(externalVal,externalVal)))*y),y))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(y)",
          "b": "cos(externalVal)",
          "g": "cos(x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "bri(max(audio(noise(externalVal,externalVal),(audio(0.59597206,mod(pow(externalVal,max(0.36068678,0.36068678)),externalVal))+x)),externalVal),x)",
          "b": "bri(max(audio(noise(externalVal,externalVal),(audio(x,mod(pow(x,max(x,x)),x))+y)),externalVal),externalVal)",
          "g": "bri(max(audio(noise(0.6041956,0.6041956),(audio(externalVal,mod(pow(y,max(0.4771216,0.4771216)),externalVal))+y)),y),0.55930424)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(tan(0.19928908)+bri(x,tan(min(bri(externalVal,externalVal),y))))",
          "b": "(tan(externalVal)+bri(x,tan(min(bri(externalVal,externalVal),externalVal))))",
          "g": "(tan(0.6251347)+bri(externalVal,tan(min(bri(externalVal,externalVal),externalVal))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "max(0.0955019,0.0955019)",
          "b": "max(externalVal,externalVal)",
          "g": "max(0.62750554,0.62750554)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(0.9721911)",
          "b": "tan(y)",
          "g": "tan(0.57762694)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "bri(x,(y/cos(0.709038)))",
          "b": "bri(0.85270715,(x/cos(x)))",
          "g": "bri(x,(y/cos(x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "audio(externalVal,externalVal)",
          "b": "audio(0.02005887,0.02005887)",
          "g": "audio(0.5789304,0.5789304)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "min(x,x)",
          "b": "min(y,y)",
          "g": "min(x,x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(0.06379175,0.06379175)",
          "b": "noise(0.70640635,0.70640635)",
          "g": "noise(externalVal,externalVal)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(pow(pow(y,max((noise(sin(externalVal),sin(x))/tan(x)),0.8841486)),pow(cos(x),mod(externalVal,externalVal)))+(max(noise(externalVal,(x+noise((max(y,pow(min(bri(y,cos(max(x,x))),0.17254138),cos(sin(x))))+0.3704567),0.12565494))),0.21969748)*externalVal))",
          "b": "(pow(pow(externalVal,max((noise(sin(x),sin(y))/tan(externalVal)),externalVal)),pow(cos(0.21094704),mod(0.62747383,0.62747383)))+(max(noise(externalVal,(y+noise((max(0.2609589,pow(min(bri(externalVal,cos(max(0.08846927,0.08846927))),y),cos(sin(y))))+x),0.39832044))),externalVal)*y))",
          "g": "(pow(pow(externalVal,max((noise(sin(0.081513405),sin(y))/tan(externalVal)),x)),pow(cos(x),mod(externalVal,externalVal)))+(max(noise(externalVal,(y+noise((max(y,pow(min(bri(y,cos(max(0.16687536,0.16687536))),x),cos(sin(externalVal))))+x),x))),externalVal)*x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(externalVal+(0.6521833/noise(y,y)))",
          "b": "(externalVal+(y/noise(x,x)))",
          "g": "(0.27438354+(y/noise(x,x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "(audio((externalVal*(x*min(tan(externalVal),y))),noise(noise(y,y),0.12128925))-(x*min(pow(y,y),(externalVal*externalVal))))",
          "b": "(audio((x*(y*min(tan(x),x))),noise(noise(0.44593954,0.44593954),0.30087686))-(x*min(pow(externalVal,externalVal),(x*x))))",
          "g": "(audio((externalVal*(x*min(tan(y),y))),noise(noise(externalVal,externalVal),x))-(0.17525053*min(pow(externalVal,externalVal),(y*y))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(0.76899815)",
          "b": "cos(x)",
          "g": "cos(x)"
        }
      }
    ],
    "timestamp": "22h:30m:41s"
  }],
  "timestamp": "2024-03-18-22-30-40"
}
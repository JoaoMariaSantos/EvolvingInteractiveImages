{
  "id": "j78pw8nn-mtdv-rgnq-keb9-c9sotymzyiws",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "e8zl615g-3qfa-29zx-1blz-40ovsztjrlbj",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(y,var(y)))",
            "b": "cos(min(y,var(x)))",
            "g": "cos(min(y,var(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.3347252",
            "b": "0.65075326",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(x)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod((pow(0.9649626,0.21886396)*y),bri(x,min(0.12451726,y)))",
            "b": "mod((pow(0.30039364,x)*x),bri(x,min(x,y)))",
            "g": "mod((pow(y,y)*y),bri(x,min(0.105090916,0.16498679)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var(cos(y))+((x*y)-x))",
            "b": "(var(cos(y))+((y*x)-0.071516454))",
            "g": "(var(cos(y))+((y*0.38492614)-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri((pow(x,0.65821606)*y),(x/min(0.40019685,y)))",
            "b": "bri((pow(y,y)*0.131881),(y/min(y,x)))",
            "g": "bri((pow(0.939544,x)*0.22875613),(0.748979/min(y,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.5392197)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.36150098",
            "b": "x",
            "g": "0.48666483"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud(y,y)+sin((0.24086988+y)))",
            "b": "(aud(x,x)+sin((x+0.5151837)))",
            "g": "(aud(x,0.3659429)+sin((x+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((max(x,y)-sin(x))-aud((0.76801425*y),(x*y)))",
            "b": "((max(0.26776457,0.37590784)-sin(0.9530881))-aud((x*y),(0.87267315*y)))",
            "g": "((max(x,0.9216392)-sin(y))-aud((y*x),(0.87850463*y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(var(aud(y,x)))",
            "b": "sin(var(aud(x,y)))",
            "g": "sin(var(aud(x,0.25225943)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.73571277-0.48816454)*0.38015753)",
            "b": "((x-x)*0.5624964)",
            "g": "((x-0.19527394)*0.66284215)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-0.59492594)",
            "b": "(x-y)",
            "g": "(0.5123631-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5506511",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var((bri(y,x)*(0.11413121+y)))",
            "b": "var((bri(x,x)*(0.08305228+0.2382989)))",
            "g": "var((bri(0.18015397,0.4203871)*(y+0.7821357)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(x)-(x-tan(x)))",
            "b": "(cos(y)-(y-tan(x)))",
            "g": "(cos(y)-(0.4753291-tan(y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(y)",
            "g": "sin(x)"
          }
        }
      ],
      "timestamp": "21h:10m:21s"
    },
    {
      "generation": 1,
      "ascendantID": "e8zl615g-3qfa-29zx-1blz-40ovsztjrlbj",
      "id": "8e54qcdj-8nb1-she8-1it4-fr1am9wpuaj0",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(y,var(y)))",
            "b": "cos(min(y,var(x)))",
            "g": "cos(min(y,var(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.3347252",
            "b": "0.65075326",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((((y*x)+var(x))-aud(sin(y),y)))",
            "b": "cos((((x*x)+var(0.4520597))-aud(sin(y),x)))",
            "g": "cos((((y*y)+var(y))-aud(sin(y),x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud(y,y)+tan((y*y)))",
            "b": "(aud(x,x)+tan((x*0.326042)))",
            "g": "(aud(x,0.3659429)+tan((y*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5506511",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.5392197)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var(min(y,((y-y)-0.9581584)))/y)",
            "b": "(var(min(y,((x-0.6888136)-0.42858464)))/0.41846234)",
            "g": "(var(min(x,((0.19020474-x)-0.19499946)))/0.17314252)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-0.59492594)",
            "b": "(x-y)",
            "g": "(0.5123631-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.3347252",
            "b": "0.781093",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.36150098",
            "b": "x",
            "g": "0.48666483"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.5392197)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(y)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.7114663",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.5392197)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.73571277-0.48816454)/0.64909816)",
            "b": "((x-x)/0.32133746)",
            "g": "((x-0.19527394)/0.66284215)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "aud((cos(x)-(x+tan(x))),y)",
            "b": "aud((cos(y)-(y+tan(x))),x)",
            "g": "aud((cos(y)-(0.4753291+tan(y))),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.4828391*pow(cos(x),0.078386486))-0.59492594)",
            "b": "((0.19544846*pow(cos(0.92195857),y))-y)",
            "g": "((y*pow(cos(0.40200055),0.092810154))-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.5392197)",
            "g": "cos(y)"
          }
        }
      ],
      "timestamp": "21h:12m:1s"
    },
    {
      "generation": 2,
      "ascendantID": "8e54qcdj-8nb1-she8-1it4-fr1am9wpuaj0",
      "id": "s1f4uw56-ldm2-k2lq-go5y-d9i8uxsbzeim",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(y,var(y)))",
            "b": "cos(min(y,var(x)))",
            "g": "cos(min(y,var(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.3347252",
            "b": "0.65075326",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.5392197)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+0.68811667)",
            "b": "(x+y)",
            "g": "(0.3939236+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(y)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "aud((cos(0.36150098)-(x+sin(x))),y)",
            "b": "aud((cos(x)-(y+sin(x))),x)",
            "g": "aud((cos(0.48666483)-(0.4753291+sin(y))),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.62702525",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5501672",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud(y,y)-tan((y*y)))",
            "b": "(aud(x,x)-tan((x*0.326042)))",
            "g": "(aud(x,0.3659429)-tan((y*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.7278959)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-0.59492594)",
            "b": "(y-y)",
            "g": "(0.5123631-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5506511",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(noi(tan(y),x),mod(var(x),pow(y,x))))",
            "b": "cos(min(noi(tan(y),y),mod(var(x),pow(x,0.23756629))))",
            "g": "cos(min(noi(tan(0.0340029),0.6399157),mod(var(0.217942),pow(0.50479746,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud(y,y)-tan((y*y)))",
            "b": "(aud(x,x)-tan((x*0.326042)))",
            "g": "(aud(x,0.3659429)-tan((y*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.36150098",
            "b": "x",
            "g": "0.48666483"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.5392197)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var((cos(x)-(x-cos(aud(y,0.10474563)))))",
            "b": "var((cos(y)-(0.11123532-cos(aud(y,y)))))",
            "g": "var((cos(y)-(y-cos(aud(y,x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud(max(y,((y+y)*0.9581584)),x)/y)",
            "b": "(aud(max(y,((x+0.6888136)*0.65026104)),0.6573565)/0.41846234)",
            "g": "(aud(max(x,((0.19020474+x)*0.19499946)),0.25727868)/0.17314252)"
          }
        }
      ],
      "timestamp": "21h:12m:2s"
    },
    {
      "generation": 3,
      "ascendantID": "s1f4uw56-ldm2-k2lq-go5y-d9i8uxsbzeim",
      "id": "rdiojbaz-e70j-dp0j-nnr2-ck78rka5zmnc",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(min(y,var(y)))",
            "b": "cos(min(y,var(x)))",
            "g": "cos(min(y,var(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.3347252",
            "b": "0.65075326",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+0.68811667)",
            "b": "(x+y)",
            "g": "(0.66227627+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud(y,y)+tan(((tan(aud(var(0.32238847),noi(y,x)))*y)*y)))",
            "b": "(aud(x,x)+tan(((tan(aud(var(x),noi(y,y)))*0.326042)*0.326042)))",
            "g": "(aud(x,0.33205265)+tan(((tan(aud(var(x),noi(0.8775471,y)))*x)*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.5506511",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var((x/(x-sin(aud(y,0.2339339)))))",
            "b": "var((0.57064867/(0.11123532-sin(aud(y,y)))))",
            "g": "var((x/(y-sin(aud(y,x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(((max(0.20606107,y)-0.59743184)/x))",
            "b": "cos(((max(x,x)-x)/y))",
            "g": "cos(((max(x,x)-x)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.62702525",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(y)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+0.8910819)",
            "b": "(y+y)",
            "g": "(y+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(pow(aud(aud(x,x),0.09611088),cos(max(x,x))))",
            "b": "cos(pow(aud(aud(x,x),x),cos(max(y,0.15679264))))",
            "g": "cos(pow(aud(aud(y,x),0.44486117),cos(max(0.6668785,0.5016373))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((cos(x)-(x-(bri(y,x)-mod(sin(y),aud(y,x))))))",
            "b": "tan((cos(y)-(0.11123532-(bri(y,y)-mod(sin(y),aud(y,0.4300475))))))",
            "g": "tan((cos(y)-(y-(bri(x,x)-mod(sin(x),aud(0.02888149,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.7571077)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-0.59492594)",
            "b": "(x-y)",
            "g": "(0.5123631-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(y)",
            "b": "cos(0.5392197)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min(noi(tan(y),x),noi(var(x),pow(y,x))))",
            "b": "sin(min(noi(tan(y),y),noi(var(x),pow(x,0.23756629))))",
            "g": "sin(min(noi(tan(0.2444529),0.6399157),noi(var(0.217942),pow(0.50479746,y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud(y,y)-tan((0.3347252*y)))",
            "b": "(aud(x,x)-tan((0.65075326*0.326042)))",
            "g": "(aud(x,0.3553884)-tan((x*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.36150098",
            "b": "x",
            "g": "0.48666483"
          }
        }
      ],
      "timestamp": "21h:12m:8s"
    }
  ],
  "timestamp": "2024-04-29-21-10-17"
}
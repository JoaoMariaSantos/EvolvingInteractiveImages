{
  "id": "jl9pqs40-t45x-crr1-mp0d-0ojdq0spoyfv",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "6jshw01t-4tp9-bxqi-aa7w-3lvjbqeoc97g",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.29531175"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*aud(0.5726073,pow(x,0.22862577)))",
            "b": "(0.19389063*aud(x,pow(0.69636333,0.5551894)))",
            "g": "(x*aud(0.75700736,pow(0.4165721,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,0.05254376)",
            "b": "pow(0.6061034,x)",
            "g": "pow(y,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(aud(0.97574973,y),((y-y)/0.89857185))",
            "b": "max(aud(x,x),((x-y)/x))",
            "g": "max(aud(0.01797527,y),((y-y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.702225"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x-x)-bri(0.40676022,0.89010304))+y)",
            "b": "(((x-y)-bri(0.7490841,0.20065373))+x)",
            "g": "(((y-x)-bri(0.43920815,y))+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.5504197-x)",
            "b": "(x-x)",
            "g": "(y-0.32673544)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(0.86336607)+tan(bri(0.069488525,x)))",
            "b": "(tan(x)+tan(bri(0.6261978,y)))",
            "g": "(tan(y)+tan(bri(0.9779055,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(cos(noi(0.089950025,x)),max((y*x),(0.44805944+x)))",
            "b": "pow(cos(noi(x,x)),max((y*x),(x+x)))",
            "g": "pow(cos(noi(0.45495594,y)),max((y*y),(0.03992039+x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(0.5089803)",
            "b": "tan(x)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noi(noi(x,y),tan(x))",
            "b": "noi(noi(0.8001001,0.6110959),tan(0.3985691))",
            "g": "noi(noi(0.22620642,y),tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.57278377/var(y))/aud(max(0.25160247,x),y))",
            "b": "((0.29307425/var(0.23834091))/aud(max(x,y),x))",
            "g": "((x/var(x))/aud(max(y,y),0.8760935))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(mod(x,aud(y,x))+mod(min(x,x),y))",
            "b": "(mod(x,aud(0.24885893,0.8708212))+mod(min(x,x),x))",
            "g": "(mod(0.9352641,aud(y,y))+mod(min(x,y),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud((y+0.7090205),0.2964061)/x)",
            "b": "(aud((x+0.68050826),x)/0.9466088)",
            "g": "(aud((x+x),x)/0.26586002)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        }
      ],
      "timestamp": "22h:30m:33s"
    },
    {
      "generation": 1,
      "ascendantID": "6jshw01t-4tp9-bxqi-aa7w-3lvjbqeoc97g",
      "id": "4xt5cs6l-p2bm-yumh-gko4-h2rsc5tie8gp",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.29531175"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*x)",
            "b": "(0.30585998*0.9466088)",
            "g": "(x*0.2913592)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(0.681768)+tan(bri(0.0,(mod((x*0.9818582),bri(0.30746162,0.4905299))/min(0.31758964,aud(y,y))))))",
            "b": "(tan(x)+tan(bri(0.6294446,(mod((0.66284627*y),bri(y,y))/min(0.956914,aud(y,0.58484316))))))",
            "g": "(tan(y)+tan(bri(x,(mod((0.12945467*x),bri(x,x))/min(y,aud(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.25812745"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((var((0.93776697-0.4173358))+pow(sin(x),pow(x,x))),((y+x)/0.89857185))",
            "b": "max((var((x-0.5260502))+pow(sin(0.9827805),pow(0.5350839,0.876226))),((x+y)/x))",
            "g": "max((var((x-x))+pow(sin(x),pow(x,x))),((y+y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.7903342+x)",
            "b": "(x+x)",
            "g": "(y+0.32673544)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(0.57278377)/aud(bri(0.25160247,x),y))",
            "b": "(sin(0.29307425)/aud(bri(x,0.23457822),x))",
            "g": "(sin(x)/aud(bri(y,y),0.8760935))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(x)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x-x)-pow(y,(max(0.09831834,y)-x)))-y)",
            "b": "(((x-y)-pow(x,(max(y,y)-0.76475984)))-x)",
            "g": "(((y-x)-pow(0.6972254,(max(y,y)-y)))-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x-x)-mod(((x-y)*y),(mod(y,x)+(x+0.67869455))))+y)",
            "b": "(((x-y)-mod(((0.45066977-x)*y),(mod(0.8129722,y)+(y+x))))+x)",
            "g": "(((y-x)-mod(((0.3608526-0.016814947)*x),(mod(x,x)+(0.25428754+0.4098932))))+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(mod(x,tan(y))+pow(min(x,x),y))",
            "b": "(mod(x,tan(0.24885893))+pow(min(x,x),x))",
            "g": "(mod(0.9352641,tan(y))+pow(min(x,y),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(bri(0.931975,y),((y+y)/0.89857185))",
            "b": "max(bri(x,x),((x+y)/x))",
            "g": "max(bri(0.0,y),((y+y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+pow(x,0.03448458))",
            "b": "(x+pow(0.6061034,x))",
            "g": "(0.04520738+pow(y,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.5504197-x)",
            "b": "(x-x)",
            "g": "(y-0.32673544)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*aud(0.5726073,pow(x,0.22862577)))",
            "b": "(0.4232728*aud(x,pow(0.50980794,0.5551894)))",
            "g": "(x*aud(x,pow(0.4165721,x)))"
          }
        }
      ],
      "timestamp": "22h:30m:34s"
    },
    {
      "generation": 2,
      "ascendantID": "4xt5cs6l-p2bm-yumh-gko4-h2rsc5tie8gp",
      "id": "9kdzts40-ze8f-m2tp-glsm-hfp4npaqqmgc",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.29531175"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(0.6757714)+tan(max(0.0,(mod((x-0.8283137),bri(0.30746162,0.4905299))/max(0.31758964,aud(y,y))))))",
            "b": "(tan(x)+tan(max(0.6294446,(mod((0.66284627-y),bri(y,y))/max(0.956914,aud(y,0.58484316))))))",
            "g": "(tan(y)+tan(max(x,(mod((0.12945467-x),bri(x,x))/max(y,aud(y,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(pow(x,x)/x)",
            "b": "(pow(0.5350839,0.876226)/0.6881672)",
            "g": "(pow(x,x)/0.2913592)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*aud(0.5726073,pow(x,0.22862577)))",
            "b": "(0.4232728*aud(x,pow(0.50980794,0.5551894)))",
            "g": "(x*aud(x,pow(0.4165721,x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(x)",
            "b": "var(x)",
            "g": "var(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((var((0.93776697-cos(noi(0.23642671,0.42512566))))+pow(sin(x),pow(x,x))),((y+y)/0.89857185))",
            "b": "max((var((x-cos(noi(y,x))))+pow(sin(x),pow(0.5350839,0.876226))),((x+x)/x))",
            "g": "max((var((x-cos(noi(y,0.8182422))))+pow(sin(x),pow(x,x))),((y+y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((aud((0.93776697*0.4173358),0.8753062)+pow(sin(x),pow(x,x))),y)",
            "b": "max((aud((x*0.5260502),0.45230734)+pow(sin(0.9827805),pow(0.5350839,0.876226))),0.012486756)",
            "g": "max((aud((x*x),y)+pow(sin(x),pow(x,x))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(bri(0.931975,x),(0.67462814/0.89857185))",
            "b": "max(bri(x,0.0021157265),(x/x))",
            "g": "max(bri(0.0,0.8440411),(y/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((var((0.93776697-0.51064986))+pow(sin(x),pow(x,x))),((y+x)/0.89857185))",
            "b": "max((var((x-0.5260502))+pow(sin(0.9827805),pow(0.7480097,0.876226))),((x+y)/x))",
            "g": "max((var((x-x))+pow(sin(x),pow(x,x))),((y+y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(var(y),((y+y)/0.89857185))",
            "b": "max(var(0.9340759),((x+y)/x))",
            "g": "max(var(x),((y+y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(y)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(aud(0.931975,y),((y-y)/0.89857185))",
            "b": "max(aud(x,x),((x-y)/x))",
            "g": "max(aud(0.0,y),((y-y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "aud(y,y)",
            "b": "aud(y,y)",
            "g": "aud(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+pow(x,0.03448458))",
            "b": "(x+pow(0.4258014,x))",
            "g": "(0.2265693+pow(y,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(x)*pow(bri(x,x),y))",
            "b": "(cos(x)*pow(bri(x,x),x))",
            "g": "(cos(y)*pow(bri(x,y),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.31111294-((x+x)-mod(y,(max(0.20985463,y)-x))))",
            "b": "(x-((x+y)-mod(x,(max(y,y)-0.76475984))))",
            "g": "(y-((y+x)-mod(0.8744282,(max(y,y)-y))))"
          }
        }
      ],
      "timestamp": "22h:30m:35s"
    },
    {
      "generation": 3,
      "ascendantID": "9kdzts40-ze8f-m2tp-glsm-hfp4npaqqmgc",
      "id": "p32b2z63-9bjc-3aqp-zmlh-0iyls2nrkz2p",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.29531175"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(pow(x,x)/x)",
            "b": "(pow(0.5350839,0.876226)/0.6881672)",
            "g": "(pow(x,x)/0.2913592)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((var((0.93776697*mod(min((0.31816632-y),0.56033474),tan(max(x,0.16902119)))))+pow((x/y),pow(x,x))),y)",
            "b": "max((var((x*mod(min((x-0.26850522),y),tan(max(x,y)))))+pow((0.9827805/0.45933032),pow(0.5350839,0.876226))),0.012486756)",
            "g": "max((var((x*mod(min((0.22872627-0.44397032),x),tan(max(x,y)))))+pow((x/0.0),pow(x,x))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(x)",
            "b": "var(x)",
            "g": "var(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max((aud((tan(0.94126064)+cos(max(0.00225918,(mod((x-0.8283137),max(0.30746162,0.31525263))*min(0.31758964,aud(y,y)))))),0.8753062)+cos(tan(x))),y)",
            "b": "max((aud((tan(x)+cos(max(0.6294446,(mod((0.66284627-y),max(y,y))*min(0.981139,aud(y,0.6768957)))))),0.45230734)+cos(tan(y))),0.012486756)",
            "g": "max((aud((tan(y)+cos(max(x,(mod((0.12945467-x),max(x,x))*min(y,aud(y,x)))))),y)+cos(tan(0.4452458))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(var(y),((y+y)/0.89857185))",
            "b": "max(var(0.8355859),((x+y)/x))",
            "g": "max(var(x),((y+y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(0.931975)",
            "b": "tan(x)",
            "g": "tan(0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.6757714)-cos(max(0.0,(sin(max(x,x))/0.18752342))))",
            "b": "(cos(x)-cos(max(0.6294446,(sin(max(x,y))/x))))",
            "g": "(cos(y)-cos(max(x,(sin(max(x,0.84232074))/y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,((x+y)/0.89857185))",
            "b": "max(y,((0.35680783+y)/x))",
            "g": "max(y,((0.070605755+y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.31111294-(((y+noi(var(mod(y,y)),x))/0.89857185)-pow(y,(max(0.46253836,y)-x))))",
            "b": "(x-(((x+noi(var(mod(x,y)),x))/x)-pow(x,(max(y,y)-0.76475984))))",
            "g": "(y-(((y+noi(var(mod(x,0.51851267)),0.5302119))/y)-pow(0.8744282,(max(y,y)-y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+pow(x,0.03448458))",
            "b": "(x+pow(0.4258014,x))",
            "g": "(0.3938687+pow(y,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(var(y),pow(x,x))",
            "b": "max(var(0.9340759),pow(0.50724626,0.876226))",
            "g": "max(var(x),pow(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(var(y),((y+y)*0.63955617))",
            "b": "bri(var(0.9340759),((x+y)*x))",
            "g": "bri(var(x),((y+y)*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(pow(noi((x-pow(x,x)),y),x)*x)",
            "b": "(pow(noi((y-pow(y,x)),0.8432282),0.876226)*0.7213268)",
            "g": "(pow(noi((x-pow(0.6627708,x)),x),x)*0.20791858)"
          }
        }
      ],
      "timestamp": "22h:30m:35s"
    },
    {
      "generation": 4,
      "ascendantID": "p32b2z63-9bjc-3aqp-zmlh-0iyls2nrkz2p",
      "id": "4mlrau7k-0epi-egc6-w99k-1usy2z2uhkyz",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.29531175"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(x)",
            "b": "var(x)",
            "g": "var(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(aud(y,y),((y+y)*0.89857185))",
            "b": "max(aud(0.926625,x),((x+y)*x))",
            "g": "max(aud(x,y),((y+y)*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri((aud((tan(0.94126064)+cos(max(0.00225918,(noi((x-0.8283137),min(0.30746162,0.51994896))-min(0.38530046,aud(y,y)))))),0.8753062)+sin(var(x))),y)",
            "b": "bri((aud((tan(x)+cos(max(0.6294446,(noi((0.66284627-y),min(y,y))-min(0.9307202,aud(y,0.6768957)))))),0.45230734)+sin(var(y))),0.012486756)",
            "g": "bri((aud((tan(y)+cos(max(x,(noi((0.12945467-x),min(x,x))-min(y,aud(y,x)))))),y)+sin(var(0.4452458))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(var(y),((y+y)/0.89857185))",
            "b": "max(var(0.8355859),((x+y)/x))",
            "g": "max(var(x),((y+y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,((x-y)/0.89857185))",
            "b": "max(y,((0.35680783-y)/x))",
            "g": "max(y,((0.070605755-y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(x)",
            "g": "tan(0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(0.931975)",
            "b": "var(x)",
            "g": "var(0.0)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,pow(x,x))",
            "b": "max(y,pow(0.50724626,0.876226))",
            "g": "max(x,pow(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(var(x),mod(x,x))",
            "b": "max(var(y),mod(0.24189344,0.876226))",
            "g": "max(var(0.3886097),mod(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(mod(x,x)/x)",
            "b": "(mod(0.5350839,0.876226)/0.6881672)",
            "g": "(mod(x,x)/0.2913592)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        }
      ],
      "timestamp": "22h:30m:36s"
    },
    {
      "generation": 5,
      "ascendantID": "4mlrau7k-0epi-egc6-w99k-1usy2z2uhkyz",
      "id": "678n7ola-vcl2-zi8b-f0xb-erjizea951jd",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.29531175"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,((aud(sin(0.31396133),y)*0.32589)*0.89857185))",
            "b": "max(y,((aud(sin(y),y)*0.32559675)*x))",
            "g": "max(x,((aud(sin(y),y)*x)*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(sin(var(0.8792503)),y))",
            "b": "tan(mod(sin(var(y)),y))",
            "g": "tan(mod(sin(var(x)),0.025992572))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(var(y),sin((y+y)))",
            "b": "max(var(0.8355859),sin((x+y)))",
            "g": "max(var(x),sin((y+y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(var(x),x)",
            "b": "max(var(y),y)",
            "g": "max(var(0.3886097),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(((cos(x)/mod(0.7924962,0.8879487))/x))",
            "b": "var(((cos(x)/mod(y,0.22577834))/0.012819707))",
            "g": "var(((cos(y)/mod(0.954583,0.7171295))/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri((var((cos(0.94126064)+tan(max(0.08385325,(noi((x+0.7657275),min(0.09924835,0.51994896))-min(0.38530046,max(y,y)))))))+(var(x)/y)),y)",
            "b": "bri((var((cos(x)+tan(max(0.51830184,(noi((0.66284627+y),min(x,y))-min(0.9307202,max(y,0.41512218)))))))+(var(y)/y)),0.012486756)",
            "g": "bri((var((cos(y)+tan(max(x,(noi((0.12945467+x),min(x,x))-min(y,max(y,x)))))))+(var(0.32327777)/x)),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(var(y),((y+y)/0.89857185))",
            "b": "bri(var(0.8355859),((x+y)/x))",
            "g": "bri(var(x),((y+y)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri((aud((cos(x)+sin(max(0.0,(mod((x-0.8283137),min(0.23427749,0.51994896))*min(0.38530046,var(y)))))),0.8753062)+(aud(x,x)*y)),y)",
            "b": "bri((aud((cos(x)+sin(max(0.3347914,(mod((0.66284627-y),min(y,y))*min(0.9307202,var(y)))))),0.45230734)+(aud(y,0.7295435)*y)),0.0)",
            "g": "bri((aud((cos(y)+sin(max(x,(mod((0.12945467-x),min(x,x))*min(y,var(y)))))),y)+(aud(0.4452458,x)*x)),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(var(y),(y/0.89857185))",
            "b": "max(var(0.8355859),(y/x))",
            "g": "max(var(x),(x/y))"
          }
        }
      ],
      "timestamp": "22h:30m:36s"
    },
    {
      "generation": 6,
      "ascendantID": "678n7ola-vcl2-zi8b-f0xb-erjizea951jd",
      "id": "ykx1yw42-x04i-2phn-s7r4-xofegma2sf4f",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.29531175"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod((var(0.8792503)/y),y))",
            "b": "tan(mod((var(y)/y),y))",
            "g": "tan(mod((var(x)/y),0.025992572))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(y,((aud(sin(0.31396133),y)/0.32589)+0.7610961))",
            "b": "bri(y,((aud(sin(y),y)/0.112559505)+x))",
            "g": "bri(x,((aud(sin(y),y)/x)+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(mod(cos(tan(0.8792503)),y))",
            "b": "tan(mod(cos(tan(y)),y))",
            "g": "tan(mod(cos(tan(x)),0.025992572))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(var(y),sin((y+y)))",
            "b": "min(var(0.8355859),sin((x+y)))",
            "g": "min(var(x),sin((y+y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(var(cos(0.31396133)),aud((y/0.30697882),(bri(0.16738933,y)+0.22349721)))",
            "b": "bri(var(cos(y)),aud((y/x),(bri(0.24524009,x)+0.23991913)))",
            "g": "bri(var(cos(y)),aud((y/0.8227156),(bri(y,0.28410226)+0.20839334)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(mod(0.18397665,y))",
            "b": "sin(mod(y,y))",
            "g": "sin(mod(y,0.025992572))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(aud(x,y),x)",
            "b": "max(aud(y,x),y)",
            "g": "max(aud(0.3886097,y),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(var(y),(sin(0.46594495)/0.89857185))",
            "b": "max(var(0.8355859),(sin(0.69025236)/x))",
            "g": "max(var(x),(sin(x)/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        }
      ],
      "timestamp": "22h:30m:36s"
    }
  ],
  "timestamp": "2024-04-29-22-30-30"
}
{
  "id": "y0nk1vpt-9yna-onmg-cexa-4kwhe5kjr9ko",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "joby624p-nni2-laku-o9y4-iffu6qy4yjnm",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "cos(y)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.89197433)",
            "b": "sin(y)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(aul(min(y,y),x))",
            "b": "cos(aul(min(0.17734945,0.6828577),y))",
            "g": "cos(aul(min(y,0.35264236),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31563985",
            "b": "0.27763778",
            "g": "0.5684134"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "auh((0.13330525/var(max((pow(var(cos(0.294891)),0.27830064)+0.22850794),(sin(cos(min(aud(x,y),0.28566724)))/pow(auh(x,x),max(min(x,0.833779),0.24850845)))))),y)",
            "b": "auh((y/var(max((pow(var(cos(0.121080816)),0.74414027)+0.9519417),(sin(cos(min(aud(y,y),x)))/pow(auh(x,x),max(min(y,0.8683378),y)))))),0.24760062)",
            "g": "auh((y/var(max((pow(var(cos(y)),x)+0.017870128),(sin(cos(min(aud(0.8658253,x),x)))/pow(auh(0.59736747,0.641144),max(min(y,x),0.11736292)))))),0.9749508)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(x)",
            "g": "tan(0.26643956)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "auh(0.51859295,auh(sin((x*y)),y))",
            "b": "auh(x,auh(sin((0.57311404*x)),0.119552314))",
            "g": "auh(0.56658643,auh(sin((y*0.1772123)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan((x+x))",
            "b": "tan((y+x))",
            "g": "tan((y+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow((var((x-y))+pow(0.09859604,var(pow(var(cos(auh(0.58368695,0.1711995))),y)))),max((y/var(sin(y))),((sin((sin(sin(x))+y))/min(((y-y)+((y*y)-aul(0.03510171,0.66924995))),(cos((y+0.6038171))+x)))+y))),y)",
            "b": "max(pow((var((0.72023696-0.30214208))+pow(0.2489689,var(pow(var(cos(auh(y,y))),x)))),max((x/var(sin(y))),((sin((sin(sin(x))+y))/min(((x-x)+((0.95285904*x)-aul(y,0.16245157))),(cos((x+x))+x)))+x))),x)",
            "g": "max(pow((var((x-y))+pow(x,var(pow(var(cos(auh(x,y))),y)))),max((x/var(sin(y))),((sin((sin(sin(y))+0.69103235))/min(((0.54366803-y)+((y*x)-aul(y,x))),(cos((0.7255887+0.11700511))+y)))+0.04488927))),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((pow(pow(auh(auh((((x/0.9498219)*y)+0.77889526),y),cos(aud(tan(aul(x,x)),x))),(y+pow(tan(x),var(cos(max(x,y)))))),sin(aud(aul((y/tan((y-y))),x),cos(x))))+0.46308357))",
            "b": "sin((pow(pow(auh(auh((((x/y)*y)+y),y),cos(aud(tan(aul(x,x)),y))),(0.94614726+pow(tan(0.65406185),var(cos(max(0.46404952,x)))))),sin(aud(aul((y/tan((y-x))),x),cos(y))))+x))",
            "g": "sin((pow(pow(auh(auh((((x/0.4827912)*y)+0.38322115),y),cos(aud(tan(aul(x,0.05882889)),0.83119833))),(x+pow(tan(0.7341546),var(cos(max(0.6262983,x)))))),sin(aud(aul((x/tan((0.50680536-x))),x),cos(x))))+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.14839804",
            "g": "0.7993355"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "aul(0.185844,y)",
            "b": "aul(0.07803047,y)",
            "g": "aul(y,y)"
          }
        }
      ],
      "timestamp": "22h:24m:50s"
    },
    {
      "generation": 1,
      "ascendantID": "joby624p-nni2-laku-o9y4-iffu6qy4yjnm",
      "id": "0af2f40f-cwlh-tds5-5fst-vdyo6vsq48c4",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(0.89197433)",
            "b": "sin(y)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*aud(0.4117064,auh(x,x)))",
            "b": "(x*aud(0.36149973,auh(x,y)))",
            "g": "(x*aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31563985",
            "b": "0.27763778",
            "g": "0.5684134"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(auh(aud((pow(pow(y,(y-y)),x)/min(min((cos(y)+0.54594344),x),y)),aud(x,0.92737484)),y)/x)",
            "b": "(auh(aud((pow(pow(x,(x-x)),0.9614743)/min(min((cos(0.6204681)+x),0.9626439),y)),aud(x,x)),y)/0.31819582)",
            "g": "(auh(aud((pow(pow(x,(y-y)),x)/min(min((cos(x)+y),y),x)),aud(x,0.82392454)),x)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "auh(0.51859295,auh(sin((x/y)),y))",
            "b": "auh(x,auh(sin((0.57311404/x)),0.119552314))",
            "g": "auh(0.56658643,auh(sin((y/0.1772123)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.14839804",
            "g": "0.7993355"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(y)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(aul(min(y,y),x))",
            "b": "cos(aul(min(0.17734945,0.6828577),y))",
            "g": "cos(aul(min(y,0.35264236),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow((var((x-y))+pow(0.09859604,var(pow(aud(cos(auh(0.58368695,0.1711995)),x),y)))),max(sin(y),(sin(sin((sin(sin(x))+y)))+y))),y)",
            "b": "max(pow((var((0.72023696-0.30214208))+pow(0.2489689,var(pow(aud(cos(auh(y,y)),y),x)))),max(sin(x),(sin(sin((sin(sin(x))+y)))+x))),x)",
            "g": "max(pow((var((x-y))+pow(x,var(pow(aud(cos(auh(x,y)),0.38940436),y)))),max(sin(x),(sin(sin((sin(sin(y))+0.69103235)))+0.04488927))),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        }
      ],
      "timestamp": "22h:24m:58s"
    },
    {
      "generation": 2,
      "ascendantID": "0af2f40f-cwlh-tds5-5fst-vdyo6vsq48c4",
      "id": "ve4i0hdw-0xwf-42ny-iavn-oiii4ihye6a4",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(auh(tan(sin(pow(cos(aud(sin((min(tan(min((y-y),aul(var(0.36622936),tan(0.25457615)))),x)+pow(y,x))),aul(0.07055175,y))),x))),y)/x)",
            "b": "(auh(tan(sin(pow(cos(aud(sin((min(tan(min((y-0.54900706),aul(var(0.46680844),tan(0.6155212)))),x)+pow(x,y))),aul(0.7245147,0.021334112))),0.9614743))),y)/0.31819582)",
            "g": "(auh(tan(sin(pow(cos(aud(sin((min(tan(min((y-y),aul(var(y),tan(0.6368841)))),x)+pow(y,y))),aul(0.912112,0.78277))),x))),x)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(auh(aud((pow(min(y,(y-y)),x)/min(min((cos(y)+0.54594344),x),y)),var(x)),y)/x)",
            "b": "(auh(aud((pow(min(x,(x-x)),0.9614743)/min(min((cos(0.45912507)+x),0.9626439),y)),var(x)),y)/0.31819582)",
            "g": "(auh(aud((pow(min(x,(y-y)),x)/min(min((cos(x)+y),y),x)),var(x)),x)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.51085657,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(y)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(y)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        }
      ],
      "timestamp": "22h:25m:2s"
    },
    {
      "generation": 3,
      "ascendantID": "ve4i0hdw-0xwf-42ny-iavn-oiii4ihye6a4",
      "id": "qsf28i3c-qvlp-t4if-fdtc-qhtt2d4zd0aq",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(y)",
            "g": "tan(0.50035447)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(auh(tan(sin(pow(cos(aud(sin((min(tan(min((y-y),aul(var(0.36622936),tan(0.25457615)))),y)+pow(y,x))),aul(0.07055175,y))),x))),y)/x)",
            "b": "(auh(tan(sin(pow(cos(aud(sin((min(tan(min((y-0.54900706),aul(var(0.46680844),tan(0.6155212)))),x)+pow(x,y))),aul(0.7245147,0.021334112))),0.9614743))),y)/0.31819582)",
            "g": "(auh(tan(sin(pow(cos(aud(sin((min(tan(min((y-y),aul(var(y),tan(0.6368841)))),x)+pow(y,y))),aul(0.912112,0.78277))),x))),x)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(y)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "cos(y)",
            "g": "cos(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud((auh(tan(sin(pow(cos(aud(sin((min(cos(min((y-y),aul(var(0.36622936),tan(0.25457615)))),x)+pow(y,x))),auh(0.07055175,y))),x))),y)/x),auh(x,x)))",
            "b": "(x/aud((auh(tan(sin(pow(cos(aud(sin((min(cos(min((y-0.54900706),aul(var(0.46680844),tan(0.6155212)))),x)+pow(x,y))),auh(0.7245147,0.021334112))),0.9614743))),y)/0.31819582),auh(x,y)))",
            "g": "(x/aud((auh(tan(sin(pow(cos(aud(sin((min(cos(min((y-y),aul(var(y),tan(0.6368841)))),x)+pow(y,y))),auh(0.9858679,0.78277))),x))),x)/x),auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(y)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        }
      ],
      "timestamp": "22h:25m:4s"
    },
    {
      "generation": 4,
      "ascendantID": "qsf28i3c-qvlp-t4if-fdtc-qhtt2d4zd0aq",
      "id": "bha937mw-fzs1-pd44-yi9o-hf80wbm4hctd",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(y)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(auh(tan(sin(pow(cos(aud(sin((min(tan(min((y-y),aul(var(0.36622936),tan(0.25457615)))),y)+pow(y,x))),aul(0.07055175,y))),x))),y)/x)",
            "b": "(auh(tan(sin(pow(cos(aud(sin((min(tan(min((y-0.54900706),aul(var(0.46680844),tan(0.6155212)))),x)+pow(x,y))),aul(0.7245147,0.021334112))),0.9614743))),y)/0.31819582)",
            "g": "(auh(tan(sin(pow(cos(aud(sin((min(tan(min((y-y),aul(var(y),tan(0.6368841)))),x)+pow(y,y))),aul(0.912112,0.78277))),x))),x)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(auh(tan(sin(pow(sin(aud(sin((min(tan(min((y-y),aul(var(0.36622936),tan(0.25457615)))),y)+pow(y,x))),aul(0.07055175,y))),x))),y)/x)",
            "b": "(auh(tan(sin(pow(sin(aud(sin((min(tan(min((y-0.54900706),aul(var(0.46680844),tan(0.6155212)))),x)+pow(x,y))),aul(0.7245147,0.021334112))),0.9614743))),y)/0.31819582)",
            "g": "(auh(tan(sin(pow(sin(aud(sin((min(tan(min((y-y),aul(var(y),tan(0.6368841)))),x)+pow(y,y))),aul(0.912112,0.78277))),x))),x)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(y)",
            "g": "tan(y)"
          }
        }
      ],
      "timestamp": "22h:25m:6s"
    },
    {
      "generation": 5,
      "ascendantID": "bha937mw-fzs1-pd44-yi9o-hf80wbm4hctd",
      "id": "yh4c6g1o-q3bw-vdgv-2uln-gapy03ddud9v",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(auh(tan(sin(pow(tan(aud(((min(tan(min((y/y),auh(var(0.36622936),tan(0.25457615)))),y)+pow(y,x))/x),aul(0.07055175,y))),x))),y)/x)",
            "b": "(auh(tan(sin(pow(tan(aud(((min(tan(min((y/0.54900706),auh(var(0.46680844),tan(0.6155212)))),x)+pow(x,y))/0.2561075),aul(0.7245147,0.021334112))),0.9614743))),y)/0.31819582)",
            "g": "(auh(tan(sin(pow(tan(aud(((min(tan(min((y/y),auh(var(y),tan(0.6368841)))),0.95482945)+pow(y,y))/y),aul(0.912112,0.78277))),x))),x)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(x)",
            "b": "tan(y)",
            "g": "tan(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        }
      ],
      "timestamp": "22h:25m:7s"
    },
    {
      "generation": 6,
      "ascendantID": "yh4c6g1o-q3bw-vdgv-2uln-gapy03ddud9v",
      "id": "qtfdj4zn-m2q4-mlh1-tr93-8ak9ru7ynwlv",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(x)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(auh(tan((pow(tan(aud(((min(tan(min((y/y),aul(var(0.36622936),cos(0.25457615)))),y)+pow(y,x))/x),aul(0.07055175,y))),x)/pow(min((cos(y)+0.54594344),x),y))),y)/x)",
            "b": "(auh(tan((pow(tan(aud(((min(tan(min((y/0.54900706),aul(var(0.46680844),cos(0.6155212)))),x)+pow(x,y))/0.2561075),aul(0.7245147,0.021334112))),0.9614743)/pow(min((cos(0.6204681)+x),0.9626439),y))),y)/0.31819582)",
            "g": "(auh(tan((pow(tan(aud(((min(tan(min((y/y),aul(var(y),cos(0.6368841)))),0.95482945)+pow(y,y))/y),aul(0.912112,0.78277))),x)/pow(min((cos(x)+y),y),0.7564228))),x)/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9458322",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        }
      ],
      "timestamp": "22h:25m:20s"
    },
    {
      "generation": 7,
      "ascendantID": "qtfdj4zn-m2q4-mlh1-tr93-8ak9ru7ynwlv",
      "id": "25nu3orh-654a-ysu9-v4io-y8tuj4z78ff7",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9458322",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "cos(x)",
            "g": "cos(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9458322",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.69207144"
          }
        }
      ],
      "timestamp": "22h:25m:22s"
    },
    {
      "generation": 8,
      "ascendantID": "25nu3orh-654a-ysu9-v4io-y8tuj4z78ff7",
      "id": "nbvlp7xl-zqnf-qwxm-0lqp-vtgvtwjzkr62",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9458322",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(x)",
            "g": "sin(0.69207144)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9458322",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9458322",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9458322",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((x/x))",
            "b": "sin((x/0.8760136))",
            "g": "sin((0.5457478/0.8644531))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.7187736"
          }
        }
      ],
      "timestamp": "22h:25m:23s"
    },
    {
      "generation": 9,
      "ascendantID": "nbvlp7xl-zqnf-qwxm-0lqp-vtgvtwjzkr62",
      "id": "35wc3x2y-mxod-er8r-chu9-ukki5hcdcrb2",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((var(var(((tan(auh(aud(y,0.6750151),0.5336936))/y)-0.14729422)))*aul(0.8982611,auh(x,0.5964144)))/x)",
            "b": "((var(var(((tan(auh(aud(0.8972933,0.4138019),y))/x)-x)))*aul(y,auh(0.82210636,x)))/0.8760136)",
            "g": "((var(var(((tan(auh(aud(y,y),0.8249336))/y)-0.023241878)))*aul(x,auh(0.11615181,y)))/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.7187736"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9458322",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.92023516"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(x)",
            "b": "cos(x)",
            "g": "cos(0.5457478)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*aud(0.4117064,auh(x,x)))",
            "b": "(x*aud(0.36149973,auh(x,y)))",
            "g": "(x*aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(x)",
            "g": "sin(0.69207144)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/x)",
            "b": "(x/0.8760136)",
            "g": "(0.5457478/0.8644531)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.9458322",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "0.69207144"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/aud(0.4117064,auh(x,x)))",
            "b": "(x/aud(0.36149973,auh(x,y)))",
            "g": "(x/aud(x,auh(0.29269212,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.31912243",
            "b": "x",
            "g": "x"
          }
        }
      ],
      "timestamp": "22h:25m:24s"
    }
  ],
  "timestamp": "2024-05-05-22-24-48"
}
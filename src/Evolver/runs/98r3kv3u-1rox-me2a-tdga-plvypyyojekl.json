{
  "id": "98r3kv3u-1rox-me2a-tdga-plvypyyojekl",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "s09mz29q-sjjv-rotf-z685-ay1aeh3koj4o",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(x,0.58981866))",
            "b": "tan(pow(y,x))",
            "g": "tan(pow(x,0.8375219))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(pow(max(var((max(max(sin(pow(y,x)),y),(var(0.58766305)-var(x)))+((max(pow(x,x),tan(((sin(0.25138038)*x)+max(var(y),max(pow(x,0.47587323),y)))))+pow((tan(0.011779726)*((tan(var(x))+pow(cos(x),y))*cos(0.40768486))),y))+tan(y)))),0.98376185),min(sin(pow(max(pow(0.1867783,y),y),y)),cos(y)))))",
            "b": "cos(tan(pow(max(var((max(max(sin(pow(0.9130356,x)),0.97317),(var(0.88716245)-var(y)))+((max(pow(y,y),tan(((sin(x)*x)+max(var(0.5689169),max(pow(x,x),x)))))+pow((tan(0.66797036)*((tan(var(y))+pow(cos(y),x))*cos(0.94697124))),x))+tan(x)))),x),min(sin(pow(max(pow(x,x),y),y)),cos(x)))))",
            "g": "cos(tan(pow(max(var((max(max(sin(pow(x,x)),y),(var(y)-var(x)))+((max(pow(x,y),tan(((sin(y)*x)+max(var(x),max(pow(0.6129352,x),x)))))+pow((tan(x)*((tan(var(y))+pow(cos(y),y))*cos(y))),y))+tan(0.20294523)))),0.45664626),min(sin(pow(max(pow(x,0.72625387),y),0.7744585)),cos(y)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "(0.7183163*0.84328115)",
            "g": "(y*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.7529794"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*0.5689963)",
            "b": "(y*0.3112793)",
            "g": "(0.6899028*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+y)",
            "b": "(y+x)",
            "g": "(y+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.61812097",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(y,y)",
            "b": "pow(y,y)",
            "g": "pow(y,x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(((((x*var((x+0.13947505)))-0.037200272)/min(pow(cos(pow(min(((y*0.1881954)+tan(cos(min(min((0.6647156-0.07911551),pow(0.75547385,0.31069386)),(x*y))))),y),tan(cos(x)))),x),(pow(min(tan(tan(0.5142821)),x),min(cos(((0.774686-0.34509408)*(max(y,min(cos(x),y))/(0.9591374+((y+y)*y))))),min(sin(tan(x)),x)))/y)))/y))",
            "b": "sin(((((0.41621268*var((0.67962223+0.5716068)))-0.5110867)/min(pow(cos(pow(min(((x*0.27652162)+tan(cos(min(min((0.58975625-y),pow(0.16759121,x)),(x*0.04880941))))),y),tan(cos(y)))),y),(pow(min(tan(tan(0.9159304)),x),min(cos(((x-y)*(max(x,min(cos(y),y))/(x+((0.57525694+y)*x))))),min(sin(tan(x)),x)))/y)))/0.09548253))",
            "g": "sin(((((y*var((0.0015876889+x)))-x)/min(pow(cos(pow(min(((0.82322234*y)+tan(cos(min(min((y-0.5542436),pow(y,x)),(y*x))))),x),tan(cos(y)))),x),(pow(min(tan(tan(0.33677888)),0.80989784),min(cos(((x-x)*(max(y,min(cos(0.56660056),y))/(x+((y+y)*y))))),min(sin(tan(0.1291135)),0.88928854)))/0.77987194)))/0.756104))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(var(tan(y)))",
            "b": "cos(var(tan(0.0151357055)))",
            "g": "cos(var(tan(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.30785036",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.35891908*0.21583486)+((y/y)/cos((max(tan(tan(min(tan(((((0.3072322/0.06796664)+tan(y))/x)/(0.2135675+0.48625857))),(y-min(var(max(cos(y),min(y,0.8129897))),0.703905))))),0.15265363)-x))))/x)",
            "b": "(((x*y)+((x/x)/cos((max(tan(tan(min(tan(((((y/0.11618203)+tan(0.5835171))/y)/(0.89223236+y))),(0.56065285-min(var(max(cos(y),min(y,0.4865343))),x))))),y)-0.8117788))))/0.12653965)",
            "g": "(((y*y)+((x/y)/cos((max(tan(tan(min(tan(((((0.62779534/x)+tan(y))/x)/(y+x))),(0.23295432-min(var(max(cos(y),min(y,0.22253984))),0.24908566))))),y)-0.37265968))))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "0.83253604"
          }
        }
      ],
      "timestamp": "22h:49m:9s"
    },
    {
      "generation": 1,
      "ascendantID": "s09mz29q-sjjv-rotf-z685-ay1aeh3koj4o",
      "id": "lqdknacr-n4xe-s26j-uvf7-n2gq52sxt1zp",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.35891908*0.21583486)+((y/y)/cos((max(tan(tan(min(tan(((((0.3072322/0.06796664)+tan(y))/x)/(0.2135675+0.48625857))),(y-min(var(max(cos(y),min(y,0.8129897))),0.703905))))),0.15265363)-x))))/x)",
            "b": "(((x*y)+((x/x)/cos((max(tan(tan(min(tan(((((y/0.11618203)+tan(0.5835171))/y)/(0.89223236+y))),(0.56065285-min(var(max(cos(y),min(y,0.4865343))),x))))),y)-0.8117788))))/0.12653965)",
            "g": "(((y*y)+((x/y)/cos((max(tan(tan(min(tan(((((0.62779534/x)+tan(y))/x)/(y+x))),(0.23295432-min(var(max(cos(y),min(y,0.22253984))),0.24908566))))),y)-0.37265968))))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.35891908*0.21583486)+((y/y)/x))/x)",
            "b": "(((x*y)+((x/x)/y))/0.12653965)",
            "g": "(((y*y)+((x/y)/y))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.7529794"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.35891908*0.21583486)+((y/y)/cos((max(tan(tan(min(tan(((((0.3072322/0.06796664)+tan(y))/x)/(0.2135675+0.48625857))),(((sin(pow(((cos(tan(((min((pow(x,0.5232112)+(0.92203027+0.30803722)),var(sin(0.31585497)))+y)*((var(min(0.013167322,0.38136327))/0.16655713)*y))))+0.98812956)*y),((y*max(sin(y),min(x,min(0.27616954,y))))-tan(y))))*0.5025784)+var(x))*(tan(0.5432199)*x))))),0.15265363)-x))))/x)",
            "b": "(((0.9808429*y)+((x/x)/cos((max(tan(tan(min(tan(((((y/0.11618203)+tan(0.5835171))/y)/(0.89223236+y))),(((sin(pow(((cos(tan(((min((pow(0.24051636,x)+(0.99156654+x)),var(sin(x)))+y)*((var(min(0.31781924,0.1597724))/x)*x))))+y)*y),((0.7990499*max(sin(0.6576655),min(0.73942494,min(y,0.96993935))))-tan(y))))*y)+var(y))*(tan(y)*x))))),y)-0.8117788))))/0.12653965)",
            "g": "(((y*y)+((x/y)/cos((max(tan(tan(min(tan(((((0.62779534/x)+tan(y))/x)/(y+x))),(((sin(pow(((cos(tan(((min((pow(y,0.16277343)+(y+y)),var(sin(y)))+y)*((var(min(0.64919347,0.8711048))/y)*0.54797906))))+y)*0.1491977),((0.17093557*max(sin(0.064533055),min(x,min(0.32251364,0.79857695))))-tan(y))))*0.26944828)+var(0.9531861))*(tan(x)*x))))),y)-0.37265968))))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.7529794"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.61812097",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.61812097",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "0.83253604"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(x,0.58981866))",
            "b": "tan(pow(y,x))",
            "g": "tan(pow(x,0.8375219))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*0.5689963)",
            "b": "(y*0.3112793)",
            "g": "(0.6899028*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        }
      ],
      "timestamp": "22h:49m:37s"
    },
    {
      "generation": 2,
      "ascendantID": "lqdknacr-n4xe-s26j-uvf7-n2gq52sxt1zp",
      "id": "jbr7oc1d-uxhd-4fdb-c10p-lzjsykwh78cl",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.35891908*0.21583486)+((y/y)/cos((max(tan(tan(min(tan(((((0.3072322/0.06796664)+tan(y))/x)/(0.2135675+0.48625857))),(y-min(var(max(cos(y),min(y,0.8129897))),0.703905))))),0.15265363)-x))))/x)",
            "b": "(((x*y)+((x/x)/cos((max(tan(tan(min(tan(((((y/0.11618203)+tan(0.5835171))/y)/(0.89223236+y))),(0.56065285-min(var(max(cos(y),min(y,0.4865343))),x))))),y)-0.8117788))))/0.12653965)",
            "g": "(((y*y)+((x/y)/cos((max(tan(tan(min(tan(((((0.62779534/x)+tan(y))/x)/(y+x))),(0.23295432-min(var(max(cos(y),min(y,0.22253984))),0.24908566))))),y)-0.37265968))))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*0.5689963)",
            "b": "(y*0.3112793)",
            "g": "(0.6899028*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.7529794"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.35891908*0.21583486)+((y/y)/x))/x)",
            "b": "(((x*y)+((x/x)/y))/0.12653965)",
            "g": "(((y*y)+((x/y)/y))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.35891908*0.21583486)+((y/y)/cos((min(tan(tan(min(tan(((((0.3072322/0.06796664)+tan(y))/x)/(0.2135675+0.48625857))),(y-max(var(max(cos(y),min(y,0.8129897))),0.703905))))),0.15265363)-x))))/x)",
            "b": "(((x*y)+((x/x)/cos((min(tan(tan(min(tan(((((y/0.11618203)+tan(0.5835171))/y)/(0.89223236+y))),(0.56065285-max(var(max(cos(y),min(y,0.4865343))),x))))),y)-0.8117788))))/0.12653965)",
            "g": "(((y*y)+((x/y)/cos((min(tan(tan(min(tan(((((0.62779534/x)+tan(y))/x)/(y+x))),(0.23295432-max(var(max(cos(y),min(y,0.22253984))),0.24908566))))),y)-0.37265968))))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.35891908*0.21583486)-((y/y)/cos((max(tan(tan(min(tan((((sin(0.3072322)+tan(y))/x)/(0.2135675+0.48625857))),(y-min(var(var(sin(y))),0.703905))))),0.15265363)-x))))/x)",
            "b": "(((x*y)-((x/x)/cos((max(tan(tan(min(tan((((sin(y)+tan(0.5835171))/y)/(0.89223236+y))),(0.56065285-min(var(var(sin(y))),x))))),y)-0.8117788))))/0.12653965)",
            "g": "(((y*y)-((x/y)/cos((max(tan(tan(min(tan((((sin(0.62779534)+tan(y))/x)/(y+x))),(0.23295432-min(var(var(sin(y))),0.24908566))))),y)-0.37265968))))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.35891908*0.21583486)+((y/y)/cos((max(tan(tan(min(tan(((((0.3072322/0.06796664)+tan(y))/x)/(0.2135675+0.48625857))),(y-min(var(var(cos(y))),0.703905))))),0.15265363)-x))))/x)",
            "b": "(((x*y)+((x/x)/cos((max(tan(tan(min(tan(((((y/0.11618203)+tan(0.5835171))/y)/(0.89223236+y))),(0.56065285-min(var(var(cos(y))),x))))),y)-0.8117788))))/0.12653965)",
            "g": "(((y*y)+((x/y)/cos((max(tan(tan(min(tan(((((0.62779534/x)+tan(y))/x)/(y+x))),(0.23295432-min(var(var(cos(y))),0.24908566))))),y)-0.37265968))))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(((0.35891908/0.21583486)+((y/y)/x)))",
            "b": "sin(((x/y)+((x/x)/y)))",
            "g": "sin(((y/x)+((x/y)/y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.509366*0.21583486)+((y*y)/x))/x)",
            "b": "(((x*y)+((x*x)/y))/0.12653965)",
            "g": "(((y*y)+((x*y)/y))/x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(x,0.58981866))",
            "b": "tan(pow(y,x))",
            "g": "tan(pow(x,0.8375219))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(x,0.58981866))",
            "b": "tan(pow(y,x))",
            "g": "tan(pow(x,0.8375219))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(pow(x,0.58981866))",
            "b": "tan(pow(y,x))",
            "g": "tan(pow(x,0.8375219))"
          }
        }
      ],
      "timestamp": "22h:49m:46s"
    }
  ],
  "timestamp": "2024-05-04-22-49-00"
}
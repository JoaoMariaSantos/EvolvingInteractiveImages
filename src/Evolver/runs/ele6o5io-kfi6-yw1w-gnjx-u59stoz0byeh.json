{
  "id": "ele6o5io-kfi6-yw1w-gnjx-u59stoz0byeh",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "4mkqrjn8-wcbt-y1al-gkyb-muous6qsspqx",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.6671092*x)",
            "b": "(x*x)",
            "g": "(y*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(min(cos((pow(x,max(pow(y,x),x))-0.60440326)),(max((min((y*0.32965547),0.51132095)+x),((0.32022625*0.7130597)+max(min(y,y),0.4640574)))*pow(x,0.035331845))),x)",
            "b": "min(min(cos((pow(y,max(pow(x,0.9809169),y))-y)),(max((min((x*0.5621987),0.23406225)+x),((0.8819647*0.3821152)+max(min(x,0.12889409),0.5956755)))*pow(0.1797089,x))),0.058601975)",
            "g": "min(min(cos((pow(y,max(pow(0.35718352,x),0.7819637))-0.5412011)),(max((min((x*x),x)+x),((0.16951114*x)+max(min(x,y),y)))*pow(0.70802146,0.92033225))),0.35845596)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(pow(x,(0.83338094*y)))*sin(max(x,y)))",
            "b": "(sin(pow(0.4837904,(y*x)))*sin(max(x,0.19369143)))",
            "g": "(sin(pow(x,(y*0.4541847)))*sin(max(0.84017855,y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(sin(var((var((cos(y)-min(0.3229469,x)))-sin((sin(0.23381245)*(0.4422394+x)))))),x)",
            "b": "max(sin(var((var((cos(0.6993774)-min(y,x)))-sin((sin(0.31921113)*(y+y)))))),x)",
            "g": "max(sin(var((var((cos(0.83086485)-min(x,0.5559849)))-sin((sin(0.9277906)*(y+0.34850657)))))),0.5688059)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x-pow((min(max((pow(0.48383796,x)+x),(pow(0.6006058,y)+sin(x))),(max(y,cos(0.4269907))/(var(y)-x)))-min((max((x-0.492909),0.17233998)/sin(max(0.27977407,y))),0.3070103)),pow(min(pow(x,sin(0.85735524)),y),max(0.764083,min(var(pow(0.8820083,y)),y)))))",
            "b": "(0.4002024-pow((min(max((pow(x,0.8736586)+0.021434963),(pow(x,0.44267035)+sin(0.5406477))),(max(x,cos(x))/(var(x)-0.21771419)))-min((max((y-0.8615148),y)/sin(max(0.59932834,y))),x)),pow(min(pow(x,sin(x)),y),max(x,min(var(pow(0.76240486,0.8973457)),y)))))",
            "g": "(y-pow((min(max((pow(x,y)+x),(pow(y,x)+sin(0.65938246))),(max(x,cos(x))/(var(x)-0.11712617)))-min((max((0.732566-x),0.7129496)/sin(max(0.9001635,0.5881321))),0.78911465)),pow(min(pow(x,sin(0.6256292)),x),max(y,min(var(pow(x,0.35082203)),x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(tan((tan(0.6024209)-(tan(var(min(x,x)))+0.5178323))),0.32815522)",
            "b": "min(tan((tan(y)-(tan(var(min(0.877786,x)))+0.54580665))),y)",
            "g": "min(tan((tan(0.81939036)-(tan(var(min(y,y)))+y))),0.990136)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.6257259",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.708724",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-min(tan(0.50351393),y))",
            "b": "(0.17246747-min(tan(x),y))",
            "g": "(0.5852902-min(tan(y),y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(max(y,cos((pow(((x*x)+y),cos(x))/(y+0.709742)))),0.43792516)",
            "b": "min(max(0.5422774,cos((pow(((0.6451315*0.6849382)+x),cos(y))/(x+y)))),0.4447015)",
            "g": "min(max(x,cos((pow(((y*x)+y),cos(y))/(x+x)))),0.8113446)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.9867051-x)/0.6244329)",
            "b": "((0.87612605-y)/y)",
            "g": "((0.29977655-y)/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(x)",
            "b": "var(x)",
            "g": "var(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min((x-x),min(x,0.14663672))",
            "b": "min((x-0.37221104),min(0.91868573,0.1958912))",
            "g": "min((y-0.70281225),min(0.48572588,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(((cos(var(max(sin(0.6905129),0.35726112)))/(0.8642968+y))/tan(((sin(tan(y))*y)*y))),0.85648817)",
            "b": "min(((cos(var(max(sin(x),x)))/(0.8994064+y))/tan(((sin(tan(0.1925227))*y)*y))),0.13161421)",
            "g": "min(((cos(var(max(sin(y),0.89036286)))/(y+y))/tan(((sin(tan(y))*0.4518392)*0.993524))),0.3388778)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(var(tan((sin(0.47520375)/0.005692005))))",
            "b": "var(var(tan((sin(x)/0.06730914))))",
            "g": "var(var(tan((sin(x)/y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.70867467",
            "g": "0.27455717"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.24844122",
            "b": "x",
            "g": "x"
          }
        }
      ],
      "timestamp": "22h:55m:53s"
    },
    {
      "generation": 0,
      "ascendantID": "4mkqrjn8-wcbt-y1al-gkyb-muous6qsspqx",
      "id": "cn6zkrka-dn6m-t946-19u1-gck1dhpn50z6",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((0.1858322-x))",
            "b": "cos((y-0.17989057))",
            "g": "cos((x-x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((y-0.56064963)*y)",
            "b": "((0.006024778-y)*y)",
            "g": "((x-0.5950334)*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.36190188",
            "g": "0.450965"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(pow(x,min(var((x*((x+y)/x))),y)),(y+y))",
            "b": "max(pow(0.883338,min(var((y*((x+0.7332843)/x))),0.1495986)),(x+y))",
            "g": "max(pow(y,min(var((y*((x+0.1886673)/x))),x)),(0.4161331+x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.69417983",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-max(var(pow((0.21536922-0.9343727),0.21123397)),cos(y)))",
            "b": "(x-max(var(pow((x-x),y)),cos(y)))",
            "g": "(x-max(var(pow((x-0.3783288),x)),cos(0.42636913)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(0.5030771+0.03527659)",
            "g": "(x+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.2211839-y)",
            "b": "(y-y)",
            "g": "(0.751111-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.96014106",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var(0.20334935)-y)",
            "b": "(var(x)-y)",
            "g": "(var(x)-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((x-x)-x)",
            "b": "((y-0.61472386)-0.3821513)",
            "g": "((0.14732015-0.5190804)-0.82884514)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(var((0.6632874/0.7530121)))",
            "b": "cos(var((y/x)))",
            "g": "cos(var((x/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(cos(max(((0.6240898-x)-0.49605095),tan(y))),x)",
            "b": "max(cos(max(((y-x)-y),tan(y))),y)",
            "g": "max(cos(max(((y-x)-0.49134815),tan(y))),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.47316313",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(((x+tan(y))*y),var(var(cos(var(x)))))",
            "b": "max(((x+tan(x))*x),var(var(cos(var(0.66770124)))))",
            "g": "max(((y+tan(x))*0.13692713),var(var(cos(var(0.62610734)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(sin(var(x)),sin(((min(x,(y-max(x,x)))*tan(y))/(y+max(((0.9067885/0.92389566)/0.01134789),pow(pow(0.4508906,y),(y-y)))))))",
            "b": "max(sin(var(y)),sin(((min(0.52962184,(x-max(0.7408415,0.59707224)))*tan(x))/(x+max(((y/x)/y),pow(pow(y,x),(x-0.47685313)))))))",
            "g": "max(sin(var(x)),sin(((min(x,(x-max(y,x)))*tan(y))/(0.55557346+max(((y/x)/0.11952245),pow(pow(y,x),(x-y)))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "x"
          }
        }
      ],
      "timestamp": "22h:56m:3s"
    }
  ],
  "timestamp": "2024-05-04-22-55-50"
}
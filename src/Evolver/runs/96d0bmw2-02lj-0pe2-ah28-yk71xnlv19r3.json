{
  "id": "96d0bmw2-02lj-0pe2-ah28-yk71xnlv19r3",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "0566r4nc-nw75-0jrh-mt67-yn92fpls9478",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "var(cos(x))",
            "b": "var(cos(x))",
            "g": "var(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(0.4155457))",
            "b": "cos(cos(y))",
            "g": "cos(cos(0.72256064))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.84945095",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-y)",
            "b": "(y-x)",
            "g": "(y-0.5817282)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(var(sin((var(min(min(x,(x-y)),x))*sin(0.07927966)))),y),min(y,0.45380867))",
            "b": "pow(pow(var(sin((var(min(min(0.3073175,(0.98232526-x)),x))*sin(x)))),y),min(y,y))",
            "g": "pow(pow(var(sin((var(min(min(x,(x-0.4133842)),y))*sin(y)))),y),min(y,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*(0.40610862-(tan(var((y*y)))-0.76047224)))",
            "b": "(x*(x-(tan(var((x*x)))-y)))",
            "g": "(y*(y-(tan(var((x*x)))-0.48024023)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((max(sin(tan(min(y,x))),y)*0.7840551)/min((min(y,x)*max(var(y),x)),0.8799904))",
            "b": "((max(sin(tan(min(x,y))),y)*0.22812617)/min((min(y,0.82544875)*max(var(x),0.10844654)),x))",
            "g": "((max(sin(tan(min(x,0.5313982))),y)*x)/min((min(x,x)*max(var(x),0.43911213)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(max((sin(sin(tan((x+y))))*tan(max(pow(cos(x),x),sin(y)))),(pow(x,x)+y)))+y)+0.56066376)",
            "b": "((sin(max((sin(sin(tan((0.32431233+0.072511196))))*tan(max(pow(cos(x),x),sin(y)))),(pow(x,0.24790925)+x)))+y)+x)",
            "g": "((sin(max((sin(sin(tan((0.89540917+x))))*tan(max(pow(cos(0.46792012),x),sin(0.28159297)))),(pow(x,y)+x)))+0.81005806)+0.5640945)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "0.24196458"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(tan((x/x))))",
            "b": "cos(sin(tan((y/y))))",
            "g": "cos(sin(tan((x/0.06375593))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.9435119",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.7158991",
            "g": "0.5057938"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max((y/0.31903964),((var(min((min((x*x),y)+0.44287688),var(cos(pow(0.4634108,0.62142366)))))*y)-y))/0.13880825)",
            "b": "(max((y/x),((var(min((min((y*x),x)+0.58095735),var(cos(pow(0.088770926,y)))))*0.005361736)-x))/x)",
            "g": "(max((0.99608874/x),((var(min((min((0.097806394*0.2812541),0.06728858)+y),var(cos(pow(y,y)))))*y)-y))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(x,0.17201775)",
            "b": "min(0.52567863,x)",
            "g": "min(x,0.6951846)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((pow(pow(y,y),x)*0.0925684))",
            "b": "sin((pow(pow(0.6032919,0.18291092),y)*x))",
            "g": "sin((pow(pow(x,y),0.97687805)*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.95522743",
            "g": "0.6024297"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan((cos(x)/x)))",
            "b": "sin(tan((cos(x)/y)))",
            "g": "sin(tan((cos(y)/x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "y"
          }
        }
      ],
      "timestamp": "23h:37m:0s"
    },
    {
      "generation": 1,
      "ascendantID": "0566r4nc-nw75-0jrh-mt67-yn92fpls9478",
      "id": "994dq6vo-c4u7-h7sr-xj2w-1z2uci1tudsf",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "var(cos(x))",
            "b": "var(cos(x))",
            "g": "var(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(tan((x/x))))",
            "b": "cos(sin(tan((y/y))))",
            "g": "cos(sin(tan((x/0.06375593))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(max((sin(cos(cos((x+y))))-tan(max(min(cos(x),x),sin(y)))),(pow(x,x)+y)))-y)-0.56066376)",
            "b": "((sin(max((sin(cos(cos((0.32431233+0.209218))))-tan(max(min(cos(y),x),sin(y)))),(pow(x,0.24790925)+x)))-y)-x)",
            "g": "((sin(max((sin(cos(cos((0.89540917+x))))-tan(max(min(cos(0.5289315),x),sin(0.28159297)))),(pow(x,y)+x)))-0.81005806)-0.5640945)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.77684927",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(pow(var(sin((var(min(max(y,(x*y)),x))-sin(0.07927966)))),y),min(y,x))",
            "b": "pow(pow(var(sin((var(min(max(0.3073175,(0.98232526*x)),x))-sin(x)))),y),min(y,0.84945095))",
            "g": "pow(pow(var(sin((var(min(max(x,(x*0.4133842)),y))-sin(y)))),y),min(y,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.84945095",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(cos(0.32987553))",
            "b": "cos(cos(y))",
            "g": "cos(cos(0.4344948))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-y)",
            "b": "(y-x)",
            "g": "(y-0.5817282)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.95522743",
            "g": "0.6024297"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-y)",
            "b": "(y-x)",
            "g": "(x-0.42647243)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max((y/0.31903964),((var(min((min((x*x),y)+0.44287688),var(cos(pow(0.4634108,0.62142366)))))*y)-y))/0.13880825)",
            "b": "(max((y/x),((var(min((min((y*x),x)+0.58095735),var(cos(pow(0.088770926,y)))))*0.0)-x))/x)",
            "g": "(max((0.7821316/x),((var(min((min((0.10110701*0.2812541),0.029785864)+y),var(cos(pow(y,y)))))*y)-y))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(cos((x*((x+x)/(sin(cos(min((min(var(y),(0.34697396-0.0012438297))-x),((x+cos(x))/max((y/0.92135954),(y+y))))))+y)))))",
            "b": "var(cos((x*((y+x)/(sin(cos(min((min(var(y),(x-y))-x),((0.7955573+cos(y))/max((0.69139624/y),(0.4791085+0.925189))))))+0.9386809)))))",
            "g": "var(cos((x*((y+y)/(sin(cos(min((min(var(y),(0.34109652-y))-0.9223727),((0.083753586+cos(y))/max((y/0.2621879),(y+y))))))+x)))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(sin(cos(max((sin(sin(tan((x+y))))*tan(max(pow(cos(x),x),sin(y)))),(pow(x,x)+y)))),((var(min((min((x/x),y)+0.44287688),var(cos(pow(0.4634108,0.62142366)))))*y)-y))/0.13880825)",
            "b": "(max(sin(cos(max((sin(sin(tan((0.32431233+0.072511196))))*tan(max(pow(cos(x),x),sin(y)))),(pow(x,0.24790925)+x)))),((var(min((min((y/x),x)+0.58095735),var(cos(pow(0.088770926,y)))))*0.005361736)-x))/x)",
            "g": "(max(sin(cos(max((sin(sin(tan((0.89540917+x))))*tan(max(pow(cos(0.46792012),x),sin(0.28159297)))),(pow(x,y)+x)))),((var(min((min((0.097806394/0.2812541),0.06728858)+y),var(cos(pow(y,y)))))*y)-y))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*(0.40610862-(tan(var((y*y)))-0.76047224)))",
            "b": "(x*(x-(tan(var((x*x)))-y)))",
            "g": "(y*(y-(tan(var((x*x)))-0.48024023)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*(tan(y)-(tan(var((y*y)))-0.76047224)))",
            "b": "(x*(tan(0.9599188)-(tan(var((x*x)))-y)))",
            "g": "(y*(tan(0.005840957)-(tan(var((x*x)))-0.48024023)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.84945095",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(0.4155457))",
            "b": "cos(tan(y))",
            "g": "cos(tan(0.72256064))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan((cos(x)*x)))",
            "b": "sin(tan((cos(x)*y)))",
            "g": "sin(tan((cos(y)*x)))"
          }
        }
      ],
      "timestamp": "23h:37m:16s"
    },
    {
      "generation": 2,
      "ascendantID": "994dq6vo-c4u7-h7sr-xj2w-1z2uci1tudsf",
      "id": "8wi5l310-z9um-kig8-00x9-u10o7d77if1y",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "var(cos(x))",
            "b": "var(cos(x))",
            "g": "var(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(0.35189605))",
            "b": "tan(cos(y))",
            "g": "tan(cos(0.5508519))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*(tan(y)+(0.49423403*tan(0.9132913))))",
            "b": "(x*(tan(0.9599188)+(y*tan(y))))",
            "g": "(y*(tan(0.005840957)+(0.81494987*tan(0.9080486))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(max((y/0.31903964),((var(min((min((x*x),y)+0.44287688),var(tan(pow(0.4634108,0.62142366)))))*y)-y)))",
            "b": "sin(max((y/x),((var(min((min((y*x),x)+0.58095735),var(tan(pow(0.18546373,y)))))*0.0)-x)))",
            "g": "sin(max((0.7821316/x),((var(min((min((0.0*0.2812541),0.029785864)+y),var(tan(pow(y,y)))))*y)-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(cos(x))",
            "b": "var(cos(x))",
            "g": "var(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(sin(tan((x/x))))",
            "b": "cos(sin(tan((y/y))))",
            "g": "cos(sin(tan((x/0.2123704))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((cos(max((sin(sin(cos((x+y))))*tan(max(pow(tan(x),x),cos(y)))),(pow(x,x)+y)))/0.31903964),((var(min((min((x/x),y)+0.44287688),var(sin(pow(0.4634108,0.62142366)))))/y)-x))/0.13880825)",
            "b": "(min((cos(max((sin(sin(cos((0.32431233+0.072511196))))*tan(max(pow(tan(x),x),cos(y)))),(pow(y,0.24790925)+x)))/x),((var(min((min((y/x),x)+0.58095735),var(sin(pow(0.088770926,y)))))/0.005361736)-x))/x)",
            "g": "(min((cos(max((sin(sin(cos((0.89540917+x))))*tan(max(pow(tan(0.46792012),x),cos(0.28159297)))),(pow(x,y)+x)))/x),((var(min((min((0.097806394/0.3574514),0.06728858)+y),var(sin(pow(y,y)))))/y)-y))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(0.32987553))",
            "b": "cos(tan(y))",
            "g": "cos(tan(0.4344948))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(tan((cos(x)*x)))",
            "b": "sin(tan((cos(x)*y)))",
            "g": "sin(tan((cos(y)*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(cos(x))",
            "b": "var(cos(x))",
            "g": "var(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(tan(0.4155457))",
            "b": "cos(tan(y))",
            "g": "cos(tan(0.72256064))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos(x))",
            "b": "tan(cos(x))",
            "g": "tan(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(sin(sin(max((sin(sin(tan((x+y))))-tan(max(pow(cos(x),x),cos(y)))),(pow(x,x)+y)))),((var(min((min((x/x),y)+0.6361544),var(sin(pow(0.4634108,0.62142366)))))*y)-y))/0.13880825)",
            "b": "(max(sin(sin(max((sin(sin(tan((0.32431233+0.072511196))))-tan(max(pow(cos(x),x),cos(y)))),(pow(x,0.24790925)+x)))),((var(min((min((y/x),x)+0.42956793),var(sin(pow(0.088770926,y)))))*0.22501144)-x))/x)",
            "g": "(max(sin(sin(max((sin(sin(tan((0.89540917+x))))-tan(max(pow(cos(0.46792012),x),cos(0.28159297)))),(pow(x,y)+x)))),((var(min((min((0.097806394/0.2812541),0.06728858)+y),var(sin(pow(y,y)))))*y)-y))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.77684927",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4994915",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max((y/0.31903964),((var(min((min((x/x),y)+0.44287688),var(cos(pow(0.4634108,0.34845424)))))*y)-y))/0.13880825)",
            "b": "(max((y/x),((var(min((min((y/x),x)+0.61002064),var(cos(pow(0.088770926,y)))))*0.0)-x))/x)",
            "g": "(max((0.7821316/x),((var(min((min((0.10110701/0.46932685),0.029785864)+y),var(cos(pow(y,y)))))*y)-y))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-y)",
            "b": "(y-x)",
            "g": "(y-0.5817282)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.77684927",
            "g": "x"
          }
        }
      ],
      "timestamp": "23h:38m:1s"
    },
    {
      "generation": 3,
      "ascendantID": "8wi5l310-z9um-kig8-00x9-u10o7d77if1y",
      "id": "gi5sbm2m-qolw-v1pi-ik62-1gqzedxsu7b1",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "var(cos(x))",
            "b": "var(cos(x))",
            "g": "var(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max((y/0.31903964),((var(min((min((x/x),y)+0.44287688),var(cos(pow(0.4634108,0.34845424)))))*y)-y))/0.13880825)",
            "b": "(max((y/x),((var(min((min((y/x),x)+0.61002064),var(cos(pow(0.088770926,y)))))*0.0)-x))/x)",
            "g": "(max((0.7821316/x),((var(min((min((0.10110701/0.46932685),0.029785864)+y),var(cos(pow(y,y)))))*y)-y))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min((x/0.31903964),((((0.6593047+y)+x)*y)-y)))",
            "b": "sin(min((y/x),((((x+y)+0.49174458)*0.0)-x)))",
            "g": "sin(min((0.62466013/x),((((y+x)+y)*y)-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var((cos(x)*x))/y)",
            "b": "(var((cos(x)*y))/0.37639537)",
            "g": "(var((cos(x)*x))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var((cos(0.9083272)*x))/y)",
            "b": "(var((cos(0.66872644)*y))/0.37639537)",
            "g": "(var((cos(0.9460863)*x))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4994915",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4994915",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.77684927",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max((y/0.31903964),((var(max((min((x/x),y)+0.44287688),tan(cos(pow(0.4634108,0.34845424)))))*y)-y))/sin(y))",
            "b": "(max((y/x),((var(max((min((y/x),x)+0.61002064),tan(cos(pow(0.088770926,y)))))*0.0)-x))/sin(x))",
            "g": "(max((0.7821316/x),((var(max((min((0.10110701/0.46932685),0.029785864)+y),tan(cos(pow(y,y)))))*y)-y))/sin(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.77684927",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(sin(y),((var(max((min((x/x),y)+0.44287688),var(tan(pow(0.4634108,0.34845424)))))*y)+y))/0.21821544)",
            "b": "(max(sin(y),((var(max((min((y/y),x)+0.61002064),var(tan(pow(0.088770926,y)))))*0.0)+x))/x)",
            "g": "(max(sin(0.7821316),((var(max((min((0.10110701/0.20099324),0.029785864)+y),var(tan(pow(y,y)))))*y)+y))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((cos(min((sin(sin(sin((x+y))))*tan(max(pow(tan(x),x),cos(y)))),(pow(x,x)+y)))/0.31903964),((tan(pow((pow((x/x),y)+0.44287688),tan(sin(pow(0.4634108,0.62142366)))))/y)-x))*0.13880825)",
            "b": "(min((cos(min((sin(sin(sin((0.32431233+0.072511196))))*tan(max(pow(tan(x),x),cos(y)))),(pow(x,0.24790925)+x)))/x),((tan(pow((pow((y/x),x)+0.58095735),tan(sin(pow(0.088770926,y)))))/0.005361736)-x))*x)",
            "g": "(min((cos(min((sin(sin(sin((x+x))))*tan(max(pow(tan(0.6643506),x),cos(0.28159297)))),(pow(x,y)+x)))/x),((tan(pow((pow((0.26902917/0.3574514),0.06728858)+y),tan(sin(pow(y,y)))))/y)-y))*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(cos(x))",
            "b": "var(cos(x))",
            "g": "var(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.5329925/y)-(sin(min(y,max(max(cos(var(y)),0.16202599),cos((y+pow(max(0.19201416,y),x))))))*min(((y*max(tan(((x-y)+0.2388584)),y))+x),x)))/y)",
            "b": "(((x/y)-(sin(min(0.7488531,max(max(cos(var(y)),y),cos((0.9063955+pow(max(0.3966658,0.77736425),0.21103835))))))*min(((x*max(tan(((0.039330304-x)+y)),0.6951254))+x),x)))/0.37639537)",
            "g": "(((y/x)-(sin(min(x,max(max(cos(var(0.10670096)),x),cos((0.6468755+pow(max(y,0.10590488),y))))))*min(((0.040527105*max(tan(((y-x)+y)),x))+x),x)))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((tan((x/x))/0.68695986))",
            "b": "cos((tan((x/y))/0.21208084))",
            "g": "cos((tan((0.696484/0.2123704))/y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(var((x/x))))",
            "b": "sin(sin(var((y/y))))",
            "g": "sin(sin(var((x/0.2123704))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos((tan(var(x))*x)))",
            "b": "sin(cos((tan(var(y))*y)))",
            "g": "sin(cos((tan(var(x))*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.77684927",
            "g": "x"
          }
        }
      ],
      "timestamp": "23h:38m:4s"
    },
    {
      "generation": 4,
      "ascendantID": "gi5sbm2m-qolw-v1pi-ik62-1gqzedxsu7b1",
      "id": "tj0lqzb4-ue6m-kod1-2efr-vx54xdap3r48",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "var(cos(x))",
            "b": "var(cos(x))",
            "g": "var(cos(x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4994915",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.77684927",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.77684927",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max((cos(0.9083272)*x),0.10307823)/y)",
            "b": "(max((cos(0.66872644)*y),x)/0.13610348)",
            "g": "(max((cos(0.90740454)*x),y)/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.7781277",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(var((x/x))))",
            "b": "sin(sin(var((y/y))))",
            "g": "sin(sin(var((x/0.2123704))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(sin(y),((var(min((min((x/x),y)+0.66680807),var(tan(pow(0.4634108,0.34845424)))))*y)+y))/0.28834543)",
            "b": "(min(sin(y),((var(min((min((y/y),x)+0.61002064),var(tan(pow(0.088770926,y)))))*0.0)+x))/x)",
            "g": "(min(sin(0.7821316),((var(min((min((0.0/0.20099324),0.029785864)+y),var(tan(pow(y,y)))))*y)+y))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(((0.42911118/y)-(sin(pow(y,max(max(sin(var(y)),0.16202599),cos((y+pow(max(0.19201416,y),x))))))*min(var(sin((0.31048465+(x-max(var(cos(sin(max(y,y)))),(var((cos(y)/y))+(cos(var(0.90268135))/y))))))),x))))",
            "b": "sin(((x/y)-(sin(pow(0.7488531,max(max(sin(var(y)),y),cos((0.9063955+pow(max(0.3966658,0.77736425),0.21103835))))))*min(var(sin((y+(0.5721091-max(var(cos(sin(max(0.20160306,0.5583286)))),(var((cos(x)/y))+(cos(var(x))/x))))))),x))))",
            "g": "sin(((y/x)-(sin(pow(x,max(max(sin(var(0.10670096)),x),cos((0.6468755+pow(max(y,0.10590488),y))))))*min(var(sin((0.34048337+(0.37404692-max(var(cos(sin(max(x,x)))),(var((cos(x)/0.46400106))+(cos(var(0.783376))/x))))))),x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos((((y-var(cos(var((tan(x)+var(max(cos(x),(x-x))))))))*x)*x)))",
            "b": "sin(cos((((x-var(cos(var((tan(x)+var(max(cos(x),(x-0.062374055))))))))*y)*y)))",
            "g": "sin(cos((((0.5648634-var(cos(var((tan(x)+var(max(cos(x),(y-0.4797973))))))))*0.3769226)*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.4994915",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.77684927",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(min(sin(x),((((0.6593047+y)+x)*y)-y)))",
            "b": "sin(min(sin(y),((((x+y)+0.50566626)*0.0)-x)))",
            "g": "sin(min(sin(0.62466013),((((y+x)+y)*y)-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var((sin(cos((tan(var(x))*x)))*x))/y)",
            "b": "(var((sin(cos((tan(var(y))*y)))*y))/0.6089264)",
            "g": "(var((sin(cos((tan(var(x))*x)))*x))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(sin(var((x/x))))",
            "b": "sin(sin(var((y/y))))",
            "g": "sin(sin(var((x/0.2123704))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var((cos(x)*x))/y)",
            "b": "(var((cos(x)*y))/0.37639537)",
            "g": "(var((cos(x)*x))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,x)",
            "b": "max(0.0,x)",
            "g": "max(y,0.035926938)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((tan(sin(x))/0.68695986))",
            "b": "cos((tan(sin(x))/0.21208084))",
            "g": "cos((tan(sin(0.696484))/y))"
          }
        }
      ],
      "timestamp": "23h:38m:6s"
    },
    {
      "generation": 0,
      "ascendantID": "tj0lqzb4-ue6m-kod1-2efr-vx54xdap3r48",
      "id": "doc71dq9-60hn-zto7-m4gr-5st496fjpg15",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(max(var((y+x)),y),max((((max(max(var((0.34696734*y)),y),tan(0.49969912))/max(x,0.34726256))*cos(x))-sin(0.27558446)),y))",
            "b": "max(max(var((0.54312015+0.580729)),y),max((((max(max(var((y*0.7044729)),y),tan(x))/max(y,0.9702124))*cos(x))-sin(0.7221812)),0.454888))",
            "g": "max(max(var((y+x)),y),max((((max(max(var((y*y)),0.3822847),tan(y))/max(x,x))*cos(0.025439143))-sin(x)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*(var(((y-cos((var(tan(x))-0.53963006)))*0.00728631))+y))",
            "b": "(0.92472106*(var(((0.11258644-cos((var(tan(0.21674627))-y)))*y))+x))",
            "g": "(y*(var(((0.38975465-cos((var(tan(x))-0.5507063)))*y))+0.942466))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(cos((y*y)))",
            "b": "tan(cos((y*y)))",
            "g": "tan(cos((x*x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(x)",
            "b": "sin(x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.0073176026",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.06450677",
            "g": "0.5583063"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(y)",
            "g": "tan(0.13771981)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((y+var((0.7775479+max(var(max((min(0.17074853,0.89143664)*x),0.31819528)),cos(min(0.3055324,0.069967926))))))-y)",
            "b": "((y+var((y+max(var(max((min(x,x)*y),x)),cos(min(x,0.65974885))))))-x)",
            "g": "((0.98862094+var((0.39619178+max(var(max((min(y,x)*y),y)),cos(min(y,x))))))-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var(tan(y))*y)",
            "b": "(var(tan(x))*0.85689855)",
            "g": "(var(tan(x))*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((var(tan(tan(((x+((x+x)-(y+0.36852425)))/((0.23876256+x)*x)))))/(0.8266652-(max((var(((y*y)+y))+x),(0.25845695-y))/min(max(y,0.9425125),0.36015898))))-x)",
            "b": "((var(tan(tan(((x+((0.15290558+x)-(x+x)))/((x+x)*x)))))/(0.45390862-(max((var(((0.69838876*x)+y))+y),(y-0.9515333))/min(max(x,x),0.91283923))))-y)",
            "g": "((var(tan(tan(((x+((y+0.14732373)-(x+y)))/((x+0.59554)*0.50882506)))))/(x-(max((var(((0.084974885*0.5925817)+x))+0.15572476),(y-0.30864555))/min(max(0.013631165,y),y))))-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "(y/0.46532893)",
            "g": "(x/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.00820899"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(0.13950777)",
            "g": "tan(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "(y*x)",
            "g": "(x*0.38868928)"
          }
        }
      ],
      "timestamp": "23h:38m:10s"
    },
    {
      "generation": 1,
      "ascendantID": "doc71dq9-60hn-zto7-m4gr-5st496fjpg15",
      "id": "ad8650oz-nujl-yisg-i4g9-j1w9lgtlj8d9",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "(y*x)",
            "g": "(x*0.38868928)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(y)",
            "g": "tan(0.13771981)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(max(var((y+x)),y),max((((max(max(var((0.34696734*y)),y),var(0.49969912))/max(x,0.34726256))/cos(x))+sin(0.27558446)),y))",
            "b": "max(max(var((0.54312015+0.580729)),y),max((((max(max(var((y*0.78390723)),y),var(x))/max(y,0.9702124))/cos(x))+sin(0.7221812)),0.454888))",
            "g": "max(max(var((y+x)),y),max((((max(max(var((y*y)),0.4942106),var(y))/max(x,x))/cos(0.025439143))+sin(x)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.0",
            "g": "0.5583063"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((var(tan(tan(((x+((x+x)*(y+0.36852425)))*(((max(max(tan((0.34696734/y)),y),tan(0.49969912))/max(x,0.34726256))-tan(x))-sin(0.27558446))))))/(0.8266652-(min(((y+y)+x),(0.25845695-y))/min(max(y,0.7691785),0.36015898))))-x)",
            "b": "((var(tan(tan(((x+((0.15290558+x)*(x+x)))*(((max(max(tan((y/0.7044729)),y),tan(x))/max(y,0.9702124))-tan(x))-sin(0.7221812))))))/(0.45390862-(min(((x+y)+y),(y-0.7616823))/min(max(x,x),0.91283923))))-y)",
            "g": "((var(tan(tan(((x+((y+0.14732373)*(x+y)))*(((max(max(tan((y/y)),0.3822847),tan(y))/max(x,x))-tan(0.025439143))-sin(x))))))/(x-(min(((x+0.49132758)+0.15572476),(y-0.30864555))/min(max(0.013631165,y),y))))-x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((y+var((0.9514221-max(var(max((min(0.17074853,0.89143664)*x),0.31819528)),cos(min(0.27358443,0.069967926))))))+y)",
            "b": "((y+var((y-max(var(max((min(x,x)*y),x)),cos(min(x,0.65974885))))))+x)",
            "g": "((0.98862094+var((0.39619178-max(var(max((min(y,x)*y),y)),cos(min(y,x))))))+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x/y)",
            "b": "(y/0.46532893)",
            "g": "(x/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "x",
            "g": "0.00820899"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((y/(tan(0.8247065)+y)),tan(tan((((0.011366129-x)*cos(cos(y)))*y))))*y)",
            "b": "(min((x/(tan(0.34113264)+x)),tan(tan((((y-y)*cos(cos(y)))*0.71292204))))*0.2226224)",
            "g": "(min((x/(tan(x)+y)),tan(tan((((y-y)*cos(cos(0.048478425)))*x))))*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(0.13950777)",
            "g": "var(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(cos(min(cos((0.9088717+x)),y)))",
            "b": "sin(cos(min(cos((0.15167892+0.7997328)),y)))",
            "g": "sin(cos(min(cos((0.988229+x)),0.8915309)))"
          }
        }
      ],
      "timestamp": "23h:38m:12s"
    },
    {
      "generation": 2,
      "ascendantID": "ad8650oz-nujl-yisg-i4g9-j1w9lgtlj8d9",
      "id": "eeyu11ex-7m0z-cnqh-erv2-6yefzukvbfw4",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(max(var((y+x)),y),max((((max(max(tan((0.34696734*y)),y),var(0.49969912))/max(x,0.34726256))/cos(x))+sin(0.011717811)),y))",
            "b": "max(max(var((0.54312015+0.63679034)),y),max((((max(max(tan((y*0.78390723)),y),var(x))/max(y,0.9702124))/cos(x))+sin(0.7221812)),0.454888))",
            "g": "max(max(var((y+0.83715874)),y),max((((max(max(tan((y*y)),0.55565834),var(y))/max(x,x))/cos(0.025439143))+sin(x)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(y)",
            "g": "tan(0.13771981)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.61186874"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(max(var((y+x)),y),max(((sin(var(max(var((0.34696734*y)),y)))/cos(x))+sin(0.30740166)),y))",
            "b": "max(max(var((0.54312015+0.580729)),y),max(((sin(var(max(var((y*0.78390723)),y)))/cos(x))+sin(0.7221812)),0.454888))",
            "g": "max(max(var((y+x)),y),max(((sin(var(max(var((y*y)),0.4942106)))/cos(0.0))+sin(x)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max((y*var(y)),tan(cos((((0.011366129-x)*cos(cos(y)))*y))))*y)",
            "b": "(max((x*var(0.13950777)),tan(cos((((y-y)*cos(cos(y)))*0.71292204))))*0.2226224)",
            "g": "(max((x*var(x)),tan(cos((((y-y)*cos(cos(0.048478425)))*x))))*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(max(var((y+x)),y),max((((var(max(tan((0.34696734*y)),y))*max(x,0.34726256))/cos(x))+sin(0.27558446)),y))",
            "b": "max(max(var((0.54312015+0.580729)),y),max((((var(max(tan((y*0.78390723)),y))*max(y,0.9702124))/cos(x))+sin(0.7221812)),0.454888))",
            "g": "max(max(var((y+x)),y),max((((var(max(tan((y*y)),0.4942106))*max(x,x))/cos(0.025439143))+sin(x)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.0",
            "g": "0.5583063"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(max(var((y+x)),y),max((((max(max(var((0.34696734*y)),y),var(0.49969912))/max(x,0.34726256))/cos(x))+sin(0.27558446)),y))",
            "b": "max(max(var((0.54312015+0.580729)),y),max((((max(max(var((y*0.78390723)),y),var(x))/max(y,x))/cos(x))+sin(0.7221812)),0.454888))",
            "g": "max(max(var((y+x)),y),max((((max(max(var((y*y)),0.4942106),var(y))/max(x,x))/cos(0.025439143))+sin(x)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(y)",
            "g": "tan(0.13771981)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(max(var((y+x)),y),max((((max(max(var((0.4524022*y)),y),var(0.49969912))/max(0.9243238,0.60647017))/cos(x))+sin(0.27558446)),x))",
            "b": "max(max(var((0.54312015+0.4174634)),y),max((((max(max(var((y*0.78390723)),y),var(x))/max(y,0.7742116))/cos(x))+sin(0.7221812)),0.2842266))",
            "g": "max(max(var((y+x)),y),max((((max(max(var((y*y)),0.4942106),var(y))/max(x,x))/cos(0.025439143))+sin(x)),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min((y/(tan(0.8247065)+y)),tan(tan((((0.011366129-x)*cos(cos(y)))*y))))*y)",
            "b": "(min((x/(tan(0.34113264)+x)),tan(tan((((y-y)*cos(cos(y)))*0.71292204))))*0.2226224)",
            "g": "(min((x/(tan(x)+y)),tan(tan((((y-y)*cos(cos(0.0)))*x))))*y)"
          }
        }
      ],
      "timestamp": "23h:38m:21s"
    },
    {
      "generation": 3,
      "ascendantID": "eeyu11ex-7m0z-cnqh-erv2-6yefzukvbfw4",
      "id": "5945qblg-yvgf-36k6-7gph-i92ldg9tpe1t",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var((y*max(y,0.8607838)))/y)",
            "b": "(var((y*max(0.13950777,y)))/0.22505999)",
            "g": "(var((x*max(x,0.80171907)))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(0.13771981)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.0",
            "g": "0.8120049"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(y)",
            "b": "tan(y)",
            "g": "tan(0.13771981)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(max(max((y+x),0.7782879),y),max((sin((max(max(tan((0.34696734*y)),y),var(0.50959533))/max(x,0.34726256)))+(0.011717811/y)),y))",
            "b": "max(max(max((0.29084074+0.63679034),y),y),max((sin((max(max(tan((y*0.55268013)),y),var(x))/max(y,0.88115656)))+(0.7221812/0.4323865)),0.6192185))",
            "g": "max(max(max((y+0.83715874),x),y),max((sin((max(max(tan((y*y)),0.55565834),var(y))/max(x,x)))+(x/y)),0.8470936))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.0",
            "g": "0.5583063"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.44067326",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.78949296"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(((max(((((var(x)/max(var(y),x))-cos((x/(x*0.7061974))))-min(cos((max(0.4041413,y)+x)),(((x+0.6267657)-0.1713472)+cos((x*0.32114214)))))*(0.75866854+x)),(x+(var(max(x,(tan(x)-y)))-tan(min(tan((x+x)),x)))))/cos(var(min((sin(((x-y)-0.7786639))+tan(sin(0.081007004))),(0.33059335+max((sin(x)*y),(cos(y)-y)))))))*max((tan(min(0.4160614,(max(tan(x),cos(var(x)))+y)))*sin(min(min(((x-min(y,x))*0.888115),0.7356364),0.2924611))),y)),tan(cos((((0.011366129*x)*cos(cos(y)))*y))))*y)",
            "b": "(max(((max(((((var(0.65067494)/max(var(0.62876433),0.03914237))-cos((0.20527607/(y*0.6346455))))-min(cos((max(x,0.6799752)+0.74413043)),(((x+0.5476597)-y)+cos((x*0.15184414)))))*(0.12150979+x)),(0.2606308+(var(max(y,(tan(x)-0.72805667)))-tan(min(tan((x+0.68604237)),y)))))/cos(var(min((sin(((x-0.86870277)-y))+tan(sin(0.52932554))),(x+max((sin(x)*y),(cos(y)-0.2960027)))))))*max((tan(min(x,(max(tan(0.13673115),cos(var(x)))+0.71817863)))*sin(min(min(((y-min(x,0.98604316))*x),y),0.69212866))),0.20461321)),tan(cos((((y*y)*cos(cos(y)))*0.8749074))))*0.2226224)",
            "g": "(max(((max(((((var(x)/max(var(0.6186674),y))-cos((x/(x*y))))-min(cos((max(y,x)+x)),(((0.76871485+0.5668316)-0.31424403)+cos((0.05033058*y)))))*(y+x)),(0.32686436+(var(max(0.5057112,(tan(y)-x)))-tan(min(tan((x+x)),0.25442916)))))/cos(var(min((sin(((x-0.41184443)-x))+tan(sin(y))),(0.72287285+max((sin(0.6290837)*0.56749463),(cos(0.7418842)-x)))))))*max((tan(min(0.32374907,(max(tan(y),cos(var(x)))+0.4190063)))*sin(min(min(((x-min(y,x))*y),y),0.35252827))),0.76575154)),tan(cos((((y*y)*cos(cos(0.048478425)))*x))))*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.0",
            "g": "0.5583063"
          }
        }
      ],
      "timestamp": "23h:38m:28s"
    },
    {
      "generation": 4,
      "ascendantID": "5945qblg-yvgf-36k6-7gph-i92ldg9tpe1t",
      "id": "f35eahvy-w5zd-m0b9-muy4-q37y9ctd1xit",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(y))+y)",
            "b": "(tan(sin(y))+x)",
            "g": "(tan(sin(x))+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(var((y*max(y,0.8607838)))/y)",
            "b": "(var((y*max(0.13950777,y)))/0.22505999)",
            "g": "(var((x*max(x,0.80171907)))/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.0",
            "g": "0.5583063"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(0.23978952)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(((max(((((var(x)/var(var(y)))-cos(sin(x)))-max(sin((max(0.4041413,y)+x)),(((x+0.6267657)-0.1713472)+sin((0.9775897*0.32114214)))))*(0.75866854+x)),(x+(var(max(x,(tan(x)*y)))+tan(min(tan((x+x)),x)))))/cos(max(min((sin(((max(sin(x),var(max(sin(var((0.1331631+((0.59264696/0.7869045)+x)))),min(cos(max(sin(x),(x/y))),y))))+0.65192753)-0.7786639))+tan(sin(0.081007004))),(0.33059335+max((sin(x)*y),(cos(y)-y)))),0.8520418)))*var((tan(min(0.4160614,(max(var(x),tan(tan(x)))+y)))*sin(max(max(((x-min(y,x))*0.888115),0.7356364),0.2924611))))),tan(cos((((0.0*x)*sin(tan(y)))*y))))*y)",
            "b": "(max(((max(((((var(0.41279632)/var(var(0.62876433)))-cos(sin(0.20527607)))-max(sin((max(x,0.6799752)+0.55896264)),(((x+0.5476597)-y)+sin((x*0.15184414)))))*(0.12150979+x)),(0.0+(var(max(y,(tan(x)*0.91238093)))+tan(min(tan((x+0.68604237)),y)))))/cos(max(min((sin(((max(sin(y),var(max(sin(var((y+((0.43704468/x)+y)))),min(cos(max(sin(y),(x/0.46678233))),x))))+y)-y))+tan(sin(0.52932554))),(x+max((sin(0.89787)*y),(cos(y)-0.2960027)))),y)))*var((tan(min(x,(max(var(0.13673115),tan(tan(x)))+0.71817863)))*sin(max(max(((y-min(x,0.720728))*x),y),0.69212866))))),tan(cos((((y*y)*sin(tan(y)))*0.8749074))))*0.2226224)",
            "g": "(max(((max(((((var(x)/var(var(0.6186674)))-cos(sin(x)))-max(sin((max(y,x)+x)),(((0.76871485+0.5668316)-0.31424403)+sin((0.05033058*y)))))*(y+x)),(0.3863926+(var(max(0.5057112,(tan(y)*x)))+tan(min(tan((x+x)),0.25442916)))))/cos(max(min((sin(((max(sin(x),var(max(sin(var((y+((0.009682953/x)+0.21972978)))),min(cos(max(sin(x),(y/y))),x))))+x)-x))+tan(sin(x))),(0.9773712+max((sin(0.7396796)*0.56749463),(cos(0.7418842)-x)))),y)))*var((tan(min(0.32374907,(max(var(y),tan(tan(x)))+0.4190063)))*sin(max(max(((x-min(y,x))*y),y),0.35252827))))),tan(cos((((y*x)*sin(tan(0.048478425)))*x))))*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.44067326",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(x)",
            "b": "var(0.0)",
            "g": "var(0.5583063)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.24523976",
            "g": "0.9921322"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(((max(((((max(x,0.9834173)/max(var(y),x))-cos((x/(y*0.87349904))))-min(cos((max(0.4041413,y)+x)),(((x+0.6267657)+0.1713472)+cos((x*0.32114214)))))*(0.75866854+x)),(x+(var(max(x,(tan(x)-y)))-tan(min(tan((x+x)),x)))))/cos(var(min((sin(((x-y)*0.62936914))+cos(sin(0.081007004))),(0.33059335+max(((x/0.058520213)*y),(cos(y)-y)))))))*max((tan(min(0.4160614,(max(tan(x),cos(var(x)))+y)))-sin(min(max(((x-min(y,x))*0.888115),0.7356364),0.2924611))),y)),cos(sin((((0.011366129*x)*cos(cos(y)))*y))))*y)",
            "b": "(max(((max(((((max(0.65067494,y)/max(var(0.41651636),0.03914237))-cos((0.43029678/(y*0.6346455))))-min(cos((max(x,0.6799752)+0.74413043)),(((x+0.4786344)+y)+cos((x*0.25602934)))))*(0.12150979+x)),(0.2606308+(var(max(y,(tan(x)-0.72805667)))-tan(min(tan((x+0.68604237)),y)))))/cos(var(min((sin(((x-0.86870277)*y))+cos(sin(0.56872034))),(x+max(((x/x)*y),(cos(y)-0.2960027)))))))*max((tan(min(x,(max(tan(0.13673115),cos(var(x)))+0.71817863)))-sin(min(max(((y-min(x,0.98604316))*x),y),0.41405421))),0.0)),cos(sin((((y*y)*cos(cos(y)))*0.7639128))))*0.2226224)",
            "g": "(max(((max(((((max(x,0.8866176)/max(var(0.7994847),y))-cos((x/(x*y))))-min(cos((max(y,x)+y)),(((0.76871485+0.44962597)+0.21874733)+cos((0.05033058*y)))))*(y+x)),(0.32686436+(var(max(0.5057112,(tan(y)-x)))-tan(min(tan((x+x)),0.25442916)))))/cos(var(min((sin(((x-0.41184443)*x))+cos(sin(x))),(0.72287285+max(((0.6593883/0.8178887)*0.56749463),(cos(0.7418842)-x)))))))*max((tan(min(0.32374907,(max(tan(y),cos(var(x)))+0.4190063)))-sin(min(max(((x-min(y,x))*y),y),0.35252827))),0.76575154)),cos(sin((((y*y)*cos(cos(0.048478425)))*x))))*y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.0",
            "g": "0.5583063"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        }
      ],
      "timestamp": "23h:38m:29s"
    },
    {
      "generation": 5,
      "ascendantID": "f35eahvy-w5zd-m0b9-muy4-q37y9ctd1xit",
      "id": "7hzn9x91-kmyz-z3uh-6st8-by30ks5c4bwn",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(0.23978952)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.44067326",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.24523976",
            "g": "0.9921322"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,y)",
            "b": "max(0.0,x)",
            "g": "max(0.5583063,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(x)",
            "b": "var(0.0)",
            "g": "var(0.5583063)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.24523976",
            "g": "0.9921322"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(0.23978952)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.0",
            "g": "0.5583063"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(((max(((((var(x)/var(var(y)))*cos(sin(x)))*max(cos((max(0.4041413,y)+x)),(((x+0.75445837)-0.1713472)+sin((0.9775897-0.32114214)))))*(0.75866854+x)),(x+(var(max(x,(tan(x)*y)))+tan(min(tan((x+x)),x)))))*sin(max(min((sin(((max(sin(x),var(max(sin(var((0.1331631-(sin(0.71789414)+x)))),max(cos(max(sin(x),sin(x))),y))))+0.65192753)-0.7786639))+tan(sin(0.081007004))),(0.33059335+max((sin(x)*y),(cos(y)-y)))),0.8520418)))*var((tan(min(0.4302908,(max(tan(x),tan(var(x)))+y)))*sin(max(max(((x-min(y,x))*0.888115),0.7356364),0.2924611))))),tan(cos((((0.0*x)*sin(tan(y)))*y))))*y)",
            "b": "(max(((max(((((var(0.41279632)/var(var(0.7811272)))*cos(sin(0.20527607)))*max(cos((max(x,0.6799752)+0.59617126)),(((x+0.25266916)-y)+sin((x-0.15184414)))))*(0.12150979+x)),(0.0+(var(max(y,(tan(x)*0.91238093)))+tan(min(tan((x+0.68604237)),y)))))*sin(max(min((sin(((max(sin(y),var(max(sin(var((y-(sin(0.43704468)+y)))),max(cos(max(sin(y),sin(x))),x))))+y)-y))+tan(sin(0.52932554))),(x+max((sin(0.89787)*y),(cos(y)-0.2960027)))),y)))*var((tan(min(x,(max(tan(0.13673115),tan(var(x)))+0.71817863)))*sin(max(max(((y-min(x,0.4942761))*x),y),0.69212866))))),tan(cos((((y*y)*sin(tan(y)))*0.8749074))))*0.2226224)",
            "g": "(max(((max(((((var(x)/var(var(0.33223972)))*cos(sin(x)))*max(cos((max(y,x)+y)),(((0.76871485+0.5668316)-0.31424403)+sin((0.29371998-y)))))*(y+x)),(0.22730134+(var(max(0.5057112,(tan(y)*x)))+tan(min(tan((x+x)),0.25442916)))))*sin(max(min((sin(((max(sin(x),var(max(sin(var((y-(sin(0.009682953)+0.21972978)))),max(cos(max(sin(x),sin(y))),x))))+x)-x))+tan(sin(x))),(0.7521116+max((sin(0.7396796)*0.56749463),(cos(0.7418842)-x)))),y)))*var((tan(min(0.32374907,(max(tan(y),tan(var(x)))+0.4190063)))*sin(max(max(((0.89511484-min(y,x))*y),y),0.35252827))))),tan(cos((((y*x)*sin(tan(0.048478425)))*x))))*y)"
          }
        }
      ],
      "timestamp": "23h:38m:59s"
    },
    {
      "generation": 6,
      "ascendantID": "7hzn9x91-kmyz-z3uh-6st8-by30ks5c4bwn",
      "id": "z8nczfzb-ygxz-2q4d-sdca-lf5nhq7hzze7",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(max(0.21608394,0.4048503))",
            "b": "var(max(y,0.30951476))",
            "g": "var(max(0.416946,y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(max(0.64439803,y))",
            "b": "var(max(0.57397074,x))",
            "g": "var(max(y,0.25699157))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.24523976",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(x)",
            "b": "var(0.0)",
            "g": "var(0.5583063)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(y,x)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.4281105",
            "g": "0.8218216"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(0.23978952)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(x)",
            "b": "var(0.0)",
            "g": "var(0.5583063)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        }
      ],
      "timestamp": "23h:39m:2s"
    },
    {
      "generation": 7,
      "ascendantID": "z8nczfzb-ygxz-2q4d-sdca-lf5nhq7hzze7",
      "id": "30veddrj-cycr-s83f-jkl1-p048gc8depmn",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.24523976",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(y)",
            "b": "var(y)",
            "g": "var(0.23978952)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.65148586",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(x)",
            "b": "var(0.0)",
            "g": "var(0.5583063)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.4281105",
            "g": "0.8218216"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.53816503",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(y,x)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(y,x)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.4281105",
            "g": "0.6200706"
          }
        }
      ],
      "timestamp": "23h:39m:6s"
    },
    {
      "generation": 8,
      "ascendantID": "30veddrj-cycr-s83f-jkl1-p048gc8depmn",
      "id": "zuz218n3-hdow-vipk-yl1s-t7c99vv8q8t5",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.4281105",
            "g": "0.8218216"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(y,x)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.65148586",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.0",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(sin(x),((x-tan(0.16602606))/cos(min(max(y,max(tan(sin(y)),tan(max(var(y),min(y,x))))),0.4233445))))+y)",
            "b": "(max(sin(0.26922977),((y-tan(y))/cos(min(max(x,max(tan(sin(x)),tan(max(var(0.75554806),min(0.23419565,y))))),0.8110764))))+0.8135842)",
            "g": "(max(sin(x),((x-tan(x))/cos(min(max(y,max(tan(sin(0.7941236)),tan(max(var(y),min(y,y))))),x))))+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(sin(min(tan(cos(y)),x)))/y)+y)",
            "b": "((sin(sin(min(tan(cos(x)),y)))/x)+x)",
            "g": "((sin(sin(min(tan(cos(0.5973669)),y)))/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.67913264",
            "b": "0.17138033",
            "g": "0.6200706"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.55461705",
            "b": "0.4281105",
            "g": "0.71511036"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(y,y)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var((cos(x)/x))",
            "b": "var((cos(0.02825439)/y))",
            "g": "var((cos(0.40637523)/x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        }
      ],
      "timestamp": "23h:39m:8s"
    },
    {
      "generation": 9,
      "ascendantID": "zuz218n3-hdow-vipk-yl1s-t7c99vv8q8t5",
      "id": "t4db1ikd-a7z3-xo8k-easu-esd9pt0vz0fp",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.4281105",
            "g": "0.8218216"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(sin(min(tan(cos(y)),x)))/y)+y)",
            "b": "((sin(sin(min(tan(cos(x)),y)))/x)+x)",
            "g": "((sin(sin(min(tan(cos(0.5973669)),y)))/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(sin(x),((x-tan(0.16602606))/y))+y)",
            "b": "(max(sin(0.26922977),((y-tan(y))/y))+0.8135842)",
            "g": "(max(sin(x),((x-tan(x))/x))+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(y,y)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.55461705",
            "b": "0.4281105",
            "g": "0.71511036"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(y,y)",
            "b": "min(y,x)",
            "g": "min(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min(y,tan(var(0.22592354))),y)",
            "b": "max(min(0.3632226,tan(var(x))),x)",
            "g": "max(min(y,tan(var(x))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(y,x)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(sin(x),sin((x*tan(0.89006263))))+y)",
            "b": "(max(sin(0.26922977),sin((y*tan(0.7435836))))+0.8135842)",
            "g": "(max(sin(x),sin((x*tan(y))))+0.33200264)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.65148586",
            "g": "0.550417"
          }
        }
      ],
      "timestamp": "23h:39m:10s"
    },
    {
      "generation": 10,
      "ascendantID": "t4db1ikd-a7z3-xo8k-easu-esd9pt0vz0fp",
      "id": "04cztthn-pm0g-8bg7-r4cx-r4m6umm66eq3",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.55461705",
            "b": "0.4281105",
            "g": "0.71511036"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((cos(sin(min(cos(cos(y)),x)))/y)+y)",
            "b": "((cos(sin(min(cos(cos(x)),y)))/x)+x)",
            "g": "((cos(sin(min(cos(cos(0.718525)),x)))/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(cos(x),sin((x*y)))+y)",
            "b": "(min(cos(0.49012068),sin((y*0.75554806)))+0.8135842)",
            "g": "(min(cos(x),sin((x*y)))+0.33200264)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(sin(min(cos(cos(y)),x)))/y)+y)",
            "b": "((sin(sin(min(cos(cos(x)),y)))/x)+x)",
            "g": "((sin(sin(min(cos(cos(0.5973669)),y)))/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(x+x)",
            "g": "(0.23528695+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.65148586",
            "g": "0.5282334"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.4281105",
            "g": "0.8218216"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(var(min(y,max(tan(var((((var(y)+((x+x)*(0.2929117*0.6812416)))-0.7720578)*sin(tan((tan(y)*x)))))),var(max(0.5739176,0.3220178))))))+y)",
            "b": "(cos(var(min(y,max(tan(var((((var(0.22267109)+((y+y)*(x*0.39459515)))-x)*sin(tan((tan(x)*0.86478174)))))),var(max(x,x))))))+x)",
            "g": "(cos(var(min(x,max(tan(var((((var(x)+((y+x)*(y*x)))-0.9260897)*sin(tan((tan(y)*0.56412613)))))),var(max(0.74078465,0.6634258))))))+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.65148586",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(y,x)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.23875026)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min(y,tan(var(0.22592354))),y)",
            "b": "max(min(0.3632226,tan(var(x))),x)",
            "g": "max(min(y,tan(var(x))),y)"
          }
        }
      ],
      "timestamp": "23h:39m:11s"
    },
    {
      "generation": 11,
      "ascendantID": "04cztthn-pm0g-8bg7-r4cx-r4m6umm66eq3",
      "id": "iimuyubc-p5zl-vlzt-yeq4-sdzowwep2s5p",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((tan(0.34883344)/y)+y)",
            "b": "((tan(0.4218591)/x)+0.84700316)",
            "g": "((tan(0.95676863)/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(sin(min(cos(cos(y)),x)))/y)+y)",
            "b": "((sin(sin(min(cos(cos(x)),y)))/x)+0.9050147)",
            "g": "((sin(sin(min(cos(cos(0.5973669)),y)))/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.65148586",
            "g": "0.550417"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(cos(x),sin((x*y)))+y)",
            "b": "(min(cos(0.49012068),sin((y*0.75554806)))+0.8135842)",
            "g": "(min(cos(x),sin((x*y)))+0.33200264)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(tan((y+tan(var((y+x))))))+y)",
            "b": "(cos(tan((y+tan(var((0.93989307+x))))))+x)",
            "g": "(cos(tan((0.9516717+tan(var((x+y))))))+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(sin(min(cos(cos(y)),x)))/y)+y)",
            "b": "((sin(sin(min(cos(cos(x)),y)))/x)+x)",
            "g": "((sin(sin(min(cos(cos(0.5973669)),y)))/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(sin(min(tan(cos(y)),cos(cos((max(tan(y),0.6593258)+0.07887286))))))*y)+y)",
            "b": "((sin(sin(min(tan(cos(x)),cos(cos((max(tan(x),x)+0.598352))))))*x)+x)",
            "g": "((sin(sin(min(tan(cos(0.5973669)),cos(cos((max(tan(y),x)+0.84028834))))))*x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(min(x,var(var(max((tan(0.472332)+x),x)))),y)",
            "b": "max(min(0.3632226,var(var(max((tan(y)+y),0.31294066)))),x)",
            "g": "max(min(y,var(var(max((tan(0.04983151)+x),y)))),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(sin(min(cos(cos(y)),x)))/y)+y)",
            "b": "((sin(sin(min(cos(cos(x)),y)))/x)+x)",
            "g": "((sin(sin(min(cos(cos(0.5973669)),y)))/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(min(tan(x),sin((x*y)))-y)",
            "b": "(min(tan(0.49012068),sin((y*0.8414012)))-0.7225468)",
            "g": "(min(tan(x),sin((x*y)))-0.33200264)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(x+x)",
            "g": "(0.23528695+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,y)",
            "b": "max(0.4182551,x)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.65148586",
            "g": "0.5282334"
          }
        }
      ],
      "timestamp": "23h:39m:13s"
    },
    {
      "generation": 12,
      "ascendantID": "iimuyubc-p5zl-vlzt-yeq4-sdzowwep2s5p",
      "id": "8ju5ensn-1quq-impe-0f7m-kvec3iw7qpig",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.44317836)+y)",
            "b": "(cos(0.6203272)+x)",
            "g": "(cos(y)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin((min(tan((min(max(y,x),x)+y)),x)/y))/y)+y)",
            "b": "((sin((min(tan((min(max(y,y),x)+y)),y)/y))/x)+0.9050147)",
            "g": "((sin((min(tan((min(max(0.39691097,x),y)+y)),y)/y))/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(sin(sin(max(cos(cos(y)),x))))+y)",
            "b": "(sin(sin(sin(max(cos(cos(x)),y))))+x)",
            "g": "(sin(sin(sin(max(cos(cos(0.5973669)),y))))+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.4741342",
            "b": "0.65148586",
            "g": "0.5282334"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((sin(sin(min(sin(cos(var(sin(y)))),x)))/y)+y)",
            "b": "((sin(sin(min(sin(cos(var(sin(x)))),y)))/x)+0.9050147)",
            "g": "((sin(sin(min(sin(cos(var(sin(0.9873442)))),y)))/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((cos(0.34883344)/y)+y)",
            "b": "((cos(0.4218591)/x)+0.84700316)",
            "g": "((cos(0.8669313)/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(0.67112535)+y)",
            "b": "(cos(0.7105508)+x)",
            "g": "(cos(y)+0.20937628)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(min(x,(x+((tan(0.7857383)/var((cos(0.5472216)/((min(tan(0.57921606),(y+x))*var((x+x)))+cos(y)))))-y))))",
            "b": "var(min(0.3632226,(x+((tan(x)/var((cos(y)/((min(tan(x),(x+y))*var((x+x)))+cos(0.59822506)))))-y))))",
            "g": "var(min(y,(y+((tan(0.9736846)/var((cos(y)/((min(tan(y),(y+x))*var((y+0.6202587)))+cos(x)))))-x))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(sin(sin(min(cos(cos(x)),y))))+y)",
            "b": "(sin(sin(sin(min(cos(cos(0.49012068)),y))))+0.9050147)",
            "g": "(sin(sin(sin(min(cos(cos(x)),y))))+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((tan(0.05182506)/y)+y)",
            "b": "((tan(0.6061164)/x)+0.84700316)",
            "g": "((tan(0.95676863)/x)+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(var((y+var(tan((y+x))))))+y)",
            "b": "(cos(var((y+var(tan((0.93989307+x))))))+x)",
            "g": "(cos(var((0.9516717+var(tan((x+y))))))+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(tan((y+tan(var((y+x))))))+y)",
            "b": "(cos(tan((y+tan(var((0.93989307+x))))))+x)",
            "g": "(cos(tan((0.9516717+tan(var((x+y))))))+0.3332802)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.59802836",
            "b": "0.65148586",
            "g": "0.5282334"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        }
      ],
      "timestamp": "23h:39m:37s"
    }
  ],
  "timestamp": "2024-05-05-23-36-54"
}
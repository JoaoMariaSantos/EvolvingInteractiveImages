{
  "id": "893ip0hr-5xsj-cfef-7wmw-iy8hau88ezq9",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [{
    "generation": 0,
    "id": "gulont7o-3rzx-cfyy-6ek3-vimlhztzuol4",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "externalVal",
          "b": "x",
          "g": "y"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "max(noise(0.14146948,mod(x,tan(mod(x,externalVal)))),noise(0.6502414,noise(min(x,x),mod(pow(max(cos(externalVal),cos(sin(noise(externalVal,y)))),externalVal),(mod(sin((max(0.4153688,0.07572341)/y)),(cos(sin(0.7614589))/externalVal))/0.5739112)))))",
          "b": "max(noise(0.7960348,mod(0.25241923,tan(mod(x,0.5630207)))),noise(externalVal,noise(min(x,y),mod(pow(max(cos(x),cos(sin(noise(0.55570674,y)))),0.84756637),(mod(sin((max(x,x)/y)),(cos(sin(0.9809382))/y))/x)))))",
          "g": "max(noise(externalVal,mod(0.398345,tan(mod(y,externalVal)))),noise(y,noise(min(x,0.57950497),mod(pow(max(cos(y),cos(sin(noise(0.69826865,x)))),x),(mod(sin((max(0.9933901,externalVal)/externalVal)),(cos(sin(externalVal))/x))/0.46201086)))))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(pow(max(max(tan(min(((noise(y,y)/max(0.4012313,0.57025576))/(noise(0.6115153,externalVal)/x)),pow(sin(tan(y)),externalVal))),sin(sin(cos(mod(mod(externalVal,y),pow(externalVal,externalVal)))))),y),sin(mod(noise(externalVal,x),tan(externalVal)))),y)",
          "b": "pow(pow(max(max(tan(min(((noise(y,y)/max(externalVal,y))/(noise(x,externalVal)/externalVal)),pow(sin(tan(x)),0.22119522))),sin(sin(cos(mod(mod(externalVal,externalVal),pow(externalVal,externalVal)))))),0.9994364),sin(mod(noise(y,0.38690162),tan(externalVal)))),externalVal)",
          "g": "pow(pow(max(max(tan(min(((noise(0.33625603,x)/max(x,x))/(noise(0.45408344,x)/externalVal)),pow(sin(tan(externalVal)),externalVal))),sin(sin(cos(mod(mod(x,externalVal),pow(x,0.813925)))))),x),sin(mod(noise(y,x),tan(externalVal)))),y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "max(min(0.5470469,0.90771794),x)",
          "b": "max(min(externalVal,0.03819394),0.27266526)",
          "g": "max(min(0.6763923,x),x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(sin(noise(0.15938735,pow(externalVal,x))),min(mod(pow(mod((cos(externalVal)/y),mod(sin(max(sin(0.5283983),x)),0.80135584)),x),sin(max(mod(noise(noise(x,pow(y,0.4256661)),max(externalVal,pow(externalVal,y))),0.83532023),x))),x))",
          "b": "noise(sin(noise(9.031296E-4,pow(0.14885926,y))),min(mod(pow(mod((cos(externalVal)/x),mod(sin(max(sin(y),0.33425164)),0.9932766)),y),sin(max(mod(noise(noise(x,pow(x,0.084129095)),max(y,pow(x,x))),externalVal),y))),y))",
          "g": "noise(sin(noise(externalVal,pow(0.75013256,x))),min(mod(pow(mod((cos(y)/y),mod(sin(max(sin(6.2179565E-4),externalVal)),y)),x),sin(max(mod(noise(noise(x,pow(0.53513026,externalVal)),max(externalVal,pow(y,x))),x),externalVal))),y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noise(x,max(mod(tan(y),cos(x)),externalVal))",
          "b": "noise(x,max(mod(tan(y),cos(x)),externalVal))",
          "g": "noise(0.6277962,max(mod(tan(y),cos(y)),0.7432351))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "externalVal",
          "b": "externalVal",
          "g": "0.05430031"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "0.9580214",
          "b": "x",
          "g": "x"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(sin(externalVal))",
          "b": "tan(sin(externalVal))",
          "g": "tan(sin(x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(0.22088742)",
          "b": "tan(externalVal)",
          "g": "tan(externalVal)"
        }
      }
    ],
    "timestamp": "1h:54m:40s"
  }],
  "timestamp": "2024-04-08-01-54-38"
}
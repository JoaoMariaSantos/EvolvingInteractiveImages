{
  "id": "8l2jql8u-4hk1-s1iu-p9mc-upqobst4uho2",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [{
    "generation": 0,
    "id": "t8f3rnnm-c9xf-3aa5-hyfs-jtubq5m3ybu7",
    "individuals": [
      {
        "fitness": 0,
        "expressions": {
          "r": "((mod(0.52739453,x)-tan(y))/max(aud(0.85825753,0.19084525),mod(y,0.72447914)))",
          "b": "((mod(0.6216865,x)-tan(x))/max(aud(y,y),mod(x,y)))",
          "g": "((mod(y,y)-tan(0.4355119))/max(aud(y,y),mod(x,y)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "aud(0.9175236,tan(0.2851224))",
          "b": "aud(x,tan(x))",
          "g": "aud(x,tan(0.088730514))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "mod(max(min(x,0.5343754),max(y,x)),sin(pow(x,y)))",
          "b": "mod(max(min(0.12568974,0.15402853),max(x,y)),sin(pow(y,x)))",
          "g": "mod(max(min(0.77590066,y),max(0.9766651,0.7784706)),sin(pow(0.4316191,0.79965234)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(cos((0.5110749/x)))",
          "b": "cos(cos((y/y)))",
          "g": "cos(cos((x/0.1930334)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((0.79014/x)/mod(min(0.6587847,y),0.14582402))",
          "b": "((x/x)/mod(min(y,y),0.30632168))",
          "g": "((y/0.41879797)/mod(min(0.20840478,x),0.9926598))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "tan(cos(y))",
          "b": "tan(cos(x))",
          "g": "tan(cos(y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noi(noi(x,0.80314225),0.7396651)",
          "b": "noi(noi(y,x),y)",
          "g": "noi(noi(y,0.34933895),x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "y",
          "b": "y",
          "g": "y"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "cos(noi(tan(0.008769572),y))",
          "b": "cos(noi(tan(y),x))",
          "g": "cos(noi(tan(0.91940886),x))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "pow(var((x-0.6386651)),y)",
          "b": "pow(var((0.1722207-0.29629254)),y)",
          "g": "pow(var((x-0.01231885)),y)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "0.7074904",
          "b": "y",
          "g": "x"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "noi(0.9101558,aud(noi(x,0.50345385),(0.5585652+0.91657984)))",
          "b": "noi(y,aud(noi(x,0.09974295),(0.87682897+0.90201455)))",
          "g": "noi(0.8374404,aud(noi(0.34879482,x),(y+y)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "var((mod(x,0.9327818)/y))",
          "b": "var((mod(y,y)/y))",
          "g": "var((mod(0.5329254,y)/y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "min(var(y),min((x*x),(0.48886156*x)))",
          "b": "min(var(0.7866701),min((y*y),(0.1279993*x)))",
          "g": "min(var(0.6239587),min((x*y),(x*x)))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin(0.20317537)",
          "b": "sin(y)",
          "g": "sin(x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "((mod(0.64084804,x)*cos(y))+0.39262927)",
          "b": "((mod(0.56134933,0.43148857)*cos(0.58082646))+y)",
          "g": "((mod(x,0.8062084)*cos(0.93166137))+x)"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "sin(mod((y+0.9266512),0.50386405))",
          "b": "sin(mod((x+x),x))",
          "g": "sin(mod((x+y),y))"
        }
      },
      {
        "fitness": 0,
        "expressions": {
          "r": "y",
          "b": "y",
          "g": "y"
        }
      }
    ],
    "timestamp": "21h:29m:48s"
  }],
  "timestamp": "2024-04-29-21-29-45"
}
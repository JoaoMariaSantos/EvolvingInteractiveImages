{
  "id": "0qm283l9-duvh-yzor-onik-0e6a2ufbpj7n",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 1,
    "tournamentSize": 3,
    "mutationRate": 0.5,
    "populationSize": 20
  },
  "populations": [
    {
      "generation": 0,
      "id": "8ic15d4i-hw0r-iwxm-otn6-fqqw0878syi9",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noise(pow(y,0.23199725),x)",
            "b": "noise(pow(y,y),x)",
            "g": "noise(pow(y,externalVal),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((cos(cos(y))+pow((min(max(tan(noise(0.30961275,(min(0.39135623,max(x,0.14188361))-externalVal))),0.79896283),0.45118594)-(noise(y,max(cos(x),externalVal))*y)),(min(y,x)/x))))",
            "b": "sin((cos(cos(0.092520714))+pow((min(max(tan(noise(externalVal,(min(x,max(y,0.69083714))-x))),0.5744052),0.037380695)-(noise(x,max(cos(y),x))*externalVal)),(min(0.31386423,x)/x))))",
            "g": "sin((cos(cos(y))+pow((min(max(tan(noise(y,(min(x,max(x,y))-x))),x),x)-(noise(0.23288155,max(cos(x),0.33368134))*0.15128303)),(min(externalVal,y)/externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.53807235",
            "b": "externalVal",
            "g": "0.9299004"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,0.9894123)",
            "b": "max(externalVal,externalVal)",
            "g": "max(externalVal,0.37236476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(0.7062731+x)",
            "b": "(x+0.6842153)",
            "g": "(y+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noise(y,externalVal))",
            "b": "tan(noise(y,0.21719313))",
            "g": "tan(noise(externalVal,0.48179245))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((0.993845-x))",
            "b": "cos((0.8453493-externalVal))",
            "g": "cos((y-0.2124412))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio(externalVal,sin(tan(externalVal))))",
            "b": "cos(audio(externalVal,sin(tan(y))))",
            "g": "cos(audio(y,sin(tan(0.8491199))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow(min(tan(x),mod(externalVal,y)),(x+x))",
            "b": "pow(min(tan(x),mod(0.0219419,0.7210212)),(0.20790482+externalVal))",
            "g": "pow(min(tan(externalVal),mod(0.8340881,x)),(y+externalVal))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(mod(x,0.16028237),externalVal)",
            "b": "mod(mod(0.67188716,externalVal),x)",
            "g": "mod(mod(0.6141825,externalVal),y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "externalVal",
            "g": "0.2879398"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "externalVal",
            "g": "0.66727257"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.563699",
            "g": "y"
          }
        }
      ],
      "timestamp": "0h:47m:58s"
    },
    {
      "generation": 1,
      "ascendantID": "8ic15d4i-hw0r-iwxm-otn6-fqqw0878syi9",
      "id": "mfmjkcot-v564-4hm3-o6lk-sxeu94dnhq9w",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos((0.993845+x))",
            "b": "cos((0.8453493+externalVal))",
            "g": "cos((y+0.2124412))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(audio(externalVal,sin(cos(externalVal))))",
            "b": "cos(audio(externalVal,sin(cos(y))))",
            "g": "cos(audio(y,sin(cos(0.8491199))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(y,0.9894123)",
            "b": "max(y,externalVal)",
            "g": "max(x,0.37236476)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "externalVal",
            "g": "0.2879398"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(externalVal,externalVal)",
            "b": "mod(x,x)",
            "g": "mod(externalVal,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((cos(cos(x))+pow((min(max(cos(mod(0.30961275,(noise(0.39135623,max(x,0.14188361))-externalVal))),0.79896283),0.45118594)-(min(y,max(cos(x),externalVal))-y)),(min(y,x)/x))))",
            "b": "sin((cos(cos(0.070295334))+pow((min(max(cos(mod(externalVal,(noise(x,max(y,0.69083714))-x))),0.5744052),0.037380695)-(min(0.98673034,max(cos(y),0.99780285))-externalVal)),(min(0.46925667,x)/x))))",
            "g": "sin((cos(cos(y))+pow((min(max(cos(mod(y,(noise(x,max(x,y))-x))),x),x)-(min(0.23288155,max(cos(x),0.0))-0.15128303)),(min(externalVal,y)/externalVal))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "externalVal",
            "g": "0.2879398"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.78484845",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "externalVal",
            "b": "externalVal",
            "g": "0.66727257"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "externalVal",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "mod(0.993845,externalVal)",
            "b": "mod(0.8453493,x)",
            "g": "mod(y,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "externalVal"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.53807235",
            "b": "externalVal",
            "g": "0.9299004"
          }
        }
      ],
      "timestamp": "0h:48m:14s"
    }
  ],
  "timestamp": "2024-03-19-00-47-52"
}
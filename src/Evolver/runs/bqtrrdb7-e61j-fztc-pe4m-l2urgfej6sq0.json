{
  "id": "bqtrrdb7-e61j-fztc-pe4m-l2urgfej6sq0",
  "parameters": {
    "crossoverRate": 0.30000001192092896,
    "eliteSize": 2,
    "tournamentSize": 3,
    "mutationRate": 0.8999999761581421,
    "populationSize": 10
  },
  "populations": [
    {
      "generation": 0,
      "id": "qvkie60c-7v8a-bplc-m3gc-gl7vgq778bxs",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "x",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.37705904",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "tan(noi((y/0.5457335),(y*x)))",
            "b": "tan(noi((y/0.7492935),(0.22559595*y)))",
            "g": "tan(noi((x/x),(0.39487785*y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "noi(pow(pow(x,y),(x/y)),mod(x,aud(x,y)))",
            "b": "noi(pow(pow(0.27006269,x),(0.7882975/y)),mod(x,aud(x,0.27336377)))",
            "g": "noi(pow(pow(x,x),(x/x)),mod(y,aud(x,0.47844136)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.36836886",
            "b": "0.40906316",
            "g": "0.36241543"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.28950316,(x*x))",
            "b": "max(0.1557625,(y*0.3670181))",
            "g": "max(x,(y*0.6603935))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.8534666",
            "b": "x",
            "g": "0.0962922"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(bri(x,y))",
            "b": "sin(bri(x,0.027516425))",
            "g": "sin(bri(y,0.75201184))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(cos(y),0.4007916)",
            "b": "max(cos(0.05399841),0.2410503)",
            "g": "max(cos(y),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "var(max((y+x),tan(y)))",
            "b": "var(max((0.5082189+x),tan(y)))",
            "g": "var(max((x+0.38189006),tan(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "0.7602167",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(cos(0.43644923),(pow(y,y)*0.058434963))",
            "b": "max(cos(x),(pow(x,x)*x))",
            "g": "max(cos(x),(pow(x,x)*0.03739214))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "pow((max(0.75164866,y)*x),cos(sin(y)))",
            "b": "pow((max(x,0.7577076)*y),cos(sin(y)))",
            "g": "pow((max(0.77723515,0.48929518)*0.3366353),cos(sin(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.78819484",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x*y)",
            "b": "(0.21865618*y)",
            "g": "(x*x)"
          }
        }
      ],
      "timestamp": "21h:35m:32s"
    },
    {
      "generation": 1,
      "ascendantID": "qvkie60c-7v8a-bplc-m3gc-gl7vgq778bxs",
      "id": "a52nwdpa-s7jn-mwqn-j4dw-1m0t6lkqgbvk",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.24143463",
            "b": "0.34530342",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.28950316,(noi(y,pow((y/y),var(x)))*x))",
            "b": "max(0.24250787,(noi(y,pow((y/y),var(x)))*0.3670181))",
            "g": "max(x,(noi(y,pow((0.8145234/x),var(x)))*0.6603935))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.37705904",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6312624",
            "b": "0.40906316",
            "g": "0.36241543"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(cos(y),0.55643016)",
            "b": "bri(cos(0.0),0.2410503)",
            "g": "bri(cos(y),x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(0.28950316,(sin(max(0.44950604,x))*x))",
            "b": "bri(0.1557625,(sin(max(x,0.7103453))*0.3670181))",
            "g": "bri(x,(sin(max(y,y))*0.6603935))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(tan(0.43644923),(pow(y,y)-0.058434963))",
            "b": "min(tan(x),(pow(x,x)-x))",
            "g": "min(tan(x),(pow(x,x)-0.03739214))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(x,(x*x))",
            "b": "min(x,(y*0.3670181))",
            "g": "min(0.44243485,(y*0.6603935))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+y)",
            "b": "(x+x)",
            "g": "(0.5978136+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(0.28950316,(x/x))",
            "b": "bri(0.1557625,(y/0.3670181))",
            "g": "bri(x,(y/0.6603935))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(bri(x,y))",
            "b": "sin(bri(x,0.027516425))",
            "g": "sin(bri(y,0.9659734))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(y)+y)",
            "b": "(tan(y)+x)",
            "g": "(tan(x)+y)"
          }
        }
      ],
      "timestamp": "21h:37m:5s"
    },
    {
      "generation": 2,
      "ascendantID": "a52nwdpa-s7jn-mwqn-j4dw-1m0t6lkqgbvk",
      "id": "c3wi9ho4-7dj6-o7dr-cggt-3nllhzw4n7mh",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,(x/x))",
            "b": "max(0.39445156,(y/0.3670181))",
            "g": "max(y,(y/0.46407464))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.37705904",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.16100174)))",
            "b": "(y/tan((0.5305479-0.7212791)))",
            "g": "(x/tan((y-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(x+y)",
            "b": "(x+x)",
            "g": "(0.5978136+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin((x+x))+y)",
            "b": "(sin((x+y))+x)",
            "g": "(sin((0.34089297+y))+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.24143463",
            "b": "0.45105433",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.28950316,y)",
            "b": "max(0.24250787,y)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "cos(var(x))",
            "b": "cos(var(x))",
            "g": "cos(var(0.71072423))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y+y)",
            "b": "(y+x)",
            "g": "(x+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(0.4785616,0.5500383)",
            "b": "bri(0.1557625,x)",
            "g": "bri(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y+0.5791553)))",
            "b": "(0.57553893/tan((0.65366954+0.50134826)))",
            "g": "(0.6277231/tan((y+0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(tan(sin(cos(y)))+y)",
            "b": "(tan(sin(cos(0.5121993)))+x)",
            "g": "(tan(sin(cos(y)))+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.024466038,0.55643016)",
            "b": "max(x,0.45626128)",
            "g": "max(0.045025527,x)"
          }
        }
      ],
      "timestamp": "21h:37m:6s"
    },
    {
      "generation": 3,
      "ascendantID": "c3wi9ho4-7dj6-o7dr-cggt-3nllhzw4n7mh",
      "id": "l3vdkdnb-kopt-ueah-832f-wkhwcxiabbwc",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*tan((x-0.16100174)))",
            "b": "(y*tan((0.5305479-0.4881909)))",
            "g": "(x*tan((y-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*tan((y-y)))",
            "b": "(y*tan((0.5305479-0.3692479)))",
            "g": "(x*tan((y-y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos((y-0.50389105))-y)",
            "b": "(cos((0.5305479-0.46739298))-x)",
            "g": "(cos((y-0.58749515))-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*cos((y+0.5791553)))",
            "b": "(0.3427608*cos((0.65366954+0.50134826)))",
            "g": "(0.6277231*cos((y+0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.48131603,0.5500383)",
            "b": "max(0.30554488,x)",
            "g": "max(x,y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.39131856",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.24143463",
            "b": "0.45105433",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.24143463",
            "b": "0.45105433",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(x,(x*x))",
            "b": "min(0.66264313,(y*0.3670181))",
            "g": "min(y,(y*0.25816992))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y+y)))",
            "b": "(0.62771666/tan((0.65366954+0.37705904)))",
            "g": "(0.8197217/tan((y+y)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((noi(x,y)*x)*0.10077649)+y)",
            "b": "(((noi(0.49958003,0.4126684)*0.6622687)*x)+x)",
            "g": "(((noi(0.15166175,y)*0.38856375)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,max(mod(0.7147127,y),(noi(0.26976246,y)-0.49876678)))",
            "b": "max(0.39445156,max(mod(y,y),(noi(y,0.69793904)-y)))",
            "g": "max(y,max(mod(0.65605974,x),(noi(x,x)-0.5745097)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "x",
            "b": "y",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.43250468",
            "b": "0.5150876",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(((0.2712441/y)/y))+y)",
            "b": "(cos(((0.45105433/x)/0.46616033))+x)",
            "g": "(cos(((0.39522555/x)/y))+y)"
          }
        }
      ],
      "timestamp": "21h:37m:6s"
    },
    {
      "generation": 4,
      "ascendantID": "l3vdkdnb-kopt-ueah-832f-wkhwcxiabbwc",
      "id": "c9aydddx-y42r-8a2b-odtq-virajpu681hh",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(x,max(pow(0.7451971,y),(min(0.26976246,y)-(sin(x)-0.78696084))))",
            "b": "bri(0.39445156,max(pow(y,y),(min(y,0.9938017)-(sin(0.5096183)-0.40634125))))",
            "g": "bri(y,max(pow(0.65605974,x),(min(x,x)-(sin(0.19915903)-0.58749515))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin((x*0.50389105))-x)",
            "b": "(sin((0.5305479*0.46739298))-y)",
            "g": "(sin((y*0.58749515))-0.991522)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(0.53117585,((0.2712441/y)*y))",
            "b": "max(0.30554488,((0.45105433/x)*0.46616033))",
            "g": "max(x,((0.39522555/x)*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.39131856",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,bri(mod(0.7147127,y),(noi(0.26976246,y)+0.49876678)))",
            "b": "max(0.39445156,bri(mod(y,y),(noi(y,0.5164747)+y)))",
            "g": "max(y,bri(mod(0.65605974,x),(noi(x,x)+0.5745097)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.43250468",
            "b": "0.5150876",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-cos((y+0.81472063)))",
            "b": "(0.09315866-cos((0.5669508+0.284615)))",
            "g": "(0.6277231-cos((y+0.8710147)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan(0.516035))",
            "b": "(0.62771666/tan(0.49412352))",
            "g": "(0.8197217/tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.39131856",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(x,(x*y))",
            "b": "min(0.66264313,(y*0.65366954))",
            "g": "min(y,(y*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)/x)+y)",
            "b": "(((x-y)/x)+x)",
            "g": "(((0.7274996-y)/x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud((mod(x,0.911889)-cos(0.28298503)),x)+y)",
            "b": "(aud((mod(x,x)-cos(x)),0.9888076)+x)",
            "g": "(aud((mod(y,y)-cos(0.089365125)),x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.43250468",
            "b": "0.3366643",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.24143463",
            "b": "0.45105433",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos((y-0.50389105))-y)",
            "b": "(cos((0.72724485-0.46739298))-x)",
            "g": "(cos((y-0.58749515))-y)"
          }
        }
      ],
      "timestamp": "21h:37m:7s"
    },
    {
      "generation": 5,
      "ascendantID": "c9aydddx-y42r-8a2b-odtq-virajpu681hh",
      "id": "3l5vm9yc-sp9t-ti7r-lpcj-hvv3v19aqn1d",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud((mod(x,0.911889)+cos(noi(aud(min(x,x),y),max(pow(y,y),x)))),x)+y)",
            "b": "(aud((mod(x,x)+cos(noi(aud(min(y,x),y),max(pow(y,0.6814356),y)))),0.9888076)+x)",
            "g": "(aud((mod(y,y)+cos(noi(aud(min(x,y),x),max(pow(x,0.79882085),0.843291)))),x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud((var((mod(y,x)/(y-0.029897153)))+cos(0.28298503)),x)+y)",
            "b": "(aud((var((mod(0.29849,x)/(0.03842926-0.26174587)))+cos(x)),0.9888076)+x)",
            "g": "(aud((var((mod(x,x)/(x-0.5156511)))+cos(0.22946417)),x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,bri(mod(0.7147127,y),(min(0.22008973,y)+(y*y))))",
            "b": "max(0.39445156,bri(mod(y,y),(min(y,0.35689247)+(x*0.13991225))))",
            "g": "max(y,bri(mod(0.65605974,x),(min(x,x)+(0.6626932*y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud((pow(x,0.911889)*tan(0.28298503)),x)+y)",
            "b": "(aud((pow(0.82221377,x)*tan(x)),0.9888076)+x)",
            "g": "(aud((pow(y,y)*tan(0.089365125)),x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.39131856",
            "g": "x"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x+0.9741974)*x)+x)",
            "b": "(((x+y)*x)+0.39445156)",
            "g": "(((0.7660269+y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.8522221)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(x,(x*y))",
            "b": "bri(0.66264313,(y*0.65366954))",
            "g": "bri(y,(y*y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud((mod(x,x)+0.24143463),x)+y)",
            "b": "(aud((mod(x,x)+0.51964045),x)+x)",
            "g": "(aud((mod(y,y)+0.39522555),x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.6634629",
            "b": "0.1450887",
            "g": "0.15370038"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.43250468",
            "b": "0.5150876",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud((mod(x,0.67158633)+cos(0.28298503)),x)+y)",
            "b": "(aud((mod(x,x)+cos(x)),0.9888076)+x)",
            "g": "(aud((mod(y,y)+cos(0.089365125)),x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos((y-0.4787551))-y)",
            "b": "(cos((0.72724485-0.46739298))-x)",
            "g": "(cos((y-0.8166994))-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.15599373",
            "b": "0.75009453",
            "g": "0.39522555"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.24143463",
            "b": "0.45105433",
            "g": "0.39522555"
          }
        }
      ],
      "timestamp": "21h:37m:8s"
    },
    {
      "generation": 6,
      "ascendantID": "3l5vm9yc-sp9t-ti7r-lpcj-hvv3v19aqn1d",
      "id": "6kxjbgct-wumo-czqr-i0n7-mba1o03fg37j",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.8522221)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.31338137",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud((mod(x,0.67158633)+cos(0.28298503)),x)+aud(0.33297408,x))",
            "b": "(aud((mod(x,x)+cos(x)),0.9888076)+aud(x,0.65032303))",
            "g": "(aud((mod(y,y)+cos(0.089365125)),x)+aud(y,0.02797687))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.8522221)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,bri(mod(0.7147127,y),(min(0.22008973,y)+(y*y))))",
            "b": "max(0.39445156,bri(mod(y,y),(min(y,0.35689247)+(x*0.13991225))))",
            "g": "max(y,bri(mod(0.5459733,x),(min(x,x)+(0.6626932*y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.76438546/tan((0.7360495-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.56943274",
            "b": "0.477355",
            "g": "0.33971924"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(max(x,(x*y))/tan((y*0.50389105)))",
            "b": "(max(0.7808813,(y*0.65366954))/tan((0.7451073*0.46739298)))",
            "g": "(max(y,(y*y))/tan((y*0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(bri((pow(y,0.911889)+tan(noi(aud(min(x,x),y),bri(pow(y,y),x)))),x)+y)",
            "b": "(bri((pow(x,x)+tan(noi(aud(min(y,x),y),bri(pow(y,0.6814356),y)))),x)+x)",
            "g": "(bri((pow(y,y)+tan(noi(aud(min(x,y),x),bri(pow(x,0.79882085),0.5754647)))),x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/cos((y-0.50389105)))",
            "b": "(0.58216774/cos((0.5253275-0.46739298)))",
            "g": "(0.6277231/cos((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x+0.9741974)*x)-bri(0.516035,x))",
            "b": "(((x+y)*x)-bri(0.49412352,y))",
            "g": "(((x+y)*x)-bri(y,0.3044845))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.8522221)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x+0.96440667)*x)+x)",
            "b": "(((x+y)*x)+0.39445156)",
            "g": "(((0.7660269+y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud((mod(x,x)+0.036760814),x)+y)",
            "b": "(aud((mod(x,x)+0.51964045),x)+x)",
            "g": "(aud((mod(x,y)+0.39522555),x)+y)"
          }
        }
      ],
      "timestamp": "21h:37m:9s"
    },
    {
      "generation": 7,
      "ascendantID": "6kxjbgct-wumo-czqr-i0n7-mba1o03fg37j",
      "id": "lpsv959j-in2n-1tjd-ny3j-b91460ejnbto",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/x)",
            "b": "(0.8522221/0.4819521)",
            "g": "(x/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x+0.9741974)*x)*bri(0.516035,x))",
            "b": "(((x+y)*x)*bri(0.49412352,y))",
            "g": "(((x+y)*x)*bri(y,0.057539687))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan(0.35187596))",
            "b": "(y/tan(x))",
            "g": "(x/tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(bri(x,(x-0.16173345)))",
            "b": "sin(bri(0.7808813,(y-x)))",
            "g": "sin(bri(y,(y-x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(x)",
            "g": "sin(x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(pow(0.35830164,y))",
            "b": "sin(pow(x,0.6897154))",
            "g": "sin(pow(x,x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.97886336+0.96440667)/x)+x)",
            "b": "(((x+y)/x)+0.39445156)",
            "g": "(((0.7660269+y)/x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(mod(mod(x,sin(x)),cos(0.07207954)))",
            "b": "sin(mod(mod(0.35429263,sin(y)),cos(y)))",
            "g": "sin(mod(mod(0.97361326,sin(x)),cos(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*x)",
            "b": "(0.5597318*0.6564938)",
            "g": "(x*x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(bri((pow(y,0.911889)+tan(mod(aud(min(x,x),y),min(pow(y,y),x)))),x)+y)",
            "b": "(bri((pow(x,x)+tan(mod(aud(min(y,x),y),min(pow(x,0.6814356),y)))),x)+y)",
            "g": "(bri((pow(y,y)+tan(mod(aud(min(x,y),x),min(pow(x,0.79882085),0.7944459)))),x)+x)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*tan((0.22206259*0.50389105)))",
            "b": "(0.58216774*tan((y*0.2424282)))",
            "g": "(0.6277231*tan((0.7605205*0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.56943274",
            "b": "0.477355",
            "g": "0.33971924"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y*0.50389105)))",
            "b": "(0.32116738/tan((0.3783112*0.46739298)))",
            "g": "(0.6277231/tan((y*0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,bri(mod(0.43975702,y),(min(0.22008973,y)-(y*y))))",
            "b": "max(0.39445156,bri(mod(y,y),(min(y,0.35689247)-(x*0.13991225))))",
            "g": "max(y,bri(mod(0.31635094,x),(min(x,x)-(0.4730164*y))))"
          }
        }
      ],
      "timestamp": "21h:37m:10s"
    },
    {
      "generation": 8,
      "ascendantID": "lpsv959j-in2n-1tjd-ny3j-b91460ejnbto",
      "id": "8qcdz8az-w725-x4vh-qk4f-m5ir5k32iwl4",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/x)",
            "b": "(0.8522221/0.4819521)",
            "g": "(x/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,bri(mod(0.43975702,y),(min(0.22008973,y)+(y*y))))",
            "b": "max(0.39445156,bri(mod(y,y),(min(y,0.35689247)+(x*0.13991225))))",
            "g": "max(y,bri(mod(0.31635094,x),(min(x,x)+(0.44913924*y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((y/tan((y-0.79103935)))/x)+x)",
            "b": "(((0.58216774/tan((0.5305479-0.67926514)))/x)+0.39445156)",
            "g": "(((0.3293483/tan((y-0.29902738)))/x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x+0.9741974)/x)/aud(0.516035,x))",
            "b": "(((x+y)/x)/aud(0.49412352,y))",
            "g": "(((x+y)/x)/aud(y,0.28368762))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(x,bri(noi(0.19593999,y),(bri(0.516035,0.89311606)-(y*y))))",
            "b": "bri(0.39445156,bri(noi(y,y),(bri(0.49412352,y)-(x*0.13991225))))",
            "g": "bri(y,bri(noi(0.29289532,x),(bri(y,0.26597852)-(0.57349706*y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y*cos((y-0.50389105)))",
            "b": "(0.6105542*cos((0.44962442-0.46739298)))",
            "g": "(0.7334*cos((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503*x)-x)-y)",
            "b": "(((x*y)-x)-x)",
            "g": "(((0.63565814*y)-x)-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(bri((pow(y,0.9549266)+tan(pow(aud(max(x,x),y),max(pow(y,y),x)))),x)+y)",
            "b": "(bri((pow(x,x)+tan(pow(aud(max(y,x),y),max(pow(x,0.6814356),y)))),x)+y)",
            "g": "(bri((pow(x,y)+tan(pow(aud(max(x,y),x),max(pow(x,0.79882085),0.7944459)))),x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((0.93278503*x)/tan(0.44313857))",
            "b": "((x*y)/tan(y))",
            "g": "((0.63565814*y)/tan(y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(mod(mod(x,sin(x)),cos(0.07207954)))",
            "b": "sin(mod(mod(0.35429263,sin(y)),cos(y)))",
            "g": "sin(mod(mod(0.97361326,sin(x)),cos(x)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((cos((sin(x)-tan(0.20404243)))*x)+y)",
            "b": "((cos((sin(x)-tan(y)))*x)+x)",
            "g": "((cos((sin(x)-tan(0.5412773)))*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "0.56943274",
            "b": "0.477355",
            "g": "0.33971924"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(pow(mod(x,cos(x)),max(bri(0.095841765,noi(y,y)),x)))",
            "b": "sin(pow(mod(0.5039842,cos(y)),max(bri(y,noi(y,x)),y)))",
            "g": "sin(pow(mod(0.97361326,cos(x)),max(bri(0.5597856,noi(y,x)),x)))"
          }
        }
      ],
      "timestamp": "21h:37m:11s"
    },
    {
      "generation": 9,
      "ascendantID": "8qcdz8az-w725-x4vh-qk4f-m5ir5k32iwl4",
      "id": "vzkgygcn-muwy-3d7f-yemn-ult26ypjz700",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(x,aud(mod(0.43975702,y),(noi(0.22008973,y)+(y-y))))",
            "b": "min(0.39445156,aud(mod(y,y),(noi(y,0.35689247)+(x-0.13991225))))",
            "g": "min(y,aud(mod(0.31635094,x),(noi(x,0.88322616)+(0.44913924-y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin(y)",
            "b": "sin(0.44962442)",
            "g": "sin(y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "max(x,bri(mod(0.43975702,y),(min(0.22008973,y)-(y*y))))",
            "b": "max(0.39445156,bri(mod(y,y),(min(y,0.35689247)-(0.35787284*0.13991225))))",
            "g": "max(y,bri(mod(0.2072706,x),(min(x,x)-(0.1563499*y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(aud(pow(bri(x,x),x),(tan(0.8986956)+x))/cos((y-0.50389105)))",
            "b": "(aud(pow(bri(y,x),y),(tan(y)+x))/cos((0.59392494-0.46739298)))",
            "g": "(aud(pow(bri(0.08138269,0.8953859),0.7207557),(tan(x)+y))/cos((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((min(mod(x,x),var(y))*x)*aud(0.516035,x))",
            "b": "((min(mod(0.43730092,x),var(y))*x)*aud(0.49412352,y))",
            "g": "((min(mod(0.8473091,y),var(0.18809652))*x)*aud(y,0.28368762))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((y/var((y+0.79103935)))*x)+x)",
            "b": "(((0.58216774/var((0.5305479+0.62497354)))*x)+0.39445156)",
            "g": "(((0.35981148/var((y+0.29902738)))*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((y/tan((y*0.79103935)))/x)-x)",
            "b": "(((0.58216774/tan((0.5951564*0.67926514)))/x)-0.5601885)",
            "g": "(((0.3293483/tan((y*0.29902738)))/x)-y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((x+0.9741974)*x)/aud(0.516035,x))",
            "b": "(((x+y)*x)/aud(0.49412352,y))",
            "g": "(((x+y)*x)/aud(y,0.29727814))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503+x)*x)+aud((mod(y,0.9549266)+tan(pow(aud(sin(y),y),max(pow(y,y),x)))),x))",
            "b": "(((x+y)*x)+aud((mod(x,x)+tan(pow(aud(sin(y),y),max(pow(x,0.55678093),y)))),0.95001626))",
            "g": "(((0.63565814+y)*x)+aud((mod(x,y)+tan(pow(aud(sin(y),x),max(pow(x,0.6245224),0.7944459)))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((y-var((y-0.79103935)))*x)+x)",
            "b": "(((0.58216774-var((0.5305479-0.67926514)))*x)+0.5949962)",
            "g": "(((0.3293483-var((y-0.29902738)))*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(y)/x)",
            "b": "(cos(x)/0.4819521)",
            "g": "(cos(x)/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((y+x))",
            "b": "sin((x+0.6612121))",
            "g": "sin((x+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "bri(x,bri((0.93278503*x),(min(0.22008973,y)+(y*y))))",
            "b": "bri(0.39445156,bri((x*y),(min(y,0.35689247)+(x*0.13991225))))",
            "g": "bri(y,bri((0.63565814*y),(min(x,x)+(0.44913924*y))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        }
      ],
      "timestamp": "21h:37m:12s"
    },
    {
      "generation": 10,
      "ascendantID": "vzkgygcn-muwy-3d7f-yemn-ult26ypjz700",
      "id": "y98g1xzi-w0mt-ev2b-kf02-5vpsqcqwiewl",
      "individuals": [
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y-0.50389105)))",
            "b": "(0.58216774/tan((0.5305479-0.46739298)))",
            "g": "(0.6277231/tan((y-0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.93278503-x)*x)+y)",
            "b": "(((x-y)*x)+x)",
            "g": "(((0.63565814-y)*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((0.5120305-var((y+0.79103935)))*x)+x)",
            "b": "(((0.3862027-var((0.5305479+0.9644716)))*x)+0.5949962)",
            "g": "(((y-var((y+0.29902738)))*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "sin((y+x))",
            "b": "sin((0.9484581+0.92602086))",
            "g": "sin((x+y))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "((min(mod(x,x),tan(y))*x)*aud(0.6260079,x))",
            "b": "((min(mod(0.43730092,x),tan(y))*x)*aud(0.37559527,y))",
            "g": "((min(mod(0.8473091,y),tan(0.18809652))*x)*aud(y,0.28368762))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y-tan((y-0.50389105)))",
            "b": "(0.58216774-tan((0.4403547-0.45763645)))",
            "g": "(0.6277231-tan((y-0.5833448)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(sin(max(tan(x),x))*aud((mod(y,0.9549266)+tan(pow(aud(sin(y),y),max(pow(y,y),x)))),x))",
            "b": "(sin(max(tan(x),y))*aud((mod(x,x)+tan(pow(aud(sin(y),y),max(pow(y,0.33584654),y)))),0.95001626))",
            "g": "(sin(max(tan(y),0.91189045))*aud((mod(x,y)+tan(pow(aud(sin(y),x),max(pow(x,0.6245224),0.7944459)))),x))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(y)/x)",
            "b": "(cos(x)/0.4819521)",
            "g": "(cos(x)/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((y/bri((x+0.80501544),x))*x)+x)",
            "b": "(((0.58216774/bri((0.5305479+0.62497354),0.9886526))*x)+0.39445156)",
            "g": "(((0.35981148/bri((y+0.29902738),y))*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "min(x,aud(mod(0.43975702,y),(min(0.22008973,y)+var((pow(0.8868166,0.57293147)/aud(x,y))))))",
            "b": "min(0.39445156,aud(mod(y,y),(min(y,0.3163005)+var((pow(x,x)/aud(0.060305357,0.5518999))))))",
            "g": "min(y,aud(mod(0.31635094,x),(min(x,0.88322616)+var((pow(y,x)/aud(x,x))))))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(y/tan((y+0.50389105)))",
            "b": "(0.77439505/tan((0.5305479+0.46739298)))",
            "g": "(0.6277231/tan((y+0.58749515)))"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(cos(y)/x)",
            "b": "(cos(x)/0.4819521)",
            "g": "(cos(x)/y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.2353988",
            "g": "y"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "(((y*var((y-0.79103935)))*x)+x)",
            "b": "(((0.62349075*var((0.5305479-0.67926514)))*x)+0.5949962)",
            "g": "(((0.3783883*var((y-0.29902738)))*x)+y)"
          }
        },
        {
          "fitness": 0,
          "expressions": {
            "r": "y",
            "b": "0.20038779",
            "g": "y"
          }
        }
      ],
      "timestamp": "21h:37m:13s"
    }
  ],
  "timestamp": "2024-04-29-21-35-28"
}